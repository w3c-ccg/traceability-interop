{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "904f3095-39aa-4644-bb3e-bc742125475c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "99505cf0-92e1-467c-a417-d67f348cb690",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f5be000-0209-4e8e-953e-830f465cc814",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cab326c0-8d20-476a-947d-39a1e1201333"
                }
              }
            ]
          },
          {
            "id": "ef58e722-d08a-4fba-910d-8108521faf55",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d4eca65-a11e-48e8-ab1e-ae973b9a090b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "530b7377-5ceb-41d4-9b41-bc9882014fd1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b3ed347d-3588-4b4d-ba6c-82f6ffa212a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8975b405-c2c3-499e-a1cd-1073614d72dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bd7664e-0bf9-48a6-88ed-fdbb267fc666",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d706eff3-fb02-4875-ad00-06c2b36a4bb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8538a645-fb65-4756-a996-7e19981b4261"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15f7d675-0c38-44a3-8388-57cc1f2dfa1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d13fb44-1041-4163-9a9f-4198cbcc6b63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54fe6304-3d4f-4e15-a25b-836466b9d1c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "864c1e89-4d57-447e-8c03-7bc4e8324b78"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beebd332-ab90-4f1c-80b8-919f276977a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e0a4bd22-ce25-44a0-a0a8-8e532b59a5ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45dbbe4f-f2d3-4e83-8c60-76c8383e4c1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4428234e-80e4-479d-92cc-bf7ea6b51e16"
            }
          }
        ]
      },
      {
        "id": "0a89e3ee-0d5d-400c-ae4d-895563e83cb3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "423d3f72-fbd2-4e04-90b5-680c5a153632",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3af634b7-1d61-4595-aba6-33a6efd03f9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e49ebf1-7176-4a69-9883-efd545343052",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5c139f-4e7b-4832-a0fb-8e5b1d2a9f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb1c181-0061-4fb3-987d-2723cffc866b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c503a3f-cfaf-4eb1-9a48-47e73515e46e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0fd7fb-ad31-4a38-880a-63fde5ee197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1e7053e-13cb-4f69-86ac-e35de5216229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65df657-6ba3-4ddc-8254-dddaad27308f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d096d8b2-bd2c-4bef-8950-1133cfcb31b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d6f6c3d-77be-4cfd-89de-a7b976277719"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a89b71fc-1465-4d1d-87f7-4bcf629e7146",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c519be7e-644c-48a0-a4ac-b6dd205f9990",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cd4a6d-b433-42a0-b29f-c37f1476e589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b97c74a4-a186-4562-9efa-feaa9da40587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8dd826-f738-440c-80d8-0807a8dd957e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ca9248-db38-4952-a399-d481b7566cd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4885b30f-7bd6-406d-94a1-29fa70a2cbe6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15dcf17f-88ae-4a1d-8a55-bd0506f923a9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42fe9b16-8747-4502-bb15-39bb3258e8bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b092e36-6f53-4259-a566-c0a823f64ecc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bce9eb44-3a69-45ae-8c54-06084c368c32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe389a69-9d44-40d3-ba35-38945ae9a271"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ae2b13e-99c9-43d3-a1c2-bc305aa451ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbc8d176-f66c-40ae-a4c5-7f8c3c41e7a5"
            }
          }
        ]
      },
      {
        "id": "770862b2-407b-476a-893c-8b7045a9706e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d82c41f5-cc10-4100-a547-15101f1b7030",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94ecc148-1c25-4c13-9312-0cc7a5b8b59c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e09b69be-df6e-46d8-872e-7b902a73dd92",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c950e4d-5c86-417f-96b6-b95b3acf6229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccc7bb7-bbb2-455f-854c-5eeaec5cc6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447add8f-8d8c-4b62-a9d2-80b01c3effe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9298e62-fbe9-4c90-84dd-4563a27f807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fb802c-9188-475a-b2f6-5ac405418b4e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8ab6a9-0640-4c17-ba5c-cf2762a4716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9447b86-27b9-4b27-ae33-5845c8299fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77853ec3-5416-417c-91f0-67ecb1d41a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ce79c4d-fef7-4b39-a8e2-ed7f88041f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479aa08f-2dc5-4c67-8b3c-ee057d73ea7f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94735844-2f09-40e0-a889-3727fb96930c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfca226b-1cb9-4ae4-b73a-f4800c83895a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9d21cb-681a-4847-b7ef-b7c73ff8d07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f215c43e-ebcf-4e32-a91a-535ad2d39e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec8aaf-1f7a-4c57-a656-df9d5d0922aa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4de2c92-93ae-4a86-9ba7-807a28f32739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6576f28c-7fed-47c1-aca9-bc35086af37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c23206-f58d-4eb1-bcfe-315008252dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f03269d4-d8b5-4254-b927-8fe8dbaee687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6eddb9-f397-472a-8cba-97bcb8361952",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1dce30-818a-48f0-bb28-e2a4b5e3db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f3d993-ba57-4ee7-abb7-961294dabaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde35365-4591-4636-986a-b51ee4071fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e8c62b6-e495-41af-a73d-bbd335207a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e599d6-481d-4c20-bb32-05e843b39e2b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee090378-bf38-4182-8626-d0cbfab54578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60f43f3-0e53-469a-8ef3-1d629ce04873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090a5169-d1a5-45ca-81dc-887984f61e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cc8f81c-f90f-4730-bee0-c11982ffed63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47bbb7b-9ddc-4f0d-be13-576e67d26e63",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0068f6-ac92-4318-90f7-eb683fd87366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa3e9d9-1a2e-499c-8a85-53c529853d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c5f03-57d5-40f4-ba3f-f7d10e7c2cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6497f65f-882e-45de-8129-cd5d0f92bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e42c73-41c7-4d9d-a7eb-4070d1889475",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92780b1-809e-47b9-90f4-d6c7d1555639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bffca9-9270-46d6-8d45-1223b3074e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce784981-4ae5-47c8-9e99-b2c5a087b870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59cf4e41-5885-43fa-83d1-3b6352d891f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee6dd68-d3c7-4050-a7c4-483fd254cda4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67e3eed-7ea5-40f5-956d-507334cc4257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89086ae0-21b9-4141-ab1d-7431a1e167d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83447d71-8585-4840-b51b-c15e72c8abb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "848f730e-747d-4f53-ac6d-dcef80abf02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7903eecd-5f1e-415d-9a84-a14962393cd5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ebf27-fc31-4c4f-a184-7c9050f8cdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cff0fe2-7115-4ce3-ad75-f24c846acbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3c7056-945e-4d09-a0f0-4c6aaf8820a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90448259-34db-4ce8-a415-a3e851f7d678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30534fc6-dacc-4c95-ae19-db08aec49599",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3dc2a1-ab0f-4dcf-94b1-716bf983d374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da33af7-5b81-4c11-af12-5eb147cf2168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1503ce70-8055-42e2-b4b7-be0e05476332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c0e510a-d7ee-427d-8135-ca9817885430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3d2e67-a457-47b5-a36e-25b8b3424ad1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee32aa7b-c8f8-4305-8c76-6e08b4047845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed4395b-3f23-40db-a1a3-522acfe9d0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3679fc54-d5c3-46d4-800b-63fc6feedcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff608c79-2391-4bd2-985d-2bf82014d4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd01b07f-873b-46a6-abb1-782fa7d7ce5f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967cf423-3bf0-4687-bf62-34e07269b7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce92a2eb-fdd9-4335-bfaf-6a34f16bf2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c5cefa-fe97-4a73-ba85-05ae041485a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8af966b6-e9ee-4a9d-9277-3201ac8e3e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bb08f1-80e6-4a39-b18b-4825253023cb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd10962b-02e5-40cc-a5ad-f7c8aaf90051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c969c1-f63e-4add-b78d-5684b76594bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b141f0d-e835-4fad-9115-6230e03e23cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c82f57ce-b065-4535-91d0-1cb6f467c17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f84d9a-1afa-4cc0-90f6-2474de0938e9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a8f817-6f61-450a-959f-e15262614c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c44d99-6001-40c9-822c-9922fd3f2a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dca4446-aae3-4985-a080-0a04cc216383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f5f9be-4260-457e-b6a7-c517cc9ea306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182e8104-368b-4884-bc2e-d07d80fddcae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bcd1f5-e003-403c-838b-699b286984cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e9a4cd-e893-45d5-b09e-c180314c7b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d760e1-4da0-46c7-8033-4dcb949a9e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0c9faf4-8d7c-48df-9dfc-0c09a415c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62bef3d-1da1-433a-9d3a-bc13ac26547e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93339b2-5e9c-4d1a-aff1-f91dd0d3effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4ae6a5-2c88-4300-a353-eef43d36f355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbce926-b1c2-4863-9f7b-4af0d33d07a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee1f15b2-fbbb-44c0-b70f-a0477c490bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807f7afa-fc3f-47c5-b90e-c55f71e59c18",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a51ddb-63f0-424f-8cef-06f402aaba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d794c13d-9c04-467e-b699-108fb8eb2d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2191b1ea-aa67-45a3-b079-e00cd3b018dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "901768f9-86e1-4592-8c28-5c12f573692f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5116686-7c8e-48d3-a10b-e56c8467d3c3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5042fe76-c1c1-4448-892a-85ba23464572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d9bf3c-8da6-4bb0-be75-0fb263d6bbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e69b72-19bb-49db-bc1d-fc1e1dca9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb5ffcf-54e2-4333-9a6e-226b6ba56226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65f2eb6-88da-4d94-bfaa-6f972186410b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842c1f9a-be17-486c-a948-f4821b9c6274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c10b50-e2e7-49e7-8f16-a5119731fc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a263f75-90e0-49aa-8cba-7369dd3d1426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7018d632-7ac4-4fae-a88f-354b1a62086a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ba977f-cd0f-43a0-b36a-02f029dac361",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfb4de7-3fb4-404d-9928-605271621890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6ea4b4-cece-4b7d-879b-d51e3ee76cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e614ad18-b2c3-4253-9ebd-f4c29ec3023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1422e794-4938-44d0-b6fd-a623d166f05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb6ec66-5859-4e68-a921-ce682d725dc5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7161fd78-dd3a-4bea-86ea-9d71da8740d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3ccc11-0da6-4688-aa89-72b6a3ce3be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd15951a-6d47-4d1b-9c12-52ca463fa23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed68dcfb-ae2e-4888-857e-510c07a73401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9176aa24-d382-4ac6-b56e-c6fac366d7db",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c67526-f378-411f-b06c-299ade8c1d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf65534c-89b7-4da1-a42f-72e748aded8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8583b9-1765-4fdd-ab15-c77e42517c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "377a999f-0120-4e56-9657-9c2de2e7a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f530f05-d428-44cf-8fb2-bb1a0d5774bb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88aa02e-10db-4f32-b112-42132dc24cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f65dce-d9bd-4f10-8158-0677553ce3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9896ae-934a-4573-8a94-a8a6946d55e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e998aec7-1438-4c6a-ae02-8c5782cb97a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2531e01-a740-4dc1-acc1-c58598bb7cce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c9982e-0a2a-4005-9537-b90523eb61e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec51236-93f5-4c0d-8466-5e227d179d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9b86e0-d069-4e7a-89e7-bb8949c85ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f917f63a-ed98-439e-828e-f04bb7142f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d5c0c0-d9d8-45ff-bbc6-1a956f40af0c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3665cb04-8066-4c61-a587-3ccab71ee68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebe6409-a634-4f91-b818-1deaa088904a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816c7685-820a-4358-851c-1598ee185319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d8abc8-6545-4cd5-9243-48215eacb537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da61ce9-3f97-493a-b390-23f4525b3b68",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a5632-2d40-422a-8763-655f1ecbe427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035524d4-7c56-4cef-8dc7-ad61ea25b162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250afe7d-fd52-4275-9932-8211fc6b03b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52c19a7-b946-41e0-b3fb-0bac49c971d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8f3d45-bd12-4667-8d80-21fbb066dd52",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f06729-b1fc-4006-acc5-f77f01e14271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d89f5b8-bb71-4ee3-a9b0-d37ce1bc00a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511f0bb4-c5c8-46fa-a245-29c9b1d8e960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3663bd5f-a625-4d83-bcb7-1aead7d193a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c010f4-83eb-4daf-91be-db7527537dbc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca51b9b1-b3a9-4f0e-911a-43c6c63ca249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42c06e4-f9e7-4c67-bb23-c1ba8a317614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fb57c5-433a-46d4-a2cf-73c43313d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c51bae1-28dd-4dd7-b15e-bfaa3339865f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e58f24-ac2e-4710-a2d0-d64daa454418",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83a3e54-4725-472b-a353-e1457460b362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58974dad-78e1-4657-93a8-f6c9c2617bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9884b9c0-3c34-4cc6-a04a-e179ef983b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb7ac11-c142-4c0e-9f28-030a19b653e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e2313e-4d2f-4294-a877-b54936cf1fe4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e229e7b0-dd9f-46b9-9556-41fc5c065178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a67e19-9be4-49da-ac75-ac1f7f081799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a016ab0-6928-4ded-a23b-b91c91d55daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07d8632-f77c-44a6-86c8-e5837e9da8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca28055f-e95c-4b88-840a-98b61f8e548d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f094a80-3ea4-4bb0-baad-9057dddd7968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643a507b-004b-4a19-8a40-a81446288d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46029442-9b31-4bda-9d19-67a38051c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "764cf3a5-8c3f-4bd3-9b8a-a382f4946017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fecf8c-0632-48bc-929a-31bef84e4278",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48a0de8-e373-4cf9-badc-6523a4bba169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3e3d86-c167-4c89-9af6-4ed5128619c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b08c7cf-bd68-4f09-b2a9-3fa789469d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55795822-f955-4091-8be1-8a5a4c3665dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9a0d9c-4265-411a-b8fe-ecd587506f97",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942fbca-23ac-4e5e-b5d6-ecbfb7669a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc17f751-e55f-45ab-a916-f6aea720e36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d74169-b30b-44bb-8ab5-18a1d91051f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8a9339-d65b-4e83-b9e0-2797ad090c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7dc5d5-9819-4fb4-b14f-7d2eaf95987c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66feff1-135c-46b1-82cd-839b81c36b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ba285b-aa18-4c7a-8ffa-8b8ce95160d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a712c91c-b0b8-4f29-aa00-280824a8381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4d004e61-6bc1-4e76-b9ad-5ada538479be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c946ba7-859c-4b48-8df5-213da8086cfb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7814ca-7019-44be-a9f1-423516ca2a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e1d0d3e-17de-4e51-a44a-8a1088dd9355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b940794e-fe9c-4fba-ba05-acbbdc0e8335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf9c25b-6b8e-49bb-92f2-bc1d1056f658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e530fb9c-0b24-4d6e-9189-a68ecbbd6365",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039b7ad0-280f-4d2b-b5ca-12d715b5ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e621b0f9-95d4-4cd5-a696-1be8e39adf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c798b249-d285-4352-8e9c-3599d9988060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11be656c-22bc-4fad-b99f-3e31b4b9a871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9abf07-a4bd-4380-9672-abe9b273a8d1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dab5cc3-bc4e-4511-b761-496725164e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbadfee-9f9e-44a2-8057-13245f163293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3a9653-9b9b-40b6-b821-a2a26db20ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57d94b0b-ffa0-4cf8-87c1-c0f1a1539320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6288d253-5a6d-4eba-8d6a-d54033d84912",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ba50dd-212e-411d-8270-710c654fdd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e48dfc-894a-4b19-8ef8-3fef13919219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946872c4-f30a-44f2-976c-74e19aea453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75698a38-fdfb-47fc-84aa-23848e1b96eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1822055-48b3-400f-bf06-3ea2fc37220e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b82811-f6ef-4a93-b9a6-1b6fa0670138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bd07a8-c578-4140-a7b5-2e685b59255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38913bd-b065-457a-a313-abb0c8ffbf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5d2e34-7608-4b72-86c6-193a72aa2587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769c76ef-e0c6-4bf0-b9c1-00f9f38c1c04",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5189ee-d7cc-4d7e-a9be-31d28289d789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7776f79e-9657-4a0d-a0eb-85907c37729d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a5545-6596-40f2-9a2f-7b02e8ebbfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22156041-c6a5-4c5a-ba37-682ff027539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0a1315-7ab7-4834-9568-276934c78ce3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459ec79e-52df-4a3e-8a73-a3bb49854c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba02959-1b66-4fe7-9ad9-ae09ca7b9816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c4217a-7632-4689-bd9c-e204394db433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6b50f891-e3dd-4342-b82c-0cfa01b0fdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f574d3-2acf-4872-bc1f-fe8dffcb17bf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6331644-1a55-4110-9b0c-a481cdb5b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5dfd52-a19f-46b3-b1dd-8b1d26507f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167be16b-5189-4ecc-b572-f56157d7aefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "658f84a6-44ec-4309-bb49-1fec3f6fe635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f74bd2-bf1d-49a2-a6c3-939b28d2e11d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6267bbf6-f5a0-4f7f-8de2-2a431a7bc431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149b4d1e-d455-47d8-a0db-0d0ada2236f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ddd658-3039-453c-8955-b6ab5d5698fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbad2ec-506a-49b3-af67-66731010e558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2768fe-2e8b-4995-adc5-6c2d39b6b640",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490c497a-d0ec-4397-9456-9e6a97ebf339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bdd44c-821c-4f03-bada-025fdd80ddd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ad0320-41ef-4331-bbd1-545a08026478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca6ac5f-8fac-4b3e-9bc4-e625282895be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582e8de6-7ae2-4d36-af82-07db64328089",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbc4941-a99f-4352-958b-f912ba81745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f77c8d-7275-4172-959e-f6ab07e9bab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13d710d-3c49-434b-b719-e6e2cd71f8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6c111a-10cb-48c2-897c-1e17089ecfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087163df-eee0-4cad-875b-24b775669a93",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd362e9-9e57-499a-91b0-189eec53a96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55751073-00e8-4952-89f3-51d3041cf88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c635546-29e5-4543-b60a-98474e1b2be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "788f29cd-e059-45ee-8e0a-084f852c4227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01c1a91-f09f-4090-b46e-b6e0bc638c3d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa36b3-c722-4ae0-8a22-c61f6c0105f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0367b5eb-e06d-4364-8551-09cca703f288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9515e38c-f47c-4701-b89b-2eae91812e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d82d7415-b901-4c09-880c-8a479bf16370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d59ceb-63a2-46fd-953d-6c2b0b09c2cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cd0b77-edf7-48fc-a2f0-4654636d28e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3373bb-3c3e-4bd4-9024-feedfff73eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa580e6-7d63-447f-bad2-f4b1eec73d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a209757-654c-413a-86a6-186fc7103378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8500637c-255f-449b-a2e8-8dda31fb37cc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca78dcd-11cc-4b4c-936e-580ff4d1ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4416af9-e7df-4790-ba75-d093cd03d868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9ff3c6-1fcb-4f12-838c-2da5a6bd85bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e749d2-222d-47e0-b48c-50d11c52c1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff4fa62-20b6-4b46-8516-13dfb6f58b83",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc76b71f-7028-428b-a89e-7b9e74786e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cce0472-d247-4ad6-86ed-1452bf5d55d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024ff149-4470-4642-8c61-f48707dc8151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ade44c-9f53-4ecf-99bc-7222ae5dd94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc45794a-3e4a-475b-8706-d4d54a9c4895",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1693f78a-f936-4b1f-9146-a12b2ccd5ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec8ed16-3251-4e21-b040-faf4016cff09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba4918e-b825-4ff0-9eb6-da52eaa18116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "462b792f-4a23-47b9-ac97-61b374201660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dc41ed-a2c5-426c-81a6-d343d61c828e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d41aed-ebab-4960-9aad-7349b611b145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21336186-ce92-42f0-bc3b-be1da7b803b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f91a4d-b775-4323-88e5-0d8914023ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f39ba91-2a64-44c0-8e9c-dca0fa59264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa91ba2-9580-436f-98c9-4ec07fcf993d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23407a7a-3ee8-4e13-b363-5e3dfe47f18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197fe0b6-fbe5-42d6-b60b-87d99c957e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84d8804-59a3-4911-bccd-53c8380fbde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3f70e7-4de2-46cb-b777-b2824cdc3265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60462345-7236-4f9c-b06a-9d67aa4d4d2e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9ef92-e0d0-4a9b-8883-cd4669b3d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f37ed2-0d26-4b49-abd6-40272f924c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242f8a1a-1383-43b6-a90a-88e75011e876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ca317e-2a71-4a12-a830-f6efde4681a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b1c47b-f7af-4fcd-94e3-36d2bf34f81b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6950cd-7e6d-4364-9a70-8ca3698fa353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c9019d-8ee3-44bc-9b10-4e1f0b4e4720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64201ce7-8203-41c8-919f-1c8d455ec907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4bb897-5d04-4f33-855f-d8dc5d915ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8937772-6a83-49e3-a77e-277aaf57c6e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37b679e-d8ae-44cb-8c66-626904a6b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907e5051-d524-4927-aa9c-de8970c07b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd705ea8-c010-4b99-a9be-617be40bb4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3758f59-8980-453a-b46c-295a62008873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc678e5-1634-437f-aa2c-2d913644d55b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc844a1-9ad8-4a4b-a079-a39441a92afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee95fc9-2ac0-44a7-b508-c874671982c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb1d5a0-d2fd-4503-8e10-4ae5acd4174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "953a6f7d-1ad2-4aec-b8a2-3db4e2819ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de71aa1-f393-4749-bb7c-fff42524a21d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5be8d5-da47-4f8e-9160-1a2ac83d6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7ecbff-6ca4-49c0-a4a3-5532b83fa35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385a3b2-05d9-4fc4-9e49-568f26c1c0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dc1ff5-9d2a-4652-b138-b3e5eb9f9c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623234a2-e4c0-4135-a462-2ff60181c8e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a59cc63-2a09-4b0d-90e4-3064dd5465dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3930e3fe-8756-4ea2-ab8d-1ea4b3a37120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985bfea5-c317-48f4-ad12-b87c485ae236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebf706a-fbaa-4731-a733-b168d1bf9dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa16343-7759-4582-9e6d-670ba26245f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b969b9-f20e-44f8-94d1-c64e037f62b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7510fa24-0a40-482f-ae5f-eafc1b5d86f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611df59b-43ed-4262-9049-075b363c383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "26df1aa2-3a8c-405f-9c02-e4bc0ca55981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba07b02e-8c83-48e6-8560-59e10a61c1b5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18666322-ac27-4370-b795-9e1975efb5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430d7216-5356-46c1-8aaf-da2520972b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d10e2f8-bdf7-4fe0-9c26-b23ab1855132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ac8969-46a1-42cb-a64e-1e573989b478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48a647b-ec4e-45e9-b028-ba1f9d9fe3dd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953cc16c-a787-4b6f-a583-8e19839a618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b10e1f7-8c8c-4be5-a80f-a0c8a0d23d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7280a9-4af1-452b-8ed8-2e6aaabf6d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5446960f-c746-4a39-ad28-0588b7a75611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf1cbb-b465-4e23-9ffe-ba1fbf765cb8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b2fc60-4967-465f-b3b7-57e495bce88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cea67a-eb3d-46f1-8a5a-fdd4fbece737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c36944-0bd6-44a5-b332-df9099b67780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f067a905-e771-48fe-ad7d-b78597081568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db90c756-6c65-4e79-89bd-07d04137f509",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff440d0c-ca75-4067-9de6-40aba51fa408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ea382-8999-4b18-8999-910ce5931787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00763e8-9467-44cc-b84d-7ae70dbd054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3e61ce-0002-4cc0-a713-60459afc7790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ab7d9d-6120-44ec-9bca-599e984ab06a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b12a8c-7d27-44f9-9c5d-05e9b5112401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03ae6ca-010f-456a-803b-37b4d3b4209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdba3d7b-e898-4ff0-bd0f-4a9e8c3215bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2243bb86-f7fe-4752-8e82-26c4173e5f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f02137-1556-4213-ac97-3ee190b5897b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29b5be2-d472-441d-a35f-34e324dd401f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd8bfe1-3d07-45c1-b735-8a2d3b7bd3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc219c26-5568-469f-b330-7979fb4cf911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "485b4447-43bb-4a4a-9975-e5a0946b9251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a91be0-e547-40e3-88fa-3db0fa77ec55",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb8e89-b568-4298-9206-eda6124df113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcef44d-3e57-47ed-9cca-7ea72eb9086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ed51ad-cb01-4243-b843-f6bb38e3f185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddc1b6a-640a-48ca-b785-1aeb8f5012a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec2025c-2a6d-4183-a38c-933ac2de9223",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa9b8aa-42ce-4d2d-a731-2907365be9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5373f2-cae4-4128-9ae4-50c41daa2b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867bdb66-b4c4-4e66-9fd5-84046beb4ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcc1bc7-c263-41fb-bf97-3f626f9de1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5ff3df-b6ec-49a0-b1c4-ee9985fcdc44",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf7c7e3-62ba-4e62-98c8-52e55248ceb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c099a8-30d2-493e-b58c-75233c4b8f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d6ce79-685d-4304-99cf-3b10d0cd2eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6853271c-bc7f-48ec-a1b5-fce5930d8ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e0ae25-c34a-4424-8944-9de22a561086",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af98a64d-1b5e-4759-a2b9-c8c2307aa775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0011cac-42a5-4ed1-a601-357439d222bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8939bd6d-4341-4fe4-bec0-df1a1a616609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05d9b44-5957-445c-870e-f3dc7ff053ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c88dde5-edf6-432b-976c-3f47eb5e0fea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1758233f-5ba1-4552-bfb2-da63508ce745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6ceb12-1e52-47a3-a81d-650b477ede8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da4763a-97e9-4ed6-bce1-8732ad786ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aaa17ef-e57c-42a2-8442-a86568051e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9e33c1-59d1-4c88-bf8a-a20d56d8a218",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9eacf6-cb30-423a-90b0-1117f0e1d7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e250ff-e998-490f-8880-05789e65f085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a900e40-9885-4693-832b-7ffd19c99ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3912ddbc-0f27-4983-8d78-22486d28617b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112db19a-8ef0-49ab-b62e-c904b4be9fd2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c81780-c5fb-4da5-a43c-d5dcdf25c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c1cce5-2d11-46e8-84df-b1ac636572b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b4307b-28bc-46de-81b5-ad756abb2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53086fa3-b0ae-43a0-9699-9aec86095dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef105d18-d2e9-4c3f-9a02-a9ffb5d4b90f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfa2f91-6f6c-421a-9a3d-1e31c2424360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbaf6d5-075b-4e00-b1b9-54034224eeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba213ab8-09c3-4883-90ea-ba288c8c55ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da7f496-fafb-4087-a8f2-3cacd94a2e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d69e12-329e-4fa0-9acf-79559989767d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d419cc42-d860-4ea5-b4d7-ff3a92e38b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f86c6c-3c7f-4926-9b82-b9c524461abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3156f774-442c-4729-a2fe-6e128c668b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21da7e40-608a-46ae-b633-cb98776e6b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176cdaff-521b-4752-96ef-a95776a5f4ca",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44983e89-083b-4902-ace7-3f22330cf0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f191d9-a281-4e58-b572-f2d2f2691ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb0b901-faf9-4728-87b7-608030b04774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18634075-194c-411c-92ab-831591fdd0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15456377-9c2c-4852-ba29-e09961fcef5b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab48c2db-ab29-4b7c-b462-bacf4e6923d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d9c8f0-c2ff-4595-9171-5a6961ba6eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6330a11c-4698-42a2-a354-cc44d4b658b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02064aa7-300e-4407-9106-cfb6640c45d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932ce468-deac-49bc-88e3-4cbfde66107a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd49a40-ad03-465c-bcba-0cb67d627279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce7cb6b-603a-46c8-b1c6-d06f354463d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b481353e-8b9b-417f-9477-9872c62112a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9622ed2-163f-4e89-a285-fb682f919854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b558cd3-ab6f-48ac-a685-fb628619ad07",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddc6259-9d78-4e5d-8466-7e06e8186438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5557ab64-20b2-4097-b9a5-274211b59e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e820bf9-bb7c-494e-8c38-29b9c2bf90d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58843790-455c-4f25-88d6-fbf5f1236d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91299f79-ec8c-420e-8b0e-83962c2066e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4f521d-059b-4fb5-9dbc-f09e740ffd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527a6612-e67d-49be-a073-bd365b4d0046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb482df1-dfd0-4a51-99d2-ab6e1e50e53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0741e9-d522-4e2d-8e25-d53ed5468127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34580c47-0f1b-45a9-aca5-57f9e80daafd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9627cdce-5072-4065-a41f-499b9db24466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf33506-2254-43ee-b648-be8d23f1fe73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a1afb6-cede-4dae-a2c1-3b5d839c9c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8977a3f7-6784-4e07-98b4-d412f1ba5d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd26e5f-3a07-4249-80cf-80350dc2dbe6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155d2a23-0828-4ccb-b7b4-bd0cd5812140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c9b8bc-2282-439a-912d-b97ef40a6881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7639f09e-a32f-4438-8d3f-006c3f87d028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eac9dbb-0c24-4580-ac19-b1b8bb1915b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a48147-b159-4401-a776-206fe8dbffa4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34692ac1-c5d8-478d-b664-bfe4c2dd549e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2459b65-c40e-4ba1-8b3f-6e2395c3ada7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67504f3c-6c8c-42ff-a8de-79ea4ac522e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4de473e-812d-453b-a19d-ba1618b6ed29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f696a924-e511-49f6-a10f-861234e3ef6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a0f9ba-7ccb-4aa5-ab96-df55d75f2d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01723657-2089-4746-82ff-793be48b8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41316102-124f-49ba-adb9-caebc55a43b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8816e058-a988-4a0d-bb55-203e72beb3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1358cd7c-9198-43de-b46b-e54c06c78091",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cfa2bd-5baa-49be-9969-51a3423c0b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea530579-aabc-4179-9657-c4f1134bd458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa63af6-7381-4faa-9686-fb0f01f75986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f73a7b-b354-4859-92d3-ef575d3cf1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6cf05d-4678-4b74-ba69-27fc84d2a2fb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fea51d5-7cc4-4b94-a4d8-784e9aa119b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d712c78f-b3f0-46e0-a6a6-1b05d74c94c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b885e97b-c7fa-4dfa-b734-936dd4a2e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11a06dc7-a054-4415-b8f3-721fe1f31400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a63d91-ffd8-4a3e-a32b-b0d30f0c951a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4b885e-6868-480a-8eab-38fac35877b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4619098-2dfc-42f2-90b7-b3fe963a7d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b9d27f-1226-4398-b268-0ad5d2720d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a67b895-ce00-48d5-9702-7383172e6170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7902e3-f30b-4c2f-aa6c-9f3d62840131",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe36134c-90e5-433b-8720-0b0af18dde81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6676c8bf-53be-4cfe-b3fd-31215d342981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3478f18a-fbec-4a39-9b7a-54fab86e73b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ba123f-55f4-4415-b515-907558317dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7417d24a-96ca-4645-b187-1db5a13dfd16",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951f3b28-9b6b-463b-bbbf-b3541fb0ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac79fee-74ef-45a4-bee9-08fc3992685c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361a236b-f626-4b25-8ea8-ef5d156d1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ab6c47-9149-44f5-b9bf-3d8dfad48804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1c45f9-1f0c-4a1e-a7e0-2da8df1c52fd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a661a55f-1f7e-4663-b3e6-61930ea4de04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a2fc4d-748a-401d-ae7a-8b93ac81b4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5aa9bcd-fe2b-4755-8003-24500293d840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a51bd93-df2b-43b5-a643-62b1bc5e1d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5f7421-d910-4690-8d48-73f18fb045d7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34e9c9-d961-4a97-b46e-f864dc076b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "759b5c0d-6f3d-431a-8fee-6b61555d5a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81229408-4050-4c42-9052-6a147577294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e54faf2-ad31-41bf-afc2-0d334f723353"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24b710a4-d1dc-4166-8587-786a9603da30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ad3fbe1-1bfa-4d56-802f-b25d561a9968",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed46da0-e308-4645-bb06-180723216557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d692abf-b3f2-480c-8db6-42c91e66a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2569001-12e4-422c-a96e-aef5832ed99c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e09dfbd-66f7-4767-af69-c0bd09cb7ffc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39f54acd-ae30-4e7d-a066-e12ea47d8d59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "460d958b-7bc9-487e-a049-b556e238aa79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "383fbd4d-1b54-4d71-b234-3bb275779cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71cce039-7dd2-442a-8b6b-440a181a7fcd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1fe82c15-772e-460f-a224-249477a45cf0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02f3ddc2-1eba-4fb2-950c-b13060bacbfb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04a7d198-2322-47f9-a724-ecea020a618b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4063d9f8-8082-42df-841a-f10261b50781"
                }
              }
            ]
          },
          {
            "id": "aa226ce2-4bcd-4e24-a040-b452b04563ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0fa92e46-a0d5-432d-b2a2-762ec3058c0a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "91793e93-8e05-464e-92d0-8df92c5174aa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3403f0e9-1ba0-45d1-82b2-0a5ba0a3d907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8119a267-3451-4b15-a888-e0aad2183382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96566bd7-f7b8-4e50-add1-041691fdc18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919166b4-8dcd-47dc-8b71-cd26d8f52281"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b7219ad-249f-480f-b893-3e4ae50ae7be",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42a84b53-6203-4329-af99-b4b34edbe77f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "780c689e-e9dc-4c79-9831-d6e70132e1aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c15c2304-652d-4595-903d-6e32e5d52471",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0abc8e3-c6e5-4cf1-a8b5-ddc73c5cc781"
                    }
                  }
                ]
              },
              {
                "id": "21d0cc1f-6624-4cc8-93cc-1f879b69aba3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d17752b-a8ac-466a-906b-fc0b0be5cf27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9ae0507-d024-445d-a9fd-d95a1f604800"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7524251a-d8f9-43c8-8f04-c785e7f3e584",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76d7e64b-7333-4c5f-add4-5b9e8d62b5f3"
                    }
                  }
                ]
              },
              {
                "id": "5c735b58-c682-4d47-b024-dfccecb80d1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5799b95-e8b1-4248-8ed0-b57ebe8c3c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46d657cf-c766-421a-b708-0d931a27a03e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e2e7e62-ff3b-4188-ad12-cf7a5320d58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "158689cd-6331-4b7f-91c4-bd9320614e88"
                    }
                  }
                ]
              },
              {
                "id": "6f912daa-01ab-42bf-af5b-570b9f701980",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b46dec09-4ab7-4958-8c48-a9175328f078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4450e8da-2e44-4694-8728-906785b83e82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc2db97a-7d95-4286-94ca-b5f3e008cc3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3add1f71-8458-4005-b275-81f3f608399d"
                    }
                  }
                ]
              },
              {
                "id": "ec8a0194-e0e4-4d53-8ce6-ea9c81ed2ba0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e52c0a7e-edf9-485a-9673-9e01bcc44677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e6ffca9-410e-48c2-835d-1bf655bb22b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c56c38b4-3a69-47de-a171-1cec39a14526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d5c340d1-d569-4e1e-bd8c-177aec8b442e"
                    }
                  }
                ]
              },
              {
                "id": "9d31f8dc-b7ef-404e-a003-c2f15a6549bf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e243876e-8bd1-4d45-8f8a-59aff38b2eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55daa903-62f2-4d69-94ae-b6ef965f39a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3694edda-4a2d-4d1f-965b-8dd510f27141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22fb84e8-2dd5-49fc-8465-9e19d74ecac6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d2f0bca-2fe8-4bbb-9c62-387fff615a38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acf480a9-7ffd-41c8-bed7-1eb1207d480a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6fb3a99c-b3e7-48df-b0df-0bb55128b834",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32259159-4469-44a6-ae63-2abad1bfab58"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6013d945-c753-4da3-b94d-236b2c03bdea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "76f3805c-943d-425e-bccc-fff895a9411c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8800c433-c979-4b10-9520-6e07979d3a19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1989d723-a0f6-4970-a2ef-ed66e3d47a89"
            }
          }
        ]
      },
      {
        "id": "d7264b8f-8cc8-42d9-bbda-339ab2e76fb6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "23f13aa4-c249-4b63-8857-c4a1c2ee7a2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e90c55a-594a-4e60-98de-3b18d8fb0b1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "693329bd-a70e-4ebc-ad7e-32d8e135b8c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c8e07-9c9f-41a8-958e-a3ed08bf63ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6f4df7-7c1f-4d89-ab57-c49a0e20ea9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc57ea19-2abb-4857-912b-7c8b474508e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b309677-6c8d-4901-b63f-d1ff5d09891c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37eda07-a569-48bf-bfcc-8c47c1accb28",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f062573a-037b-414a-a3d2-5565d486982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd91a275-e739-4c74-b56f-9a0c1f79324c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5776ccaf-fde3-4de9-a065-47283e6ce522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64dfb474-ec9a-4f90-9905-fb78011cde1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec3a759-a257-454e-b454-22ba918c21d8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2aa189-f520-4391-923d-f12fbc9f2f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf48adb-7971-4f1a-8b7c-46064eb2443d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57423fc0-3568-42ed-acfb-e4eab927911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b45b86-4e74-4f20-9fe7-70c777028fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83fe5a4-d4ca-45ed-a464-861324ba9de6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a388c9d-84b2-4059-b29c-f03f4c7ca4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13f7e07-c4f5-42c1-9cf4-0c2d81fba95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6542a1f-3c22-4a8f-97d9-9036f7fa2e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36d625d0-6e66-4533-a63d-f03c0c431470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ced894-2880-49cf-afd5-50c5b6e57460",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aad1fc-f2f5-42de-96a3-416d40bfab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb2d15a-a0ae-4859-941a-ceed3aae0fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae4e5e3-7e30-48ba-b475-753d4d3aa28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebb39ba-178f-4f11-bc26-3625f61718f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f96b3bb-2f87-480f-b868-b50ff71d6049",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6c6e62-6fbc-4c6b-ba13-ee3e4da56b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aeb8d5b-c693-4d88-99a5-c95f0736581e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133c129-c97c-4151-b7ca-db4957b27fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d85087d-f9e9-4a9a-9519-54882ace81be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f6ad63-5971-45f1-ae25-58788e2b4cdb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e0b13f-3176-4abe-b16b-ccf7412b3043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb60e91-92d1-4b2e-b2e0-79bef85f666f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a347dc-4555-47f3-b11d-9b77541d220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6cdf91-d480-423a-9ebc-668be65ecd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148d9a75-c59a-405d-a1f5-1520dcd1b7ea",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6ac4d8-1730-4097-9ea3-078a515f4744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3e19b5-bd3c-4da0-bd11-e39f3088704f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca2b0cc-7130-4a97-bdd9-c062ebe6154e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7cf6e6-32a8-4ccd-9f12-67109b3db621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8434bab-f68e-4005-9a20-206e2bfdca3d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c5178-b4c0-41c8-a1c0-a930d8d98dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb68e9af-7b56-4123-89d8-526280554472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4698d8e2-40a9-413a-a8f8-685a2c022733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de85ae0-e1d2-4615-8127-e20d6ed63cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d8905a-5609-4570-96ff-7fa115dc5226",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4ca4a8-0999-460f-8aab-ac4b6907da6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd277b9c-81fe-41fb-9756-81fad62cfc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a5880b-faf7-4673-983e-f5d815c9938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7b2269-7ebe-4cda-bfbf-ed1ef3864e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dadb46-1996-4675-933d-d0316a09f1fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b122ff-93dc-466d-87d6-62d853b096a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2103f4-2e2a-4ffb-a31a-c568a559c5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236c8c7c-20ad-46d8-ab7c-88bbf16fb6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d37b8234-f752-403f-8629-3a8d34ed20f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59a07bc-0502-4c4c-b74a-26b0ab9c11f6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ac8942-6123-4c38-a98b-c4a0aaeedb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1578c5-8cd1-40ba-8fdf-60b6908a59e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3175600b-c197-46e8-aff4-333c9954ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb6fbaa-1368-471d-b926-f8852b286876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195f936a-a1dc-47c2-94e6-b5d9f5e69420",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bebfe0-6535-4512-a10b-33795aa2db4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86cb852-2806-4e99-91ae-dcaddc972303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea74d4e6-a111-4fd2-8bc0-7a96fd0c7f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73295720-b4d0-4f67-b22e-55511cc13deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0be28ab-20af-4a93-bdb9-0fe781d42ba7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11b0943-c878-45a1-83e9-b79407f3ec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d947ae-8c30-4d08-a19e-58df9606da38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40328dfd-7fb6-4e3f-82ee-2c945f6759a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd88594-1cca-4955-83b6-87175c3093d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c71ccc-62e2-46a1-9b79-14607f94dd70",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cec76d-1413-4f99-bd41-e15ccf434624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d79031a-4598-428a-93ed-ab6b71656325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba564ff-015f-4493-b778-255c942266f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9de1351-05e1-4849-8b26-92fa5caca2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daefdfe-fb17-43c2-b6af-a41b40661ea2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac1fc8d-1f56-4556-b19a-30e777efbb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160d727f-5319-432c-8e9d-2f07607b104e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b226e72-a297-494e-9e29-96df314b1bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec78984-2698-4b86-a00b-895c8d5bfc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57407b4a-7cd2-41bf-877b-2c7db4e5708a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd20975e-6071-4aed-a961-332679006dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dd74b7-38da-4f1f-a652-b8dbf245e1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b7f545-b1ca-4eb2-97e3-1cd43a3bbf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf9bcd2-c0c8-43f0-b4ed-e8b46c645e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f667098d-8461-4ead-9243-b032c4230c67",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1119b20-318e-4580-83d8-cc3a3cc4bb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba925d20-d39f-46f0-84f0-db975b055b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6780a0-4263-47dd-9e13-d07e22d9c815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13dacef-56eb-426e-89d4-188f2475f283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97a3981-ad50-4504-845d-7619f899f3bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7b9db0-b2d7-4bb7-8e4d-d121d16dbe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df60f04-6ba3-4e79-b9d6-ee826e82f893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41218bc3-e157-49dd-83f1-aea88470a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a593280-3224-49d4-8018-076d7bf2e6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3c2160-16c4-4a58-81e2-cd23d1fa80f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6f057b-8710-4d75-aa4c-5eb9b21edec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ea5dc2-0574-4ab4-b17a-f6352945445d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f293a0a-eeb5-4e15-b45b-97fbf3b45bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21051c42-31b5-4964-8874-41a5d917db16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d7653-443f-48c4-82b0-ae55c31e89f8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81990692-4c44-4681-9c9f-bb786159728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977e1159-a21c-4a68-8457-043f881c0c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebccd1f3-fac1-4b3f-bd38-f3641fee534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee5ce6b-6815-400f-b14d-543c3c87656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a956fb-37ce-4be5-900a-24eff79e2bc4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d118b0-f99b-4d1c-ad00-fde6a4375dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6963e138-38ec-4647-ac8d-c6e43416f756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d84936b-be31-4cc2-bab9-e337ea15596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c74958e-b4c8-4fcb-a0d0-29dd516f0dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c226739-181c-48a5-b108-538448c8de0a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f0cdd0-49cf-415b-8ef6-8446350decd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cf4df5-6a86-400d-9ea0-3b6e2a5cb673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029802ea-77cd-4a57-a18c-e6f94d54bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba817853-8203-4841-a381-feb4829855c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80274f2b-de14-496d-8348-cef3eba76035",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3b946f-4f1b-40db-b056-4a38a78797da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09e3e60-55dc-42f2-9492-dd747081137d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35f8d3d-feb9-491f-876e-cd6c43aeaa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab397ca-7d13-41ad-8c7c-8e42d672f7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0d328f-edc9-452f-8283-505f8955dad8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec65f4c-c53d-454d-b29c-23d371442377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dde60f-b6e5-447b-8a86-d57aa01bbc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b08a41-a82f-4665-8eb0-334c7128755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e1dbce-4d96-4d4a-95e6-d2fd2aba5afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e163021-2017-4704-b3b0-de8c9c2cc93c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698c7225-8a1a-4e09-9509-c0d4c9ab990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630c9b48-6dcc-42f7-b300-37039dbe08be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca906a-d8e5-4d5a-984d-da6ac3ac1f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83018b5-73a4-4d70-b23d-289bdc2fa9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8758a202-6178-4291-8c36-ac68dd5cacb3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c9f077-bde1-4d44-9905-1342ec84b1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf75ef0-71a4-450a-a510-b562934f83b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e1bf5e-cf2b-4c2d-83dc-84a62933b4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3defdc7-7e89-4943-be3c-6dee51dbc6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffb5623-7798-4c45-a7a4-6f56366dfb45",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff57e9f-9df9-427f-8ce1-ca5a415e0c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df37ba13-f88c-4e72-839b-f3006c272fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a15558f-9099-4335-9bd3-821b8727e9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "670fec89-4205-43c2-8170-ca0a74340954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a94e85-d473-438c-8280-cfdeabf1cdc7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa50ec79-8344-4157-b8de-6a41b46ad75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4748d59-8e35-4455-8eab-6a90f39fc59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d865aa-32f6-4ffd-beaa-8485760188a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9668ab07-f06a-4d6a-8f21-8c8e742f4025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd33ad4-921b-432b-81e9-f3ce7cd768c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7fed77-1a43-424f-87b1-4b077adfde9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b637500-0023-418a-a0c9-a19ff86560fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b608af95-63bc-4a45-abfc-c936c29ea6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae5bcc-0ef3-4813-a9e1-7b0ebe9c793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a056c9f1-0f59-48f3-a2aa-69ace8e82a34",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abe42da-4422-43f2-b9c5-f9d6d35a4193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6d3a96-2fa7-4459-a209-80632ac6ad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904c6c76-b528-48df-af74-b74f3dd11421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f1770a-ed6e-4ae7-976e-2829970f050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8ebd48-88b3-4543-927b-5d6419846763",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e758166-1004-48fd-bc68-1d5f14cb8c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72ebafa-3390-403c-8bba-409048aa3bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb41dd2-7090-406a-a1bd-70805a3128d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b99520-a1ec-41d3-95d1-d74a4e32345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14597f0c-f368-4fca-91ab-2ec36f232ef3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42bd5ca-3b5c-46e9-b941-4bfdca7506a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fd415c-2da8-4d04-a0f6-577c1a117af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa841833-f7be-4536-8a0f-0cd20b98a02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c451d3a-ef2c-48da-9142-0bcfe536398c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16807391-7f64-4345-8e24-15c0feb6cef2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c56cbf0-6361-4eb3-a657-cea22652c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad5a6f6-58ee-4491-b8bb-d9c11ae814fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167b55cc-3f23-4cb5-8226-02e7f57cf386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eddd386a-3f93-40d5-8e61-2112d53fb143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c10085-5334-469e-aaf8-9c3599bf874a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda38e0-7b2e-476a-9569-7a15e61e9a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5ac662-5a86-4851-8f4c-f13f2633ad3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a026dbf-70a1-471a-bf73-200949df7772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1f3244-d732-4ae1-a6c3-73637422a240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7310ee80-1351-47c3-8e22-7e9d4460fc4a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a878ff6-af2f-4109-bba4-e5ea61898f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09efb937-be7d-432f-afd0-60406e2373b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fec75b-6318-4076-b289-bf8f15b7d440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b79016-ad44-499e-960f-56b82123200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff295b80-2010-4646-b411-ad0b015878cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014d2a0d-25a7-4769-a6cf-efb0f109c382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4107c655-6bf8-48fb-9388-d0b057eb34d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d663a1-e4c9-4522-80e4-2bf556a5643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96da6f52-5e38-4015-a84e-f9851bbac286"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "279f0fea-1cf5-449a-ad90-4b2f8e00c9bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39663b5b-1a0e-441b-a97b-dbf10eec351e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de41c14-15ce-4986-bbbe-56ba644d9656",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d86f947a-3c15-40cf-94ba-4e53fc369fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59017058-96d3-4c29-9e5b-b94f0acc7a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "357cd33f-19de-493f-b4a0-4ebbff544eae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c4507b3-0cf3-4017-ba9d-edce1c35f8d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b32580c-bd1c-4e73-9e4e-b473ff4bb4eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12b0bce9-6bd4-485a-8b72-9de547f0903e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efece163-e594-40fb-9159-2365a870a2f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42fcd766-876c-4a21-aba8-00549dfd3bd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ccde7c0-bbee-43e4-8708-880fd73472fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc4c0b56-96bb-4d34-87fb-562f4205b48f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33128a45-6d7d-4c77-806c-c50db9f2a43a"
            }
          }
        ]
      },
      {
        "id": "bcb70ba1-7111-4463-8d09-1f268cbf2a46",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d1072679-0ac4-48c5-bd89-30b4c2029c2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a415d2-4517-4d19-ad22-5685e5937973",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3963f735-f899-4935-80b1-7b4e693cbd00",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24ab3c8-2884-4c01-b900-6a0f21c5bef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7a7af1-5bbe-4a08-9989-d91dadf97d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e7cae5-3395-4f16-9404-5e32051bb75c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c65a994-b1dc-4920-890f-7de9323bffba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ca5b89-a591-4157-9285-8e9be24c4a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28fe9a-8548-4d8d-8875-825997c9e121",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56553ea3-dc57-4d85-8a32-25ce21b28f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91778b3-383b-485f-81d0-d4890a558cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b065dacc-4ec3-4fb0-9a53-e093cdc1497f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7cae63-ddf3-445c-be75-1e1b84fd7051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a266dbb-b448-4cac-bb48-a144e2e3c0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec51367-8da0-4766-a408-940c4b8c5f60",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cbce7c-3a26-446a-85fa-f60290e5d237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746ff59c-0640-4d8f-88b1-6bda7cddf85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0ac2e4-9f15-4083-8532-a2e70ab8eb5c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3dae99-feaa-4896-b1cd-1131b6de6b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08cd27e-237f-4b1b-a8a5-0c7e329e2f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2398d9b9-0bb4-455d-b764-729bb86a36a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59476d7c-6687-4544-a043-0d955991b5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d9400e-1eb8-46b1-83cc-464ef861db87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939eda7b-0d90-4af9-8af1-2984c2774a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a6ea02-135d-403b-8a1c-508527c4aac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28e3719-5882-4186-84c7-c62f71b7cada",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959791b0-9340-468d-ad29-2d4eb6dd12e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e75630-519d-4c57-bf01-ab7d8819dd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8185f58a-79f1-4c66-bda0-553e9e2dac96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc82b33d-6ce0-459a-8dd1-58550bf3c533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f40cdc9-1a18-401d-bca7-abe5779bcc9f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83637c9-7ad1-454c-a391-5a9ba0899ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4e84ea-8b45-430c-b1f6-7d8b4ccb05c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465bc55a-b6e1-4a83-96be-adb46ac0bf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfc6f74-06d4-411e-b9a3-a1030c85255f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dc2f83-59a4-44a5-81a7-7f83e0fa63b4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b08b193-3504-4258-b949-114ae7a1f9e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a86c91-8aae-4853-ba4c-74eb4c2f669d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8ebd2-6d2a-429f-a2a8-f9d1d616b160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cb3097-72ee-4859-b185-3d9993ee4b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cecdc4-9a90-41bb-8168-248f9e5861ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414ff7e3-2539-4504-b909-2d13d22593bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f913f9-5535-423e-955e-79fa9deeea04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56c5c34-9217-4377-a5fd-c46f675083aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d54f969-150f-4578-8a2b-b43f3d575151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d568504-aa2b-43ab-8530-ebfedeead640",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57fa5fa-7952-47d7-b745-313111259210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c6b068-078b-410a-9bfa-180c07afe23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a0b15d-c1f5-4ac3-a4b6-131b2bdf730d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835a5702-89e2-46d0-90b1-70f027f179fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91a4ff3-3efe-4bf5-88d5-792570dd5f79",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7575d2ff-cd81-43c9-b814-3c87ff90acaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a706366a-a1ec-42bf-82d4-ae627a71175d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0028b230-acbc-407e-a48b-79eb2eb4bea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d9310d-6425-448c-a928-4eb6a74bbce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f375d26e-a28b-40f0-918e-6e0df16a4cb8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e371dd-0d94-4889-bf2e-b57e6be1dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a784a1-739c-4a25-b919-3ca56672ae9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe4d298-91de-4e19-82ee-812bd2c48810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8310c2-3cc8-41f7-977f-e913d4ce66b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066301e3-2faa-4d19-a52c-745bc50d3763",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491e57ae-6b36-44e6-ad11-4d0ce0c87116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a1c60a-52f3-4f08-ba09-589e8a27207a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d51bcc-32df-4a85-96d0-ecbd5180657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bc9729-b9ea-423e-bc79-171bb45847d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986d64ba-e48b-4413-b96f-70dd5b56e248",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d55dc2-100b-4141-b5d6-8a8c2fe19194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89465437-1e13-450b-ad9d-04f285e46c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dd8b93-cfb7-49b8-b03d-4986deebc58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7ee9c9-6734-4ae7-a995-5aeba6ea2350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cb873c-fbbc-43be-ab54-0644641a3ca3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b8a3b2-7f7e-4193-bd56-8c09fcb598e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d74b9c-60c9-466d-abb0-5a3a386006c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a3a341-5cd7-45cd-9d81-8b22e1b27a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1ab0e3-304e-49cc-a0d7-1e8746fc39cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3900904-5a53-46d5-a21b-5dac5f3f7bbb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608b5d2c-c625-44f7-b0ce-5db6d755a1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935e5c55-632c-4700-a42d-4d107dda2644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291b72b1-8f34-4dfb-a80b-19547ec29ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7df058-7340-4ccb-86c6-92ca3a8d3e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4934cb3-3411-48c9-828a-ecab9304fec4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b7ecad-d4de-499f-9096-b16bae661613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48ac84f-7a36-43e1-b86b-93125f32f05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9014a2e-9de4-442a-9bb1-398d915ceeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270ba348-b859-4a70-9486-121e8e31f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3403c47-1086-438e-a496-6a938776e47e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea6fccc-49ac-4960-aa86-2f574da2f727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21767bbd-20a4-4d96-b1b4-bc8157e17392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f784392a-29e2-4935-8367-a9c786a25522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a125be-07c9-4be6-93e3-e904389dd0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161f14b3-7cbe-4e0a-97fb-abfa01f17755",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366bf2ad-2d4a-417f-8ed0-657a1c9077ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fb4cce-b6ca-4b00-8eca-d99c79d8e125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916aadf8-79ce-42e6-92c9-d67fc2667117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59d9cea-dbc8-4d0a-b1e0-bcc0e1271f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a814a5d-4edd-41e8-bfb7-036f12ac9789",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23d82d9-67bc-4169-9837-53a18aad7d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6987aa44-15a6-4e80-9ab7-f61985692c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eb3880-6a19-46b1-a5b4-17d2ce4cdeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5858c32b-1ebd-43ac-a110-d7370edb9833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf91e4-7363-44d6-b5ed-cb9feb53651a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6ef799-642b-473a-a69a-6f7dd5e7830c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5feab8-cb20-4c72-9370-1ff9d73731e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d3b529-68aa-4b7f-92e6-d60d7f51bec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7ce0e0-9439-4e28-b95b-1222beb77bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98567794-7d4e-4456-96c8-9947eb327801",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9d516d-bea9-47d9-b4f4-e90a85154ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca4af76-224a-473b-b0be-178261439991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef1ecc4-2fc9-4b6c-bbf9-272800168089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1764c7ff-cc09-4ac8-9f82-2828ce3ebe8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec56157e-57da-4434-82b6-7184dbb4d842",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba78a81-adfb-46d2-844a-cb9b1311d1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a2ae82-a600-469a-a2e8-e13ad7abe87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9c05dd-a622-4a90-bd07-6dab43a6aef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd1c49b-c0b0-4c42-987d-94d7742c9d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e4dc0c-1299-43eb-af0f-7432bdd8f677",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82445f6-5d4f-49a0-a075-6871550dd9b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce772d9-4dc3-4da5-b52e-efae40f1e541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1900b3d3-7d6e-4197-b050-1043597ffb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe30aad-7c9d-4cdb-8cce-4b8c5aae8097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838d24a4-fe62-479d-9aac-6299df5455b7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ccc34a-48c9-425e-89d5-652dcfbd1102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1714d78-83d7-40cd-a7d6-58b1beac64c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd761a0f-a3d1-4256-b12b-517a52a9c4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7159059-31c8-47d3-b579-b005f4337056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55c4679-d363-44e5-973c-113645a67978",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69817eb-3ff9-4701-af60-f3f164c3a2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211f9949-189c-4f84-8703-9b6178698fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48a1ee1-f577-4809-8688-8152388a5f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4291b6d-cca3-4dbd-9c30-8b1817eb15c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cd4b57-4b9f-4cae-a2c4-b09fd4efe932",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823106be-4630-4b92-9ca6-9f3a2e3cfeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5e6138-4d5d-401d-936d-5b20dd93b254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b329813f-cdaa-4c64-bc9b-773570a54155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3999f648-e7b6-47cb-b190-eee82b59cf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8425c96c-c9b5-4fe9-ada0-e0d538512a55",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a330ad29-0adc-47cf-94fc-b1701d7c3e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07362903-a5d2-4cf8-8e11-5db4932c31b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbcfb7e-9215-4b7b-93e3-c0a20b2aa697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16f6687-5b96-427b-b264-cf898bef68a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab6e8d8-0217-4607-af50-6b21c267d519",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4dd1d2-3da3-45c1-a56d-fb8eb97f963c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52059762-7053-413a-9ae9-f156bfe36b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1c450-aa5c-43f3-95ac-41d5f7bb065a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cfdc52-03b7-4026-ab3b-65b1d7d277c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac0017c-ce62-48c7-9a16-1d4e0e384022",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ed2dc7-c993-4e3e-8672-12cbecd0828e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd1b2af0-4cba-4cf6-8d2f-7b6d2bb496a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f1af7-1ac1-4342-a9b9-18dd05ef9588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645d1c7c-e018-4640-94cb-7339ac72f6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ac92b9-8218-4a3d-8c69-3adf3d2a6683",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cb78d4-cf13-4dc6-85b0-7b1eb0d18daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194f86fd-9520-4018-b11d-277e8b9e178e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814024c0-3ab8-4285-862b-a11cd2c80af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0303d03-efa6-43af-8375-527e24b55b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c180ab1-423c-479e-b852-ba35b2067a04",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cdd521-16a1-42e7-bde5-13d94ef22e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2522b987-12c9-4fcc-a414-be115e9bc9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21391184-ed9c-4275-b304-7b76fedba944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc9bba8-d0f3-4dce-b839-09fc8d515a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5984acb-935e-4813-b9c7-c82ff8675386",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466bd9d3-c3e9-473b-bb17-4534e12b02ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7097075e-52b8-4ea7-81d0-126cfca8f822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c66f3e-3810-4bff-976d-3f2d91d2a197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69be12f7-e2fb-4134-b797-91bc45565fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741bdbe3-f206-4607-a786-a8cf430fc09b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc845b4c-048e-4ad3-bf8b-f75711f3d229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688acbe2-f4b4-46d0-8ded-8731ca4f7e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba02328-630f-4591-b6bf-441633e2184e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ca9638-dfaa-4f37-95f4-adc5e10b5122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da89338d-092d-4b9f-bde6-a05f92dfe3da",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d93a04e-129f-4a26-bad4-a9cae01ee21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa692cb-8688-42e0-bc0d-8ba82f7eb908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d575a79-24cd-48c0-887d-35c9cade345d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaf92fe-505f-4643-a6f8-17efdec24431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57eb28-cc57-49fd-9dc9-3e19e6ad08eb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69238596-b95b-4a19-8bef-7b295362990b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4119c6a-b7a8-48e5-8070-9d1c76ed009b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d91ce3-b047-48e3-9423-572454438c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7ca4ff-9d4c-49f5-9ea4-fd62de152011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33a0ea6-0efa-41ef-b2eb-a473c3a14573",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44531188-8c38-4e2f-a110-199f24101368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac045aa5-5f4c-4f4a-b1b7-b3032da17e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e9a69-7248-47ec-9ed9-fe25b40235e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb63470-3d13-4de6-bac5-1ee2845bdabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655da72-8dbd-4163-a3a0-465d9f394272",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969863e4-cc71-4124-acab-11f46689b7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fd4e32-738c-4b16-8045-e70dc930be05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4919bc9-f01b-4e3e-970b-aa5dbfbc14ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25799570-7d4d-499c-a232-ad86629af9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa966f0-ab8e-4a93-b4a1-dc6fd7e45618",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c60c3a0-4678-4db5-8147-9ff7ffab050c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc40245c-9ef6-48fc-bff3-59b005c366be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0d5eeb-0d83-46e5-8907-97800cf15ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa3f406-8b5f-4e60-a76f-ef1c46830296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7b30b1-c15f-4842-9c9c-3397c318e463",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719252d1-90e5-486e-971d-94bed66f2867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7406f27a-461b-4511-99b2-c3997b6e0bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7786bbf3-545e-4d40-bb40-52a9e0df86be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e602e6-e8f0-4fe3-80a5-e1f1ba1a5f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f5c903-4df2-4a73-b0b8-1a7c350e1c09",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735e3f94-1749-494a-b8a1-b92a313c7a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f381570-8592-4648-ba37-1f6fcad624dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd268ee-d048-4b4b-9437-a8cd84126e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1a0ebb-b689-4cff-b716-2fc8ebc35d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c247b1b-3ab3-4066-abc1-dbe1a12b0788",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae494abc-bb6c-43b3-a3b4-008c00980828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1934436a-8a47-4248-b729-6b094ee8077d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6267d2cc-cf5a-4e6d-8e46-8ca2831cb57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32ae470-5c02-4c9d-bfb5-5d634d8f2a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94661cb-45a0-4a50-ae47-d2defb5b6e73",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a527f408-834a-46fa-b18a-620400586364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56eb312-9c24-4bc2-88ea-667c57f151e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cabffa-7d3b-48cc-816c-bdbe0a99e1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e782267-e9a9-4f2b-8274-9137b166adca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdd86f6-9b98-4377-9c2b-87ac92d0b27d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb7c836-7bae-4bbf-97f2-11cc0ad51413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efe28a2-d200-4861-b6e5-06f13e8492cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097f2f17-7aae-48fe-88e4-0ae1c185828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d1b8df-2995-4c30-b23b-7cdb743d4394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566ac0ca-f7ba-4ca7-b9ec-957680fc49b1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5852229a-6076-43c6-a8d1-94c8b453d252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08370326-f282-4dc6-a6bf-c08a86c62128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfbc6e8-8b67-41ac-99dc-c9abc99ae992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c3977a-aa38-4d74-8fd2-bacc50dd6086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c60eb-2487-479b-846d-263cfca4cda2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9433391f-bee7-47ee-beb1-48cbf4807722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7600e7bd-659c-4565-af9d-72806dab5861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14550017-0869-45cf-afec-faf2f3392007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1d65ac-7079-473b-9dd8-492d9210ca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0b8b40-f373-406c-aca1-9e842779c91e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73177645-1674-4b17-bdd5-a311852aadda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12147bc-2875-4c75-b15c-eedfe55a4cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f5353c-5d0d-4944-8f22-f3d0ac6965f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab09f82e-9d04-4463-ad26-193803b4a50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb7c5c1-adfb-4cb6-b607-89dcbef1be17",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522521e2-60f1-4306-b3be-42bd64c86454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763c5836-8d21-427d-99a6-0b8b45b06441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbca177-9bdb-457c-8344-85e21d9bf54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b953f3-301e-4851-a97f-2f4b02e86d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6675404e-c90f-4d69-af0e-477f09a59b98",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d11b9a1-b1a7-4d4c-a1a2-7a51d4143a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff16b26-9efb-42c6-b451-ffc2e8b048d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f098083-25c1-4c11-8f0b-8679b4ae6948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73b6878-0f9f-4816-981b-709d33d0f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bffd3b-a050-4af0-a823-77c4dac90fde",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c01acf-bd7d-4902-b7ec-c26704975699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d317e4a-f8b2-4c08-a66a-f86eb0687630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c957f28-a694-4780-89d1-f6db1d58f554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce87742-d224-4a17-b225-c33411053647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dee134-4c8b-474f-8978-9a89e94093a9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5a6ed6-7115-4302-9723-06263ec0cdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b8ddfd-2ed5-44a7-9bdb-2139d9ad7fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef6313-071b-464e-8243-a15e827e010c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf6f08c-da8e-4ac3-8314-76d0dacc8642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d34f18-ebae-41f9-9439-b120bdd3e3d7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f9f0ee-225c-429a-980e-2014ed67c2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c84bdc-3ac1-4ffe-a13b-802287a9d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9591d092-2a15-41f4-a842-a9b1e0895382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc409f20-6e18-47a0-9a7e-fa0bea20c28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0eb3fc4-9a2e-40db-8d2a-9520119fef0c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea59d08-c442-4b88-aa90-c4dd4e03ca05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ff8704-259e-4325-b8da-168991a988c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f01e9d-ca50-4bda-a704-ad4b762bd20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8c4b41-20ec-4599-849a-478fa12f66d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24b901e-00d6-4188-aa21-43700e6f55e0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ed2efc-4b92-477b-bb11-4971262656a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e203af3-901f-484c-a999-9888db4d8c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaf8179-ebf1-444a-9cdd-25a24450598a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4bbfb9-d278-4c79-bbb7-796acc78650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdc4998-1b52-4adf-a29f-f1a57c2270b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51778ae8-7fb8-401a-a860-bc4e93ea6176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf88b68f-1eb3-4a3a-be84-bec42ad9f50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1073ff85-138c-4305-9069-c176ad5715a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18168289-62c2-4120-bf7a-986e2b6e33ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9522779c-28bf-42d9-9d8e-a4757a2bba78",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751326e-2021-4d43-90f9-db4bc2c8c829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3eb5f5-8283-4145-826a-a85571e23bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0647ea35-6323-459b-9032-b16fe7bb8fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f09a154-0797-4b16-945a-da8b96fb9f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eda9e6-276b-4ec1-bb14-d414486317f6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b54303-7178-49e6-a6ca-fb53783cd216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb746789-d6a8-46f5-9567-f8486bef68e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8fdfad-c67f-413b-a5e2-5328f3c281eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e60fb7b-c1cf-42f8-854b-1ec2ce933c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0be2ab-4329-4950-87bc-a1f04c843258",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9e0c09-2580-4973-8fe1-02956edcb060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4b3125-8202-454c-b95c-9c485e78cd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349fbb1a-97bd-4a5b-8b1f-07e260789bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2a36bd-1ea1-4ba0-8bb0-954b5386ef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81626e4-0d6f-4c56-bab8-f6fa3f7ef96a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd90463-6a19-4deb-aa51-22931e0f3f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b591e493-581d-4614-9edf-c9ee85524db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd521af-8879-42a3-ad40-07d5eecbc727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d3aa5c-906a-4440-b3d1-877fd296baf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ee2ae3-196c-4875-a7a4-6947df1e0f1c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d095c1b-6abf-44fc-b068-eb43a776efac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7157f290-1bf7-47bd-bf7d-83806bf94abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836b45b0-2ccd-4266-933e-5b43c3dd02ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ed1807-78b5-4ba1-a95b-648f32a33883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d823e4b-39d9-4525-8e2e-5cf5281a165b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7971111-e718-457a-9d18-ce55e1a0a346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedd1eed-d49c-4546-aedc-54698b707fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed655a91-d6f5-42f2-89f1-04a0377042e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ee43d3-e368-49c8-857a-b446a7a3395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ec4388-41ca-4dcf-99c3-9a202fff485f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cd5947-3a40-4ed2-8e85-3d8067ed3f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94706856-9016-4933-a6a6-3eef167bc205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae133382-dea6-48ca-a82f-0ad960ace141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e084fce4-2b76-4db8-a4cc-e7681cf39e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ff5e98-13d8-4617-a056-6e2d63f60412",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8247d2-8e97-4e2d-ad50-cf6d7bf18c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f72950-c03b-43b0-9a91-6bff3cb3c0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955bb9ed-f1fb-41dd-90b2-787a4311bbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a45d4d6-1749-480b-933b-57e9d023f431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9b3c0-9906-4180-87b3-8d83d51479db",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4000915d-1540-432d-914a-af26ed019429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a384b9-b29f-4528-a74b-fd6a7b5ca14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d350b3e-25dc-40d2-ab97-1f1320a0dd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90419cd3-d3ae-4133-8efe-49ce5a818c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5718aa4-081c-4494-a070-3b727eba8997",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744bcbf9-3fed-427c-86d0-7bd9de369393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb281e96-cd1c-4851-b819-80a832544206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cccea8-986d-46c4-9a58-366954c88373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04f44f8-c1dd-4a3d-b3ac-e1f76ef7261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92b0713-fc33-47bf-aeb9-e8a7ebadafb9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f3807-546c-4886-a799-7d376e98edf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4313c740-d93c-4217-bfe5-f81d5edb00d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a350c8-ba57-4260-907f-c53d6d4a1891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317ffcc5-35e9-45ff-9d0c-89122ae7a3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fc61a2-18e7-428a-8dc7-00ad6db85522",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88f089a-9e59-4c52-a7b9-43707587cfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9bc68b-57e8-4c2e-a403-5869b5baa7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393cc54b-5c6a-4125-aac7-a3b14f57698a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd15b17-d3f4-4005-a6c2-cfa5a8248987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b87eefb-81cc-4e2b-8ed3-836bd003d488",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e1c4f6-c6fc-4f6e-8a98-a443f95aafa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ec6452-b839-45d2-b2b6-4757a8b3e257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ee0b5d-0064-4f02-95f1-b237d4d6b6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9784b9-c3a4-4473-8cd8-c2d3db9d1434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785b0be0-b03d-4043-b01d-8796c43d84c6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5aa509b-ed71-4d9b-b66c-59f21eae3786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c1562b-f480-4368-8acf-7332b2a0339a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e43fe5-33cc-404b-b74d-4865af08102c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66a7f85-55be-4ec3-af55-02ed0a3354af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237ab8ac-b533-423f-b6fb-d28d0a6794e5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41032336-d7ff-439f-b21c-244f7674ab10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90120e18-e7d4-434c-84b8-107d814ec1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfabd26a-d920-4fcd-b00f-8d407efbcd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628bf5c4-69a3-462d-b097-02f4c400e8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4662bad5-3ec5-44c5-81b7-be8ca1062e3a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961f9eb0-197a-42f5-92c5-40104f2ab310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2901a4-0ca0-463f-8e05-11146d92dcf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2075d1dd-f7ff-4765-86c1-278656c1a859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c090b62d-38ed-4d9a-8ef6-dec237d5e46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e112f61f-9a35-4f6a-8f44-5da528912a52",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3313e440-0322-4662-8990-2edd1277bc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7610e4ec-031d-4f09-8a06-88c12a9ca06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd98af44-2f39-4eaf-9eec-8075f5d5bcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8eaedaf-4f6b-4b14-9d9d-4ead8ac5db89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe09826-4414-4493-9e15-6fb733564ecf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638762c5-4fb0-4ce4-94e9-c906b3209213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61faf5de-6633-4a10-aeb7-b7a1690131fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e7fb0f-15c7-4774-b969-06e99787d3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e70ca3-1183-4b75-8f85-a56a74371f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c751dc-c308-4200-9a19-a4c9001d9f82",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3946b07d-fcf6-4e15-9047-f30b327c3e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db101397-7772-4d1c-a79e-9489fcc0b8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a8983d-bc03-480d-abc7-4489585df069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2bb5ef-5087-4f6a-a708-e1e9bce2ffba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4027847c-a48e-4099-a682-82fe6c154991",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e888c9-58f5-43f0-8d21-b0ca25abd4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57a438e-66f7-4453-a64e-6d099232d703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c1af6-5647-4f06-9266-0ed1c2a5bc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa89979-5265-46d4-b1e2-a33fb1525f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e405ba2-f5d2-4e5e-a48c-df983ac53bc9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02718cba-18d8-4292-908b-872c3f0a748e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6288ca8-9cd9-4fc9-b297-0c662d3bb703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98505c31-9d7a-4eb9-8b9d-12a875194cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaac7037-9fe0-4fa9-b76d-8bae792dcb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0b91bd-d3b1-468f-935a-917022f22895",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6122c183-1dc8-413b-a282-65f662a8d994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95507ea4-3716-44e5-a748-5cdfda107efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192bb19d-3f33-4445-b712-191449bc03f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e58c9d3-034e-418d-b290-8736b0df1328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f48e9e5-e22f-402e-b47b-db2ae810d2bf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4bc0d6-f105-42ee-b53c-dfefffadc80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "462b613d-3d17-4725-ae1d-fbf1dd6b6c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d610c41-01ae-4294-82e9-75a1bef7477e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a067d4-5ae8-4bf9-a8a0-a33d6fe2af12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535586eb-d5b4-4c7a-a3ab-52556153684b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c42e8ce-bdb8-4804-86cb-2f58512a1f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55205862-6b6e-40e9-83c9-96ae9db99033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c0d0e1-8423-4a84-b5b2-efa70ed85c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51533fe-a21d-48af-9715-012e120cf6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201022f0-fc05-4863-bc3d-cfce2aca8fc4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819bcde1-58fa-4721-8f36-f9667f93a989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e77417-4670-4959-b10d-f6e68ef2150a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078154af-66ed-4de7-9a85-f50ffd2f5179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7993ca51-4d28-4ecf-ad85-07fcfb7971fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e29c525-82ed-4f9d-965b-56dd5ea68fcf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb26de8-ceaa-4db6-b6b9-6f0755470880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce667e1-fa30-41ab-a10c-fe860e8956ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a3fcf3-d063-4efa-8549-3386f3160de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e487ca34-dd22-4b85-8113-4ee4fdbf4c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2087544c-821f-4d69-be70-a1babebb0e5e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2b2b4f-5e08-4dea-8116-0a3912c4677c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa119c16-d391-42ef-bb27-64dc6b8badd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b5a705-d999-4b41-a7d0-15fc49a1596e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7538a475-afe7-4c04-b36d-87f8bd61d018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe53facc-ef40-4a96-9249-478102e3cc07",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6eb640-d31b-4b7f-9cab-117b9c99633f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6933e86-d324-4a1b-a7cb-348e93a38d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0c8b3f-6843-4c5f-b0b9-339496a04a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0fd74d-2156-462d-a68d-8b54f501d40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deef998-d550-4fb0-978c-14ae906ed151",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e823f6-3ae5-4214-ad80-a6b7aaeb85c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27675fcd-f67c-403b-8de4-50e3c6f5fca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b6e338-9585-4676-8861-9cd8b5782e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20f75a2-9592-4bb1-a7be-8acac38038f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87041cf-f1b2-4dfa-8432-facfb6e7a455",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c410df8b-aeed-4d11-ac79-d59196293521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e515e4b-bd77-4613-99a7-10e631cba9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d465747-e2d5-4210-951e-4017eaf292b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fab092b-96a5-4208-a908-aebdd0a276c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044fef51-2afe-4b2a-826f-8a401cc48daf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4572424-83ed-4393-bf65-5b1694819221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6fa5eb-9029-4889-895f-b0a7897bd2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32db299-3c8f-434a-846a-e3dfed68e863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44d8494-b568-44a4-b9d3-46e16840df59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697027ae-cc50-4a8d-a047-8230d17cce57",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8effc1b0-8ece-417a-aebf-cf397ef20c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6e7b72-3cd5-41a1-acbd-11da0de93343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9f82f5-9ede-4df7-9d6c-b14178f8a4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f751210-af01-4cfb-896f-70a0577a0a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d569b85-20d8-4fa4-a511-e35709460f83",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e4af10-5005-454e-b48b-79b3ea38f87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0409fa-9f3d-4cbd-af62-7a91fe73282f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6edc18-ab57-453e-a9c0-78411cf86468",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84baa8f-cfe8-4458-9c9d-6cb9bd35d5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b591b1c5-e7d2-40e0-9e11-92a7cfb3b48b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c87fab-ba49-4ef0-94f1-cfcf6ccbe616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57007ca4-5636-4c93-ae9e-0f6f68a08fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88c1412-ecf3-4fb1-b68c-a585a9566cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465fa23d-894a-4a6c-ac7f-c7a67412765d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5daa8e-d549-4335-a49a-aaa5a0922e5f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a4fcd7-78d1-419a-9be1-4b2fa24a9859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c98aca-2fba-4d56-b056-9a08c5ae451f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb92374-92c0-4fdd-b907-a184810de365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c59fe4-eee1-48be-ac45-e9b5c1c20543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ae9311-742d-45e7-8a55-1f10a213ba94",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627feead-e7f8-4c7e-8399-006e23948d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823b5a94-1746-4922-ab9d-f96bdaf30bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a331aab-f3ae-4ad1-84e5-4d2b242ae45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb444c7d-8097-4ff9-8879-fcaefd68b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064fe735-6099-4b07-bf20-4dd309848bc0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a941994-bc46-4d57-97e9-31b3aaa661c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa923d54-913c-4252-adfe-2a51d3aa448e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f835f171-8e23-458d-b510-f74db5fc0247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d72e0f-2b67-4369-9805-b78f4923d396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974de49b-890c-465e-acf0-b23af55e7e86",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368f193b-e3e1-4bba-ad8b-d67a9b631f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b51523f-a3d1-4014-a703-157615674df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fa3e83-c1c3-4318-9743-29088c8aa281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ddd447-f1a8-4c98-b7f5-39cbb49d8ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835e6783-8845-457a-b454-82815b737d32",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e93934-4366-4037-90e2-f6b2a2ddecba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b74656a-933c-45ae-bcfa-45ebebaddc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16585d64-c970-4d59-953b-2378db36ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5d1bf8-6c60-4150-ab46-1e8abe7ed3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9479105-2a50-48dd-8f50-2dca4cfad4b7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abba5209-7c71-4cbd-8090-39170c9acf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d85c3ce-b543-43e1-b7c4-aed8a8f998bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783321b5-175d-4ade-ade5-ad55016e8a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e0e519-c190-4cdd-97fc-9361feb1488f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "941d8f17-d2ed-4bf2-9162-74ec1f7fbea2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a7e5965-2fdf-4acf-be61-a9bcf4ce4d81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18303e42-d4c2-4275-9559-9c868feb433b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37aceb20-fc29-42d1-8eb6-5c8da237f19c"
                    }
                  }
                ]
              },
              {
                "id": "6007ee13-2aed-4563-afbb-db09a52b8a72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4fc5eda-4bb7-4b1a-b0bf-e409d32f91bb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f67a421-45eb-4711-802e-ba59585173f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a6ff4615-2b89-4f45-a89c-aaf04ec0745d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227e8a30-46b9-4aeb-80dc-070488c5820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34552b95-6bc6-47b2-b55a-6c6947a76927"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2656feac-f07a-4110-b265-1dc698d4a080",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d899f0f-be39-4f2f-876f-e7082f94264c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8fd29b1-f39f-4a14-bbe1-eb5970af6ac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3168cd-f31f-42e9-a95e-a6d2b8abdf59"
                    }
                  }
                ]
              },
              {
                "id": "fb8c272c-d935-406f-aace-4cc2a88c5903",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b88298f5-1f7c-47e2-b596-903755fcb821",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27227459-50b9-4cd3-b7f9-e3edcbcf3fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b44a802d-04a5-4b4b-8609-b323968ffe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d7d9e-a511-4951-bd02-992ea3f6c5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a9cce1-83cd-48a8-9f32-0a45d94f5dbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "923bd513-c85c-440b-a216-cd81aa536027",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78ed7bd2-0b8b-4e4c-8f24-2ad260c95637",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fbee19b-bb33-40f1-b7e9-aada6090902c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "40ee30f1-8e06-401e-bfd5-75cb12742590"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0635d57f-87fa-482c-8bf2-264daed24dc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76c0fd7f-0b3f-4ebd-aa2b-a7021739e8f2"
                    }
                  }
                ]
              },
              {
                "id": "6f92abae-5a51-41cf-8305-35aa550e9560",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "958055b5-9742-43e2-93b0-b6b825a4d0e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0441bf7-b413-4f5e-87fc-77498ad8e525"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d796756d-7a71-4237-b4b6-8e0ccc8c46d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c412c18-289d-45ce-99b3-3f31232397b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3b46903-a51d-49e2-9276-1c8f5ebe22d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d72ffb77-1256-4e2f-a9ba-c324c4067477"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce56bab5-59bf-4f2a-b728-737009cf8257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "481d9de9-58f3-4e7b-a1b7-8c939efdaed2"
            }
          }
        ]
      },
      {
        "id": "e2b5b882-3639-4ce4-9e9f-083bd676a152",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "708c6bdb-6321-4eeb-9347-05618e7920e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f724219-d503-4526-9537-38d2a2a0b6f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7b04e8b-40df-4a48-8989-32ae78d691a8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b0c33b-cad7-4132-97a6-420862f3890a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b10ed383-4797-4e12-b3cf-ee13b29be4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c818a8-49ee-4da2-8b99-b3538797f31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df054e3d-0f6e-43b2-84c0-68943b1e4d1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58d294e2-8839-46be-a8f4-3d33e676ecbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aff77f3-d1ca-4a71-bc04-2b71252a48ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0688f4c-c79a-4b1a-9d18-082d031c8930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7d33b0c-3d58-44c6-878e-fd4efa846c7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e139d169-c30a-458c-a253-2feec10234ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4b8ea40d-6bc0-4ec8-a52f-83a67985a5d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1e7a62e-7f4c-4911-89c0-1aa6f83a18f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e73bf1a7-0530-47a7-b537-48a3fbbeb8d2"
            }
          }
        ]
      },
      {
        "id": "6b1632af-e9d7-4462-a8b5-63099e99e641",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e085b2ec-1919-4476-9b7c-58498cde472f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "635634dd-c463-4553-bbe8-465a1d293a1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3b6d016-af07-44dc-ad53-6a4ad48d5f36",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d69044-cabd-44c4-b754-d8f1c6682729",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9440a8d-f633-4777-9429-f51b9a0a1699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950c03f8-d265-4f6f-8b0e-3926fc02cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f22cd7fb-b300-4cdf-ad7f-007340bb404b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64388d9f-7e03-4fe7-af79-80d0439fed8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e6eebdd-7dda-4526-9169-619a0a09409c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c925dea-6d17-4182-a1bf-71addb339a56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "241edee8-c815-4d51-b493-213bc4db15e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "428518f6-9945-4947-8842-a95d7ceb886c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ea8891b-5854-4036-affc-b8e8d37a495b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82ff1dc1-63dd-461d-b5e0-bce0f1fe6816",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7bd1f20-b19a-4396-8034-2cbd0b9a6c92"
            }
          }
        ]
      },
      {
        "id": "300603e3-c2d7-41c6-9a2a-19571793c612",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2bed9c9c-11c2-4bbd-abe0-e93ca2594bcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bd90fdd-448d-4ff4-8631-1caf18ad0b68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d59d104a-8fad-4b13-a3d4-970e6d316bf9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd769a2-fe36-41ea-b642-78979781490b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6043ebfc-cc83-4f4a-9ee0-29a20dd17939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b760d9-c662-463e-a48f-04e611b9888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a9f725f-61b7-4bc7-b710-17519991025b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f10ff11c-520d-4d5e-aa49-e965a6404594",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11a18f85-5454-4220-a8d3-61963c30837f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6471e68e-1292-4e04-a860-ff3aa7f3d0af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57ee7e20-58ed-4d50-afe2-f39e50669ab9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cd4dc1a-26cd-4ad6-ab0d-de26806a0e08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b8f760a-6bd7-42e3-925e-3bf1a61ac135"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3276fbe7-dce2-41ea-8fea-1df2c942bf27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cead76fd-f828-4cad-ba0c-27ae80a47620"
            }
          }
        ]
      },
      {
        "id": "85f398a0-2912-481f-a878-7a3c6cf8e3eb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66d79d7c-c936-4387-9eaf-f9934d6b1709",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ab7d3a5-6c09-497e-8c73-2975ed1c7f74",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a083a50d-f303-433c-b520-b68c0f2a6dab",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94a4b9a9-ce11-4828-b96b-360eb9c858d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8532c31d-599d-4a29-a380-452e84740fbc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 436.63888888888926,
      "responseMin": 11,
      "responseMax": 12734,
      "responseSd": 1879.1476771703278,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725064926816,
      "completed": 1725065045256
    },
    "executions": [
      {
        "id": "99505cf0-92e1-467c-a417-d67f348cb690",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d5acdfaf-d615-4c48-b4ae-cb98cc808431",
          "httpRequestId": "f71131d3-ba11-4765-b3ca-f34ecc668828"
        },
        "item": {
          "id": "99505cf0-92e1-467c-a417-d67f348cb690",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "53f76826-1f21-44b5-b51a-d49c7608c8e5",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "ef58e722-d08a-4fba-910d-8108521faf55",
        "cursor": {
          "ref": "dd34d400-6bc1-4239-bebb-b0f92e297b4b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e8311322-5fb9-4eeb-b0fe-8d8b88b80b82"
        },
        "item": {
          "id": "ef58e722-d08a-4fba-910d-8108521faf55",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ebbebcef-2916-48ec-b6c2-3c02358bd0ff",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "7bd7664e-0bf9-48a6-88ed-fdbb267fc666",
        "cursor": {
          "ref": "42d4f585-ba6a-4087-b62d-cea661e06279",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "42e9ed35-2aae-48f3-a555-2548ae2db1fa"
        },
        "item": {
          "id": "7bd7664e-0bf9-48a6-88ed-fdbb267fc666",
          "name": "did_json"
        },
        "response": {
          "id": "2526c84a-3986-41a5-86c1-798845d74c07",
          "status": "OK",
          "code": 200,
          "responseTime": 439,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e49ebf1-7176-4a69-9883-efd545343052",
        "cursor": {
          "ref": "08185eb7-d7f2-4c11-9398-6f0733b6e288",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68f07fd1-2145-411c-af97-4505fd799fa2"
        },
        "item": {
          "id": "3e49ebf1-7176-4a69-9883-efd545343052",
          "name": "did:invalid"
        },
        "response": {
          "id": "00640eb9-72b6-4d3f-993c-034bb785e0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2229,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e49ebf1-7176-4a69-9883-efd545343052",
        "cursor": {
          "ref": "08185eb7-d7f2-4c11-9398-6f0733b6e288",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68f07fd1-2145-411c-af97-4505fd799fa2"
        },
        "item": {
          "id": "3e49ebf1-7176-4a69-9883-efd545343052",
          "name": "did:invalid"
        },
        "response": {
          "id": "00640eb9-72b6-4d3f-993c-034bb785e0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2229,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c503a3f-cfaf-4eb1-9a48-47e73515e46e",
        "cursor": {
          "ref": "6b6696b7-7d07-4dcc-b13d-feeb4fa39d44",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d0cb5ec8-b697-48e2-8596-1c31298bc33d"
        },
        "item": {
          "id": "4c503a3f-cfaf-4eb1-9a48-47e73515e46e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7e3b863d-c8cc-4a0e-80d9-5b913ce13b78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2197,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65df657-6ba3-4ddc-8254-dddaad27308f",
        "cursor": {
          "ref": "109e01bb-9413-46c5-9599-a670a0210898",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1b24299a-d1b3-437f-8196-74f15473bf5e"
        },
        "item": {
          "id": "b65df657-6ba3-4ddc-8254-dddaad27308f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "41d2571c-393d-476e-b99b-76a32644e33b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2274,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519be7e-644c-48a0-a4ac-b6dd205f9990",
        "cursor": {
          "ref": "d3951d33-8de6-4e62-98a2-9f21e4bbe6bb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9f8edb3c-6924-474c-8ca8-6e907af0076e"
        },
        "item": {
          "id": "c519be7e-644c-48a0-a4ac-b6dd205f9990",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "543c8ab8-f21e-4bfc-9d66-edc611275657",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dcf17f-88ae-4a1d-8a55-bd0506f923a9",
        "cursor": {
          "ref": "16e28656-47c2-4eb8-9dc2-c3939bac9a13",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d6494170-4f40-4983-873d-b04bede8ace0"
        },
        "item": {
          "id": "15dcf17f-88ae-4a1d-8a55-bd0506f923a9",
          "name": "identifiers"
        },
        "response": {
          "id": "45bb3d60-5dcb-45d2-9ce6-afd13a648bc8",
          "status": "OK",
          "code": 200,
          "responseTime": 2587,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09b69be-df6e-46d8-872e-7b902a73dd92",
        "cursor": {
          "ref": "323f0d16-8c30-42be-bdd4-7fe9027d8bd4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "727c5aa5-50db-469d-935a-998dd0fe13af"
        },
        "item": {
          "id": "e09b69be-df6e-46d8-872e-7b902a73dd92",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2212a47f-0b91-4771-a0d5-0c79baa03afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fb802c-9188-475a-b2f6-5ac405418b4e",
        "cursor": {
          "ref": "ab1b674e-cdc5-4bf0-86bd-056cc8e1f49a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a40424bd-470e-41b1-a9ba-75d3256e93b7"
        },
        "item": {
          "id": "76fb802c-9188-475a-b2f6-5ac405418b4e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8361242a-4759-4ec9-9697-e8ec14eb3fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479aa08f-2dc5-4c67-8b3c-ee057d73ea7f",
        "cursor": {
          "ref": "9f01c187-882e-44c8-8215-28d03c60eba3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dd69c91c-0b2c-494a-932e-88c966ae5533"
        },
        "item": {
          "id": "479aa08f-2dc5-4c67-8b3c-ee057d73ea7f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "873ab734-ec82-4602-ae24-56dbcbee94d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec8aaf-1f7a-4c57-a656-df9d5d0922aa",
        "cursor": {
          "ref": "2a1e13ff-3542-4cea-99c9-2a0a75b62bd5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "71e439f2-8a56-4892-a18e-4c4c4ac3faa7"
        },
        "item": {
          "id": "e2ec8aaf-1f7a-4c57-a656-df9d5d0922aa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a8b180a-19b0-4fb0-895b-5673fd69bf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6eddb9-f397-472a-8cba-97bcb8361952",
        "cursor": {
          "ref": "c465aeb3-9443-4229-b749-13c3fa3bc23b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "768f12a4-b588-4d4b-8e69-3da0bfbcf62a"
        },
        "item": {
          "id": "de6eddb9-f397-472a-8cba-97bcb8361952",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "227c507c-49d0-4658-8fa6-06a9f1bb4719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e599d6-481d-4c20-bb32-05e843b39e2b",
        "cursor": {
          "ref": "e29eebfa-89e7-45cc-86a7-94c161617bbc",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "435ab7e3-a808-4d94-b7ef-e8dc54df8054"
        },
        "item": {
          "id": "40e599d6-481d-4c20-bb32-05e843b39e2b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aac28517-0a65-4c08-be5e-2cfc5b9b54a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47bbb7b-9ddc-4f0d-be13-576e67d26e63",
        "cursor": {
          "ref": "d62e7b29-ad73-450b-a9f8-f961cf29f870",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e4a28175-4842-415c-9591-d602919046a2"
        },
        "item": {
          "id": "c47bbb7b-9ddc-4f0d-be13-576e67d26e63",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2f91c426-454b-47cc-a781-9132eb94212e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e42c73-41c7-4d9d-a7eb-4070d1889475",
        "cursor": {
          "ref": "2e057478-6dc7-4187-9ad9-a9278ed72eb3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3cc38831-c0bd-4282-9650-aba1b8cdaa23"
        },
        "item": {
          "id": "d9e42c73-41c7-4d9d-a7eb-4070d1889475",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1eb3df4a-726f-4ed3-9766-dfa79aa2ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee6dd68-d3c7-4050-a7c4-483fd254cda4",
        "cursor": {
          "ref": "89f8e616-095c-4ac9-9a1b-d05bee7e26ae",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "30043d64-e443-4d38-99d0-705488676ef9"
        },
        "item": {
          "id": "7ee6dd68-d3c7-4050-a7c4-483fd254cda4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a1bf7630-51da-451b-be6c-3c6cc31c1491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7903eecd-5f1e-415d-9a84-a14962393cd5",
        "cursor": {
          "ref": "c6a85020-77c7-4008-a0d3-b7d6eff349a5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "af33f246-d871-4ca3-8187-beccad9f5780"
        },
        "item": {
          "id": "7903eecd-5f1e-415d-9a84-a14962393cd5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d1ed8eea-0bd9-49c7-a3e9-8054fb023de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30534fc6-dacc-4c95-ae19-db08aec49599",
        "cursor": {
          "ref": "9856447f-2870-467c-9ca5-9a93100d5e7f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "925e2f7a-271e-4b3e-be73-623189acb723"
        },
        "item": {
          "id": "30534fc6-dacc-4c95-ae19-db08aec49599",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b769369f-29eb-4751-8204-a1afb356bd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d2e67-a457-47b5-a36e-25b8b3424ad1",
        "cursor": {
          "ref": "7444e06f-c860-482b-8007-30aa9c7bd90e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "258138d9-4e87-4b1c-b3fc-51c1193ac0ac"
        },
        "item": {
          "id": "6e3d2e67-a457-47b5-a36e-25b8b3424ad1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bbc90d93-5dfe-4432-ab31-ac492769a0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd01b07f-873b-46a6-abb1-782fa7d7ce5f",
        "cursor": {
          "ref": "1ff4de7e-ca44-40fc-a86c-2cd73c0d1ad3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9f7e43f7-04d4-45bc-a61b-63ecc9559d29"
        },
        "item": {
          "id": "bd01b07f-873b-46a6-abb1-782fa7d7ce5f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f8c3c50-e54c-460b-8500-7fa7f444affe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bb08f1-80e6-4a39-b18b-4825253023cb",
        "cursor": {
          "ref": "00b908e8-96e8-4c3a-82ed-cf9f38dac5c6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1d48615d-d845-4396-87d6-41c42ad62d4d"
        },
        "item": {
          "id": "89bb08f1-80e6-4a39-b18b-4825253023cb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a553747b-5ea1-47f8-97ea-6203050926a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f84d9a-1afa-4cc0-90f6-2474de0938e9",
        "cursor": {
          "ref": "4d158694-b90f-4d6b-8d0a-dcef1d2d9ae7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4cf8c9da-d121-4fe5-9a5c-1c80fcc74cc4"
        },
        "item": {
          "id": "c6f84d9a-1afa-4cc0-90f6-2474de0938e9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e0a096b2-da5c-4e11-bf01-bb3e7fefa4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182e8104-368b-4884-bc2e-d07d80fddcae",
        "cursor": {
          "ref": "554f6fc2-2559-42f7-8af5-58e2cec2e681",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "268cd9c6-4d89-4a8c-8c6b-46854b263c79"
        },
        "item": {
          "id": "182e8104-368b-4884-bc2e-d07d80fddcae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9400e37a-c882-4b1c-a54b-55b44cbfd9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62bef3d-1da1-433a-9d3a-bc13ac26547e",
        "cursor": {
          "ref": "e661c7f6-0a0b-4660-a8ba-7cf31f41e958",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2b940fd4-e1d8-4bc7-99c7-bf5663c78243"
        },
        "item": {
          "id": "d62bef3d-1da1-433a-9d3a-bc13ac26547e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9fd96077-1876-4cfd-9bdd-6b64f9abd17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807f7afa-fc3f-47c5-b90e-c55f71e59c18",
        "cursor": {
          "ref": "76730690-e74e-435d-918c-63db3c5a148f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1d7846e1-e1be-40b6-b0dc-119b23a3668f"
        },
        "item": {
          "id": "807f7afa-fc3f-47c5-b90e-c55f71e59c18",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2160edce-e12e-483d-a215-d5816a6fa8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5116686-7c8e-48d3-a10b-e56c8467d3c3",
        "cursor": {
          "ref": "67b2d40f-4e46-437c-bdfd-7764eaad5715",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f01c375-e366-489f-9405-52a488262ddb"
        },
        "item": {
          "id": "d5116686-7c8e-48d3-a10b-e56c8467d3c3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "204fe620-0665-48ae-8eba-87816caece76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65f2eb6-88da-4d94-bfaa-6f972186410b",
        "cursor": {
          "ref": "74de98f1-526d-472f-b4c9-e6a5ef8ad37c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "79cbdebb-6dda-4ce0-bfd8-3c93b1b93279"
        },
        "item": {
          "id": "a65f2eb6-88da-4d94-bfaa-6f972186410b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "574eac4b-5da1-4ad9-8a2d-1795f1b49afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ba977f-cd0f-43a0-b36a-02f029dac361",
        "cursor": {
          "ref": "d66e6001-d71f-4d4a-8f67-ef0a115958cc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c4d2468-b25d-4971-9eeb-5c54df688834"
        },
        "item": {
          "id": "a5ba977f-cd0f-43a0-b36a-02f029dac361",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "40c35f15-ada1-43df-8ebb-b8fb8c224eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb6ec66-5859-4e68-a921-ce682d725dc5",
        "cursor": {
          "ref": "38ad59fc-9779-42f3-81d7-f80a162cbbbb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "528adafe-be7b-447d-a101-efe6dba83c3f"
        },
        "item": {
          "id": "9bb6ec66-5859-4e68-a921-ce682d725dc5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "28b9bf2f-d28a-4df5-bf5f-ae003f6b6722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9176aa24-d382-4ac6-b56e-c6fac366d7db",
        "cursor": {
          "ref": "b9f865ea-06dc-4465-bc04-a5e238156bc1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "207ddd22-64b3-41c4-b2d1-be4a3ba13fc9"
        },
        "item": {
          "id": "9176aa24-d382-4ac6-b56e-c6fac366d7db",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "61f5f2cf-be90-4aae-af93-fa9e70a58bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f530f05-d428-44cf-8fb2-bb1a0d5774bb",
        "cursor": {
          "ref": "77956436-0e42-4c23-9411-00844dcc357f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5f69664d-aa47-4d82-902b-4561212b89ac"
        },
        "item": {
          "id": "9f530f05-d428-44cf-8fb2-bb1a0d5774bb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "785d4546-13f1-4b20-8008-64b8a38446de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2531e01-a740-4dc1-acc1-c58598bb7cce",
        "cursor": {
          "ref": "1f16320a-eab8-4ab2-acdf-12308cb2ff0d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7679f35d-923c-4d08-bd98-fc91ff2e024b"
        },
        "item": {
          "id": "c2531e01-a740-4dc1-acc1-c58598bb7cce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f431b267-eb4d-4bf8-80a8-26f3e9a5ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d5c0c0-d9d8-45ff-bbc6-1a956f40af0c",
        "cursor": {
          "ref": "b4ad4094-004a-4b7e-9adb-52648a4a26dd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "759e64ea-6926-4c0e-b282-b4827f1ac8da"
        },
        "item": {
          "id": "41d5c0c0-d9d8-45ff-bbc6-1a956f40af0c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ff956e85-e099-4405-acda-6173d2174afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da61ce9-3f97-493a-b390-23f4525b3b68",
        "cursor": {
          "ref": "d61d3d07-4a8d-48e1-96c6-0d62899335a7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ce1dc096-f284-40af-b5c2-eeca648aaf1a"
        },
        "item": {
          "id": "6da61ce9-3f97-493a-b390-23f4525b3b68",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e92d6fee-473b-46d7-a2ac-b371440bcf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8f3d45-bd12-4667-8d80-21fbb066dd52",
        "cursor": {
          "ref": "fc22978f-5794-4a79-bb81-1e5212fa279b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "02df622f-0767-4cd9-8758-b218f6fee9e8"
        },
        "item": {
          "id": "9a8f3d45-bd12-4667-8d80-21fbb066dd52",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b5806211-7538-4e3e-8889-5921010f0898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c010f4-83eb-4daf-91be-db7527537dbc",
        "cursor": {
          "ref": "19595dde-5cf7-4298-9bd0-0c69c55b560e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cc3dc9a0-9ca0-4c88-a1df-e25ad1998e76"
        },
        "item": {
          "id": "11c010f4-83eb-4daf-91be-db7527537dbc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a7b2271c-f390-489e-8b69-fc4f8e0632ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e58f24-ac2e-4710-a2d0-d64daa454418",
        "cursor": {
          "ref": "681780e1-65b2-427e-bbf4-c3537e0edcf8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad44d610-8f12-4ed5-bff1-567c74d8dbb0"
        },
        "item": {
          "id": "e0e58f24-ac2e-4710-a2d0-d64daa454418",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f8c70d8e-49db-4830-9659-7fe6c2f31bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e2313e-4d2f-4294-a877-b54936cf1fe4",
        "cursor": {
          "ref": "74878594-c57e-4b25-8566-33346c6a988a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9066e8de-9de4-4b59-aaf4-2ae087a5058c"
        },
        "item": {
          "id": "a9e2313e-4d2f-4294-a877-b54936cf1fe4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "356a691b-9776-4b42-9666-f870052d4077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca28055f-e95c-4b88-840a-98b61f8e548d",
        "cursor": {
          "ref": "0cf6bee4-0e1a-4e31-a248-9f778c973c3a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3c47b18e-0731-49e0-b7d9-79daa8497df8"
        },
        "item": {
          "id": "ca28055f-e95c-4b88-840a-98b61f8e548d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a832b4c7-c431-449a-a543-b454520ddf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fecf8c-0632-48bc-929a-31bef84e4278",
        "cursor": {
          "ref": "fd00a714-4ccf-4731-a225-0fb76ffe3ce8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f0898d46-18d8-4776-a892-7d13c2dea0b2"
        },
        "item": {
          "id": "f3fecf8c-0632-48bc-929a-31bef84e4278",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bc9916e9-9878-479f-9a9f-cae18ccd8ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9a0d9c-4265-411a-b8fe-ecd587506f97",
        "cursor": {
          "ref": "e6cf729d-ff4c-4409-a366-34f1a53c02bf",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c5e74815-b9ce-4bf1-a5de-da17d5cce9a0"
        },
        "item": {
          "id": "ba9a0d9c-4265-411a-b8fe-ecd587506f97",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "85c8c6bf-fdf1-47a2-9246-b873e93b7976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7dc5d5-9819-4fb4-b14f-7d2eaf95987c",
        "cursor": {
          "ref": "30042ba4-4979-44de-b6a4-20aea444e350",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cbea352e-db88-49de-bbf5-d85dff69975a"
        },
        "item": {
          "id": "0e7dc5d5-9819-4fb4-b14f-7d2eaf95987c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "72250eb0-fe35-4926-9b16-88a4a18bb98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c946ba7-859c-4b48-8df5-213da8086cfb",
        "cursor": {
          "ref": "33ec3efd-0208-45ab-b6a5-c7df0e27a9e5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "89becf30-79dd-4c9c-ac50-7709f5024d99"
        },
        "item": {
          "id": "2c946ba7-859c-4b48-8df5-213da8086cfb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "da1249c9-6ac3-4ea3-b750-f7e0c20dab9b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 85,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e530fb9c-0b24-4d6e-9189-a68ecbbd6365",
        "cursor": {
          "ref": "d1530358-787a-4436-8463-54350a13b3f0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dfcc8aaa-f1f1-4e40-9eb3-340628546d8e"
        },
        "item": {
          "id": "e530fb9c-0b24-4d6e-9189-a68ecbbd6365",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5d556c7c-aa99-4072-864d-3b34a6d9f426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9abf07-a4bd-4380-9672-abe9b273a8d1",
        "cursor": {
          "ref": "64345b89-c2c6-42be-9d81-1b3989755dbb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e14cf520-196e-4ddc-be3f-515a0cc6ee1e"
        },
        "item": {
          "id": "fa9abf07-a4bd-4380-9672-abe9b273a8d1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4097332f-f5f0-4192-8c19-44e22498d86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6288d253-5a6d-4eba-8d6a-d54033d84912",
        "cursor": {
          "ref": "5b823ac6-9f9d-46b0-ad68-8d0e79c0b325",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "beccac7b-0053-4790-97ef-3bf15fcf54af"
        },
        "item": {
          "id": "6288d253-5a6d-4eba-8d6a-d54033d84912",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a23ad433-bd5a-430b-86e6-0285d93bf201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1822055-48b3-400f-bf06-3ea2fc37220e",
        "cursor": {
          "ref": "45adb06e-ad8b-45ad-a0c2-2e4d18a5d54c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d2ebff5c-80bc-4b98-842b-31feceae5cba"
        },
        "item": {
          "id": "b1822055-48b3-400f-bf06-3ea2fc37220e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c5b762e-872f-4216-a28a-813452d0d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769c76ef-e0c6-4bf0-b9c1-00f9f38c1c04",
        "cursor": {
          "ref": "5d49b5d1-64e4-4017-a922-14d132e69def",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a6df5d24-b8f4-4ea3-a026-3e7ad760800e"
        },
        "item": {
          "id": "769c76ef-e0c6-4bf0-b9c1-00f9f38c1c04",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dd9922ce-1038-4a28-8c7a-88106f0c7ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0a1315-7ab7-4834-9568-276934c78ce3",
        "cursor": {
          "ref": "c3bc5aec-432e-4c5b-981b-b2ab4a174e5b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "31d3d376-13a0-4966-bdd4-3f0b6df2bf32"
        },
        "item": {
          "id": "2f0a1315-7ab7-4834-9568-276934c78ce3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "653c69d6-75a1-4eda-8c7f-ea4ba816d64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f574d3-2acf-4872-bc1f-fe8dffcb17bf",
        "cursor": {
          "ref": "708bf5c1-56f9-4668-88a9-05d817c6060b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1e579376-a337-4c08-92fa-b206c8a34823"
        },
        "item": {
          "id": "31f574d3-2acf-4872-bc1f-fe8dffcb17bf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cc7ed1eb-62e7-4b40-bcf8-18fd401c9192",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f74bd2-bf1d-49a2-a6c3-939b28d2e11d",
        "cursor": {
          "ref": "35114016-052f-4ed4-87f2-3fe014d964ce",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9450ed3f-afdf-4582-9a44-3d59d9e12373"
        },
        "item": {
          "id": "00f74bd2-bf1d-49a2-a6c3-939b28d2e11d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "22ab3b07-f96e-46a5-aaf2-22d9eb02e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2768fe-2e8b-4995-adc5-6c2d39b6b640",
        "cursor": {
          "ref": "435e0c94-856b-465c-a38f-34caa323920c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "40fa7fe5-9a66-4862-a094-f0cab84eb7be"
        },
        "item": {
          "id": "bf2768fe-2e8b-4995-adc5-6c2d39b6b640",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d7d856a9-58d7-464a-a775-115d9da03c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582e8de6-7ae2-4d36-af82-07db64328089",
        "cursor": {
          "ref": "3c8b5e55-018c-415f-9a3a-362263114aee",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d8dbca11-80a6-482d-9d94-f403bedc57d2"
        },
        "item": {
          "id": "582e8de6-7ae2-4d36-af82-07db64328089",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "269fa501-d7b1-4c03-83f7-d58ebb2210cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087163df-eee0-4cad-875b-24b775669a93",
        "cursor": {
          "ref": "0a35d091-2ed4-4e63-a6ea-153763939be8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6c5753af-850c-4e37-9af2-04d2b3190513"
        },
        "item": {
          "id": "087163df-eee0-4cad-875b-24b775669a93",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6bfcc435-247e-48ed-b541-913662e6d0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01c1a91-f09f-4090-b46e-b6e0bc638c3d",
        "cursor": {
          "ref": "196ce8bf-02cb-44d4-9586-5f8619a6bfa1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f0b91874-b8ef-4765-988d-66a03759cefa"
        },
        "item": {
          "id": "d01c1a91-f09f-4090-b46e-b6e0bc638c3d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "000564ad-b824-46e0-adff-e6163c291def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d59ceb-63a2-46fd-953d-6c2b0b09c2cf",
        "cursor": {
          "ref": "38e3cf72-5df5-43e4-aa9f-f03ca4e12f47",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "981bd533-7910-4bbf-bc49-b66ff0fd183d"
        },
        "item": {
          "id": "d0d59ceb-63a2-46fd-953d-6c2b0b09c2cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "40c0858f-b532-4b90-b8d4-acee73f0126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8500637c-255f-449b-a2e8-8dda31fb37cc",
        "cursor": {
          "ref": "eb62766a-9849-4e5b-97a9-a430bb64ca69",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b09f78d3-8231-4175-8bb2-4a6d6edda263"
        },
        "item": {
          "id": "8500637c-255f-449b-a2e8-8dda31fb37cc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "15133b05-2c78-4d58-a74b-3dc0b3baef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff4fa62-20b6-4b46-8516-13dfb6f58b83",
        "cursor": {
          "ref": "89f6adf2-e526-4b8c-a5fb-235bc645febc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2d872eda-4706-4da0-8ee1-def8b319e681"
        },
        "item": {
          "id": "1ff4fa62-20b6-4b46-8516-13dfb6f58b83",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "85cd65a6-0c60-4715-8235-b04992a9589d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc45794a-3e4a-475b-8706-d4d54a9c4895",
        "cursor": {
          "ref": "74c82a1a-2b54-431e-b416-a024db80ddb6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "776c95dc-5cf8-4463-96fd-403bde353b8a"
        },
        "item": {
          "id": "cc45794a-3e4a-475b-8706-d4d54a9c4895",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2c1467f0-88b8-433a-9d49-99de46643b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dc41ed-a2c5-426c-81a6-d343d61c828e",
        "cursor": {
          "ref": "37126279-313b-47c0-8a71-0998da020314",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ccea8bee-6814-4906-aac1-98e5e3341a05"
        },
        "item": {
          "id": "07dc41ed-a2c5-426c-81a6-d343d61c828e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f59dd981-18be-4c1a-982e-72e2f367152b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa91ba2-9580-436f-98c9-4ec07fcf993d",
        "cursor": {
          "ref": "9f0eee71-01e1-456d-8069-eaf96955f960",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ccdaccb1-43aa-4182-8696-d471e500feb6"
        },
        "item": {
          "id": "afa91ba2-9580-436f-98c9-4ec07fcf993d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "000ac474-bd4d-4c13-9bee-34b466880896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60462345-7236-4f9c-b06a-9d67aa4d4d2e",
        "cursor": {
          "ref": "dc965f94-0298-4bf0-8ad0-6388926aa997",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c7b73981-e442-4533-b591-c470231e3851"
        },
        "item": {
          "id": "60462345-7236-4f9c-b06a-9d67aa4d4d2e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "db0dc6bd-3437-49b5-8276-6626fb23969b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b1c47b-f7af-4fcd-94e3-36d2bf34f81b",
        "cursor": {
          "ref": "df090509-3e71-4485-962f-a2074f2e45f3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3ac9a8d6-7b1d-4711-9b4d-e5505d9986bf"
        },
        "item": {
          "id": "b5b1c47b-f7af-4fcd-94e3-36d2bf34f81b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c6ca521-34fd-42c4-8167-4210431ac9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8937772-6a83-49e3-a77e-277aaf57c6e2",
        "cursor": {
          "ref": "abb4a33e-25eb-4adc-8da5-177aa41312c5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "459da753-69ad-4515-8461-e8ae8d5aa8c6"
        },
        "item": {
          "id": "a8937772-6a83-49e3-a77e-277aaf57c6e2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a9c250ee-b488-40d4-9999-29c5eafe0da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc678e5-1634-437f-aa2c-2d913644d55b",
        "cursor": {
          "ref": "729a0e47-4cb0-4658-9d08-8289a934067f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57bd04bb-5909-4a67-998d-934291ef6e8a"
        },
        "item": {
          "id": "1bc678e5-1634-437f-aa2c-2d913644d55b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "04546ac8-4c4c-4817-a420-21698b02db75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de71aa1-f393-4749-bb7c-fff42524a21d",
        "cursor": {
          "ref": "fba8dcc8-06b1-4a4a-8f76-e1f6eb5a33de",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6cdf73da-65fe-42e9-a613-63e68e784ea5"
        },
        "item": {
          "id": "0de71aa1-f393-4749-bb7c-fff42524a21d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bd0a6ee5-b185-4c7e-8156-383852f74718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623234a2-e4c0-4135-a462-2ff60181c8e4",
        "cursor": {
          "ref": "d7523b63-ab98-4b14-a08c-58ba38b08c29",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d1e0d0ec-b445-4cf7-9d1b-f4d57192ec04"
        },
        "item": {
          "id": "623234a2-e4c0-4135-a462-2ff60181c8e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e6746f9c-c6d0-4d6e-a855-c2317127bc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa16343-7759-4582-9e6d-670ba26245f3",
        "cursor": {
          "ref": "21e4bfe9-abda-4367-9e7c-8b783160e809",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8cca7c64-78d4-402e-b47b-c96bd4c72781"
        },
        "item": {
          "id": "0fa16343-7759-4582-9e6d-670ba26245f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dfc8b9e5-6d40-4f91-a942-9c4f9ef7a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba07b02e-8c83-48e6-8560-59e10a61c1b5",
        "cursor": {
          "ref": "59da6cee-a899-44d3-922f-b663d9015916",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d9bf217c-fa79-4a9c-828b-503b47da91f3"
        },
        "item": {
          "id": "ba07b02e-8c83-48e6-8560-59e10a61c1b5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d685c2cd-892c-4768-b492-dab3585d3337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48a647b-ec4e-45e9-b028-ba1f9d9fe3dd",
        "cursor": {
          "ref": "d0a4773b-5b26-488a-9c73-0db74a86a661",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "db400c1b-75d7-4f6d-bbf1-e4ce574f9de8"
        },
        "item": {
          "id": "a48a647b-ec4e-45e9-b028-ba1f9d9fe3dd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eefb780a-3901-4e0c-9861-78508fe12822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf1cbb-b465-4e23-9ffe-ba1fbf765cb8",
        "cursor": {
          "ref": "26146b46-1960-4900-b48e-28dc95de1122",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "af31da0e-58c1-4a0f-8872-2cfef9f53f5b"
        },
        "item": {
          "id": "bdcf1cbb-b465-4e23-9ffe-ba1fbf765cb8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dbeb97a6-7f61-499f-80c3-fab1789a9473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db90c756-6c65-4e79-89bd-07d04137f509",
        "cursor": {
          "ref": "09c9d592-fd7f-434f-aa1d-5c6717ea971d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2bc9d9bc-36cd-439f-bb0a-1c3a07822fc5"
        },
        "item": {
          "id": "db90c756-6c65-4e79-89bd-07d04137f509",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f75ba274-90c1-467b-aa5a-3097e70318cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ab7d9d-6120-44ec-9bca-599e984ab06a",
        "cursor": {
          "ref": "b69ab702-46d0-469b-a06a-f1d5d76cbec6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "75969e70-da6c-4d68-b946-b7b2f0fbe5af"
        },
        "item": {
          "id": "23ab7d9d-6120-44ec-9bca-599e984ab06a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8d12913d-1cd8-446b-ab5d-b1bb52e44f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f02137-1556-4213-ac97-3ee190b5897b",
        "cursor": {
          "ref": "6d0ed94e-9f03-4350-a4d7-a32ad034fc8a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "520cd210-b240-40c1-8ae1-f371288f8111"
        },
        "item": {
          "id": "57f02137-1556-4213-ac97-3ee190b5897b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "083bf8fe-9ad3-4f79-b7e9-057751ca228b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a91be0-e547-40e3-88fa-3db0fa77ec55",
        "cursor": {
          "ref": "045b82fa-b17d-40fd-b169-aa84c954fb4f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "582371f2-e2e9-4a17-a529-86e6a134ef5a"
        },
        "item": {
          "id": "69a91be0-e547-40e3-88fa-3db0fa77ec55",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "37cbb81f-9013-4109-ad20-e675d7426c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec2025c-2a6d-4183-a38c-933ac2de9223",
        "cursor": {
          "ref": "1a0c3231-110e-49c7-949e-6152f7dfc27f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a8c02edb-0f7f-4333-a105-603526d7fde1"
        },
        "item": {
          "id": "eec2025c-2a6d-4183-a38c-933ac2de9223",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "502ccd5e-27f9-493a-9677-ab1957bc323e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5ff3df-b6ec-49a0-b1c4-ee9985fcdc44",
        "cursor": {
          "ref": "2692fa4c-2ed8-40be-a5b6-968567195c95",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "59fd7db3-f081-4425-a290-944d74391b06"
        },
        "item": {
          "id": "ed5ff3df-b6ec-49a0-b1c4-ee9985fcdc44",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "40046548-fdb1-4078-a1ed-4766b5a98064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e0ae25-c34a-4424-8944-9de22a561086",
        "cursor": {
          "ref": "002b3142-c4ee-4a3a-ac79-6142b40afab2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4177794b-e1c1-4a05-8347-14f0f41eef97"
        },
        "item": {
          "id": "40e0ae25-c34a-4424-8944-9de22a561086",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f126b54e-2aa2-4640-ba05-1e52fa6abe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88dde5-edf6-432b-976c-3f47eb5e0fea",
        "cursor": {
          "ref": "941b54a5-738b-496e-adb4-e7e72da757de",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2246e9a0-ebf7-471e-88ec-bd1837ff907b"
        },
        "item": {
          "id": "6c88dde5-edf6-432b-976c-3f47eb5e0fea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f4e8f3c4-584d-47d8-a775-b63a0c555d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e33c1-59d1-4c88-bf8a-a20d56d8a218",
        "cursor": {
          "ref": "595eeef8-b21a-40bf-9430-c5d18de940c4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "06a82f14-b452-47c5-b3a4-12515f7d333e"
        },
        "item": {
          "id": "4c9e33c1-59d1-4c88-bf8a-a20d56d8a218",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6aa0be7b-9d4c-41bf-a5ce-447dd5dc79f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112db19a-8ef0-49ab-b62e-c904b4be9fd2",
        "cursor": {
          "ref": "478d9cc8-451c-47ff-ab90-c61125878000",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c9dcd2c5-f365-4f95-bddd-2a6f7f49fef8"
        },
        "item": {
          "id": "112db19a-8ef0-49ab-b62e-c904b4be9fd2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b6536baf-7819-451c-9f0b-b38838085ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef105d18-d2e9-4c3f-9a02-a9ffb5d4b90f",
        "cursor": {
          "ref": "024d0892-7750-4e33-945f-50f775186785",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "61c41933-6045-47f2-9a0d-6680c2b7e9ed"
        },
        "item": {
          "id": "ef105d18-d2e9-4c3f-9a02-a9ffb5d4b90f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "87423772-216a-48c4-83d8-9d85418730e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d69e12-329e-4fa0-9acf-79559989767d",
        "cursor": {
          "ref": "3f08b4d6-75da-4e35-ba94-f06a5d0c84c5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b1a6eb69-af99-44bf-8d95-bc8c301a0f7b"
        },
        "item": {
          "id": "98d69e12-329e-4fa0-9acf-79559989767d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3da8f3c6-766f-418b-87b5-2b4df8a70419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176cdaff-521b-4752-96ef-a95776a5f4ca",
        "cursor": {
          "ref": "fa2bdf89-5ed7-4b97-912c-ba3a8ccbebc4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "85045abf-4791-49d5-b0fa-aca6c3a02128"
        },
        "item": {
          "id": "176cdaff-521b-4752-96ef-a95776a5f4ca",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "66d51f19-81fb-4c34-b050-022718d4dff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15456377-9c2c-4852-ba29-e09961fcef5b",
        "cursor": {
          "ref": "10240dfb-96aa-4c96-9c4c-0bc614a44c7a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "77714326-d891-446d-b265-e5bd2c898a63"
        },
        "item": {
          "id": "15456377-9c2c-4852-ba29-e09961fcef5b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "79529075-6619-44e5-b633-109f49f65615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932ce468-deac-49bc-88e3-4cbfde66107a",
        "cursor": {
          "ref": "ce891cd2-5863-4b22-8dcd-f5fbe437ef00",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d4d3394f-b75b-423a-a4c6-4c361e824a50"
        },
        "item": {
          "id": "932ce468-deac-49bc-88e3-4cbfde66107a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c19f703e-3719-4ab3-843d-45a8d2e6efab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b558cd3-ab6f-48ac-a685-fb628619ad07",
        "cursor": {
          "ref": "bd289214-c62c-43b0-9d51-15d40b3c6fd6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "76c9e8c2-e4bb-4659-8402-b9f73b353715"
        },
        "item": {
          "id": "7b558cd3-ab6f-48ac-a685-fb628619ad07",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4b8fbf6d-b819-4659-a2c2-2b9363b07d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91299f79-ec8c-420e-8b0e-83962c2066e7",
        "cursor": {
          "ref": "7ed48f1d-bed2-4f01-ae54-de1b637c18b2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "da8a4630-7779-405f-8036-27cd22d75b96"
        },
        "item": {
          "id": "91299f79-ec8c-420e-8b0e-83962c2066e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a93cca94-ee62-4e98-ae68-8c6c2c9420a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34580c47-0f1b-45a9-aca5-57f9e80daafd",
        "cursor": {
          "ref": "2ee830fd-7c6b-4fae-bcd3-6014b9782ecd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "69f968ba-a58c-4c20-b6cd-0fcf42a54846"
        },
        "item": {
          "id": "34580c47-0f1b-45a9-aca5-57f9e80daafd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cbe437ae-de74-44ec-b69d-1402ba96a6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd26e5f-3a07-4249-80cf-80350dc2dbe6",
        "cursor": {
          "ref": "9312e032-2054-4991-9bec-a42c3269598d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2db232d1-0b59-40e8-b28d-fe87ad90b028"
        },
        "item": {
          "id": "5dd26e5f-3a07-4249-80cf-80350dc2dbe6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2d753beb-969f-47d1-b3db-a06ef433ad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a48147-b159-4401-a776-206fe8dbffa4",
        "cursor": {
          "ref": "6b6b6921-94c7-40d1-86f6-4a71a5e9be42",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be1f3cc6-5945-477c-946c-8ca8f8abd80b"
        },
        "item": {
          "id": "74a48147-b159-4401-a776-206fe8dbffa4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6c417bb5-fef2-47f9-9834-7a024cc89bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f696a924-e511-49f6-a10f-861234e3ef6f",
        "cursor": {
          "ref": "fd2d91df-c6d9-4cd5-9ad4-0904ece11ac3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8e35ebb1-c93e-4372-a6f5-8006c067af17"
        },
        "item": {
          "id": "f696a924-e511-49f6-a10f-861234e3ef6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a1ecf17e-2fbc-4edd-9dba-60390871a06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1358cd7c-9198-43de-b46b-e54c06c78091",
        "cursor": {
          "ref": "f6a60bae-9279-4471-8d2d-52a8ae71a796",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2e81409a-56a7-4845-b619-af8d9b16b455"
        },
        "item": {
          "id": "1358cd7c-9198-43de-b46b-e54c06c78091",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3f498637-b64a-4559-98d7-13ccabff97f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6cf05d-4678-4b74-ba69-27fc84d2a2fb",
        "cursor": {
          "ref": "9391cfcb-4ef3-4632-a3c6-04239830be9b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "354ad5df-d623-4db7-956f-429859de6868"
        },
        "item": {
          "id": "cd6cf05d-4678-4b74-ba69-27fc84d2a2fb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bbf5afc6-ca80-45ab-9f33-1480dc6831c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a63d91-ffd8-4a3e-a32b-b0d30f0c951a",
        "cursor": {
          "ref": "cb744e39-5b31-49a5-b75c-c48731e46aca",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "530557e0-609c-4b98-a75d-c5adf36c5614"
        },
        "item": {
          "id": "e4a63d91-ffd8-4a3e-a32b-b0d30f0c951a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4af5e975-b08b-414f-b8f8-75a024bcc207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7902e3-f30b-4c2f-aa6c-9f3d62840131",
        "cursor": {
          "ref": "154817a3-19e2-49f6-928c-7fc019f4bd13",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f9e1a771-30ce-441f-965c-8df25a0ebde6"
        },
        "item": {
          "id": "7b7902e3-f30b-4c2f-aa6c-9f3d62840131",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c51db9e0-77a7-407d-875a-3781b2b792d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7417d24a-96ca-4645-b187-1db5a13dfd16",
        "cursor": {
          "ref": "704dc90c-16dc-4e9c-a648-a8c0b4b50330",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "69b03f25-ef28-4c45-85de-c2735c993b32"
        },
        "item": {
          "id": "7417d24a-96ca-4645-b187-1db5a13dfd16",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bf544ff2-021b-4f40-a6ee-5e24f7834050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1c45f9-1f0c-4a1e-a7e0-2da8df1c52fd",
        "cursor": {
          "ref": "5cf1b54e-3572-498e-adc0-218c8232d668",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bee6ce37-2deb-4915-b223-3034a11eca72"
        },
        "item": {
          "id": "7f1c45f9-1f0c-4a1e-a7e0-2da8df1c52fd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7c8b284f-0fdf-4d1e-803a-d70bc0557705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5f7421-d910-4690-8d48-73f18fb045d7",
        "cursor": {
          "ref": "42300e3e-7909-4200-a666-2976a4778c76",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e1017c8c-64cb-4d4a-aa3a-e2f4e5d287d0"
        },
        "item": {
          "id": "af5f7421-d910-4690-8d48-73f18fb045d7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3a5165b4-931d-42d9-85ea-e284e51efc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3fbe1-1bfa-4d56-802f-b25d561a9968",
        "cursor": {
          "ref": "32447f28-08bb-45ae-b405-550735291bf8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd764d11-61ab-4388-bf3b-235d7e962462"
        },
        "item": {
          "id": "3ad3fbe1-1bfa-4d56-802f-b25d561a9968",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c2c2b9e5-9876-4027-a810-8b4a64cb7198",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91793e93-8e05-464e-92d0-8df92c5174aa",
        "cursor": {
          "ref": "1880ddec-0b5d-4b58-af54-c65e3f829379",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3ee054dd-eb21-4fa1-9721-7a8b7a626ead"
        },
        "item": {
          "id": "91793e93-8e05-464e-92d0-8df92c5174aa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "87fcf75f-3633-4bf0-ae05-89d341b7e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8b7219ad-249f-480f-b893-3e4ae50ae7be",
        "cursor": {
          "ref": "3ca78bad-4660-47f7-b0bb-0f7f46c5a73f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "290cd7a5-9644-41d1-beea-9e12e477d952"
        },
        "item": {
          "id": "8b7219ad-249f-480f-b893-3e4ae50ae7be",
          "name": "credentials_issue"
        },
        "response": {
          "id": "90279a0b-b247-4494-aa59-98ff6361a022",
          "status": "Created",
          "code": 201,
          "responseTime": 12734,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d0cc1f-6624-4cc8-93cc-1f879b69aba3",
        "cursor": {
          "ref": "50f996db-2f07-4ab3-ab17-fbbeb20f6cbf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b3599859-7d1f-4621-897a-9b8ab380eb1d"
        },
        "item": {
          "id": "21d0cc1f-6624-4cc8-93cc-1f879b69aba3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ce5e1b50-7a09-4778-bd48-c50bdbe894ad",
          "status": "Created",
          "code": 201,
          "responseTime": 12141,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c735b58-c682-4d47-b024-dfccecb80d1e",
        "cursor": {
          "ref": "e4cfaab6-e234-4c4e-b9bc-b28cc28ea70b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4fd12042-4f48-4b39-a0ba-f0012a0cb8bb"
        },
        "item": {
          "id": "5c735b58-c682-4d47-b024-dfccecb80d1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "db866791-7e4b-45e9-8747-679429ad6ed4",
          "status": "Created",
          "code": 201,
          "responseTime": 12219,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f912daa-01ab-42bf-af5b-570b9f701980",
        "cursor": {
          "ref": "059a81a6-9599-4e99-898f-0e3d570ae3ee",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "21da7aa6-6c80-4751-a8bf-1d7c154d327f"
        },
        "item": {
          "id": "6f912daa-01ab-42bf-af5b-570b9f701980",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "46b0aec2-3589-49c5-a0aa-d6b3b7341704",
          "status": "Created",
          "code": 201,
          "responseTime": 11852,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8a0194-e0e4-4d53-8ce6-ea9c81ed2ba0",
        "cursor": {
          "ref": "ba6ab4d7-3ee9-4d2e-92f5-f1d11374b901",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "150ffd57-362c-4182-a9eb-e57080590e71"
        },
        "item": {
          "id": "ec8a0194-e0e4-4d53-8ce6-ea9c81ed2ba0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4ecc989a-e03a-4fec-bc92-ea23fef492ac",
          "status": "Created",
          "code": 201,
          "responseTime": 12467,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-31T00:43:29Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-31T00:43:29Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9d31f8dc-b7ef-404e-a003-c2f15a6549bf",
        "cursor": {
          "ref": "1a14cc58-c550-4c20-9423-a8e9f33a02aa",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7c1fd202-0aaf-4bc7-861a-bb8be9fc5888"
        },
        "item": {
          "id": "9d31f8dc-b7ef-404e-a003-c2f15a6549bf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "35473e9c-f74a-46db-8868-5e737cf94d01",
          "status": "Created",
          "code": 201,
          "responseTime": 11649,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693329bd-a70e-4ebc-ad7e-32d8e135b8c0",
        "cursor": {
          "ref": "af717baa-cc42-42c7-ab07-0ab49bbc09fa",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6a7971b4-6b5d-45d7-af85-374317159700"
        },
        "item": {
          "id": "693329bd-a70e-4ebc-ad7e-32d8e135b8c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b7822b9-c943-4534-bd2e-4eafe78b6ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37eda07-a569-48bf-bfcc-8c47c1accb28",
        "cursor": {
          "ref": "f727d05e-8cb7-4c03-9f1d-95fe0857d6d5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4b23ac00-305f-4b94-b909-a8c12f39f640"
        },
        "item": {
          "id": "b37eda07-a569-48bf-bfcc-8c47c1accb28",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b6cf2159-6145-494b-85a0-5ee7dc579f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec3a759-a257-454e-b454-22ba918c21d8",
        "cursor": {
          "ref": "5a1d9b66-e7e2-4590-a9eb-c3c750893d41",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "721c52b5-008d-4652-888c-c27f2a948ea2"
        },
        "item": {
          "id": "cec3a759-a257-454e-b454-22ba918c21d8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d7818940-165d-4f88-8e05-766095c74972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83fe5a4-d4ca-45ed-a464-861324ba9de6",
        "cursor": {
          "ref": "257c15bf-6ee0-4bd6-9b01-8e62ec05f1ee",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3b59e399-2401-4a78-991e-1aa1d297da4b"
        },
        "item": {
          "id": "b83fe5a4-d4ca-45ed-a464-861324ba9de6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a7210ad-f748-49a1-9e0d-8009e8c5ca39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ced894-2880-49cf-afd5-50c5b6e57460",
        "cursor": {
          "ref": "ca763fbb-b8cf-43ba-b25a-f5f1ed5f8da8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4ab742f-7202-48b8-92cd-f9ca8f018aa4"
        },
        "item": {
          "id": "82ced894-2880-49cf-afd5-50c5b6e57460",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b09076e-7017-4f56-b586-ff86c0049e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f96b3bb-2f87-480f-b868-b50ff71d6049",
        "cursor": {
          "ref": "2bc329da-1563-422a-a6f7-b778f70dee00",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "da57ab1d-83a9-4fa8-a64b-42c22aa5044a"
        },
        "item": {
          "id": "9f96b3bb-2f87-480f-b868-b50ff71d6049",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3f2d4bd4-5756-4138-adc8-e932d53f15c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f6ad63-5971-45f1-ae25-58788e2b4cdb",
        "cursor": {
          "ref": "890670d9-0fc9-4a72-b529-3e09d59ae801",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "279cfe43-878c-456c-a981-280c2bd409a6"
        },
        "item": {
          "id": "b9f6ad63-5971-45f1-ae25-58788e2b4cdb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36dae201-76b7-4b32-a92e-fa7680cf148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148d9a75-c59a-405d-a1f5-1520dcd1b7ea",
        "cursor": {
          "ref": "2a220205-e2da-4e38-9e33-6cd10e545e61",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5bd9dce9-aaea-45ba-a568-88c513536277"
        },
        "item": {
          "id": "148d9a75-c59a-405d-a1f5-1520dcd1b7ea",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b9b1c04-1b2f-41f5-acfc-7d3a3c1cef4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8434bab-f68e-4005-9a20-206e2bfdca3d",
        "cursor": {
          "ref": "2bf532db-ab05-469b-9cbd-4222980436bd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2303406c-33c4-4e0e-9b24-ab27c4bcb22b"
        },
        "item": {
          "id": "e8434bab-f68e-4005-9a20-206e2bfdca3d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b270dfad-ed3c-48c1-974e-7fd8badd2924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d8905a-5609-4570-96ff-7fa115dc5226",
        "cursor": {
          "ref": "2315d42d-229d-4c11-9db8-ecc878042841",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3e6f90d2-d289-4942-9ab7-71387b14076f"
        },
        "item": {
          "id": "33d8905a-5609-4570-96ff-7fa115dc5226",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "968d6177-0284-417a-98b9-fa7ee3a4de65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dadb46-1996-4675-933d-d0316a09f1fa",
        "cursor": {
          "ref": "9e8c76c2-3242-45ef-ac85-06eba7ead713",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1f7cb8b1-f27b-4141-91a7-ae570b7d4208"
        },
        "item": {
          "id": "f4dadb46-1996-4675-933d-d0316a09f1fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1e24722-3594-4fef-a717-8a0063a68687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59a07bc-0502-4c4c-b74a-26b0ab9c11f6",
        "cursor": {
          "ref": "6c6935cc-a32f-4424-842c-c1d44114f991",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d9ef139d-e75b-4fdc-80b6-92843bea57b5"
        },
        "item": {
          "id": "d59a07bc-0502-4c4c-b74a-26b0ab9c11f6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "baa7d108-37a6-4969-ba64-d60e749ab1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195f936a-a1dc-47c2-94e6-b5d9f5e69420",
        "cursor": {
          "ref": "774acace-7a8b-40d8-abce-9cdfd944a0f6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e935cbfd-3668-4d83-9314-5e1c239beba1"
        },
        "item": {
          "id": "195f936a-a1dc-47c2-94e6-b5d9f5e69420",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33201ab9-bd32-4339-ad4c-b5012826382c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0be28ab-20af-4a93-bdb9-0fe781d42ba7",
        "cursor": {
          "ref": "984696cf-516a-4482-82af-bb468e806fa4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "28077810-c58f-4a42-9328-f602112db1b0"
        },
        "item": {
          "id": "c0be28ab-20af-4a93-bdb9-0fe781d42ba7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "da2d4535-17e7-4925-857f-c2380d96e974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c71ccc-62e2-46a1-9b79-14607f94dd70",
        "cursor": {
          "ref": "48a7465f-103b-4f4a-9a9b-4d76e639a2b7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cfa78519-c229-4a7c-a1dd-b9a831708829"
        },
        "item": {
          "id": "04c71ccc-62e2-46a1-9b79-14607f94dd70",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a5ebddc-9e86-4d3d-8865-a4843f815a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daefdfe-fb17-43c2-b6af-a41b40661ea2",
        "cursor": {
          "ref": "de119cfb-f0da-4c8a-a482-6c0a996f6c1c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2f99c1a1-f57b-4182-8b17-787f8c95f912"
        },
        "item": {
          "id": "3daefdfe-fb17-43c2-b6af-a41b40661ea2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e20f554-3d5d-4943-88f3-12ab5f335b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57407b4a-7cd2-41bf-877b-2c7db4e5708a",
        "cursor": {
          "ref": "60cddc5c-0229-418d-9b45-ac241f51245a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c0d9347-2dc4-4296-8c57-0f35be8d2215"
        },
        "item": {
          "id": "57407b4a-7cd2-41bf-877b-2c7db4e5708a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "436632c2-10a6-45e6-902e-d0e2eff3de2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f667098d-8461-4ead-9243-b032c4230c67",
        "cursor": {
          "ref": "5f6ef969-b3c5-4c25-8871-a4e161d88464",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "076c1303-45c4-4777-94d8-87cf2f12bead"
        },
        "item": {
          "id": "f667098d-8461-4ead-9243-b032c4230c67",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f84601b-9d26-477e-808c-39cb961933df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97a3981-ad50-4504-845d-7619f899f3bc",
        "cursor": {
          "ref": "0da09584-7884-491c-b54b-be94b94535c1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "da36216a-ade0-4ae7-a47e-070320e3fa01"
        },
        "item": {
          "id": "b97a3981-ad50-4504-845d-7619f899f3bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "62d0bebf-4dbb-4e2a-947c-c912b2e13df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3c2160-16c4-4a58-81e2-cd23d1fa80f1",
        "cursor": {
          "ref": "bd50c79b-89bc-4c84-ade3-b9bddf65ab3a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "22d69c91-10a3-48ee-84a0-ab3b70118b0f"
        },
        "item": {
          "id": "af3c2160-16c4-4a58-81e2-cd23d1fa80f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "edde4162-e14c-47d2-a87f-b5dd57c39824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d7653-443f-48c4-82b0-ae55c31e89f8",
        "cursor": {
          "ref": "4e7b6d97-317f-4422-83a0-660aee9530c0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "736c2b60-6a70-4b35-93fd-aa697ba5a55c"
        },
        "item": {
          "id": "d71d7653-443f-48c4-82b0-ae55c31e89f8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7c826da1-1312-483a-b2a9-e0c8ded4238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a956fb-37ce-4be5-900a-24eff79e2bc4",
        "cursor": {
          "ref": "e13ff4b1-50b0-4c82-8e86-2090b97f02bb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "90fa9cbc-3fe2-4c4d-a396-8f948634235e"
        },
        "item": {
          "id": "30a956fb-37ce-4be5-900a-24eff79e2bc4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0caba2b3-c0fb-41e6-b9b1-c8c476fac76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c226739-181c-48a5-b108-538448c8de0a",
        "cursor": {
          "ref": "b664eee9-ef9c-49de-9dc7-f7b75eb3dace",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f5b53846-02ff-4a1b-b452-0d3c007dd2c5"
        },
        "item": {
          "id": "8c226739-181c-48a5-b108-538448c8de0a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72774238-c084-4a68-8310-25b0bc56fe2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80274f2b-de14-496d-8348-cef3eba76035",
        "cursor": {
          "ref": "f47c1168-9736-4445-9e25-26d677673908",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ebeb7e1d-3bc7-4e0d-b2e4-552732ab46d4"
        },
        "item": {
          "id": "80274f2b-de14-496d-8348-cef3eba76035",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ac30e93-cfaf-43a4-8be9-0c4cd128c744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0d328f-edc9-452f-8283-505f8955dad8",
        "cursor": {
          "ref": "3f46c7e1-2993-48d3-a4d4-34192ceef13e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "997a8c7e-a98b-48d5-a157-fe5404b8b3ad"
        },
        "item": {
          "id": "eb0d328f-edc9-452f-8283-505f8955dad8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d50d9972-be02-48d1-a754-0c268f8408bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e163021-2017-4704-b3b0-de8c9c2cc93c",
        "cursor": {
          "ref": "2d016550-b693-47e0-bb85-e68ea497b535",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "34396161-e920-439e-90e3-7d6e1dfb1059"
        },
        "item": {
          "id": "1e163021-2017-4704-b3b0-de8c9c2cc93c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "337c021f-66d7-41ad-bb5c-9cf44455e6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8758a202-6178-4291-8c36-ac68dd5cacb3",
        "cursor": {
          "ref": "b782c206-a020-44c9-864b-2ed85a23a825",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a5a9644-7de7-4046-b44f-e97d8b952b2a"
        },
        "item": {
          "id": "8758a202-6178-4291-8c36-ac68dd5cacb3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2aa9603e-c73d-49d5-8323-5de28bb4059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffb5623-7798-4c45-a7a4-6f56366dfb45",
        "cursor": {
          "ref": "b5216eeb-b815-4898-a706-a05daf217aff",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bd04997f-6ad4-4104-8757-aa8ddb53804a"
        },
        "item": {
          "id": "dffb5623-7798-4c45-a7a4-6f56366dfb45",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "98020fca-52d7-46f3-91d9-b194e6aeb6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a94e85-d473-438c-8280-cfdeabf1cdc7",
        "cursor": {
          "ref": "076713a2-d6e5-4529-9eaf-c44e06d6eea0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a2e95998-4b6c-49fd-9a92-11dfd42de7ac"
        },
        "item": {
          "id": "a2a94e85-d473-438c-8280-cfdeabf1cdc7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "139ef5c4-d2b7-455f-baf6-37dee2396129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd33ad4-921b-432b-81e9-f3ce7cd768c1",
        "cursor": {
          "ref": "31d424ae-a355-4bf9-9417-345b43be8770",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a25f4105-606a-42be-bc8d-00f26a4a1522"
        },
        "item": {
          "id": "edd33ad4-921b-432b-81e9-f3ce7cd768c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "acc29b51-5148-40d6-82a0-6470a219d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a056c9f1-0f59-48f3-a2aa-69ace8e82a34",
        "cursor": {
          "ref": "ccf27aa5-5bcf-46ad-9722-173d7415715b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "522a2c14-b6d6-4842-9af5-732ddda08de2"
        },
        "item": {
          "id": "a056c9f1-0f59-48f3-a2aa-69ace8e82a34",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1309b875-4630-4473-a3a8-88ca3d7de9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8ebd48-88b3-4543-927b-5d6419846763",
        "cursor": {
          "ref": "3a58ee37-ec59-435c-9d39-ee3cb37b5aa3",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "501cddcd-4760-407a-8e86-ce90b103d8ab"
        },
        "item": {
          "id": "6d8ebd48-88b3-4543-927b-5d6419846763",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5457c76c-dcea-48e9-becf-2d76a14ebbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14597f0c-f368-4fca-91ab-2ec36f232ef3",
        "cursor": {
          "ref": "1c3a7872-0e8f-4139-99e8-c3bf25fcfec4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e187b98b-c6e1-4e83-847c-8c3bcbfa0d3e"
        },
        "item": {
          "id": "14597f0c-f368-4fca-91ab-2ec36f232ef3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "320647d7-fa84-4cb6-887e-9411985af428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16807391-7f64-4345-8e24-15c0feb6cef2",
        "cursor": {
          "ref": "e44926bb-4e79-4fca-9d7e-3167af27893b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "54976c44-d951-4751-ac65-c31a0d821c4f"
        },
        "item": {
          "id": "16807391-7f64-4345-8e24-15c0feb6cef2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8a35f2f5-4da1-4643-87b5-0a64392d10c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c10085-5334-469e-aaf8-9c3599bf874a",
        "cursor": {
          "ref": "8dfd4208-4f0b-4d92-a430-b86b43dcedd3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fc114ace-475e-4059-9f5c-18d803b5e739"
        },
        "item": {
          "id": "d6c10085-5334-469e-aaf8-9c3599bf874a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ed0f1999-8059-4307-9b3a-8e79deacf3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7310ee80-1351-47c3-8e22-7e9d4460fc4a",
        "cursor": {
          "ref": "f030abda-ab94-43d1-b6fb-41130ecb515d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6c0754ee-01bb-4f91-a25d-7320dbda5cd6"
        },
        "item": {
          "id": "7310ee80-1351-47c3-8e22-7e9d4460fc4a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0547e7fc-237c-4752-94d9-83f4479546f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff295b80-2010-4646-b411-ad0b015878cf",
        "cursor": {
          "ref": "b4daf3e0-05c3-46d8-ae66-da86c95e0b37",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8a62cf07-497a-4e2f-abfa-a944573d98b1"
        },
        "item": {
          "id": "ff295b80-2010-4646-b411-ad0b015878cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3674fea7-da57-44c4-bdd0-9734df457f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39663b5b-1a0e-441b-a97b-dbf10eec351e",
        "cursor": {
          "ref": "64d4070c-7a49-4a31-8caf-79a23a5e7126",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2daaaa42-05b4-4c02-aa44-49a39fb734de"
        },
        "item": {
          "id": "39663b5b-1a0e-441b-a97b-dbf10eec351e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7ac5714c-9e94-4d8a-b6d5-842bd0b5a923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3963f735-f899-4935-80b1-7b4e693cbd00",
        "cursor": {
          "ref": "ce536468-bd2c-4a1c-a15e-676b8ebc9e3c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6fbce483-b748-4af1-9109-697b90f71105"
        },
        "item": {
          "id": "3963f735-f899-4935-80b1-7b4e693cbd00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b311d8e-e351-4eba-84de-a7a81db6b580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e7cae5-3395-4f16-9404-5e32051bb75c",
        "cursor": {
          "ref": "d946250f-5fd8-437b-aa34-d552c9ab81d4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0fe32d1a-0f6c-4dd1-9551-ba17910aed33"
        },
        "item": {
          "id": "b1e7cae5-3395-4f16-9404-5e32051bb75c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3f895519-1605-42d7-a1f8-89c3c8b7f992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28fe9a-8548-4d8d-8875-825997c9e121",
        "cursor": {
          "ref": "abe26291-92cc-4749-9f39-ac2cc63381e8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5c1e0a6d-0d1e-4693-b945-868b1c222227"
        },
        "item": {
          "id": "7e28fe9a-8548-4d8d-8875-825997c9e121",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8c36e963-f90f-49b2-b6d4-e36cd8f62995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065dacc-4ec3-4fb0-9a53-e093cdc1497f",
        "cursor": {
          "ref": "6369321c-fae9-4420-b4b8-ae71e8a9bd55",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "32b3e53a-5a76-4649-9b64-2caf66f44fc9"
        },
        "item": {
          "id": "b065dacc-4ec3-4fb0-9a53-e093cdc1497f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0574c27e-dd09-4024-821a-da79065c97fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec51367-8da0-4766-a408-940c4b8c5f60",
        "cursor": {
          "ref": "20405ca5-4449-4b21-9095-01c1f5610664",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b4c7b6f4-18b2-4ea2-ad04-bf20495a0595"
        },
        "item": {
          "id": "8ec51367-8da0-4766-a408-940c4b8c5f60",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "abf7e987-db0b-4fd2-8629-ac4463faa1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0ac2e4-9f15-4083-8532-a2e70ab8eb5c",
        "cursor": {
          "ref": "b6d509da-f9b9-4de7-823e-124f495c2f28",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1e5394fe-360f-4a67-b0aa-51b045e1b79b"
        },
        "item": {
          "id": "3b0ac2e4-9f15-4083-8532-a2e70ab8eb5c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ec71a4dc-a672-4f23-8062-c0f35f3d83e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2398d9b9-0bb4-455d-b764-729bb86a36a4",
        "cursor": {
          "ref": "1663f4b6-56a2-448e-8e08-9f461854b799",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d5b2deaa-41d4-4f62-a92b-7d185be8be63"
        },
        "item": {
          "id": "2398d9b9-0bb4-455d-b764-729bb86a36a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6a6b8543-b15d-4047-8357-0f1be60478aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28e3719-5882-4186-84c7-c62f71b7cada",
        "cursor": {
          "ref": "0b42060b-5ba6-4af9-898f-908059461fe5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c599ee8-5429-4eb2-957e-ca8e4e27e3dd"
        },
        "item": {
          "id": "e28e3719-5882-4186-84c7-c62f71b7cada",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "920c8aa5-c54c-435c-9d99-b8a7421d5d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f40cdc9-1a18-401d-bca7-abe5779bcc9f",
        "cursor": {
          "ref": "3bac0858-514f-4290-bd76-e5f287721e20",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ffc9cab7-e043-41d3-a782-fb801d7c10cc"
        },
        "item": {
          "id": "1f40cdc9-1a18-401d-bca7-abe5779bcc9f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6bb431d9-9bc4-41fb-aed8-1fadb24f03f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dc2f83-59a4-44a5-81a7-7f83e0fa63b4",
        "cursor": {
          "ref": "08e602d6-01b2-4e73-be65-fe2b4ef43891",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c26db7fd-df03-4a89-aa21-6078cf3ccef7"
        },
        "item": {
          "id": "01dc2f83-59a4-44a5-81a7-7f83e0fa63b4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "74c587e8-0a45-47cf-8ef3-69440472109c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cecdc4-9a90-41bb-8168-248f9e5861ec",
        "cursor": {
          "ref": "5634274b-9b9a-49fc-9733-affc543bff64",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c3fca4b3-4846-4565-9fcc-1492350910be"
        },
        "item": {
          "id": "e5cecdc4-9a90-41bb-8168-248f9e5861ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ac25b61d-3f4e-484a-b9e1-ad8e22d8ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d568504-aa2b-43ab-8530-ebfedeead640",
        "cursor": {
          "ref": "d70a1a29-17b5-4eb5-b378-ad34f2e9dc73",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc4d233f-6a12-4152-aa34-381a44fcc4f5"
        },
        "item": {
          "id": "2d568504-aa2b-43ab-8530-ebfedeead640",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "03f9a8a4-9c37-4b14-b21e-7afce3e8ebca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91a4ff3-3efe-4bf5-88d5-792570dd5f79",
        "cursor": {
          "ref": "81843f00-af9b-4b42-a886-3a39c06f85cd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "be3ed2d8-c837-40f1-9274-9275186e8cd6"
        },
        "item": {
          "id": "a91a4ff3-3efe-4bf5-88d5-792570dd5f79",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fb06e33e-bb74-4489-9d1d-a9cb983d5b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f375d26e-a28b-40f0-918e-6e0df16a4cb8",
        "cursor": {
          "ref": "d70bd1fb-2605-4b46-8bcd-f1320da0b18b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8744d3b2-8203-4ac0-88c3-41b51b314885"
        },
        "item": {
          "id": "f375d26e-a28b-40f0-918e-6e0df16a4cb8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "491ae896-2bad-4fc8-baaf-bf7f3cd09e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066301e3-2faa-4d19-a52c-745bc50d3763",
        "cursor": {
          "ref": "fdc03604-2ff5-4e41-a096-bf679271d866",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8aa50779-ce20-41dc-b1bc-753599e9834b"
        },
        "item": {
          "id": "066301e3-2faa-4d19-a52c-745bc50d3763",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eb8f4bc7-b71a-4a04-b497-2d55dca4fc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986d64ba-e48b-4413-b96f-70dd5b56e248",
        "cursor": {
          "ref": "5ff25407-7a9a-4498-b6ec-14bab01a0a81",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb66a210-b959-4ddb-9d15-e4fcb71577f6"
        },
        "item": {
          "id": "986d64ba-e48b-4413-b96f-70dd5b56e248",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c3913888-6b56-4b40-b1cb-66d7d7d237eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cb873c-fbbc-43be-ab54-0644641a3ca3",
        "cursor": {
          "ref": "48bac6ca-3065-420f-a705-e419e5546846",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "383242c8-6038-474e-b336-d96068fc23cf"
        },
        "item": {
          "id": "46cb873c-fbbc-43be-ab54-0644641a3ca3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "66e27cfd-b0fa-47f2-85c3-7762ebed1f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3900904-5a53-46d5-a21b-5dac5f3f7bbb",
        "cursor": {
          "ref": "9747a191-0475-4165-929c-5a9ba7428d7d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4f68c9d-fbc2-4243-88c3-e764c60f14bb"
        },
        "item": {
          "id": "b3900904-5a53-46d5-a21b-5dac5f3f7bbb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2383c914-fb9d-4bce-9754-b6259c9e0dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4934cb3-3411-48c9-828a-ecab9304fec4",
        "cursor": {
          "ref": "b4226907-0cbe-45b2-a649-1887eeecf187",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7b915c47-56aa-40f6-93a9-45ff725727b9"
        },
        "item": {
          "id": "b4934cb3-3411-48c9-828a-ecab9304fec4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "372af2ef-bdd2-4e66-9c90-2e9c9e939ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3403c47-1086-438e-a496-6a938776e47e",
        "cursor": {
          "ref": "4e32e1b8-35aa-46a4-bade-e354f146ef7a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5439b65b-bb2c-4436-bfe7-d89f4501d424"
        },
        "item": {
          "id": "e3403c47-1086-438e-a496-6a938776e47e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5f8c71cd-1f11-4c5e-8275-e47c1b41f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161f14b3-7cbe-4e0a-97fb-abfa01f17755",
        "cursor": {
          "ref": "b795ebbb-e7c8-4d32-86cd-7480e526884e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8e13adac-9055-41d2-907c-d5a5c8a5ac06"
        },
        "item": {
          "id": "161f14b3-7cbe-4e0a-97fb-abfa01f17755",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "de14b24c-48ce-4c08-9d5c-1c3e4ea20218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a814a5d-4edd-41e8-bfb7-036f12ac9789",
        "cursor": {
          "ref": "4c25490e-544a-4dd0-99e6-081b657791ed",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d3ca37e-d84f-40ad-8861-09a4f1607c94"
        },
        "item": {
          "id": "5a814a5d-4edd-41e8-bfb7-036f12ac9789",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5062f730-ca06-48ee-8df4-0f72a00e531a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf91e4-7363-44d6-b5ed-cb9feb53651a",
        "cursor": {
          "ref": "27f9292e-4ce6-46e1-912d-f07767d84875",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3d29f675-093e-409c-9f60-677773aab2bb"
        },
        "item": {
          "id": "7bbf91e4-7363-44d6-b5ed-cb9feb53651a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7dbba64e-a153-49f6-aff9-c2ff99a7ebca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98567794-7d4e-4456-96c8-9947eb327801",
        "cursor": {
          "ref": "1fe5c956-aa4e-43cb-b1ca-f9bf00e7e266",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "60d6c596-db35-4381-b9d3-c5204bf92e55"
        },
        "item": {
          "id": "98567794-7d4e-4456-96c8-9947eb327801",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "65808867-6cc5-41aa-8b07-4d85e6fed475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec56157e-57da-4434-82b6-7184dbb4d842",
        "cursor": {
          "ref": "74fb6a17-41e7-48e8-93fd-a02c8c1d4f97",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "05ab1ab5-fdb7-4f23-88b4-05a61edcf2cd"
        },
        "item": {
          "id": "ec56157e-57da-4434-82b6-7184dbb4d842",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6a0e12cf-239d-42c2-b5be-dd1484576a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e4dc0c-1299-43eb-af0f-7432bdd8f677",
        "cursor": {
          "ref": "68007f98-3430-4a52-ba1d-2c6990718be0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fc202a2f-3aee-4748-9f24-29167cf07af2"
        },
        "item": {
          "id": "89e4dc0c-1299-43eb-af0f-7432bdd8f677",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "16cbde8a-c17c-42ee-ab44-feb3531b3552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838d24a4-fe62-479d-9aac-6299df5455b7",
        "cursor": {
          "ref": "ccc04e54-1a34-493d-bf33-0dd7a7356130",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9ac6c2c1-9810-4e6c-a4bd-09c24446c25d"
        },
        "item": {
          "id": "838d24a4-fe62-479d-9aac-6299df5455b7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2a01c95c-60f2-4e91-9dbd-a0173550c6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55c4679-d363-44e5-973c-113645a67978",
        "cursor": {
          "ref": "1e8f32e6-d7bb-40a9-9071-24610b75bf32",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21c72510-9d01-46b1-a3b1-8b2958a2b15a"
        },
        "item": {
          "id": "d55c4679-d363-44e5-973c-113645a67978",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c9a9c140-7ef0-4eb2-9d8c-09488a219849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cd4b57-4b9f-4cae-a2c4-b09fd4efe932",
        "cursor": {
          "ref": "28108ce6-e768-4c9c-9dd0-61efd82b22a7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c8cf3159-9e83-4202-bb36-891efddf810e"
        },
        "item": {
          "id": "b3cd4b57-4b9f-4cae-a2c4-b09fd4efe932",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8ee512ba-f296-4021-9140-5b4aa6eda263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8425c96c-c9b5-4fe9-ada0-e0d538512a55",
        "cursor": {
          "ref": "a76d0f5a-103e-458f-876f-31165f47396f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f4289892-fee7-4485-a512-b78d2bd9d38b"
        },
        "item": {
          "id": "8425c96c-c9b5-4fe9-ada0-e0d538512a55",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "13adefdb-2b19-4415-9e81-a4fb43c348bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab6e8d8-0217-4607-af50-6b21c267d519",
        "cursor": {
          "ref": "d2ef20e2-359d-4575-8056-9efad14229a6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "21e643fc-bc2f-4999-8a66-31b53925da58"
        },
        "item": {
          "id": "7ab6e8d8-0217-4607-af50-6b21c267d519",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "24cd570a-1b8b-4fd3-aa1e-01d5ae7c0376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac0017c-ce62-48c7-9a16-1d4e0e384022",
        "cursor": {
          "ref": "80157a40-75ba-4df4-ade8-b0775920620a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7347194b-79c5-460c-8c95-8a1a3133825f"
        },
        "item": {
          "id": "3ac0017c-ce62-48c7-9a16-1d4e0e384022",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7190d2fe-afe6-4768-aefb-b9a65888608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ac92b9-8218-4a3d-8c69-3adf3d2a6683",
        "cursor": {
          "ref": "60761aca-9218-4f39-b254-4950326a051a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4741766f-6afb-4ec1-bcbd-960d18094099"
        },
        "item": {
          "id": "23ac92b9-8218-4a3d-8c69-3adf3d2a6683",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7038199f-38a9-4990-a8a3-14dc1bf212e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c180ab1-423c-479e-b852-ba35b2067a04",
        "cursor": {
          "ref": "f38836e3-f1f2-40ec-b5c4-481eb9ac36cd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "09f4d611-14d2-466e-925a-45ac4092c506"
        },
        "item": {
          "id": "0c180ab1-423c-479e-b852-ba35b2067a04",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "33a654c1-f857-4962-8df4-6864c4dfc06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5984acb-935e-4813-b9c7-c82ff8675386",
        "cursor": {
          "ref": "806e3b9d-38d9-4cda-b621-d4f2c705f07a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "03215a15-dd49-4137-a804-b63f7e6017ea"
        },
        "item": {
          "id": "d5984acb-935e-4813-b9c7-c82ff8675386",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5ec4f575-2c52-4d84-98bb-469130c88dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741bdbe3-f206-4607-a786-a8cf430fc09b",
        "cursor": {
          "ref": "f8c4ef63-bbf5-459c-8855-8b91be3f74d8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8f738085-5106-471a-a16d-a0a83158435f"
        },
        "item": {
          "id": "741bdbe3-f206-4607-a786-a8cf430fc09b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2396f320-cdbe-4917-a380-88fb6b388574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89338d-092d-4b9f-bde6-a05f92dfe3da",
        "cursor": {
          "ref": "2bd47602-5a3e-4bea-b6c3-80eaf61c0b20",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20bd44c7-81c3-4422-b7d8-79ac6b58fef5"
        },
        "item": {
          "id": "da89338d-092d-4b9f-bde6-a05f92dfe3da",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d793585b-519a-4c8d-9992-81cc2a511675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57eb28-cc57-49fd-9dc9-3e19e6ad08eb",
        "cursor": {
          "ref": "147e3628-06fd-4cfb-b85e-e527bbf7745b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "68bbee4f-47b0-401b-ae80-e34e21a1289e"
        },
        "item": {
          "id": "7d57eb28-cc57-49fd-9dc9-3e19e6ad08eb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6c23e7e3-5751-483b-9322-3a71a5b48a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33a0ea6-0efa-41ef-b2eb-a473c3a14573",
        "cursor": {
          "ref": "2286a7ad-28a9-4c0b-b759-a220f8aa33f4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "51efc6f6-62b0-434f-99bf-1400b051b22a"
        },
        "item": {
          "id": "d33a0ea6-0efa-41ef-b2eb-a473c3a14573",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f215d4f6-1bce-4bda-9782-618acc8dd64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655da72-8dbd-4163-a3a0-465d9f394272",
        "cursor": {
          "ref": "620f1426-db1a-4bd7-ad67-fc4309cdee11",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "98013f7c-25cb-4c25-825c-6e7ccc28501a"
        },
        "item": {
          "id": "2655da72-8dbd-4163-a3a0-465d9f394272",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5fc0a2af-065b-4fbb-810b-7ea8d6ed528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa966f0-ab8e-4a93-b4a1-dc6fd7e45618",
        "cursor": {
          "ref": "2a9cddea-a219-4cae-93ff-a75a34d8c0fb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "86af2d57-6c0e-415f-819e-0f0376761b7f"
        },
        "item": {
          "id": "1aa966f0-ab8e-4a93-b4a1-dc6fd7e45618",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9ff51713-2d61-408a-9179-26df98118f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7b30b1-c15f-4842-9c9c-3397c318e463",
        "cursor": {
          "ref": "ca5f870b-a3b7-4891-ac8e-70bfdff02749",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8206255b-f2b6-4ba2-9788-95d0815b1028"
        },
        "item": {
          "id": "6d7b30b1-c15f-4842-9c9c-3397c318e463",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "84240ca6-9109-4c62-a095-5743373f9197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f5c903-4df2-4a73-b0b8-1a7c350e1c09",
        "cursor": {
          "ref": "1f903b89-7698-4ae7-a809-6bf6b4353b40",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d26a897a-ef5d-4e17-98df-be48e4e5e744"
        },
        "item": {
          "id": "21f5c903-4df2-4a73-b0b8-1a7c350e1c09",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "96b4a204-a48f-413c-9fee-52b30bf2be55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c247b1b-3ab3-4066-abc1-dbe1a12b0788",
        "cursor": {
          "ref": "4219c394-716a-41e1-9911-25f30c80b07a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "87a5854c-aa8c-4fab-83d8-614ddb5a79b6"
        },
        "item": {
          "id": "4c247b1b-3ab3-4066-abc1-dbe1a12b0788",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6aa83751-acbe-41f1-bf87-08939c847477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94661cb-45a0-4a50-ae47-d2defb5b6e73",
        "cursor": {
          "ref": "7c97c6d2-8861-4358-bbe4-0e6b4ff8d771",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c7d0244d-bb9d-4a2d-a5f9-60d9dbda10ce"
        },
        "item": {
          "id": "e94661cb-45a0-4a50-ae47-d2defb5b6e73",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fa72590c-b021-4424-b1eb-205f6c43537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdd86f6-9b98-4377-9c2b-87ac92d0b27d",
        "cursor": {
          "ref": "c2012d3b-1f2d-4722-ae8c-921c8a816d51",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c6ee9e0b-3092-4932-94b9-2d25de27574d"
        },
        "item": {
          "id": "6fdd86f6-9b98-4377-9c2b-87ac92d0b27d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "676017a8-8b99-46cc-9bdb-17f13fcbee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566ac0ca-f7ba-4ca7-b9ec-957680fc49b1",
        "cursor": {
          "ref": "b0ce54f7-3864-4bee-a748-e697bb9a6164",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e952c35e-2009-4789-903f-c327f67c91e7"
        },
        "item": {
          "id": "566ac0ca-f7ba-4ca7-b9ec-957680fc49b1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c6be175d-534b-4af7-b68e-2b50b482b8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c60eb-2487-479b-846d-263cfca4cda2",
        "cursor": {
          "ref": "ef0c96d6-e0c8-4cd2-a83a-f0fb74b34ae2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "82bbafe7-759c-4a9e-a54f-19b9501a031d"
        },
        "item": {
          "id": "fe6c60eb-2487-479b-846d-263cfca4cda2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7d5acdb3-6926-48d6-a041-b59016714aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0b8b40-f373-406c-aca1-9e842779c91e",
        "cursor": {
          "ref": "673f31d8-d8aa-4e91-b4e8-9bf6e5736a73",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b9ff03a4-16aa-46c0-8f97-2cb8b5e7a517"
        },
        "item": {
          "id": "bf0b8b40-f373-406c-aca1-9e842779c91e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "708b68ab-896d-4974-8818-83a3e9bced16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb7c5c1-adfb-4cb6-b607-89dcbef1be17",
        "cursor": {
          "ref": "4f848bb1-51db-4f4a-a0fe-2e9c56323c13",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ab932cf0-eb99-4587-bc71-3a2cc9208213"
        },
        "item": {
          "id": "adb7c5c1-adfb-4cb6-b607-89dcbef1be17",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28a6e5c4-ed52-4bb3-b5fe-b16f912bd848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6675404e-c90f-4d69-af0e-477f09a59b98",
        "cursor": {
          "ref": "70cd4db8-93fe-4cd1-bada-762291bc310d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "14ad08b4-7b65-4e5f-8dab-e4cec0f89e71"
        },
        "item": {
          "id": "6675404e-c90f-4d69-af0e-477f09a59b98",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a6a9cae5-a355-4cb3-801a-187c55d5dc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bffd3b-a050-4af0-a823-77c4dac90fde",
        "cursor": {
          "ref": "fd71d17f-a600-4b70-842f-c8c9fd92e4b4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec7dffd0-4850-49dd-8402-bc460f1408fb"
        },
        "item": {
          "id": "51bffd3b-a050-4af0-a823-77c4dac90fde",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0c1f5d3b-9214-4e91-a092-5bf04b0a1468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dee134-4c8b-474f-8978-9a89e94093a9",
        "cursor": {
          "ref": "bb626185-5e15-4a16-a73f-5d0c82867bef",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d07e5b5d-3e54-43ad-89e0-d377286222cd"
        },
        "item": {
          "id": "b5dee134-4c8b-474f-8978-9a89e94093a9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b555e20b-d562-4979-a0c9-9e6caae5870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d34f18-ebae-41f9-9439-b120bdd3e3d7",
        "cursor": {
          "ref": "130f1a98-18e9-4ca0-9a99-960864a344ff",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "72452135-eae7-4bc4-82d4-46afd33e549a"
        },
        "item": {
          "id": "a4d34f18-ebae-41f9-9439-b120bdd3e3d7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "808d96af-0fc2-432a-beea-c32948a9ab40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0eb3fc4-9a2e-40db-8d2a-9520119fef0c",
        "cursor": {
          "ref": "50c34231-d4d3-4c5b-a621-c430d9129cca",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4f2ce830-ce6a-4db2-aa26-c51c4bea0eb4"
        },
        "item": {
          "id": "c0eb3fc4-9a2e-40db-8d2a-9520119fef0c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3e332a9f-f903-4a27-833f-ae1319c40324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24b901e-00d6-4188-aa21-43700e6f55e0",
        "cursor": {
          "ref": "53eb329c-4cfe-4096-91eb-cc509eaca144",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ff8931a0-31e2-49e8-aba3-c1aab1a2b335"
        },
        "item": {
          "id": "a24b901e-00d6-4188-aa21-43700e6f55e0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "92fafd6d-86ce-43fa-b8a3-9ff478d16a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdc4998-1b52-4adf-a29f-f1a57c2270b4",
        "cursor": {
          "ref": "4eb890cd-9f49-43c8-b1ea-38d8394b9d46",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b653aabd-cd42-4b08-9366-aec1dbc45bce"
        },
        "item": {
          "id": "8bdc4998-1b52-4adf-a29f-f1a57c2270b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7105361a-345d-4444-b169-0e49da580928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9522779c-28bf-42d9-9d8e-a4757a2bba78",
        "cursor": {
          "ref": "97f64340-7cde-44ea-94ec-707af64fdb58",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "564ee4f2-42c1-4cf2-9d5e-709aa195f0ac"
        },
        "item": {
          "id": "9522779c-28bf-42d9-9d8e-a4757a2bba78",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2526a392-07e7-4951-8100-0e3178ee8910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eda9e6-276b-4ec1-bb14-d414486317f6",
        "cursor": {
          "ref": "e1520b50-551a-4e87-ab55-6daff7b7b58a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "015d72b0-e174-428e-9e2e-fd0aa3fa5418"
        },
        "item": {
          "id": "63eda9e6-276b-4ec1-bb14-d414486317f6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a8489090-c305-452c-99a4-85ae5120e72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0be2ab-4329-4950-87bc-a1f04c843258",
        "cursor": {
          "ref": "a7729ec5-fbfa-4058-b0eb-c775e7baac5d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c4e6adbc-2763-410c-8d41-11d79e6a310a"
        },
        "item": {
          "id": "8b0be2ab-4329-4950-87bc-a1f04c843258",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ab99f12d-942f-43ba-8a24-b3d1dbc49574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81626e4-0d6f-4c56-bab8-f6fa3f7ef96a",
        "cursor": {
          "ref": "4adfb627-e2b5-4c52-8897-10ce32ef0394",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4e3c6742-523d-4ec6-a375-9403ce81b43f"
        },
        "item": {
          "id": "b81626e4-0d6f-4c56-bab8-f6fa3f7ef96a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "338fc65c-ecfb-4697-a7fd-d1d276c961bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ee2ae3-196c-4875-a7a4-6947df1e0f1c",
        "cursor": {
          "ref": "571bfe27-0072-45bd-aaf5-39dc544441a3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "36c9f51e-02fe-427a-9505-7f139e934ca1"
        },
        "item": {
          "id": "61ee2ae3-196c-4875-a7a4-6947df1e0f1c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "727428b8-ff2b-4488-b490-e176d417ca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d823e4b-39d9-4525-8e2e-5cf5281a165b",
        "cursor": {
          "ref": "b09c16d4-4ec5-45b3-8213-ba2fe4b334bf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4553cebb-f2fc-4c56-8b47-8575c4dcd050"
        },
        "item": {
          "id": "9d823e4b-39d9-4525-8e2e-5cf5281a165b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd878d22-b221-4685-8e10-13f693e9553c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ec4388-41ca-4dcf-99c3-9a202fff485f",
        "cursor": {
          "ref": "15629df0-ea63-4ab9-84a5-eeccf65a7d0f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eb1f21a2-0695-41dc-9e76-12487b0ca66a"
        },
        "item": {
          "id": "90ec4388-41ca-4dcf-99c3-9a202fff485f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "601ffa97-fcfc-4ecc-9f06-396e901a7f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ff5e98-13d8-4617-a056-6e2d63f60412",
        "cursor": {
          "ref": "af09915e-249e-49a2-a949-45106df20d4f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "05439bc9-7721-4903-8149-8da05b41742c"
        },
        "item": {
          "id": "23ff5e98-13d8-4617-a056-6e2d63f60412",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "13ef73a2-7b21-4a84-9a13-bd63c9bb84e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9b3c0-9906-4180-87b3-8d83d51479db",
        "cursor": {
          "ref": "94d0b8a6-40ff-4faf-8820-d65ba226da13",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "41de9dd8-2216-40a4-9fec-6a01914ccbd9"
        },
        "item": {
          "id": "a2e9b3c0-9906-4180-87b3-8d83d51479db",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e338e539-fa64-400a-8300-a7f31f8e1c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5718aa4-081c-4494-a070-3b727eba8997",
        "cursor": {
          "ref": "42ab3677-61fa-4a9a-8b1b-f63efab31d97",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "53d400b3-9957-4462-b626-9ab0ed70c30b"
        },
        "item": {
          "id": "a5718aa4-081c-4494-a070-3b727eba8997",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3e5549d8-1e6f-4bf9-a2a6-6b90efe98a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92b0713-fc33-47bf-aeb9-e8a7ebadafb9",
        "cursor": {
          "ref": "6213c82d-6bf8-4818-8b81-e4987402729c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "916f2298-429f-4bfe-a152-b605717b690d"
        },
        "item": {
          "id": "f92b0713-fc33-47bf-aeb9-e8a7ebadafb9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b8ebb9f6-a026-4d19-818d-80aae868341b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fc61a2-18e7-428a-8dc7-00ad6db85522",
        "cursor": {
          "ref": "8732e3be-c358-452b-b0c0-e47bd0a37d40",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d0c3609c-9679-4eab-bdb0-7dc15d96173b"
        },
        "item": {
          "id": "48fc61a2-18e7-428a-8dc7-00ad6db85522",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2b84657a-c373-4551-bcfb-3eef95f88583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b87eefb-81cc-4e2b-8ed3-836bd003d488",
        "cursor": {
          "ref": "4ce6ef6c-15f2-4a37-a70f-a0ef25dcd8b9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9386306d-655b-46e7-9361-d9c439fe05fb"
        },
        "item": {
          "id": "9b87eefb-81cc-4e2b-8ed3-836bd003d488",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bb2b59d8-7e8b-4267-a792-19b4e208e015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785b0be0-b03d-4043-b01d-8796c43d84c6",
        "cursor": {
          "ref": "fc2aead8-0a73-4ce8-bba1-d526a7ce0f11",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8b226a34-9199-412e-b228-a910aa2895e5"
        },
        "item": {
          "id": "785b0be0-b03d-4043-b01d-8796c43d84c6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cdb3acb6-e6b2-46d6-af61-fc034669b6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237ab8ac-b533-423f-b6fb-d28d0a6794e5",
        "cursor": {
          "ref": "0fa4e6a4-628f-4925-8e1a-eb73495cf4eb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4dc9ae41-1bd0-4adf-80c1-e70e6f08463d"
        },
        "item": {
          "id": "237ab8ac-b533-423f-b6fb-d28d0a6794e5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ec14d25-837b-4ebe-a297-a5c5317d44f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4662bad5-3ec5-44c5-81b7-be8ca1062e3a",
        "cursor": {
          "ref": "327a589f-a72b-49f4-ab6f-99fa5e20613e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "985d2ccf-9700-4073-9177-4b07ad0a7482"
        },
        "item": {
          "id": "4662bad5-3ec5-44c5-81b7-be8ca1062e3a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af769552-ddb2-472a-b490-0a5bf88d1850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e112f61f-9a35-4f6a-8f44-5da528912a52",
        "cursor": {
          "ref": "fee40bac-89d8-492e-abff-75ed4af9329a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3975ea6e-f27a-4d43-a70e-36ad41551c45"
        },
        "item": {
          "id": "e112f61f-9a35-4f6a-8f44-5da528912a52",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2ab9bb48-ebcf-4e67-bfd4-299421decc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe09826-4414-4493-9e15-6fb733564ecf",
        "cursor": {
          "ref": "1870960f-adbc-4f5f-83c2-6e98274d54c5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8ee7a43a-75dd-4612-b911-843bc36e4bde"
        },
        "item": {
          "id": "6fe09826-4414-4493-9e15-6fb733564ecf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d9c8c25f-6201-4402-9c17-c8b78fd247a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c751dc-c308-4200-9a19-a4c9001d9f82",
        "cursor": {
          "ref": "4a81bcc9-a0e4-4282-84cd-23307ad1e0ed",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "26d7ac6b-5784-4bcf-83ce-8ee943776dbc"
        },
        "item": {
          "id": "63c751dc-c308-4200-9a19-a4c9001d9f82",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b2e12386-1eed-4ff1-8b53-978bcce893f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4027847c-a48e-4099-a682-82fe6c154991",
        "cursor": {
          "ref": "123cc2c2-9981-4ddd-bb66-d9fd27d7282c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba91d208-af8c-4165-b9ce-b9c5741a451d"
        },
        "item": {
          "id": "4027847c-a48e-4099-a682-82fe6c154991",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d98a0f20-4cd7-4025-b60a-ca70a3dbf647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e405ba2-f5d2-4e5e-a48c-df983ac53bc9",
        "cursor": {
          "ref": "f08180d4-80da-4b0b-83bc-bc0aa179b855",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ffa6c1e4-5c53-46aa-be3d-ae68239f22d8"
        },
        "item": {
          "id": "7e405ba2-f5d2-4e5e-a48c-df983ac53bc9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "57262d00-9660-4e8a-9402-3e2da42bac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0b91bd-d3b1-468f-935a-917022f22895",
        "cursor": {
          "ref": "9f59b9ee-d438-48c7-9a59-5fa400596c03",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bb40cfd0-6cb1-42a9-a4b8-5444c25fc7dc"
        },
        "item": {
          "id": "2b0b91bd-d3b1-468f-935a-917022f22895",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5ee750ca-0a80-425c-a282-7d40bc153667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f48e9e5-e22f-402e-b47b-db2ae810d2bf",
        "cursor": {
          "ref": "2b735ec3-e16d-4b41-9506-1f0b68520320",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c4b1f0f8-5372-4cf3-98ad-400d593423a2"
        },
        "item": {
          "id": "1f48e9e5-e22f-402e-b47b-db2ae810d2bf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "380c90e7-e569-4eac-8d94-a5866d475c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535586eb-d5b4-4c7a-a3ab-52556153684b",
        "cursor": {
          "ref": "dfa116f9-d46e-47e0-9532-56377b6372ef",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6f52c6fa-3f61-46ec-88c4-77813a86f8a8"
        },
        "item": {
          "id": "535586eb-d5b4-4c7a-a3ab-52556153684b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9a704b8c-ec08-46b1-b870-2d67cfbc8cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201022f0-fc05-4863-bc3d-cfce2aca8fc4",
        "cursor": {
          "ref": "66913c75-b5e8-483e-863b-ab5cdde94939",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "efaaff3b-fa81-4934-bf04-b715d951544f"
        },
        "item": {
          "id": "201022f0-fc05-4863-bc3d-cfce2aca8fc4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7ba63a56-022f-4a08-8f12-10b2b032f6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e29c525-82ed-4f9d-965b-56dd5ea68fcf",
        "cursor": {
          "ref": "6892d2d2-3a59-4588-9f72-eade86124281",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "afa198e0-82d4-4140-9a59-0443eaa06295"
        },
        "item": {
          "id": "1e29c525-82ed-4f9d-965b-56dd5ea68fcf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "02b0ebf4-b382-4961-90dd-64ae28688144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2087544c-821f-4d69-be70-a1babebb0e5e",
        "cursor": {
          "ref": "d3974300-d04a-427b-801f-f0ffc6bd0c2e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f18ded3d-fa4a-4e3f-8bd6-031928e6444a"
        },
        "item": {
          "id": "2087544c-821f-4d69-be70-a1babebb0e5e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f26b1fde-11e4-4f66-827a-7a90f34ef0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe53facc-ef40-4a96-9249-478102e3cc07",
        "cursor": {
          "ref": "6f72d3c3-6d64-4e53-a7ae-ba3553738bf2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8df6be5b-39b0-4020-99c5-3aa8a528a0fe"
        },
        "item": {
          "id": "fe53facc-ef40-4a96-9249-478102e3cc07",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "67f72d4c-0cfc-4b79-8dff-a86997c78bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deef998-d550-4fb0-978c-14ae906ed151",
        "cursor": {
          "ref": "8f80fe12-3226-49ab-9049-5f0ec28a90d3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6a7ec163-b32c-46af-9980-0b91ce96827c"
        },
        "item": {
          "id": "9deef998-d550-4fb0-978c-14ae906ed151",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "83f03e67-1c4f-4a44-b7f7-e9fe6646a69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87041cf-f1b2-4dfa-8432-facfb6e7a455",
        "cursor": {
          "ref": "f7ab4b07-140e-48e1-83ea-559630ec2072",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8ff9dfe9-7752-4859-9aa8-f97c7288b258"
        },
        "item": {
          "id": "b87041cf-f1b2-4dfa-8432-facfb6e7a455",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "22f3ce4d-a35f-4db3-9aab-599593d77046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044fef51-2afe-4b2a-826f-8a401cc48daf",
        "cursor": {
          "ref": "9e21baf0-4c0f-43d3-9b3c-1b233ae47b1c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1c19ab6d-15e1-4ebc-9431-8774fccbe6bc"
        },
        "item": {
          "id": "044fef51-2afe-4b2a-826f-8a401cc48daf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "822741ac-ec71-401f-808d-045ed9b6f68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697027ae-cc50-4a8d-a047-8230d17cce57",
        "cursor": {
          "ref": "e6dceec9-e696-4e50-b953-244c10e73c06",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f0c1ff44-5941-4c99-b8b1-f3062ccb35a4"
        },
        "item": {
          "id": "697027ae-cc50-4a8d-a047-8230d17cce57",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8f3a14df-d545-4a25-9d94-6e8885ccf07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d569b85-20d8-4fa4-a511-e35709460f83",
        "cursor": {
          "ref": "a97714e2-d4ee-41a3-b3a0-6737a800f855",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d7d47518-ce9c-406a-8b27-38b3133420d0"
        },
        "item": {
          "id": "1d569b85-20d8-4fa4-a511-e35709460f83",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4c60eef3-ca38-4204-bb20-4bf4fe59532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b591b1c5-e7d2-40e0-9e11-92a7cfb3b48b",
        "cursor": {
          "ref": "dae85ba0-93dd-4b39-b801-706761f92575",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67d6a070-1b8c-4fb9-b647-5d383184a2f1"
        },
        "item": {
          "id": "b591b1c5-e7d2-40e0-9e11-92a7cfb3b48b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9b69de1d-3298-4126-b976-a401b5353ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5daa8e-d549-4335-a49a-aaa5a0922e5f",
        "cursor": {
          "ref": "108d8f09-8ed8-4685-8174-0750df0d6a3d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9dc63db2-4519-4e3b-8056-16de2abd3953"
        },
        "item": {
          "id": "1d5daa8e-d549-4335-a49a-aaa5a0922e5f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e047786b-7063-4e50-bcb9-a1cf6e3246da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ae9311-742d-45e7-8a55-1f10a213ba94",
        "cursor": {
          "ref": "d675a9fe-10ad-4c54-a473-fe3f863b64c9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0b650bf3-fa5c-4bd2-9566-fc6f638da2d3"
        },
        "item": {
          "id": "e4ae9311-742d-45e7-8a55-1f10a213ba94",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5817dba8-43ea-4da3-a442-2d3f742848ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064fe735-6099-4b07-bf20-4dd309848bc0",
        "cursor": {
          "ref": "d28ff0d3-6422-4531-a660-8d850a181087",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "28c3722d-6470-41e6-94b0-4beee3cf3684"
        },
        "item": {
          "id": "064fe735-6099-4b07-bf20-4dd309848bc0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "88c2917c-392f-4c9c-a725-4b78e43d1db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974de49b-890c-465e-acf0-b23af55e7e86",
        "cursor": {
          "ref": "a45396ee-45f8-4c50-951d-0bf01349400a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7fb9db1a-bdcc-425e-91b4-cc0e00edf055"
        },
        "item": {
          "id": "974de49b-890c-465e-acf0-b23af55e7e86",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8f9de301-1bec-4f0d-a928-5172298f8128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835e6783-8845-457a-b454-82815b737d32",
        "cursor": {
          "ref": "318f513e-2e5a-4fe4-ad3a-2dc83f496679",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f0ad55bd-bcf1-4e86-b2a5-def19cd63ee0"
        },
        "item": {
          "id": "835e6783-8845-457a-b454-82815b737d32",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "52af2937-1e73-49f5-9609-14b69d13a5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9479105-2a50-48dd-8f50-2dca4cfad4b7",
        "cursor": {
          "ref": "e8c3d262-0282-47c5-90fe-ecce7e331d3d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a85246f-40cd-49c3-8152-1cd9beb044d2"
        },
        "item": {
          "id": "a9479105-2a50-48dd-8f50-2dca4cfad4b7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6596f49e-7655-4436-92ff-67965e6805a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc5eda-4bb7-4b1a-b0bf-e409d32f91bb",
        "cursor": {
          "ref": "10b85244-adc1-428b-8d19-e797426ea7eb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c8d79411-532e-4aff-b693-32edc195b5b9"
        },
        "item": {
          "id": "d4fc5eda-4bb7-4b1a-b0bf-e409d32f91bb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e1ed2c5a-3b68-41b6-aec7-c9c5d9f3a1e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88298f5-1f7c-47e2-b596-903755fcb821",
        "cursor": {
          "ref": "657cf996-0628-464f-b9ad-ec6be0bf31a0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d8a621a2-0707-4df7-a85e-42f6771a0bcc"
        },
        "item": {
          "id": "b88298f5-1f7c-47e2-b596-903755fcb821",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c8d016fe-7d22-4b39-aa0d-d13fb46de289",
          "status": "OK",
          "code": 200,
          "responseTime": 1991,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ed7bd2-0b8b-4e4c-8f24-2ad260c95637",
        "cursor": {
          "ref": "2caf7872-f4ec-4a30-9a3c-dd642fd67234",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6d37fd43-ae82-4998-a7ba-e0cb25b967b2"
        },
        "item": {
          "id": "78ed7bd2-0b8b-4e4c-8f24-2ad260c95637",
          "name": "credentials_verify"
        },
        "response": {
          "id": "89a27332-f5be-41e0-9565-e9b01afe45bd",
          "status": "OK",
          "code": 200,
          "responseTime": 3366,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f92abae-5a51-41cf-8305-35aa550e9560",
        "cursor": {
          "ref": "ada3517f-4fc3-47ed-b3fe-1c0ef34e8bb5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e47fce67-4901-4a55-8e17-b3fa55b944b2"
        },
        "item": {
          "id": "6f92abae-5a51-41cf-8305-35aa550e9560",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "914b84a5-2ec1-435c-af93-4a83fa14aadc",
          "status": "OK",
          "code": 200,
          "responseTime": 2964,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b04e8b-40df-4a48-8989-32ae78d691a8",
        "cursor": {
          "ref": "027be449-c0b9-4100-bf4e-4f1fa561645b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f82ad573-ba71-498b-9537-0928b70d60cf"
        },
        "item": {
          "id": "e7b04e8b-40df-4a48-8989-32ae78d691a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65ac2d2e-6c3c-4ef9-916f-d8681f34a9ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b04e8b-40df-4a48-8989-32ae78d691a8",
        "cursor": {
          "ref": "027be449-c0b9-4100-bf4e-4f1fa561645b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f82ad573-ba71-498b-9537-0928b70d60cf"
        },
        "item": {
          "id": "e7b04e8b-40df-4a48-8989-32ae78d691a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65ac2d2e-6c3c-4ef9-916f-d8681f34a9ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b6d016-af07-44dc-ad53-6a4ad48d5f36",
        "cursor": {
          "ref": "3e3527aa-1b72-4827-a5bf-67860b35cdcf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "37ce369c-c5a4-446d-8b10-c8b31c47460d"
        },
        "item": {
          "id": "a3b6d016-af07-44dc-ad53-6a4ad48d5f36",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffcc6c18-202d-4b45-9ae3-aa73cfbdad69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d104a-8fad-4b13-a3d4-970e6d316bf9",
        "cursor": {
          "ref": "c2e3e03f-2cc1-458f-8b71-9e86f99d7389",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "485f9150-7a0d-4849-a2f1-98ce60e57aaf"
        },
        "item": {
          "id": "d59d104a-8fad-4b13-a3d4-970e6d316bf9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a624f681-4f24-46f9-a9b5-5c08188d5cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}