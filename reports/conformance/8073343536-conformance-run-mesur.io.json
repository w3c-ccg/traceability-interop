{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "461ef20e-a9f6-4ec3-990a-0260d76804f6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "666fbcf2-ad0a-4f57-ac39-1a5f868c61d6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "448eb364-9131-4136-b63c-796828b662dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88b1ac0a-e207-4d82-a26f-bdd6436fbb80"
                }
              }
            ]
          },
          {
            "id": "5353a7e2-6ee5-4fa6-b060-23317269c03a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b12978a-bb59-4124-832a-f651ba632d29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a11ebe71-495e-4818-8c4b-26f3daef9df0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6aeb9da1-1a6a-4ddd-8a17-6a30d704229b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "93451121-1d80-4246-b887-5dfe892daa2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30051603-3fc0-4429-bb4d-5bd8ac1003c2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb579c24-8905-40b8-a15d-3313f9855a3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fc42221-7e41-4b91-8437-104488e9cf50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "379c3c22-ae8d-431a-be15-5733ff9c36c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1812b84-00d0-4846-a7a1-3872bd27bdc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a45ef8f-22cd-4fc3-8aab-aca97a3094fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f73e408-67e9-4daa-a3b2-e0404d81e551"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05177c97-3ec3-4706-af67-eca0cd614657",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3779b163-0078-48fd-8995-e954c0342afa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ecba3d0-f43c-4d95-94a8-8e95a642faec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "431b13ac-c624-4f8d-bd5b-80b53242a934"
            }
          }
        ]
      },
      {
        "id": "bd5c392f-aca4-4a70-a8b2-48d0b2b7dee4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ba5d3f9f-9f8b-443f-a6c0-8e0916c822af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8764e589-ac13-4bb5-920c-b183268bcbf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f80b1ee9-ec4f-4047-b78d-ac167619ce38",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726ce92b-7470-4869-b2c3-0fe5db39067b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fcfe340-06f7-4bad-977c-604861bdb2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c93bd69-ee61-48e6-8b2f-4994a7ab45d0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0718e68-0678-4daf-a6b3-80dac6884a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b38a63aa-fc09-4aad-bfb3-fd0862f9981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e392cf-6e27-4c8e-b53f-9e70713aa811",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b80409-c087-435e-8726-65ed75673127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c52372da-56f2-4b01-8b7e-3e041b758508"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e459a418-4240-493a-bff9-61796900adfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a8b98fa-00c2-40e9-994d-c5036d72392c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4631f6-ca03-4d81-8d7b-006fa454db8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb0cb386-6f6d-4fbb-b595-5ca13bbda191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c3b617-065d-4dd0-b99b-f6014b8967ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedbfed2-4621-4799-a4e2-4f49ddcdccf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10984d17-a8c5-4e97-b5ef-2d1488ff837a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15605e7f-c80f-4c8f-b173-72ad908affa8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42306c28-a43a-4794-946e-c213433449d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e335b606-fc14-4f63-bcfd-4f0ecd3f176b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87cf9132-078a-44c3-be24-315890c3e0a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "16088763-6d94-49b2-9c0a-cf393996f0de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "694d746f-321b-4380-abab-40bd7d41e735",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "634941b7-c5bc-4a46-9af7-3f33f92b065b"
            }
          }
        ]
      },
      {
        "id": "d8f1abad-a0d8-4756-adb8-f7ce565587dc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c2a8ef51-5d60-408d-be7e-0838dcc378a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "429447b5-6a62-4927-b4ac-2768c1463a4e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "636294af-c2d3-4275-a5a0-0be1196b9a85",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f761531-37fe-4ffb-aa9a-f54cb8e86697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116b3fb9-b5da-4f38-a9ab-7f96c9d12e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec6f2f5-8331-49ed-8c52-19bdc4503f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053f6c7f-18dd-46a2-8978-5cf93bb432f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e264f63-f245-4237-8c0e-307828bdf491",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0140d3e-c2e7-4346-b251-627ee32ce4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32b39ce-1d34-44dc-a5b8-b0841ba363be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96dbce0-818b-46c4-8f6c-dfc633983132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7f5fa3f-fdd8-476d-b4a6-c2a9fa914b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91455c84-6c41-49e1-b1e1-a3a20d061405",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc00da54-1978-4ff4-b33d-25504787967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab777575-0f15-4e97-beec-e9aab2324b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1403a183-8946-4f08-a1ee-52dceb22c994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c1bafd0-bdc0-40ad-8083-21eaf642378d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeac700-0a9a-425f-87ae-7c2ed1ac2225",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038b28e4-376e-46ad-a9b8-740c5388384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cd672d-eb6d-4e55-8da7-570bf836f4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaee1c5-c781-4667-94f3-216b374df70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91ed1b6b-12ba-452d-851e-3f819224ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823861fe-e1d4-475c-ad37-f3e85732aa8a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bca64f-97ef-4915-8f80-b71ca0a22600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae134405-2a2d-40ee-8873-d78191527892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b6cfa-054b-4a67-8f81-45c583544114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c0edf21-7f48-4f79-b5ab-70a531f4db6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cb0cfb-5486-4718-91d6-67e7b4a5f46d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f6035-8ca6-4e7e-84a1-41712846916a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060b1044-0354-4e73-b570-2482913bc9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527871a3-2fe7-4e34-a4ff-c997f9ce8dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57d18fe5-b20f-47c6-a5c6-0e71e7063ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692a800f-eab1-43da-bc4f-f8566c244895",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e28ee76-ec1e-4160-b2fc-763da026c0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d054497-84cd-4c45-adb5-e3c7dc9d3a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cee29b-6c35-4a36-ba54-fd5df4c634c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6b418fe-b280-4080-bd37-e5cbc2af810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03e5531-ac74-4899-9991-7acd0107c169",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074deba-62ca-4454-9a71-2a21a7855f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a9c90d-0777-41e1-93ee-69b30d6fd89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cc5c25-fc74-4a58-82c9-4de61de0998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce3c6d4d-1093-4be1-a5fd-48b2ac140682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a978e41-f0ac-4712-95ac-b47a9e10a315",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd960a58-df0d-416d-abbc-79bdeeced1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f28fed0-1788-4f47-a105-f24bba0a95a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e5991f-e29d-4a89-b801-75949ff63464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c5eb211-1222-4c2f-b7b0-5d171e5dad4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b444b6da-da77-4e32-98db-7616e190f417",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0223d9f2-91ba-4cc1-8fe1-1094939cd7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ebfa87-3251-443d-9f30-820f66f38a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bea43a2-02ef-411f-8567-522212e63186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4a727fb-90cc-4f45-b14f-a1b3e893b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d5fe0a-dd51-45dd-89de-bf3190fc5e2b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccd9cf6-a1c1-401f-b5e5-1e3ab0b09307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb88f83-9901-4879-a67d-8236c20db526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8020b2-4440-447f-b65a-763742611b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb117dad-dd5b-4df9-83ec-ef436d2d1b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018eb559-c01f-4663-8880-9bd0cb814bc7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321b03c-55b7-4384-9210-55d48f1455e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebf2b46-ee57-494c-857e-8502d2ac23b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f657e63-7808-4d55-b76b-cb59ee302ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63a034a5-ef38-4951-a813-f17fd17e4b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84565aad-5253-4a05-94b2-1f29c8077560",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51001841-d8f5-4a05-b9de-19f1485ce73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d93ed1-8ee7-443d-9bc5-067ff491b4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29632558-adb6-4811-91fe-c1b48ddd4003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a92951-b6e6-44f2-b84b-c758672a1545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8108b42f-143d-4c02-a56a-39485e611091",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f10ac12-8c10-4a08-acc5-fef13d386ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5061e2c4-3b8d-4ac5-9f3f-562be923fe7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40e3374-d42d-4240-87c4-7f06178130b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bb0951a-88c0-4b54-9659-abb7c71eb13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224a2faf-6751-4235-b2d3-be72fe0c7e8f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fca20ee-32de-48ec-b131-6953d6a94659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7369d8ca-25c9-4db8-8f26-807d5ba972c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5ceb74-3b03-479c-9efa-dfe331b28d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f6890ce-d60b-406c-a0e6-d6208f1fb83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7022a1dc-4186-4c45-a2c8-5a68d1c70933",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611a3ccc-b725-4b4a-bad6-16d9a6566f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e458c67-ed8d-4b3d-879f-0994d9170686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd062b1-b864-458a-b3ae-2d0b9b9f55bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e352a67-cb8b-4b5f-a8aa-6e35f3604d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f652ec-671a-4561-b3e7-e388b0d7b44e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d855812-3816-458f-9ab0-1fb8b87b4020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b1698c-2307-4ae6-8b3b-4ab48dc7c163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93910a1-0317-41ba-ad7e-39d41af872ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dca9586-76c9-47c4-9f5c-86dc0f06ceb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebf0d4-38de-47a1-804e-985cec89e3a7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed79d45-ad8c-42b7-b8c8-5722a23afac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a22c4c2-b543-4ed0-aa2b-e8d629306957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebe8410-f10a-4382-aada-4073b27e9647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "583b7630-6510-42ce-9f28-1ff6b1843c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8384316-e86d-4e2c-b6a8-2f754a8b785f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7187d7db-315d-4167-8f33-beda4986e1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a66119-2779-49dd-b464-dd774f5b86a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc0fefe-a477-4042-8a28-488d5ec4dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1937460f-4c06-4d61-a9bb-f4296a4be66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66f84c3-4299-4aa9-8394-0c6f15150fbe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9203172-44a5-47b4-b7b0-079edf495730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4b6751-eaae-49c1-a2e7-14eb968d46ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4031cb7-2505-44f1-8cbf-ab3db6737484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8dd9f9-ab46-4491-93cb-df7582f26da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b412182b-c6c9-424c-a518-361a28fa4a93",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4a5951-be63-4e9d-b129-e4a9b4b794ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2022a6-f488-4aec-8cde-f021c3cb0101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fdde53-6076-4c17-bcb1-1841331a1d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98cd517-4d67-4495-99c0-5ee506bbbb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dea2721-9c0e-4810-8ef3-78c977766efb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92da78d5-9332-4d87-9c5e-c192d534b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c2b299-d580-447d-8892-2193c3985426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd11a378-a929-4722-9779-001dba589fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88384586-c323-459b-9d28-55054dbbaec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087a2602-1487-4add-ad82-5cb51ba1ec61",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dad20bc-36ce-4de4-9abb-2c26d25deeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba9eb66-a804-48cb-bee6-48ff4d05e41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fc0a69-c2ca-40a8-a2a0-b5dcf3f85cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad4c506-7fef-46e7-9bc6-72b2be81b06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bb3de8-c12f-4629-97a6-597bb156fb6b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0577f31-0be0-47c7-87ab-048ed81bbbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834701f5-dcd1-42ee-b041-58730a86f133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6705546-46e1-4cdf-a028-0da6e287692d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f8f161-b4cc-4df7-bb52-fa20acd429f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8068e9c-165f-4955-8c86-dd4fb57627cd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306411bb-1d36-498c-b14d-ab43965d5022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105bf25c-8c35-408a-8045-014e4bd5b5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d40187f-4839-4ff8-a9f5-efecf2fbc443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e994bd37-c575-47ae-aa9d-66adfb12b1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e327b7e-006e-4b71-af55-41c866453aa7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50775879-6830-4ad4-bda9-6e157dfd034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea679cc4-b832-46aa-8ad2-8a642c1a998e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f94a4c-b417-4c61-8c74-71d60dbbc756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d041243-9909-4b86-be39-e508d48bc900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c16f89-f0df-49fa-8438-131c66843dd9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039448fa-d4d4-4696-8ea7-2fe68f8d9628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c28efca-9495-4a19-94f6-95bd7dfdd957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d68c75-4708-4f9c-b595-ddde5e4f99b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6136447-eb59-465b-aba0-a4abe085e130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef5fd32-0f79-406b-af86-be80a47a34da",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30876dd3-5142-4cf9-a372-dd5107fcab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e2b2cc-441f-4b65-ae33-acfa7a97cf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2288b49b-851c-4ea2-a032-ff28b6ce9f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af62d6c9-becf-48d8-8b3b-62d53d48d363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63e27a4-05ff-434e-ab9f-132c64e20c99",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa84378-601a-414b-a97c-139f9aa52c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1751a3e0-faf1-4b13-86eb-e0388335b008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8da3c9-8fbc-4d46-8641-118ac3a98313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "552c9e77-9dd5-4b25-a490-cc7d089a0d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe3bc99-db5e-4ef8-944b-d7288697cec0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9133b272-f1cd-4cbc-9474-422bc102c88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ff012e-3637-49b9-a30e-26db30089338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcac6e3-f0de-424a-ae16-757552f19e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14a8669-3f17-4ea5-a9ad-328d3a78bc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46003752-9232-4585-a9ad-733bd78e69f9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fe2714-0b89-4104-b2aa-5ed3a4231e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2872129-ce81-4500-b748-29a53ebcdabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0433fa11-6c6c-4da8-97d1-6eb10e068991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "844844d0-724d-44d1-ad9d-7664a139ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f44b09-a47b-497c-adca-b8f5adbf768a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d14930-de4c-45eb-869c-477196e9abc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d5ea49-f8da-431d-9194-023d117db2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1031e080-65d8-457d-9859-6ae0ba49122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "642a1545-397b-4035-b428-8e07885c16a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef49cfc-d3f2-4d23-ba54-96d923b2e072",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3425104-7f03-4182-956d-b19393d1ad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899e8ead-fa6d-4d96-b7a2-d7b9d9235941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e675597f-3bee-4eca-b080-cfaa40c5003b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93613a30-b14c-481f-b6d1-44afaed45d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7573cdf-84fe-4d05-92f7-be67c761e060",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5abb57b-8df4-4b46-90b1-e0c443f774e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca0782a-af9c-418d-b73d-6a4a387190de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d930af-3f2a-44c6-b0f3-3b2e709a86bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa027309-ec5e-4eca-8599-fb22245c8ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5209049-d41d-409e-952b-3862a0ceaea4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927b95de-924c-4434-8e5c-8c4621ea9c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521d422c-de82-429e-9daf-fc884923245c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f95eeb4-90a9-47f2-b159-ffcaa830f562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b2dae96f-705f-4631-8198-5d1039247c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c40345-bb66-447f-a96b-d970de46a16e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2754e14-4481-46a2-bd9a-b60b299f6a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "305dc410-efd3-4110-8aec-fb643a8b7679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b305ac-506d-4bfc-aff7-02b195f1966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8920fc-abaa-49fa-9ac1-96d4efcd8f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e26efbf-3a15-4887-bfec-730430354b6c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac28ab9-df73-4585-815b-a0f8548be5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc35016-e535-4bb9-814f-5cbfa6842afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47035247-5bb7-436e-a29e-b71528b50a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "409e6b28-bb5c-4aad-90e1-f094362a71b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79534be1-2155-4292-9e27-683655789975",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18d7c0d-3601-43c3-b7f5-a78eba06be47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbac3f65-785c-481f-ad2a-ea072396acf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91cef90-b963-4cf4-b84c-bcf9211bdea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6998412e-797a-4b7a-864d-b4a1eea2ca50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc061e7a-afc8-4b13-a76d-c3d942909d25",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c531ac-62aa-4f45-ae15-e4a0613e751f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7894563-bbed-4d9c-9b52-6d00e3d86480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352560f6-0789-4384-8746-892a0b5adca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00af0fb5-688c-4812-ada5-f4dd6251b236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87d3b20-daf7-4bc9-a479-6ca0aa7b0765",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31c386d-4105-4fe1-801a-a0a9a07940b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf84a23-38a9-4eff-a76b-d22d4c4775e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4684dd-0d74-4563-8aee-28e31cc68ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4354af-b889-4ac3-988c-d5cbbb2311f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae6338b-7972-4a8a-bd0d-e5e06ef463c7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa6fe2e-0292-46a4-bd39-04e26edf62f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5399ffe9-7602-419a-9807-a57c0a114608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7512e6-2bb7-4719-a295-17545aedcad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6069816f-480b-4caa-a14f-ac20b81bc41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81629b8-2926-4ba7-8eb7-e521c59dc3f0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2363c-54d5-41ec-aef9-eb820a7059c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f5609a-354a-4c55-b043-b7911a71f151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1afb48-5776-4f51-b811-d12437077fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "99aca8c9-814e-4223-8c70-39541d1ee1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c648728e-5f9d-428b-bb12-ec5e0098f61d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d029786-b145-4098-bb77-f3a300864c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616ce88a-46a6-4cda-81a2-cbaf31629e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db2c3de-44b3-4752-ba9a-0bc8ec012a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9bdac1-781d-4350-b131-2485847cafee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1fedc2-2269-424f-bbd5-8a7cadeb8f2f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542f92e6-fc70-4c87-b800-0d3e5bdf17d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c42fa2-2229-470a-904d-9ee07f609e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4d068b-59ad-467f-a984-b80915989ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14daa67-c8eb-4c3b-8dcf-caa188f73ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b923fe4c-d27a-48e9-a0d0-8e8a0fe2d1b0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2a2d7f-6565-4013-9445-ce888e8f4d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1c04f4-759d-4bc4-9582-ab5b7a019bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada31cf3-747d-4d73-84d5-638457d99026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f72c35-a50d-437a-a938-56fcd06d0d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f315d3b-a7ec-4164-9ba8-1ed235d1be9a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b2598f-e27c-4d25-abee-fee7190e2840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3800f875-16e0-4a00-81c2-9c1c308ed56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6753c2f9-e25b-423a-869f-b3e9df663a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28206fc-d8e4-453a-a32b-090ad5563220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b363cbcb-9f0a-45e3-9c0e-b548ac99d081",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47229fb-e516-4471-a5f9-98eeb5d5215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc95e5c-7396-4923-8f0c-66a34b1cb442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598c05a1-1607-481e-bfd3-d00fd03fa617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84fb9332-5f21-45ff-8c6e-b54368a8e1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d7eb4a-06e4-4c4c-94f7-d5346bf6a8e2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fd1a25-4094-4f10-acd4-6e7a354b8ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243e75a2-a209-49fb-8142-340afa0f9120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f71fc4d-c4a5-4f88-b3b4-10295b39e5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "936759c7-a0a6-4b64-9f89-4c2e507130ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d354d503-9cc9-473a-99db-b35940dcc5a1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c82b88-3e35-4833-b0d7-40fb9db08f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f29f7d-e8d3-489f-bda2-d259a31b33df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b102073d-5f9b-4b6e-ac8e-7baf0db10c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3bf510-a801-480b-9d4c-8c045a3b0c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da595c4f-0171-4fd5-b88b-98e166585a75",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42b06da-25e4-47e9-a7fd-f75abc987872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf307d6-a9f0-448e-b725-c2910269f912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c84ef-971d-49a2-9e0c-bbb07a6a6338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc2af74-96e1-4629-a6f5-3e3006c2c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b776654-c735-4198-af58-eb043f7b51dc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d688644-40dc-43d7-afc1-d51822e68da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7d3488-5d7b-49ea-b5c2-8f29725ad497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d577df8-a580-4211-99e3-41a4939a8e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7e571e-61ee-400c-80f9-da02d0a757bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fe95b8-2183-4f78-8b06-8bd2315fc435",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9a35ec-0dab-4920-9500-320feaf7d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3698b5b-b40c-4995-a48a-79d16378c3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefd7718-c46a-4ccc-9668-4e6654a067b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "209ae868-bb56-4f09-bc13-0afe23503abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db212ce-295c-446d-8753-5d4dcb4aca51",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc07b704-0e58-4ba8-bab5-54b9ab8ea1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c686c187-2351-433b-a3c2-807b426aabcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c6342e-2ec6-4cd8-8541-436d2cc2e37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b62719-0ca5-44d2-9cdc-99d7b358e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22058ce-ead0-4c3a-b6a2-a0faa0f2baf9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a6e1ec-694d-4089-bbf3-5ee3b15c18fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4710abd5-e998-4ff8-9357-0ab8ff465e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7656fdcc-4654-4fef-ae16-734909d21f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f920615-9c07-49be-afbf-5273acb3e897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b780e99-0af3-43fb-b18a-bae295576a08",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cbe05c-0acc-4871-8c03-3b57c7be0d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff851d2a-88f4-4d23-9c95-e07fee8d8adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50804f0-dde3-44f2-a2a1-56e7457b4fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "335a582a-c285-41c8-b1f6-98b8318d1664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3787a-f76d-47e5-bdac-38ee8a85b07a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46b0d7-1c62-41a1-a606-291862787f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e6b768-6326-4d6a-91a4-29c1ebd9a747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71167fdc-4ce7-4254-9be6-52f154a8600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed43337-63bf-426e-8ad3-268907467221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da7bc32-812e-4d03-b0d6-9cfb5d126f28",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0893e-a57e-462b-996c-33bfa4fd56eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913a3b59-55bb-491d-bf9d-764299f66738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2a28fc-db87-46e5-900a-e75af96b019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc5f255-c78b-4563-b4b4-03ad16216f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e82f3b-e566-48ab-a7bd-46faf8e13cbc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee15655-55e7-4919-a227-c00eb0d15add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0963bdbc-4d7d-4978-9f12-0b112dae208e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f196eca-3186-42c8-82f2-7584611e4ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1e36dc-8a74-402f-a657-45330d723d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4796a0-38fe-42da-8b37-3896b419db97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56510e31-b3b4-458c-b8a6-cdeaa1ebabad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247d10a8-0593-49e8-8217-ebeee40f92c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff2d86b-c099-4b85-9357-cc44baa33992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f830c211-5999-4cac-8c14-982503a7cfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431beefd-d0b5-4a7a-9dfe-6619d7640cdc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6a2819-3f22-4c6b-964c-27e495c427c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698665b6-b58b-4fd6-b8f0-8bbd7b71483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3cd6c6-bf64-400d-954c-7a8e296f87d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4c7222-f9b3-4165-bc19-76867a0344fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e85628-3be1-4f87-866c-a0ad3606abf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab09e99f-111c-4eb9-9eeb-556d86da00eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72b7a71-bdbf-4836-a987-648e9f210a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657790d3-c05e-4e98-88bd-526700cb5864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e066f22-3f18-4e62-84f3-305e11d2ab83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8a0015-4573-4718-8578-7e272d0637d7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d404addc-617a-476a-a7bc-5585d9310cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576a22fe-520b-4a8a-a3b0-572817f5d3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ce0f71-78d1-4447-bf87-76c71f221365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a70a47-a6ca-4fc6-969c-fd9a4ea64b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e4934b-b2c9-4268-9fd1-8a14f19bf788",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5386ebd-e2fb-4303-84c0-a9f20d0fce39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550eef81-5f08-49f5-a1a0-50b548a2cb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e327820-f4dc-4c9b-888b-b4a4868252a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "94075cf2-3e50-4c37-8b96-2b8e0afa3fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c281baa6-04dc-4a5a-ade0-827b00e72a48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846d5eb6-a243-412d-9963-87845aa5c055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2280154d-971d-40d6-8ea9-6a4ca42ff1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f03cbb0-1ea0-4002-babf-fc13b619da5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45fbca5-52a6-468a-b91c-e8cd9d6eb848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d6589f-33e5-4991-bd2e-5d812d1386e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c188202-f37b-4a30-8105-d5d81848cc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b494f7b-d476-4f62-b018-06ba125545dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c103ad29-73bc-4d8d-a4de-aab131b03ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf71ebeb-f2d8-4754-910c-3188d204d583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7de9a8-d9f4-4399-b305-346d2ef05754",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09db8386-5052-4ac7-90ad-ea9526ad9f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf806519-789a-4204-bda0-82147332d9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8913d457-2e32-4620-898a-b386367af504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25875fe5-bd5b-4773-b772-a3758f993c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d6a4c4-0a9f-4ea9-a2a4-7e1d23e23f5c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc432a6-866d-41a2-ae3d-660846e3719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a595aa-9927-410a-ad41-f39826cc85d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d35712-8e2d-46db-a0c6-8a50984990ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f88df753-7102-442d-93cb-f85c05e6601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7ae2e5-7140-4a4e-b3e0-a7f69d4ff59a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f468d46a-8a2c-4f85-9136-1611b5acf725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb0ded2-ff88-42a1-a2c9-2c63ee0d8e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae6e695-6569-4111-81a1-dd17b969c2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e20ad2-2c80-471a-99f2-6bc049866807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5036345-c3fa-47dd-ace5-9d18cb606805",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dc2b22-6756-41af-8998-efe2a1ed0e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed87c308-8cfa-4b09-b883-9ee153d1ac92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dca8de-e7de-42b8-b6ad-9f676bcd2072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b859c0bb-7241-46b4-bd3d-dfa05a9dbb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8011759f-10cc-4722-b934-df5651db2028",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4661c4-6ed9-4945-9965-cd9edf51d761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b48502f-aeab-434b-bd7f-c300c8f3fade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d633d4c-489f-4ced-957d-e775c00c1fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd99a1ed-6dc5-48e7-9dc7-074112295803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ba6842-325a-4769-9b0b-65b0d22e1fde",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3046ab-e2bc-42a8-8636-c842855a2b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d332929a-7cf5-4619-a38c-bc463f2913bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82adeb31-e3e0-442f-9c46-50ac25eb859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85915e3-1d04-4b0b-b528-0965724cece2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837cd99d-112f-4a14-87a0-3ccb95ed120d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab55ff-285d-458d-aa73-098397fb6d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68536194-4d1d-40f8-92db-0375ad4f8bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d94aee-85b2-4451-8a8a-479802d1afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac8f245-61fa-4e3b-a5a3-147641d3b73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316e8a20-2852-403c-afa4-6f120d8b8712",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa98d39-4270-4b40-be7e-53a83f63ecf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ac720a-d6cd-4031-aa3e-b31aa0a86a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9f9808-92f8-414a-b6d6-540cb01481bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31d99c3-0545-44e9-9d2f-3168fc097ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6308908-5ed5-457a-aa43-df4c0a6ddbe7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36395af8-3818-4775-abe7-afc222241e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37c53ce-9fc2-4831-8da4-33a72ba3d164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b78329-0637-464d-b57e-014a65ecac6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3370cf58-25d1-48e4-9e99-bef2c02e6978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e528eb8f-00ea-42d4-b9c4-ddde0b193fa1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a0c5c1-eefe-4a78-a2e2-d59af8ebe9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fb8147-45c8-4e94-96b6-1e1f39ebc9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32add05b-f3e6-4614-bdf5-5bdac090cd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e149a8-25e2-4205-b510-363f4536a8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346f0faf-9cab-4e51-96ac-c4b2ebba3052",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf846bcc-f596-41e0-905d-8b2c296785a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc5e597-11e8-413c-ab23-40b1f1fb38ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e99591-270d-458f-aca2-0a248a27807f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1990537d-9ec0-4569-a286-01cd1c296f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dc1a41-8b12-45de-b1cb-7162062e8f05",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e866b1f3-f869-4cc9-a206-11973b593d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b9e2d3-c322-4181-9014-16d156933cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4801bab8-708f-4f76-b6e6-c2980c0fe5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4f09cc-3e52-4626-9358-c30363c5df7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c3cb5a-5145-42d1-9e0b-846094dcf29c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5361ac-64bf-4dd5-a759-659ba51de376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4793cfd-9167-4f4f-b9d7-b87566f1c071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da54d657-6252-4c0e-8d60-fd80007bb905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c92925ef-0e25-43db-bb10-608c28b4f399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056fb8a4-6507-417a-bfff-c7082d34d0b1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b194ed5-a9fb-451c-9770-e713183479a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecdc25e-3973-4b59-ae93-6f484024e716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3dbc2e-bc4c-4900-8296-aa3129200058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71d892b0-ef89-4c3e-b8f2-a0b014038a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae12670-3037-4d2e-8c27-aec236b7a494",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0b7eb4-316a-474a-82c3-57ce7786cebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1a2c85-1833-4cf4-907d-0a9e1e240f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0647f8d1-c867-40e5-a3ca-c0799fc8224d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d897c293-5408-4a56-8086-c071de9161fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7723ea4f-5345-433f-b901-4ccb6ca6cbc4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb78c9dc-72a6-42ce-b70a-d5e15c7f3a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4677d9-1a5c-4f81-ac3f-972d5f2dcdf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c334c5b-a401-4b85-a5a8-b455e9470195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "264375cd-3c38-4347-a8b4-405aab8976f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee14cf0-9531-40ff-9066-e61b99cc329a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07fb0c0-5f57-4b24-8d45-156b6f80d443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb14b1a0-0ea1-461b-90cf-6bb20cc7b736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced9978e-7c01-421b-a947-1730fe87a22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb7dee7-a6d7-425e-9e11-7b16c303daa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f0aaf3-005f-4583-9bd6-7c24c303bb81",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fdd2a4-cd28-4d81-b7f1-873d990c112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba875d0-2623-4038-9970-48618ca9664f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116d4c3f-3b9f-416b-9ad2-7046cf7229b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e93450-be28-4d38-bd6c-b28e87945c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031cd62a-9155-4485-9f15-e76ffadacc6a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14694043-4218-4fde-a2ad-986c936e971b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b22ce39-4f7c-4322-89fd-2260004510e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ff9f5c-90c5-4b35-9b2c-8ee48dfb3181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c61ddf-6811-46e7-ab1f-5450d145b34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14792e-0583-449b-b735-cdb6d2e234b9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6e6c91-2e90-41e0-a450-b6423af2810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf86282d-c5dc-4372-89d6-bb113034dc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b08af05-d52e-4250-8bda-8628d3379b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b789026f-1115-461a-a8d1-0aff03f58f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3de3ce-463d-4683-9bfd-0d38f2ed2f90",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59554bc5-cbf2-4b22-ba91-7e80fe71841b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afd3673-ac00-4292-bf63-6c0a06bb4393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb54fe3-cfb6-4db1-9e9e-b7a705a780c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0950373-c40d-4f7e-b697-8ce9da80eb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe0e32-a83d-4773-92e8-bb0006b9935c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e658a3-dcff-4cd9-a036-99909847279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1be5ef6-d527-4d2e-908c-7991105400d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafbffc7-a987-45d2-a223-7d68006136e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "880a4cc7-9332-4036-95fc-2e36d22c42ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4683e2-984f-4fde-922c-273039e34290",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7be62e3-f117-49ca-9c51-ed3484ba5f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5018ffb-b34c-413a-a216-445a683ad010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9b229c-9537-4e7e-abaa-f8b9beaad2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd2c3a4-8d50-4a73-9b86-98f64c19e305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4a8552-56a0-4e57-b45a-50f891380ded",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9b8cd8-5992-449b-92fa-0a990ae4a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa948eab-0fa3-460f-bad1-5b1cb6f89fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23ea237-4916-4b01-9188-984a5175afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de2c179e-f113-4674-9755-a0eda4bfc2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266f8502-7d9e-4343-bc1d-667cdf0c864b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d0fe48-31ae-4e59-a080-60a91f4c0eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7bb8fe-039d-482c-93a9-fee56f52b68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9706f4-c8e1-42db-bef4-4fd0f24d35a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45bb4a0f-70f3-4234-a751-da4113fb5cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc5b59b-ccac-440f-ae67-866d21852dd4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b0bd0e-ab4f-4fb3-a313-074c3898efc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32c0d13-a41b-4fc4-9d49-a2fba2c4ba76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59659e38-4ff7-4199-87a9-d680ab7f3973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f52f80-41f0-4391-b012-9d5425c95267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74777962-948b-429c-917d-c7247eb3b220",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085a5518-630b-4903-a29e-06c37e0882c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c179a76-d415-4048-9308-4850ba84884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e909b063-5d20-422b-8406-48fc934c49ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0cc9b8-22d8-4c77-ae3a-c48fb340caaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7888d8dd-ab0d-4574-9595-8a908c29729b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21d987ea-a4b5-4b88-996f-b4487725d484",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a29283-a0ee-40a3-bc60-438a84ddcf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fdea3cc-e459-4025-a5e5-1f5602b66b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90ad939-2793-4e88-97c1-bab672ad8293",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed8d50c-c021-4885-9743-fd57910267d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95177e8c-2c24-4493-af5f-71b4c0626ff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09ba04f5-7d20-41e4-b76f-e8228426c7d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c310648d-82a9-435f-9642-43730dc8febf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c52356-ae60-4e3f-af25-84fbd5db18a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d37bce2-5835-4def-8ee5-9a03e4468305",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b8d1d60-44ed-4902-a4e7-ee4fa51c6692"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb838a42-c1c3-44a4-9f74-89d3f39e65d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bd31134-5294-4ea1-9c26-e09e388565ed"
                }
              }
            ]
          },
          {
            "id": "8deaa721-be56-4e3f-bd72-6527f38f086b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "909fa007-6632-49ea-825b-b3764cf1714c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "67347a4c-25ac-4022-a229-0650e277d007",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fe3ff0-6075-4d1a-9d9c-204c3e2911e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6c730376-ecdb-4441-a6c0-ec1dfa0b3fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e22fc5-d78e-4f2c-82e3-3c12803f27d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6ae99d-62e2-4cff-9392-f2826402636c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b171ba91-3a9d-4f7c-a1db-da11fa82cad1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "805264af-0e14-4f47-8646-695f1a354949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2479535-b1f6-4c15-a732-2472e9f380b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "804b2fab-aa26-4c21-9f28-53974c74bb7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eae2f095-edd2-4eb7-b086-7277037934f3"
                    }
                  }
                ]
              },
              {
                "id": "5084d53b-d3bc-4430-b636-26d3806504cb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1295133-442c-4cb2-a661-495f9d6c2abb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42045e88-8166-4b33-a53a-b8181889ba37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "466a0744-3080-4747-ba57-9cb52b90c1aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14a4d3b7-4617-4a93-b7c3-1f8644ef5960"
                    }
                  }
                ]
              },
              {
                "id": "ef6c60d0-1c95-4544-974e-82a0834560bd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d23efc85-5327-4f7f-8201-35713f18dbdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76cc074c-acdc-43a7-8a97-f35a98cb72b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6abf53f8-2f69-45fc-a29f-adf7aad2c163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6d33770-2336-4c64-843b-4393249a32bb"
                    }
                  }
                ]
              },
              {
                "id": "784753c1-3b21-417c-a5cb-b2ba1c9ede58",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6321dbc-1808-4070-8f12-6f6ea58637ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6c7b7f9-08a9-4e8e-ae88-4929865cc507"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c79688ae-99c3-4277-a3d5-37cdc0df7470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "deeff8b9-5e5b-4aab-9799-26009fd971b4"
                    }
                  }
                ]
              },
              {
                "id": "075047ce-62b9-4495-9aee-040c9a497abe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14bd41b5-46f2-40c8-931e-12bbd25299f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ad3ab6d-fe6c-4138-9f44-5686843bab12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "751d092d-fa1f-4b60-a48f-4fd17c5e6a48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5ed23f68-38ef-4f41-8e93-8e18792ffddb"
                    }
                  }
                ]
              },
              {
                "id": "39d436f0-5efa-4346-b184-92aee449d137",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0e1ddc9-568e-425d-a78f-3228376189b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e24a038-e5ec-4ddb-9e72-623f6ec21b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c913fd5-b1fb-49e0-b5e2-b408c0198aef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1232aba-5aff-44b6-9bf1-f49ffd1ec5b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef2676af-e4a9-4456-94d2-cd3de9189e4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f679346-b06f-4bba-8864-99b3b66255e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61a571fb-09a3-4dc9-a8ea-4f2b261cb01b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72906e3c-f57c-4643-8093-67c803d4fac6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcee1b86-9c8e-4518-9293-ffdc6fa5f977",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7ed7ba99-b40f-4a6d-975e-56ca9786daf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65a554c1-221d-42b3-ae67-7dfac6189765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d88cd80f-33ec-45d3-b047-28013f42b0ee"
            }
          }
        ]
      },
      {
        "id": "675fa32c-7ec5-4c2b-95d1-b51b4b0768ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3fee325-a545-41a9-b756-6424c1688152",
            "name": "Negative Testing",
            "item": [
              {
                "id": "860887a1-4b57-4da7-971a-41621ba21646",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59596935-bc07-4b6e-a54d-9abda79f1dd7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b81ec7d-d1f3-4c86-9fca-7de17240395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e691667-de94-4661-9097-eb38e8adad71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5de0ec-8fac-4d41-a08b-98e4496b7047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ae9249-a3f0-4a3e-9756-58259a4c9e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42ec5af-c4c7-4c6f-ade9-4a83cd40ac02",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40a6525-f163-4f27-9443-30cbe9a8dd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97847861-3f10-4ac4-998e-1de197720655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec8d894-1c19-4606-9af5-f2068a576de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bab1918-25c5-49c8-8378-a3f7c3dcfe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa7570b-9f96-4c6e-b36c-a3a5da32bbd5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6108452c-7585-4f0a-a1e3-197606ba259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7cf1f4-a391-4710-9f0d-abeccfc964cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed4ce70-d5a2-4f04-9eae-79c3d6f5535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "929af793-c9e9-4a60-8e1c-f47198afeb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a3de37-7145-454f-8a3b-902951cd0c3c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbf0d1b-6d4b-4aa4-b721-15f6abc04f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72aa72f7-c382-4a05-92c4-bca8e62cac20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d4fa98-7877-433a-bdbf-e40df189a079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4d7a58-c2ee-4442-a6e2-4014d3fa9ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caeecf6-80ec-4574-958d-8603a244c5d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3d3d98-0630-4208-8d80-4c7947b721e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf2aa74-0bdd-45af-ba0b-eb9e8dde5818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ea5f1f-1c64-422d-b42f-2be1b391b46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80dcd1d2-cd4b-4bb3-8d68-1676cff32931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a678634-db04-4d27-a70a-036ebc902779",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b6cc03-8309-44db-a2c6-8a1e2a6e167f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3464c218-c16e-4d49-be8e-8ca88840ff5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157172a4-12b5-4142-b286-ea8cca6848da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c91b9611-a140-4ad5-8be7-b5b5c5d1211b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e832bb-df0c-4322-a143-e8bf5f9a2607",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb0b40e-a16a-412e-baea-32f87e95f1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ed063c-84dc-4a00-8ba3-ea16cbf68918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0efe119-f5dc-4dff-a9a9-2595d21f89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd1bd7b-2eb3-4d2f-a9b8-452d27965507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92707cb2-19e9-4c29-adaf-1f96b3ef09b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b8fac3-d623-42ea-93f6-29af4bbfc2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad251ab-5183-4e28-9c2b-6cdd536eb11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9719cf-c0a8-46a5-b7ff-b6cadac77701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be893c4-50ba-4d74-acc7-17ced762b57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5317dd2-ca66-42cd-a18a-72c451a4013f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e91655-84d9-4beb-8f1c-2d23e3ce8ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56756ba7-77f9-4c8b-a87d-3537100899d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6770f2-6c2d-4d0e-b98f-165d74d2fe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b48170-02b8-4052-9a6d-aabeca635625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7ca172-2335-4d85-b49d-964a34120dc7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe36350-f847-41a2-8169-4810f9da9430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42548f9e-f274-41a6-a8e7-e004fc71aa1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8fc015-a5b0-4a98-a442-b359f72aac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37092182-5c0f-4013-98f6-3460f0d538d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916a7583-e15b-4dc7-9ed4-aca06d913f32",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897575b2-982c-46fb-98e6-0b81e388662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76df165-7353-42b7-a4ae-70abf3a20f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5145332-4402-42cb-b057-69f1d495ab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b7c236-9b06-43d4-8505-a2675f06ca0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0f57f3-def7-4988-80bb-45f3972d340a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f88fef-0de2-4e58-8e42-1cae8d65a52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8d55e2-e461-470d-84a4-c054ae95b891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28afd626-0aab-4e9d-af71-6614d1eb9cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7016187-7b4d-4751-9176-4e505e1401c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf66cee-f91a-4f88-bd49-1cdbdd3e1bba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f899458-3231-42f6-a976-033af9365456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbb780d-2f75-46b3-b1fc-2526700f7d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb93377-36ec-4739-b3da-d238eae18c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "048a6c68-09cc-4223-a0c5-ea2da814b316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ff4058-45c9-4f26-af4b-23af9889f75a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc973c99-3746-44e5-9f68-9462c7b9bcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9aeeeb-1003-4be4-8757-4ab645cc4a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685a89ad-aecd-45a0-94ce-0b3843034152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45e7503-669f-4ccb-a925-f20918366d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0595b5b8-a25f-40fd-9983-e42dd523b7d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c839527-1832-43fc-a62d-a7a21736e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3dab4d-626d-44c5-8a90-ef00e933d4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35077cc-a064-49ba-8066-3024f7ed9851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "60014c17-472e-4d2d-b1e2-0074807113da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82de41f-b28b-474f-a3e6-ac35933c687c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9223853d-9099-429d-bedc-5f106464b514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1a3805-fa2f-4cad-9e25-fa8119575d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22278296-a3f9-4ca5-a07e-b2f0cb561f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9122e887-8815-489a-8fda-2156a4b97b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37e9c8d-5b40-4043-ba24-f768df29e178",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f09d5c-5c75-4987-8034-a046436c6cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76aa3235-597c-4db1-bb5a-9ac51de12e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3af68d4-9e3b-450c-98ce-d2b17aa7eb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c7f8be-31a5-42c0-a651-164ccef5f779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d8b970-7d64-4ecc-8feb-f6e5b2cca249",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe4e152-7595-45e9-ad67-38d27fc2ee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e212c60-73d4-4ac8-9231-f2212de2bb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e285e395-0b82-43e1-9918-837d233ba496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1a8b91-ccdf-43a9-8cbf-4eb0fdca32b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70fcb7-d300-4f4b-8abe-1d52ae4d9a0c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcef4cb-70da-494a-91ef-57e491da86d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e76383f-4834-4780-9c1c-5391280d92da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a15f71f-501f-494e-ac51-117f97945b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1825de53-73b0-4d57-8b12-89533a7b7653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc68e52a-4d9f-481e-be50-b255edc9d36e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f95e4cf-9110-4776-827e-0a9947ca0710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a49b79-f28c-42ae-8e14-9d3925c3437d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60451b8a-098b-4072-b551-c99d982fc718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8301555-57e3-49b2-ac1a-de02c5973504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f088d9c-63cc-4d46-bbbf-9b44851a822a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82966307-5da6-41e2-a2f9-268e6fcf7cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d944762-efd3-451e-94b9-f3b924e675bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad8d66-b21f-45bc-a243-70b145c075d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b740dd58-0980-4f0e-9208-71f8140bd4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59e9252-3ee4-4fea-a9b3-839e30964fa4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3255cd00-854c-4f56-ad0f-c3dfd05ac527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51c557b-21ff-41d1-9882-1238433851f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d329cfab-c377-4ffe-a490-ba5ec6c28dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d19daf-8862-47b5-9c19-c850acc16cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff8906-01b0-49dc-976f-be5f914cf845",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90aa12e-9a18-47ce-bbd6-aa72ba27c5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0650428-2dbb-4cae-8470-bc6f30b3c76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4f752-438c-4c88-bac4-8f52125ad798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abbd5bd-f0b6-4c86-8cc7-9398157c02e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7b9280-d5f5-4680-bc23-403554280056",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367667d3-b142-4276-bffc-64326a1871a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b9c5b6-d057-4227-b3ff-21c5eb21e928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755c2d8-bb9f-4dcc-b7e7-5a813858ce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7d496a-daaa-4616-a5d3-fb2468bacb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f75ca8-8c90-42c1-9429-a4f01a5c19fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c395b231-9037-48a2-9c4e-f597610583c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7eb3eb-5db3-4820-85e2-69fabd741544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb89ef4-38ce-41db-a57b-ef0bc2bb1117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d48c70-d202-4f7e-9224-5a9f09c965fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2d2683-5e82-4abf-9797-d91375402799",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2176506b-0953-4c7e-9464-15667914959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d387dc-303c-44bf-883a-bd660b28504a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0353a7af-c9cd-432b-9286-4f9f4b1a942f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbbf4f5-0fd1-460b-9f55-a825bd2a7045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe5423f-a11a-4670-b753-02e1bb0429da",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b5e50b-d372-4840-8203-9088cca7725b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84c4f0f-ece3-4d5c-bb62-90b2f8227ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d1e647-639d-4f23-85f9-90ff6dda60e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1813ef0f-0cd6-40f1-a5ca-94a3de99876d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40628e6a-c7b6-4a4b-a01a-a373c5e84b86",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b36cec3-d19c-48f9-9b2b-3aebf0dec801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f2c7bb-c0d8-4646-85ba-17e87c992b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05487403-7121-406c-a1fc-f2d77a0fbdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9fcd69-dbec-4cfe-aaa2-67344602551e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829dcbbd-f3ce-44bc-9127-ad59a4fac375",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9299697d-dbbc-4458-af97-d6a77fc7e98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de3c5df-817b-4672-a8ed-e35179357754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386a1a3f-ef29-47a9-ba04-b5619841ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb4e4a2-c0df-410b-aa59-762c0ec92a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f356b4-a8ac-422f-a6b8-e9f3d06921a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865dc58-9907-403a-8970-1754c9af06a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6c8091-e837-4839-b303-79f4c1f583f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d5968e-faaa-4dc8-aab3-0a75659846fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5019f51c-9f72-4398-9c85-62446b4e6175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01029be1-22a4-4b55-9b3c-bb40dcd0104a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08af3b1f-cf33-4553-804b-1f532de4fce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76630222-1fd9-4eac-a18d-58c6480a8a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab29a88-9582-4dd1-9177-04c7c4fb909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ab2582-c407-4c52-b80a-c7aa86b10ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8118634-90aa-47c3-b655-9d43e2047745",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaff801-3c26-4409-8fa3-5496d2f7892f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1bab64-ca90-48ff-a98a-1fbb002ebbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94735c4f-17fc-46db-8db9-1298a9ac8fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a62707-c2e7-4f77-b104-183159131bad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c38e02b8-bd99-4166-9e36-0376d8623fa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d0de1e6-5045-425b-bb2d-11d3e34d9102",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72629e40-d52a-468b-a52e-ed97166a3c09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3111c3c-7d6a-45c3-b642-eb716cbbf0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a831633b-25c9-4e90-ad70-283b61de5e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "420b4b36-57ab-426f-97f1-81f2fce9e13b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e93b6862-07eb-437c-86c7-c64dcce6b137",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e684fdb-a953-4d57-bde1-77fb1580b9d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "332f6da5-dbbf-48b3-a4a7-190587834e60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be4d749-1716-4836-8571-2f2975c75d77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "303c2ffa-e6be-42c2-b10a-2852f6dce54e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6de2652e-830a-4cc2-a3d8-0eff5438938b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fae397a7-93fa-4084-9420-a2bc574a50cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a68a2424-876a-4a43-9cc4-2d9aafc3d0d0"
            }
          }
        ]
      },
      {
        "id": "e2aeb6d5-57ad-4bb2-80cd-7ee944d6d61b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "772ba829-aa7b-4bba-a389-c8c3e601aeec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a23c9306-a255-4756-aa3e-caaa36ef948b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2bc69824-7eed-4dab-9b80-c8192b2bfaaf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58906d31-cda2-4398-9e47-5998e76917e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6e58f8-0a06-415c-b643-9e5ff029ef8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638c08e0-2255-40b3-8709-c39f8276b5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c34289-e417-4ef9-b826-12c3a9f40eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c5225a-581a-4957-82d8-8a7555439592",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ecb33-aba3-49da-ab3d-42a757901e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32c6682-8cae-482e-9c6c-c22663c83216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f67766-5fee-44a4-9dc5-7dd14e5e78ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91af9864-db63-4f93-b141-c7176f75cd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629cbce4-ec26-4a43-aeeb-c0fa9c256b1b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3fd8dd-2049-4242-93e4-634960e00fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3bae14-e6d9-46e3-8a1f-a381b5a2565d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56723f86-a9ef-43e3-88f5-1f27fdb7fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88be11fe-716e-4ddb-a50e-c8c07e5ec7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f2a49c-6339-4596-b82c-ec850030498d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6fa779-93a2-4e18-8043-25d2f871ae2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b8f655-cf48-413c-a066-f2395068cd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121851a-2901-4d7c-9ae4-e64612f40e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0867870f-be8a-41a0-a957-cf0cb71a4bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880b9602-6bcd-4e86-b2cc-7ddeac1e6eb5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141dad88-4377-4de6-82a8-16adfb08598f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60e6b09-eabb-44aa-a407-80ba127b2a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1840986-767c-4d4a-ba28-373092cea158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3a3d40-96cf-406c-ad3b-0d434959c305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb4fd68-3033-4b05-a9e2-f82b41c6bce6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eea4cf-752a-41ce-8629-3cac4dcc741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a877bb1-ac1f-4582-bc53-6c9382eb6604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c88f538-65d9-4f86-9592-c48b64ca1ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18893c63-4cbc-46a5-9880-500256234093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e092e24-bf99-45fe-a700-d19517ec4dc5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b53c98f-e51e-400e-94fd-e0544509050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be06bd7d-ced9-4630-a9b6-c556d51aafef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c7e458-f011-4eee-a947-cbfab47b1037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "155e8246-a5f3-447b-a46d-ea70dc494206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcd699f-8460-4762-bbcb-43e545a92d4d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18012023-ec1f-498a-9a68-c5e83c4b10e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f62047-0b8b-4ee6-ae70-b2edfecc8a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36df2e1c-5feb-4829-8815-7572853466b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbc6a55-54a8-4625-b9b8-e4c8025a13e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672b46b9-b6a5-4bcb-98f9-3c6da13247fe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981eddad-23ba-4868-9ea1-a8f03e2adfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baf9d85-0fe1-410f-a651-7721d6934436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcbd33f-1395-476e-8af4-7dd070df65ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce65943-6bd3-4257-8f1b-cc45ef6a1800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3069db-005b-4e9f-b408-8be7b3f0be60",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9243ae67-f701-4c91-806a-3d7f4c6889e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e13315-924c-4c7d-9951-c60c77e52fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbbd55a-66f9-4cca-85da-36b68c2f6887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f177a2-8a85-411f-93d9-4e77f7901837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64b0524-d6d2-4dfb-aa76-01383bcea815",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3a1118-008d-4af4-8ab4-7a9a44461a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f991fb-987d-44ef-a803-0c1fb8479856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2797a198-a714-4efb-adb1-d1f09c0f4a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39b44232-5fc1-4f81-b0d0-659717561413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c31164-2c86-4cb7-87de-903dc18d62ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc70d9b-e4aa-4a5b-8a2e-02e249c392a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3b6b67-caf0-47a3-9eb7-2d95cbb96cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f68d939-27ab-4074-b8ff-cdb000c2a431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84803ab3-41a2-4a7b-b532-77d92ed51780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb079b6-0bd4-44d6-8c6a-39a0e45405e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26602092-8ffc-420f-9be6-33d4cceede77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12fc11f-da70-4d8a-8d82-c6b6375a17b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f166747-2fd8-48d8-a565-eb481afce62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4121364d-5f59-48a2-9e1a-18e2e76e63bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cf5840-fb4f-4a67-8fc7-8610d1e66985",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e273ff8a-57db-423b-98f7-dfa1eb05b26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37eb2f93-e931-4bb8-9936-2b686ebb660a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5a18ff-2af9-4765-8db7-7ad5c7aa08c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f09d22-0074-4fff-b519-7dc7bafea5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c15877-2e24-4e59-b5e1-46b4fdd7fdfc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0a232f-d74d-4209-8525-aaa857ceb8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04d3600-042e-4fdf-a94a-501e4d7572a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e2a14-fd98-48ff-b512-e06e77284c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18df8494-d27c-422b-a000-d594429f8ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baff45f-6e4f-43ea-8ec3-98641264909f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2eaea4-a8a4-4764-9bec-4abe14a4ec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4fb60a-a942-43bb-bb74-1fdfd335d328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8907c844-2560-4ab1-8658-1f02e328d964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ff336b-9b63-454d-8d79-c2158ec9418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd509a7-a8dd-4d53-898e-89c8b0b258c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf75bd0-6eed-4db9-92f1-2ecc718a972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c9eaf0-d3ce-44ff-96ee-e866e8c725e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8434b426-556b-4656-b5af-8576e300a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4dfe10-5563-4704-bb3f-82508ee2d712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f569fc17-b2f4-466e-9e0b-a304d59d15f7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3441a205-046e-4212-98f2-864e6145cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e2d3bc-650a-47e0-85d0-e1fcc0b353bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e627f1-dcc0-4e3b-9a9a-b6903cd8586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0346a8-e055-4f29-9aa9-756b77cc41b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3397613-5332-44d0-92c6-fb5093a39abb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff35860-d771-46b7-9d37-bddc2fd93244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5974177e-8af6-4ee9-8236-4d0c84e13df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429565fb-ce02-4a6e-ab31-1f5537b475cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f0354a-c1d2-4eb8-9ed0-7bdaa61688a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb963c4c-f155-4fda-8125-53ae803b5f01",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806c2695-d253-4954-b346-e14d5a0d84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73afb2d6-d159-4430-81f0-622ee01ca36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a854ad-c59b-498a-99e7-10635af85aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5467d63-6ea0-4c3e-9ccd-61b9d0ebf0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b991f9-4a45-4025-9c82-65413936374a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353aabee-6128-4a78-a607-00e1607b47e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a861015-12e6-448e-8dea-7a0f40f070aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84b20db-def9-48db-844f-33bd734af43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a121715-7797-4447-b0f7-8422cb2ebade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a24a0cc-57d2-4804-9e08-66358deb5ca9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a664b3-b0e3-43dc-a419-0ce01d2de6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab183e3-e1d3-447f-8716-b1c4b68b9265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffae6e33-79f7-4b41-8da9-81fb855e64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6ed19a-ad47-40a0-8cc7-89b90d98f351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06829c43-1680-452e-bd0b-a0bef60347f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9925c832-3bd8-45dd-9698-41244682c860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5125da2a-9036-43fe-92df-a6aa85de1291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37e4b30-fd50-46c3-ae58-3b2200f3e734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa43e320-ab7e-4c5a-a0c0-adebac9cf753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b3ac38-b3f2-4ddf-a0b9-ebb71750bdee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf26907-f447-42e3-97ba-b6ae4b92d3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d746699-f14e-42dd-b21c-05847c57f846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e55b5e0-cba4-4eb8-ad1e-29101f101ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc738ba-64d0-4ef3-9bcc-4d633a162b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a779a6b2-2f40-4b96-a1eb-86aa77f77977",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1dc140-a82e-427a-a97e-d3a5b2e24eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d55faf4-23b7-4c4f-a535-2231b391c492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9320886-2a7d-4e73-92a6-f4b1a370f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee79e552-c357-4e22-8c44-e6df7f47b116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea2e1c7-92de-440d-a662-fa7f95c4a9ac",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfd3398-2829-46e0-9444-469ccac391b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c894a3b-312c-4953-b708-f1b523388ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12fa641-782d-4ba0-be46-72e4dbab8b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54faeb2-2572-4235-bc61-e461fbe7dc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bae69d-6584-49e9-8eee-156fcd7bfbdc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc9939e-e54b-4f5c-83ba-008a8d26361e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dc50f5-f477-4743-9efa-8c1ccaabad8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e42ad6-fd63-4657-aa25-cd62cf5115f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0466d6e2-0c10-4e04-8326-24fa2e4a581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72235e37-f854-4550-8f15-8030598c27b5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4688af00-25d2-49a0-9ec3-93656aa21ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32c1920-03c6-40e3-993f-dee14625e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d641aadb-50aa-4780-878f-90de3bfe0350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "558024ec-73f1-4a0f-8bd8-024494a045c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979edc16-811b-440b-9ff3-3ad9ab0a804a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae08aa-f4ce-4ef6-9b2b-c4855d0d8c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c12fd8b-6c4a-48cf-a693-470ad9876127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69847566-308d-487c-98df-c11291eaf4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "994b5278-286b-4143-bdda-51c9da46c418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d9dca8-6b97-4576-b613-1aaec0eb2865",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70ad24d-7e83-42a7-ba61-b7afbb8070d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f5bbed-717d-4b36-a70b-012c824e44e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9f4ece-ef41-46c1-9be1-f164a0c39cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82be2aad-a7a3-474e-8732-a98bf5d75377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add97bea-1a16-4c4b-9283-74a521612ea8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda0e640-7614-42ef-980d-e1ce224dfb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253ecc72-329b-47a9-842c-e6b8f81e0774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1662bb4d-9bb3-4181-abb9-8f993b647a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48679b9-daa8-4d51-9bbd-2556eeabb9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c690a9e-1209-4c56-a627-a9c7fd07c172",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c841fe1-efd3-4d2f-9587-d019f3c66e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc19c48-77d6-4e4e-aa8a-19959f39acfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4c3343-e6d0-46c3-88fa-5d5f36e1f591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24dbea20-f084-4ec4-bc0c-f6ee8cf40d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1342fbf-b27c-4589-9e74-8a4cb3974bc4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3479e73d-d434-42bf-ab1f-d1b2696774f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1e1c05-19bd-4627-81e9-6bd831361918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06180fbe-8e1d-47c2-93ca-721443af2b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5ed173-9095-47ee-b809-be9c0fff5959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bda12e-1f70-4fae-921f-fe6ab666cc13",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4621b0ae-24e7-4eb7-8ba1-8600ed2fb12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6941b0f-1865-49eb-ad6e-9963592b3da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1c5e63-cdaa-45e8-8a84-5cba5d77106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05483b56-e20e-4f90-bf21-269d639f2563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530e7623-36c0-4424-956f-15fc41eb788d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c1c0d3-9a91-44bf-bef0-32652d674817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1359ab46-e8d1-4430-b6c1-b9b1df64166a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1d9026-95c6-41d9-b2bb-16390c134692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6667d1-c271-4d81-b5f2-1b47d13382bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9edfa6-9306-4c62-b1af-5e72f3017f6a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381c795f-3c34-42e7-9007-9539fe12308c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b188aa7f-c400-4eb1-a38f-2be0f5b268d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61088238-db7d-4f60-971e-a2d63662d03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfeff81-de8f-4796-be3a-e61c42734c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b02f4c-9616-482a-ad6d-6c01ae7c8c81",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add1566e-8dcc-4301-924f-a760d57936b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5c39a3-9432-4db6-b41e-7ddcc62ff526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc4aae4-6ad7-4087-8bd9-b49e54922f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2dd323-193a-4016-a6b3-4072a63ab7ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70d22a75-73ba-4075-8e88-ee6de6bdf1a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0c6f04b-d351-4be3-a41a-d843107a2355",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905431a8-6e82-4144-9e88-d9ba573fee5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e9ce72-31f6-4cac-99c7-131ccaf285be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ea3502-5ea5-4e7a-a008-17f1ddb4b16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b84772e-f4ee-46a2-8ae8-239023c1bf61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd01a0c-f9e0-4e49-bf24-1f176cc8e4a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "659803b5-dac5-42f7-a396-c77042a013a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4834f8b5-a4cc-4097-a24b-5515f30a8b7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4b3ad23-f035-4248-8034-b0aeba815ac4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29e466f5-e1df-4d30-a769-bd1e94fb315e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be396563-b19d-49da-b61f-ca38d04b5343"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfd47fbd-c224-4c23-abbd-5e1681799534",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a8c0a28-817a-45cf-857e-c6b3b3e61433"
            }
          }
        ]
      },
      {
        "id": "51a3cba6-4cc6-4833-9c95-1709cb5e0355",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "826d1234-0c2e-45d0-8eef-d9952beb5af2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5dab7a7-5c1f-4aa3-b9c0-da3b6f129d6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6990ee72-43ae-4d44-8c12-9adc7e736575",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4564daf8-9010-4011-88e5-8cf92f56690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dbd178-8c5e-4ba9-88c6-8f8d7c3e100f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f31475f-9204-443e-9b15-d6e064f8f5f8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c8bc5c-0dfd-45fe-826d-63053cbd9081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bd7f0e-400e-46fa-9314-3349ab90fcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dbe9f2-b305-4280-a3d5-65cfe695e6a3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70961d0-5cec-4300-9abb-dfa9567928ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97303558-2129-402c-9bab-6d47d9cdf0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecd19d5-2474-48f8-8fd4-3d25bd86fc5f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f925e3-eebf-420d-b33d-bd1f2cd813cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6057bbc-5a1a-434e-a50e-0b7d3ebf840a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2fdaf8-d80e-499e-ab2e-de94dbb3c825",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f655c32-dc7c-4691-a27a-14a577594f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23477b6-4590-4818-a4be-5e1a59755589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846adfe7-7496-40ee-8b2d-f03fd63730d1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55fc465-f0e6-43df-9642-f4886ba9cf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cbd9f5-d249-4db0-83ff-96f3ffabc0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e5e84-686a-4d00-9dd6-9adaad307dd8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d30881-6c9f-4a28-adda-b955b835303b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cef1dd9-867f-40ba-9da5-ae7242d84492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71829c3-38be-4816-8e05-ac143e8a9ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28fba71-ab66-4e3f-b300-7e44f6be95ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab45353-c49e-4652-9327-1a486fed14b2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528f8b42-ff70-45f5-a89d-c7a945bcb1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb8b976-28c2-428a-b23b-846fc40d43e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534baeac-eb86-4a08-99ba-9595dca47cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579b95f9-4bc6-48bb-9f03-6216dd317fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b49607-d9d5-4a4b-be61-fbd2015db582",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6172809f-4736-46f7-a8e8-940a4279ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f71ff93-5b19-451b-855c-eead371492ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f908d685-f825-469d-ab85-cb2d007ae73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0edeabd-cc1d-4f78-8122-9998da9ba4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81e2b72-5b26-40a2-94e2-d68f1f7f1650",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4c3789-be3d-461f-9d14-f08907d62e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e855165e-6f11-42e3-9ae5-19ba6be63ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8ba2da-bd64-4f7f-a1fe-f349828c1a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535ad4f6-c183-42c7-a33d-783f025688a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c145b6-935b-453d-9424-21a24901a269",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a685789-d87e-4b4a-9f39-f1da79dd87df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad120ae-83ea-44a6-a796-e691fb662497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757ffd78-103d-40f0-8d57-721cb0b4221e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17658a5-abfc-4f4f-a39a-4d6845b6d703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c27409-d150-4ac8-bd65-620fdae451a2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a887f1e4-2721-4f8c-be13-1731c8e1ebeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3108c0b3-34a5-4c7a-bee6-929fa7beb53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b4502-5260-45e6-bf48-a617d434e6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06eb0322-a709-4af8-8c54-4df8421cabde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a07826-c549-44db-8d98-84663a954035",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d99f782-fdc5-4ddf-9843-f811ff62a95c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c474838-0463-493c-b8f7-b5b8ef0c38e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c819fc40-722a-46c0-86c7-1712a418ea77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0ca739-cd4c-4a3c-9438-a9cfe6e2aefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c625c88-a8b7-4a7a-beff-dbff8ccfe642",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c658daf-f735-4823-b1ea-995566f9a590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db97594-d919-41e0-9407-30a23a04db58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e6361-322b-4736-856e-d2b2985bc1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d3337e-ee62-4c08-9314-c8405a67864b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdd6864-ea34-4bc0-99c3-17615db3524b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c15b73-f533-4d02-a085-d1075f3783bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29a1bc6-8cbb-4591-b228-fa2c6c8a49cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8338c2f-c55c-4787-8930-21eccb8f3d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba209308-bb9d-4355-bfa9-53bacaf4df15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f60420-25a9-4605-b694-718bd35326b9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaa8c58-edb6-4f96-8cfe-00dd9b7f8821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8574f54-80c4-429d-babf-8fe72a939764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2226e46-67b1-4671-9163-ff278b93ab92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825125fd-0fa1-40b9-a526-c2eba61369f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd57ac0-fe80-49c4-9652-37a9aec7c4a9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ea5ba2-37b9-42fd-a176-651e9628c60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb6aa16-2e16-4b61-9d57-ab301bbb4688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1720f422-3770-4f24-96a1-7a9363395ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2d21aa-cea8-48e1-b647-e1a68636d037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c31ab1-6005-4247-8ee3-ffda05b3b093",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1eeb03-e442-494b-ac31-63be4bc6f7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74329b73-0d8b-4d86-b85f-93d8102a2487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b01218-8181-4dde-b04a-a0de517dc217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537bae4c-5358-4045-9ed9-cbdcadbb2a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e16ba7-93f5-43f3-ac4b-8c48944ef635",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ba722-bd41-477d-bd0f-c9d0e5272ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134db09d-cf44-4e98-8ac5-9a4ad32af7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcab7788-dcc7-4bc5-8e22-643d0a9a8d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa0715-59e4-430a-a0d8-d761aba625ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6b6695-f5aa-4cfa-9a2f-dff011877dc4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e9860b-49dc-4052-92df-47d08432d9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062b9b41-c06f-4ae2-b0d7-c72fe862520f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2366c09-ffd4-490d-a445-90c66f60e84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a387c9-1ff8-45b1-bd36-49264d3bf7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94b7f25-cc26-40a8-9ca3-3211e02a37af",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebaa01a-a6ca-4758-8519-b038db030e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ca0ac7-430e-43ef-a6de-e02cb6546ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f38956-f891-495b-a2f7-c7112ff9d63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cddd1f-391c-4d73-9b61-8ce5b29afaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac9b3bf-ef7f-4ca7-aa19-5bcf9ddd6329",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b84d60-821f-4f2b-848f-3f271ab1ef29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ae3813-a439-4c96-93f4-7640fb1b7db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163b6261-175f-4b02-84c2-d06b3e385f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030315a1-2d15-4afa-bffd-f9223844413d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8b1475-8166-4ee9-874e-3f4699f3d908",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a79ce9b-617f-42d9-a3c7-1cb37daef83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca53a590-2dd9-48d4-bc87-f01cd694df34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0746e1e5-c5e2-4311-ba6d-e768a86971ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128e6a71-58e9-4d10-a5bb-f59345de5ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd746f2-a636-4f6b-8e41-23f191879b5c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe46d92-f2eb-442c-82ee-41607a423197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04290f2c-96e2-4582-be7e-fdf0e54ab297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0464efd8-b471-435f-9f44-e321123f8894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee80d5b6-1ebe-4684-99bc-eced572d4d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaf8a0e-eaea-459c-9317-90c8d35cf05d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d25041b-dd57-453e-b109-70b72e7262e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca2003f-f28f-44fa-be04-80170bb5b92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742136bb-c6cf-404e-9f3c-efb88ed5a00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc67eb56-8454-45de-94d2-64f1e11b159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6cea4d-2267-4884-aef3-e233e316ff6a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8348bd-26cf-441a-83a4-d7c6f6f806da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95a576d-e7d4-44d3-a38c-d69e2067aea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74184e6-fadd-45d5-9823-5fa574b0c006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64946110-84e6-446e-a13e-ada3ac50ac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56544556-c4ec-4a70-b59f-5e8f04a9e91f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c96d42-15fa-4f36-9125-041b7e918f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22aa23b7-9c38-4daa-b17e-b23d3a74956e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b593f0c6-ee9a-432c-9d60-10a4624a68e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85f2ed5-4a97-4bf3-b166-75c6c112ae25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc3869-31e0-473d-9ac2-776f916e08a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d217e474-10e7-4219-847c-2f59e0042d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d70853-357a-4b0e-b801-9d7a9697c1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f459378-18c2-4c81-a891-6e5011e48a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d3baf1-7e01-494c-bc31-1e625ae83d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e21db56-cac9-4efb-8a88-ab85289eb123",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae38b6e4-22d2-46a7-b966-c652d6a38487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830a08f4-b0d0-4416-a291-671355a344d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b19e0-d1b2-4685-b591-1c774507aa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4b6c1e-27f2-4e3e-bda6-642155540dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba4e0bb-5330-4696-91f4-e95c7a80ef11",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfd22f7-5fe5-48fb-9c8d-2cab7d8900d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae65911-2205-4da0-a99b-39c685e068a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a486d-54a6-4105-a95e-400d388a04ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e17f5c7-2239-494f-80d9-bed2ebeb9be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf4b8f2-e10f-42f4-bb6e-a1aef35f8b91",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5390fde9-80c9-4f47-b93c-0e36414f16fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce115258-af3e-4897-ae49-3183325c1da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0133351-bb1f-481b-901e-1d73ddadd2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee46abc-a4dc-447e-aac4-32ad0243e1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776c90fd-4b2f-4422-8db6-44f4c23434ca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896e18eb-82ae-4054-b8a3-7d3321a709e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42685067-85ec-45fd-9c91-35cf69b5addb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b4c6c9-13e3-44c8-b7bc-60a39ed92e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564e368b-683e-4ab2-b4fe-f444d0e57add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e27d91-be28-46d3-998b-9f48caa13619",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab1a6ce-cdb1-4f33-855a-ef885741ae36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb748092-e4e6-41fc-956a-bdfd41f27836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abb2813-e992-40a5-ac9f-fc4d4f7eef8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5bd54c-4159-44d4-818a-6c21272baaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce9ad83-7bd4-4fbf-a88e-87763d5bdc72",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3386c49a-6e5e-47a5-8f8a-35fb2455851c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf57b8b-59e0-45ad-999a-ceb4b673ee2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551fe08-6318-44f6-af27-bf1fba9c886a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82746c44-4dba-42bb-ac65-03331f623250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ddb99b-33d0-4522-9b87-c802fc0d304e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1faa6b1-2862-416e-9be2-3d13d9c48b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de27d6e-fcac-4257-8d6c-3ea04632941f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16af88fa-4724-4bf5-9d7d-bfe685583dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af613c0-6899-4c94-bbc8-3453901287fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31963d20-717b-4ac0-904d-b1a05461b3d6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41ed87f-532b-4222-bbb2-173791830744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a71ccf-27a9-4ed3-8aec-4bb0dd8ac95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59510643-c6da-4a79-988b-5c88f1324d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaba2e9-4039-45c1-bb0c-41976b1cde31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461b3d9f-8cc8-4f09-8d2f-e7b95b84bf93",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bf2f9c-aedf-4ab3-9c08-0acab809c029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd663373-c5cb-4056-bf82-05ba2ed60fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e185ece-1fc2-410a-9254-fc13e003a16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30aacf4-aae4-4e8a-aea8-fd4724e28c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bf358f-7851-4c38-97b4-f365bef61c68",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63d675f-b70b-4f1d-9631-97df545c5dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8347a3ab-725e-472e-aef9-ee389939610d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e62808-880a-4f83-8f70-0a2e4cde74cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e820e6d-01f6-4b75-8eb1-1f4d2ee37725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b52cae-cf89-4ed5-a380-1992d796823f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366cf903-936b-4e4c-97fa-e939924613c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631c2355-dffa-4947-b8ca-d345bd275bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59417b36-d619-480b-bd90-2a0ae846869c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f508c58-9f3d-4984-b4ab-9baedf8edea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6081f85f-9cdc-4dfd-a359-9b76ae1e8422",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba52cf9-8cfb-4f8d-b63e-99f10f1c346f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bb7858-546e-4329-81e9-6d6f0a7f5ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d085e8-4799-4a28-acc3-0a6cf20e0fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12e8d8c-8844-4cb9-83e2-9f49d127cefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d29d66-58bf-4e63-ad6c-77a37e868056",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a275a0-c370-4ff7-afcf-b6684340578c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610c3d64-33f1-4692-8108-f8b7928cfd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2df7d1b-f414-4eab-b43f-6e7788cfae1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e320aa-908b-4c35-8c26-2e8397f9e20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bd2045-d68c-426e-9d79-7d8f4cab69c1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7756e1b4-2340-4b8e-82d3-eb1cb9ffd8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68178719-2384-49d1-aca1-1f1fa81e349b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28329036-7013-4ef7-a9b4-b5f3ff8bca08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb1523a-0ce1-4b73-b9b5-44d6c6ece30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fedccc7-5f53-4655-8d02-cafffb0aaf0f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacbd217-569b-43f4-90e1-07e481899932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89d7240-a61d-4319-87e6-639405a6d08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a61fde-7a66-43c4-a18b-aa32c5cc2195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3ded53-07ed-4292-b4ba-0887dfea5e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179af709-7fe2-48b0-aa88-4e7a6d16852a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cbc36e-3a0b-4587-8958-9275515ab5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37e439f-90b1-4637-abea-340097d9eb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39226f82-199d-4a35-ab1c-727128abd028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9151df-f39b-47a5-8a25-f40056141761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd8d893-22f4-4b4d-acd0-c2ddcdd75c71",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81e0aa6-0cef-4cbb-928d-6f9a2e9454c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9706d976-a26d-4fe2-9b65-b2f23d180570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457e59e7-f836-4b4c-8156-89cbf5751493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67d8a72-81a0-4652-af3f-ef432b8f50a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce17196e-4d88-41d7-98e4-b3f1bdcc0dec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659795f4-0afc-4680-a20b-733e2d73a091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad96b3dc-2b48-47ae-b46e-c9f545a7276c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5342466-c6a3-4902-a6fd-203e8b50013d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5038d782-9ed8-4af8-a305-29328358d89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3385e1cb-35bc-42e4-95b7-0b2fc64ebba6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd460c2c-9c49-4809-93da-393fbcf65c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ac3845-afe4-46df-963d-b14270fcd36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4b733b-2d83-49fa-b0b0-38fd3f5f43ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26effc89-b011-4c59-8c63-79f0e4472bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774c0d4a-90ed-4a20-9dab-d1294ce2bf57",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f14c69-6b4d-4cc9-a377-453095bce28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e6e7eb-9703-4dfb-a4d7-c2faf33218c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db97f429-11eb-490a-a39d-6bab563bd785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4facc57-bb7d-4eca-ae50-7b9b0e1589d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e55db89-74fd-49db-a59b-54d9df417bbc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf302ff-89d6-4e4a-8fae-4c90ac588ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983d3f51-1c01-4a5d-bf47-f73555b4d66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eba874-a3f8-4def-a648-106342c2addc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6936b989-d680-410a-a0d8-e084bf3b404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1878994d-123b-4245-9fcf-03de7bb315fa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425e5d0b-0c30-44ce-8417-fb61f03de9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8dec25-246b-46a1-8c1d-da26ef09b57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e7bbba-f74a-4fe3-a53a-f122b46f5212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addd16ed-52be-4677-af5d-830bcfd3e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf48748f-1660-4267-bd4c-aec2a6e2a9b5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29573d36-0371-4470-931b-60427559b51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c42a9f-8ba0-40c3-b18d-7c22ae4209e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e96233f-1680-45da-9c81-74a756fd3a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e25901-07aa-4c30-afb7-68f700e50801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250e6cc4-7cf6-4c7d-a3b6-6240e4894c13",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9093474-4948-4ad0-8cb9-1341f5c6bc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d081df6-b01c-4c28-920e-309f53061c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b3f60a-ed7d-412b-8e11-6f3fca8ff513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29c9421-2d0a-4eb4-b8bc-b31f12299f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dff8f24-7971-4822-83d6-9a13705f1d20",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0402245d-0d43-406f-94c2-46dd2a32d26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e508fdd-2a80-472a-80fc-ef956feaf0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf601a5a-fcec-4684-93df-3f25f9f65c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4148d3f-1f94-41ae-9780-2e6ea83e9a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474ce4ca-9583-41c3-92af-27ecb426959a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00dd330-c89e-4fb6-81e1-0d45bd020a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7971fe-d436-47f0-8704-c13644c6ae6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9a4467-0b72-4a38-ae31-425cb6a10c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dffb4fb-450c-4b6a-9a2d-6bf570dc82ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dbed92-0c85-4cc6-86e5-e45d047a7781",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39953c-7de2-48e6-8f31-5dd07be589ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a9d87f-a923-4a33-801a-fd1f499b79de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d41093e-fd65-40c1-b46d-cb8021e6c58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca83d61-c4c7-45a1-b1cd-525d8516f03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ff4b18-5167-4a39-bca8-218105b17ece",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2655ed3-2ede-4552-947b-e59bdbf1b159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64745cec-5d60-4556-b357-a1df97b726fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fd172d-26d0-4ff8-9a6e-d3153725a2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4435f6-c811-4f08-b2c7-a734063600c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbed764-4502-4cfd-931d-e3968f837048",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2655cb7f-763e-46a4-87cc-3970969bf006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06288c6-66f0-4df1-9b6e-7fcd747c9e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6896a4b0-6f75-4244-8fad-450c2e7c6aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033bac45-6db2-4d4b-9b58-6c330b140da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02cf335-b7ae-4532-ae46-70f0489d041b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642fcff4-5371-4498-853d-f8c7db0e5362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ed9fcc-4cdf-4476-bd17-0df3cd4d9d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ede3c1c-be3d-4041-bb24-f9f416f31bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1c168e-5f9d-4d25-b411-153ae4b12638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331ddae9-2fb3-41dc-a52b-bf2f0c8a4785",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3726d647-333f-4882-ba3f-4f30c7af6327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5c7b6a-1330-4aa9-b7e8-6f9eecd55820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648623c4-0700-495d-bb63-45fb928f85a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa3c1b8-4e3e-4778-bd1a-cd9765eab51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f9cf4-8581-40ca-be11-bc17ee9f2e41",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da3736a-f7fb-42a7-90ac-6fac19c9a007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7eda9e-b262-40ee-b1df-9192b741d579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3909c2-fc60-43cb-aba6-0cb30c4920b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c4136d-dad1-43dd-ae65-c3d1b37836dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fdc292-6652-4ebf-8aa7-7f8335a96dfb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34d0073-781f-4b1a-ac00-4d8360ec2fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c6f76a-1b3c-46bc-b5a9-eff61b7b33a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1eeb11-47ef-4c93-a5f9-c246eff784af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46fe6a5-e0bc-4b67-8997-5e0d97066fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522ee0c2-84e7-480a-8785-8cb468a17b68",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e938e0de-2652-402c-8a31-e114ff5acf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0b32ae-adf9-45bb-8de9-7d4c8ab0da75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bea8fcc-d36a-4f07-891c-22637d148037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067d1c9e-d42f-4498-8a98-9d821ea93de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84f775f-fbaf-44d2-b965-49f2f68c7ef8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72385c5c-896b-473a-a884-e07cbc1e7496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df55fc73-fdbc-4902-b605-3c6b6a755eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3854926-65c8-40b3-b4e4-9b5d34b8a69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecfcb31-0dc1-4f1b-9d23-5b628f7ae835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bd781f-d3a0-4c15-8b20-0eda8b29c077",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a3bd9c-12b3-4f16-af1f-bca66f77f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480c3a2a-40fb-4d10-9cb8-841ca895f42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dab0aa-a18a-415f-a43e-081fcde28ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941efa30-a3c1-478f-9da1-d6e6921b548a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af6699e-3041-4a07-8c6a-d84a9d0fdeb2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b652c5f2-d08e-47c1-926c-3c09fc414614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c025a8-cd6e-4ce1-933d-978fb53e574e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6605e350-bc75-4913-ae8e-2235f77a07ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490b6855-26b5-41c4-8165-c6d3ad3b2475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec81ec-4af0-4c1d-8cb8-026356c702b9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293428d6-070c-4db0-8595-36db61b533a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f60c70-b28b-451a-918f-f6229515a9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0279e117-99a0-429c-99c9-409c8d663b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c902f51-e782-4e40-804a-d4a4b15de2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e53b6a6-422c-4d92-a925-e4f109a4fabf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc61c81-3e34-4b06-aa13-6188bb2371ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d202a6-9e5a-4a04-89fb-cb984e85936e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990d132f-ce58-4576-880c-8f2fff375b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f593b9-bc2f-405b-a496-f98d6e4fc4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fe8d11-18c5-4c72-8e9a-ddaba9d295f9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c270cc1-17a3-48de-9f03-1621666dae50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00542b87-09fc-4163-9348-f8239d54f71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87bd97c-1a4a-462a-b1f3-b656a0530411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc2df76-e4d0-44e5-b509-393e9c6b9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18ae55b-1871-40de-a394-d16aa047141d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ce9b75-2cfb-4b6d-a755-4743668e0234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da51a1ee-b5be-4b2f-abd1-61d8cfda5928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2a0118-2ec6-4dcd-b7f8-78cf6568bd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2da489d-32fc-4610-831e-2deb5ccdc41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5b511-b407-490a-9118-a6730c4fdf98",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454ffe27-4c3e-4db9-a742-62c92685c694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4cf8b6-e46d-4e6b-840b-ea4b15f48fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c7d648-53cb-429e-a401-cfad44774845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1c8f78-52d6-4c0f-ac34-9f4bcd0012b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcec470-b87e-4baa-9bcb-e66e9bf8ad27",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cacc450-f771-4c96-ad5b-47e318a432b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be6c9c8-92c3-4ae5-90de-36317cb65556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3656a6-a686-4c9f-9f5a-2f38d38bdeaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854258fc-40f9-4907-bdd4-1214a04f645a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342a0d0e-d715-4d54-911f-9b341ac96be8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bfbd4-c5f6-4b00-a501-0758a8e31b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034d5c20-3e66-43d8-832c-fc8be0eef4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad1d595-ce28-4d90-9a0e-1c2299a0ad93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d796346e-8860-4faf-8a3a-dd241880c360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee673bd-86a8-439c-90f2-a7cb56c82dfa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62022d2-6679-4c81-a1c5-dc2a0446bd33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e37df0a-a615-4f64-98bd-722484bfded7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b277208a-9d02-430f-a3ab-aad65f5b9aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ceb59c1-9b7e-4ab5-a7f2-87c17ba1e7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de63310f-ec69-419e-ae60-70e36120bc4d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e8296d-060c-4fc3-af2a-49c57d51d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b6ead0-57ca-4579-b736-c8b04265fa5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f27caf-7b10-4ea3-88cb-1b590080cfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d325133-ff8a-4fd3-b521-2fc0fc576b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5254e4a-6901-4e83-9388-88243ca6e0da",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f6e1ff-692f-40a7-83a9-69a361e90fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fef6205-a7bf-4611-84dc-7c09b700cc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5c3f86-2a99-4b55-a18a-365b8f66cb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0016c913-c6f1-47c1-bbeb-b3f93bd730da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06022716-cd4b-486c-b670-7c57c0bfc4f1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652dfb5b-d3aa-41d9-9e5a-f3ea72cc4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62858c2f-97f9-409b-9650-ae59a26f6f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d12676-f4f2-4cb4-b831-80d48718d3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dfac16-11de-49f8-85aa-73ced57d6c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59640c16-dcd3-4a86-9054-ca4b373e26dd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3717124-ad25-472d-a486-87fb1bddce8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d259142-30d0-4c10-9821-2e16f895028c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c629cf-0395-4da2-86ce-bdbd40141c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7085215c-9a82-4e45-b243-6d8c4e68d7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b300cf0-16f0-4263-94dc-a8e414d38e2f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c0de42-5606-44ac-85d4-75f03dbd8dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673c870f-9060-4448-ba52-808fa867b830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961a443f-4b89-4dd9-88d0-b193f3c59de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e17f3b-9919-4324-8490-2518506ca540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42526786-ac89-4266-b778-ff4e97adbe0b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9801d2ac-89bc-4730-830b-b1f81d9ce0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44180ae-5c16-4d72-a130-0d54d0f7965b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fda499-621a-42ca-a553-7db7e4d4e1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3554faa-042f-4689-bf93-fa9779552475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb559924-5aa5-40d4-b4e1-370604d5d6ea",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244db6ab-586a-4e62-b143-8620e76fcb12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d133491-6d88-4a4c-883b-208e9ddeb1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bf0d4d-68e6-4f79-a717-7a5cd68e124f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ba498c-7698-498b-8848-3ff6f42fd480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1b66d7-7661-4b68-be8c-5c7e27fd6585",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10912bd-79e7-4005-8be7-7be7ef8ab218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c724b506-417d-4983-a508-a075bc619d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18a0e27-3226-458b-8b97-1646b1bd0075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79521c7-bbcc-4f59-85b8-4e5b6cee6c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2e785a-9701-4c79-ac62-dce31718629a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366a93d1-0447-4e9e-8bd7-ac6af850af4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac6377a-949c-40aa-8ec1-c233a224b701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb82fa64-907f-4205-bb53-2d4142b9512a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a3a67f-60a9-41cd-9a81-4cdf5d647745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e105000-3c30-4ccb-9834-c3ad1f2c8557",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3473e0-194e-41b5-97bd-b219db7f54dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc468562-9d64-4cf2-83dc-746d75b03cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a3af3d-6f64-4805-890f-c358f142b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daa1434-d0e9-4e44-a4fc-6c4d1863f711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c44165-368c-44a5-824b-cea95f72f506",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11b1aa1-5393-4666-8bd4-803d9837e80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e35dafd-4ef9-4b0b-925b-82598dc04fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5b3b4-5592-4512-a296-4e97925c7407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314fd985-38a8-4f89-8bcd-f60f52820e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6408b8d5-9508-4430-8cb6-4a824a47d8af",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea2765d-999c-4fe8-8e60-70028130a718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f661c27d-3645-482f-86b2-3e6b87f825ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d6fd9-8f7d-48b6-9fbb-14ba033583a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8816f166-c74a-49cd-97cc-fb21d7e62855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4ebbfc-ccc4-431e-a951-b07ba8f8c763",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6087400-29f4-4e0d-bd6e-a6ae3a628732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee3f67d-e22a-4bd8-bc81-f8a2e1983290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e31f8-39ab-487e-938b-be77449d2d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ff1c92-1ba9-48dc-93a3-59bb39bf6006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b935d0-3fea-4b32-8f32-a2028ee987ef",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba490147-c680-40dd-a5c3-b0d29155f608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dce6aa3-3040-43fb-8d26-a871df856b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fd2bab-0277-40a9-8f45-a87d06427e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7d4c49-02ae-4d15-a3d5-0a81f7fa4b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b52a039-39ff-4ee0-a514-0adfd68caee7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72409dd0-9c21-452e-b05a-4109aa7fb8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f74b998c-200f-46cc-8a7e-bfaf3be7859d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa904c07-204e-48d2-9434-3207571bd670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5ec6e3-eddd-4dca-974c-75777e3a13e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a3eb39-74e4-4577-863b-febedf2b71ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8d4fc0-dae5-435a-a8f2-f0737b4f4d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7296d1a0-50b4-454e-b18a-9526e26144fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4976da8-6675-46ce-be63-cf41bf14ecb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d15cdcb-1776-4cfe-9f51-6865a6a63557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8540529f-bfb5-4ced-a81b-cf3b60b35ec7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0164d7d6-e5ab-4c46-9c8e-9a59cf3f8177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d646d05-fbf1-462b-82ee-f404e04085cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d91edc-7253-4735-b53d-05860aeb93fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aff3cc6-6a18-45be-830c-b70498a0a18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e5dd1-3040-4a67-a273-afd2bdfeb49b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30df340-7a7b-490b-ba0c-20d0e3a34ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888f9686-2c69-49ae-be02-5e692ca1441e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87893e2-ffc4-4b75-beb9-c5e0730fd72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490ee6f2-cb39-4dd3-a65c-1f7eca11b3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd698f5-f2c6-4c0c-8b96-2ce03af281b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db60f6a-8d73-4b2e-958f-7cd53f22f3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a50dbe-8a59-40ed-bcf2-5bf530452c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca27111b-f8dd-489e-915e-3e2ed8e097a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d98a632-d7f9-48a9-957c-2a4e086a8494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe84a9e-757b-4466-b0b6-8a3f3abfc808",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93795b5-460f-44f9-924e-753c3ffd9495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9605a449-8b77-4258-8e71-f8d56a20058b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba3dd5a-c23c-405c-9a70-b65ec7328e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a856093a-a1b3-4f2a-ba7b-9a5fe53f480e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf29141-22ee-4725-9acf-e9ce2b97e6c4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e33212-52a6-407a-a707-e9176e6ae6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ff0e8c-87ea-4789-a9ff-56e715d94f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf43a3f-cba2-453e-bddd-70c98a179456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5624b7f-c49f-4564-912c-b2b0ecdcd9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c812ab72-5604-45f0-a2ce-b9d5814cdcf1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dcefef-98fb-4519-aef7-0f942b1d8371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "647a2fd2-9470-4a1d-8dd3-dcc8580dee3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10aa7fc-82af-4db8-a9b8-3c65101e9748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab3f5ce-2de5-4361-8866-4c3316559ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fd2919-4f5a-4228-b68b-327456327464",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218fa65-5bf8-4f4c-af45-b8f5e1477128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d8b8c8-8ddd-48da-b37b-901b5795147d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e392ceb-8d0e-4e52-b542-ff525197175b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8799c0c0-368a-49af-8fb1-116f00bca778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a943c99-c90b-40a7-aef1-27ee5921913c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63930c3-053b-4754-99df-2526ad6fcd2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d4912c-0843-4d0e-af43-c9b059d1e7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6d2def-2932-48ad-9f23-ff403b0d74b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d951d5-ae4c-471a-b0fd-3507cb5624a4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a572212-935a-4a88-9924-9a65e7fa593f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3bd0f7d-3943-4ebf-8e98-fa394626494b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41e84a3f-1ea2-4a3a-84ed-44c0c12b3380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98903714-35ee-4b16-a996-df61e8246743"
                    }
                  }
                ]
              },
              {
                "id": "f8b77ee7-b033-4c44-b22e-e7a5e0117603",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc3d8a60-5ea4-435d-bd45-7b76d1ea93c5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4fb015-d12d-4db8-995e-ecbfba7cce2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e960f6eb-97ad-42fe-8a08-7b4ac23226b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033a52ee-6b6c-4799-a115-4ef470a1d644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dc1855f-84a2-40d4-aeef-c8829bce0f4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4605e3c2-7b25-4d07-a343-02957a470fbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac240cd9-1753-4690-93f1-7269cae96785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b5913ef-d11c-41d9-a9be-afdc3a5e31ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0b8c38-41a2-410c-a225-b54638c3a560"
                    }
                  }
                ]
              },
              {
                "id": "71372bea-5322-458a-93b5-b0d3829648f5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b1d64078-75e4-4c64-965e-329f1187bda5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b4a9d5-fb0d-4823-8312-8125c16f4ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c70847f8-2e38-4cc9-b908-ea8e4ef4aaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f97afc-1beb-4d58-8eec-fec84241f860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a6ff34-fd79-4088-9e44-154adcd57ed6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d9ee6c12-b9d4-4293-88c7-4eac25c59518",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00219e96-39e7-4fcd-ab91-c014bcc0e2ad",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0602d437-18c7-4700-8454-e239eeed199a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56a167dc-2666-46c2-8076-61095a3a5a35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6cf975a-c1d6-435c-9f25-e1155308e4ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2be04792-f159-435b-bf55-12a993686a94"
                    }
                  }
                ]
              },
              {
                "id": "be17f71f-3175-4caa-b463-aee6b2f01137",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e97aa18-222d-4be2-b133-a49dc29ceb97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0a0d904-6eb5-433e-a209-cfa15d515f0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3581d6b-a3cb-457f-86b6-964831952b66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1875226-279b-4c97-8474-fdfa457053b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f2d5bec-3b31-4a8f-8eca-f92385ea1233",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa6fe34e-6eaf-4d2d-8cfe-bc8d95f76132"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9a9f8f1-58b5-4211-8ace-01d3cd45d9a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db9834f4-3d15-44dc-a664-9ef9fc88c401"
            }
          }
        ]
      },
      {
        "id": "43f4c40e-2577-46f8-a01a-dbeabe5ef7d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c2f35109-5d87-4ad4-98eb-8efc7541b2ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25878939-7f0d-42ab-845f-3294c26c00e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58654ca6-959c-4310-90db-18834612024d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dbcee7-8c91-42d6-a9bb-2e194305cc49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d8f72ea3-d4f4-4692-8fc4-4e87bca29241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a91610-44f0-4be5-95b6-e661cba547cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab3e2662-1ed5-44b9-89cd-378856b4b248"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e742d5d9-c783-4e5d-b43e-bdb39476637c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dbdf3b5-3fb2-4632-aa79-6c4cabed9d2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ea7f1d6-51a0-4629-988f-e70aa287fc00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8467cb7c-7364-491c-b3ee-c15600b64d88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2f2c890-5434-475f-84c3-3bdee31a3983",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "29be2129-07cf-44ca-98d2-d4bde250a9b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24d466d7-5647-4f67-b30c-753cffb709a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "597105da-7619-448f-9625-c98119628b45"
            }
          }
        ]
      },
      {
        "id": "5d8416b9-4388-4e42-bc0e-a1f739233a60",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "64cbede4-a99d-4fab-8af7-215cae0cc0fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00367119-6a99-4983-b641-be006de7c5f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbf8714a-9e60-4dbe-8f94-c96895f5368f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdef8bc-0395-4ab7-9433-5189cc5e2b04",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d438757-30f3-4c65-b717-c0ae1f512206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2da66ab-e693-43c7-8a8a-581653650128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5641959-56df-4fcf-8e88-11f682b17800"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea04c017-43ec-46b1-accf-02c29af9a11f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9c8b6b3-6b22-4c90-a590-e5f51f437f35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36047ba3-4946-4e20-9f51-6ea33e60c128",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8c1274-cb10-4432-b121-4747491e1620"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dbbf7e0-ab2f-45bd-854a-b4ac76f210b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1b1c736-e0ea-439a-aad5-5eb7b39be23d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93862abf-93f0-4cfe-974d-c2bb4fb2a9fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7047430-23f3-41a9-980d-29a5045fad0c"
            }
          }
        ]
      },
      {
        "id": "85394e85-146e-4a7a-acdc-ee9486704a5f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "817bf330-72df-4981-8a8f-d2d2d0ff6c85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7930fec-989d-40fc-a5a6-58ef186d44e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf6ee69f-8a90-4bca-a369-a0ba1eb7467b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe815b3d-4421-4d0c-a440-e56920441524",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfc514a9-09bb-4110-a9e0-82a887aa390f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43f5427-9bc1-4e99-a3b1-afabf375d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8a9fe31-71b8-42fe-a6d3-44dc744af715"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "359319d5-4fca-45f4-a056-1906d73b7313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e8d52c3-9a3d-4695-a6c2-269cea23f3c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc139e5-083a-441f-b4a2-2ad1a0e35a3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8e5eb73-b564-464c-9c78-f834f868ca97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a3de884-0627-4ec4-bfc6-c08b965c36d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9543e79-0026-48bc-9ae2-419feba340bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e37ae2a-5a8b-41d5-9e5e-96a6d58ebff8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1046c19-ea70-4426-adb4-4caae49045e4"
            }
          }
        ]
      },
      {
        "id": "7a307dd5-b525-44e6-86eb-0687e553dbe5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f89c2a8-ba14-485f-a265-098d132528f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c5460ab-84dc-4405-ac04-54d765e97552",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "74211cb4-17f3-495d-869d-ef37cf1870da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e67ddd0-4e63-4624-b69f-ca659b6bf64e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaff3535-71ac-4517-a324-39739eacc47d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 75.13333333333333,
      "responseMin": 6,
      "responseMax": 516,
      "responseSd": 39.54792488327422,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709080374020,
      "completed": 1709080404712
    },
    "executions": [
      {
        "id": "666fbcf2-ad0a-4f57-ac39-1a5f868c61d6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f7394874-4f75-4b52-b506-c1f9b64480ed",
          "httpRequestId": "69e437ee-eec2-4a7b-a7f9-4f1901712f88"
        },
        "item": {
          "id": "666fbcf2-ad0a-4f57-ac39-1a5f868c61d6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c142eedb-d2d4-487f-b202-181696be952a",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "5353a7e2-6ee5-4fa6-b060-23317269c03a",
        "cursor": {
          "ref": "72d90468-29c4-40b5-9795-6e19c2f98c3d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dce4c4e6-fa16-495c-a4be-05b8b9d3c167"
        },
        "item": {
          "id": "5353a7e2-6ee5-4fa6-b060-23317269c03a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b486d7d9-1ee2-4998-a9ef-476859b8c46c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "30051603-3fc0-4429-bb4d-5bd8ac1003c2",
        "cursor": {
          "ref": "1a66ca06-1cc5-4b67-afd6-aa3dec75b23f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "76dda366-3395-43ef-9c32-900f67676027"
        },
        "item": {
          "id": "30051603-3fc0-4429-bb4d-5bd8ac1003c2",
          "name": "did_json"
        },
        "response": {
          "id": "c9fa39be-0af0-480d-a5a7-b7918e152a68",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80b1ee9-ec4f-4047-b78d-ac167619ce38",
        "cursor": {
          "ref": "a3ff32b0-97fe-4dff-83ea-9cdf9bcaaa7c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c94895f5-6702-41f8-ac18-128d906d3ca4"
        },
        "item": {
          "id": "f80b1ee9-ec4f-4047-b78d-ac167619ce38",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c34844f-b3f9-4f6e-9469-e1d065fcdc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80b1ee9-ec4f-4047-b78d-ac167619ce38",
        "cursor": {
          "ref": "a3ff32b0-97fe-4dff-83ea-9cdf9bcaaa7c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c94895f5-6702-41f8-ac18-128d906d3ca4"
        },
        "item": {
          "id": "f80b1ee9-ec4f-4047-b78d-ac167619ce38",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c34844f-b3f9-4f6e-9469-e1d065fcdc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c93bd69-ee61-48e6-8b2f-4994a7ab45d0",
        "cursor": {
          "ref": "75cd6dab-8e7e-478e-ab44-0dc0ba73e0fe",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cb0c90eb-e2b1-4d56-a457-bec493a3a383"
        },
        "item": {
          "id": "3c93bd69-ee61-48e6-8b2f-4994a7ab45d0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c191f217-158e-4cbc-bcf9-1f263ffec68e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 167,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e392cf-6e27-4c8e-b53f-9e70713aa811",
        "cursor": {
          "ref": "99223374-dd44-4238-b628-7b94fd343a8c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "960b0906-4330-411d-9b75-02711766ce46"
        },
        "item": {
          "id": "68e392cf-6e27-4c8e-b53f-9e70713aa811",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38d8f2c1-d18f-4f95-a116-0ec6982f7cc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8b98fa-00c2-40e9-994d-c5036d72392c",
        "cursor": {
          "ref": "ed51aec4-40e5-49d8-a96f-849df92177d8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1af25fb8-38a6-42a0-a2b8-0916be9148a5"
        },
        "item": {
          "id": "0a8b98fa-00c2-40e9-994d-c5036d72392c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "557399b2-df96-48c3-ae2e-981b92852d0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15605e7f-c80f-4c8f-b173-72ad908affa8",
        "cursor": {
          "ref": "67496036-ce39-47b8-b84a-e3c502d9a0bf",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5b2127c-4b3e-4332-ad3f-e2c1030293ef"
        },
        "item": {
          "id": "15605e7f-c80f-4c8f-b173-72ad908affa8",
          "name": "identifiers"
        },
        "response": {
          "id": "b0429cfc-d543-4b79-bda9-0e63338fab3e",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636294af-c2d3-4275-a5a0-0be1196b9a85",
        "cursor": {
          "ref": "4d815f34-70fc-4878-890e-306e1bae84f4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a3eb9766-17d1-4339-abef-a14d574d6d7f"
        },
        "item": {
          "id": "636294af-c2d3-4275-a5a0-0be1196b9a85",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ae0ac7d6-988d-4d8c-8c9a-a7083be641d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e264f63-f245-4237-8c0e-307828bdf491",
        "cursor": {
          "ref": "ed280d1a-b719-4948-96fe-909de59f098d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "968a2ec6-f963-4ac4-aaec-f2b7f1232fe4"
        },
        "item": {
          "id": "2e264f63-f245-4237-8c0e-307828bdf491",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fe216562-c3e8-48c8-8aab-62030b2a1b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91455c84-6c41-49e1-b1e1-a3a20d061405",
        "cursor": {
          "ref": "4035dedd-c2ba-4645-bdb1-56116d3ddd52",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "030609ef-111e-4077-99e2-99d785962573"
        },
        "item": {
          "id": "91455c84-6c41-49e1-b1e1-a3a20d061405",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "da641441-47b6-4870-919d-433650f11870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeac700-0a9a-425f-87ae-7c2ed1ac2225",
        "cursor": {
          "ref": "fbf10f25-bae1-49b1-90f7-ac76233e5c52",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab0c8a86-cf34-43ca-b131-77a3c01b8666"
        },
        "item": {
          "id": "faeac700-0a9a-425f-87ae-7c2ed1ac2225",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c3f438eb-a62c-4265-ba6b-faa4bfa61664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823861fe-e1d4-475c-ad37-f3e85732aa8a",
        "cursor": {
          "ref": "d58e6283-7acd-4844-bdf0-2422d848fab5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e0ea29a3-cfb5-40a8-afb4-5f5012e4acba"
        },
        "item": {
          "id": "823861fe-e1d4-475c-ad37-f3e85732aa8a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2e7828ea-d5d4-4822-a05d-62d2d5f788ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cb0cfb-5486-4718-91d6-67e7b4a5f46d",
        "cursor": {
          "ref": "6ab75304-dc45-4fae-bbe5-95c5d9f24867",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1e17448-b6f0-4fa7-825c-dc0a3d1038aa"
        },
        "item": {
          "id": "e9cb0cfb-5486-4718-91d6-67e7b4a5f46d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "76bb856a-b94e-4a2a-900b-892a1e786921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692a800f-eab1-43da-bc4f-f8566c244895",
        "cursor": {
          "ref": "c88ce187-14e4-4325-9d31-60051a19c15a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8730ad7c-cf6f-4133-84ed-565d24ff2dc5"
        },
        "item": {
          "id": "692a800f-eab1-43da-bc4f-f8566c244895",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7d9d6df-3455-4065-bc4b-f53b57d6b18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03e5531-ac74-4899-9991-7acd0107c169",
        "cursor": {
          "ref": "9bf8401b-684d-43d4-b26d-28957a86637f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "58828401-dec1-48cb-b9d5-8a8fcc8a7c39"
        },
        "item": {
          "id": "b03e5531-ac74-4899-9991-7acd0107c169",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c31a5ef4-eee1-47f5-9a47-0c901a3b412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a978e41-f0ac-4712-95ac-b47a9e10a315",
        "cursor": {
          "ref": "5ceab4f9-99fa-4809-9550-186b9a114dab",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "795d182a-0410-4b33-8ee1-56707e99c3bc"
        },
        "item": {
          "id": "3a978e41-f0ac-4712-95ac-b47a9e10a315",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "db0c0066-703f-408e-a7b2-2a2dfb8d6c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b444b6da-da77-4e32-98db-7616e190f417",
        "cursor": {
          "ref": "73d85711-57cc-4b2f-a826-c184bae81e2c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8e40f0e6-81ae-49bb-a4db-6e7eacae7831"
        },
        "item": {
          "id": "b444b6da-da77-4e32-98db-7616e190f417",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "061e9287-b9fd-4c28-802b-02f02ca8c877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d5fe0a-dd51-45dd-89de-bf3190fc5e2b",
        "cursor": {
          "ref": "5f68d12d-d94b-4efc-becd-1076a5269936",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "72513b9a-2467-4015-9692-680e18d93ca4"
        },
        "item": {
          "id": "e6d5fe0a-dd51-45dd-89de-bf3190fc5e2b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "728d3f52-ee5d-4cde-8579-ad3c61114ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018eb559-c01f-4663-8880-9bd0cb814bc7",
        "cursor": {
          "ref": "3280cd44-ab67-48d0-914e-e5e41b614117",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2f92d60f-1750-4e43-9e11-627fe877a826"
        },
        "item": {
          "id": "018eb559-c01f-4663-8880-9bd0cb814bc7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0f568154-9729-464b-ada3-0f87f75c2496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84565aad-5253-4a05-94b2-1f29c8077560",
        "cursor": {
          "ref": "6585eade-a4bb-412a-bf1b-157eebbd9b61",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ad880e92-9f48-4fba-b3bb-1b7b57be70d2"
        },
        "item": {
          "id": "84565aad-5253-4a05-94b2-1f29c8077560",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5ede9ac7-5f93-49fc-ba34-91bbc149c687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8108b42f-143d-4c02-a56a-39485e611091",
        "cursor": {
          "ref": "a1d5d595-0b09-4ac3-a918-cf5a75b078e4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4d1ed293-347a-4821-aaed-9c6b6d8eb02c"
        },
        "item": {
          "id": "8108b42f-143d-4c02-a56a-39485e611091",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1fec93cf-0d78-4742-88af-495fccc0860e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224a2faf-6751-4235-b2d3-be72fe0c7e8f",
        "cursor": {
          "ref": "04b03320-1c5b-488c-8ca9-2a76e2502a0b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a61e9a77-4476-46e7-8246-53ee3f95800d"
        },
        "item": {
          "id": "224a2faf-6751-4235-b2d3-be72fe0c7e8f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8922df82-4cae-4f1d-8ef5-6be86f289456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7022a1dc-4186-4c45-a2c8-5a68d1c70933",
        "cursor": {
          "ref": "e33dc020-e5df-445f-a24b-c9fa37a64faa",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e3f442de-8edb-435f-bc9e-53d380ac715d"
        },
        "item": {
          "id": "7022a1dc-4186-4c45-a2c8-5a68d1c70933",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cb0476d2-59ce-4e6a-9e7f-efc47a076846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f652ec-671a-4561-b3e7-e388b0d7b44e",
        "cursor": {
          "ref": "efe1eef8-fd65-4988-b9e5-58147c1232ff",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20efea97-9b02-4c2f-987f-3d38fb1b3624"
        },
        "item": {
          "id": "77f652ec-671a-4561-b3e7-e388b0d7b44e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "28a5c055-ad02-44b7-b1cb-6d2f1f26572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebf0d4-38de-47a1-804e-985cec89e3a7",
        "cursor": {
          "ref": "ad4e8a13-47f8-4c08-a3ab-ec89034d76dc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dc5509cd-482b-4e69-9b7f-08602c0f14a7"
        },
        "item": {
          "id": "17ebf0d4-38de-47a1-804e-985cec89e3a7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5d40c9db-5742-49c0-b16f-984ca03433b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8384316-e86d-4e2c-b6a8-2f754a8b785f",
        "cursor": {
          "ref": "af28b21d-d357-4076-a942-77a2ce8f0d28",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4b1ce3da-59cd-4490-98ae-2c17c9aa3486"
        },
        "item": {
          "id": "a8384316-e86d-4e2c-b6a8-2f754a8b785f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d79a06ce-906c-4f53-a6eb-82b92b7ab066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66f84c3-4299-4aa9-8394-0c6f15150fbe",
        "cursor": {
          "ref": "1e2e69a2-7d80-47bb-a0ff-f3ad3e594a01",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b93079e3-10d7-4cd9-8f2a-0820192a4fa9"
        },
        "item": {
          "id": "d66f84c3-4299-4aa9-8394-0c6f15150fbe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "69c5f961-260b-4e71-b941-deeabd58cfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b412182b-c6c9-424c-a518-361a28fa4a93",
        "cursor": {
          "ref": "b9304f27-7338-48b6-b968-61a9f96b2f2b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0a8cf93d-50ba-4993-800b-0e1f432b8f79"
        },
        "item": {
          "id": "b412182b-c6c9-424c-a518-361a28fa4a93",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ed81f8cc-f219-4d52-a9b2-117e6cab6ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dea2721-9c0e-4810-8ef3-78c977766efb",
        "cursor": {
          "ref": "477bae53-1a04-490b-8d69-0c2a127efd79",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "245cbdb8-6e18-402d-a226-fd65060b7d39"
        },
        "item": {
          "id": "3dea2721-9c0e-4810-8ef3-78c977766efb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "64ee4d07-0550-46a1-a2c5-987afbad3480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087a2602-1487-4add-ad82-5cb51ba1ec61",
        "cursor": {
          "ref": "48f455ba-a60e-4c07-b5d1-6af9bbba484d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2ec87e28-71df-4e52-80b0-179c014f1b67"
        },
        "item": {
          "id": "087a2602-1487-4add-ad82-5cb51ba1ec61",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8879b20c-d6fb-4645-b0a9-c4371c3a64e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bb3de8-c12f-4629-97a6-597bb156fb6b",
        "cursor": {
          "ref": "cc3208bd-803f-4fd2-bdc6-cbb38c3d927f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f8530575-ab91-48ad-aa1d-6b2145fc2c80"
        },
        "item": {
          "id": "91bb3de8-c12f-4629-97a6-597bb156fb6b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c25fa15a-5711-4c97-91ed-6e6ecada5818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8068e9c-165f-4955-8c86-dd4fb57627cd",
        "cursor": {
          "ref": "c672709a-cd1e-44ee-bb95-1e3c9a96dd3d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69b9ef2a-1c45-4cc2-a696-ce25248d7663"
        },
        "item": {
          "id": "d8068e9c-165f-4955-8c86-dd4fb57627cd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "77c886ae-1aa0-4875-811f-a5266c589bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e327b7e-006e-4b71-af55-41c866453aa7",
        "cursor": {
          "ref": "6fcb2f41-2d7f-492b-8334-25166813987f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0540abb0-4c0b-4de2-a003-2e06c9d8d9fc"
        },
        "item": {
          "id": "8e327b7e-006e-4b71-af55-41c866453aa7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd3cea43-f9b8-4d2b-aaed-fb4ee9e3f13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c16f89-f0df-49fa-8438-131c66843dd9",
        "cursor": {
          "ref": "68cf31a0-7486-4b3f-b8ce-e52481380b5c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "115ebab8-baad-4e7e-a922-ade70f50555b"
        },
        "item": {
          "id": "24c16f89-f0df-49fa-8438-131c66843dd9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "179cf7c2-2823-45ee-bca1-bd3d6028e02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef5fd32-0f79-406b-af86-be80a47a34da",
        "cursor": {
          "ref": "76185187-9d79-4342-a53a-1225b1473204",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fc0505f7-1e5e-41e7-80b0-969f454c20d3"
        },
        "item": {
          "id": "4ef5fd32-0f79-406b-af86-be80a47a34da",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cd13403f-135f-4a60-a9b8-5b98c68eede2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63e27a4-05ff-434e-ab9f-132c64e20c99",
        "cursor": {
          "ref": "5492d4e3-0258-4936-9310-48730cd059f8",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "71ced74b-f5a5-4ab9-b4d3-dfd36a7f28b3"
        },
        "item": {
          "id": "a63e27a4-05ff-434e-ab9f-132c64e20c99",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "44d1d91d-8ea1-4889-9ec3-81de57541a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe3bc99-db5e-4ef8-944b-d7288697cec0",
        "cursor": {
          "ref": "516756cf-29e2-4edf-84a0-980a9e273b22",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d25aca74-669b-4678-b07a-b1d946121fff"
        },
        "item": {
          "id": "9fe3bc99-db5e-4ef8-944b-d7288697cec0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f67c8e33-3cd4-4eb2-9b14-5ea29e360b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46003752-9232-4585-a9ad-733bd78e69f9",
        "cursor": {
          "ref": "63510203-ca41-4bd1-a874-f4802db7e7f4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a146a435-c79d-4a8e-9d38-9d87fd5131ad"
        },
        "item": {
          "id": "46003752-9232-4585-a9ad-733bd78e69f9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5730617c-1669-433c-8d2d-f26f116009c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f44b09-a47b-497c-adca-b8f5adbf768a",
        "cursor": {
          "ref": "bb40f498-92d0-4e19-9bcd-9e115c4500ce",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "73b0f43f-b70e-412c-b8bd-f2d9179a75c3"
        },
        "item": {
          "id": "f6f44b09-a47b-497c-adca-b8f5adbf768a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "657bcd05-4b03-4843-a29c-8b0d6ea0a8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef49cfc-d3f2-4d23-ba54-96d923b2e072",
        "cursor": {
          "ref": "a395db75-778b-442c-914b-183ca0476390",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bceff8a5-026f-41e6-933e-19439a43ca54"
        },
        "item": {
          "id": "5ef49cfc-d3f2-4d23-ba54-96d923b2e072",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1756f902-043e-4e69-9d22-a4492452fd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7573cdf-84fe-4d05-92f7-be67c761e060",
        "cursor": {
          "ref": "730c626a-5b5b-4461-8ede-92e83aa6f19b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6dc3d4dd-fcd4-431b-b31f-bc9d5b02868d"
        },
        "item": {
          "id": "e7573cdf-84fe-4d05-92f7-be67c761e060",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "38d1d1c7-cea5-4219-a5bd-97b23d09faba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5209049-d41d-409e-952b-3862a0ceaea4",
        "cursor": {
          "ref": "87e2f951-4a67-40ed-8c13-27edbfcb7252",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5ec7c28c-f901-40bc-addc-610d0f1c2fff"
        },
        "item": {
          "id": "a5209049-d41d-409e-952b-3862a0ceaea4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f423c8f3-b018-4207-93f2-e79028345878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c40345-bb66-447f-a96b-d970de46a16e",
        "cursor": {
          "ref": "1c784dec-273c-49a8-9845-5280d2424c82",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2dfd6fef-1815-4a71-9602-dd683f6f0f76"
        },
        "item": {
          "id": "e3c40345-bb66-447f-a96b-d970de46a16e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b5d1e3dd-720c-436b-af4e-525e2b85c271",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e26efbf-3a15-4887-bfec-730430354b6c",
        "cursor": {
          "ref": "a35fd45f-3c47-444a-959f-569ce3bc0bd6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2bff727b-e9fe-4549-bef8-45582de337b7"
        },
        "item": {
          "id": "3e26efbf-3a15-4887-bfec-730430354b6c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "602e4a28-a9a3-4192-bf1d-6caaae3275dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79534be1-2155-4292-9e27-683655789975",
        "cursor": {
          "ref": "9f37d08c-e2c9-4cf9-b50c-5a9f05afc6a6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b2b84dd9-2683-4afb-985d-66d83cbd8383"
        },
        "item": {
          "id": "79534be1-2155-4292-9e27-683655789975",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5300180f-66be-4070-9152-412134f83a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc061e7a-afc8-4b13-a76d-c3d942909d25",
        "cursor": {
          "ref": "abd885c9-fa62-4edc-8a10-41b81e4c3176",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a575d655-6ac6-4676-b058-c9ba1e067884"
        },
        "item": {
          "id": "fc061e7a-afc8-4b13-a76d-c3d942909d25",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cec14ac4-2f62-4b2a-84f6-b4372913d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87d3b20-daf7-4bc9-a479-6ca0aa7b0765",
        "cursor": {
          "ref": "0742697d-37c8-43ea-b820-9abd65e4abc6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "85a97ced-a3b4-441b-9e2c-5c2d3c8e6276"
        },
        "item": {
          "id": "a87d3b20-daf7-4bc9-a479-6ca0aa7b0765",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "642eb8b8-7cca-4c10-8a5b-431cfad3f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae6338b-7972-4a8a-bd0d-e5e06ef463c7",
        "cursor": {
          "ref": "eb806796-bed3-4311-819a-cb0b68125854",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e9e79d8-6790-4b1b-8502-b38628e7fbdd"
        },
        "item": {
          "id": "bae6338b-7972-4a8a-bd0d-e5e06ef463c7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0bdcd67d-f830-46d8-bca8-9721bfb54913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81629b8-2926-4ba7-8eb7-e521c59dc3f0",
        "cursor": {
          "ref": "8488521c-5ec1-4e2f-8c6e-7f0374e632f1",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f00f28a2-1666-4b6b-a575-6b35212be4ce"
        },
        "item": {
          "id": "e81629b8-2926-4ba7-8eb7-e521c59dc3f0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6b192fbc-9f27-4cce-b27d-49b36da2f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c648728e-5f9d-428b-bb12-ec5e0098f61d",
        "cursor": {
          "ref": "4e546f53-a799-4c76-af90-7e1a248244a9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "569c2e6a-45ab-4bc8-ac61-78aeea97dfbc"
        },
        "item": {
          "id": "c648728e-5f9d-428b-bb12-ec5e0098f61d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8c10363e-bdd9-4709-8d2e-f6bf76f7ac22",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1fedc2-2269-424f-bbd5-8a7cadeb8f2f",
        "cursor": {
          "ref": "34a21070-7e5f-4c98-b9cc-63136bfe92ec",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "acc70a37-e451-40f0-b6f0-7d1f084b5490"
        },
        "item": {
          "id": "ff1fedc2-2269-424f-bbd5-8a7cadeb8f2f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "71681365-c747-4924-8995-8710654486ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b923fe4c-d27a-48e9-a0d0-8e8a0fe2d1b0",
        "cursor": {
          "ref": "37229b63-8719-4f2a-97dd-28655daddd5c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "06299ca8-7610-4b5e-a9cb-d43abc8643b8"
        },
        "item": {
          "id": "b923fe4c-d27a-48e9-a0d0-8e8a0fe2d1b0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ac4f1238-b66e-4a3d-bfaa-6d5836e87588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f315d3b-a7ec-4164-9ba8-1ed235d1be9a",
        "cursor": {
          "ref": "59d2ae6e-a389-4f8a-a9c2-157c68eefdd5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4dce0f3f-bee1-42fe-a6f5-2a4cc168dbe4"
        },
        "item": {
          "id": "9f315d3b-a7ec-4164-9ba8-1ed235d1be9a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "290e3549-febe-43a3-b833-b14055c4e3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b363cbcb-9f0a-45e3-9c0e-b548ac99d081",
        "cursor": {
          "ref": "29149397-77e9-4215-b1fb-cb8247e58496",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a9869583-d75e-4ff8-8dc6-7494a7fc266f"
        },
        "item": {
          "id": "b363cbcb-9f0a-45e3-9c0e-b548ac99d081",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7b1b8600-f895-47bc-a526-4b67fe0b1825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d7eb4a-06e4-4c4c-94f7-d5346bf6a8e2",
        "cursor": {
          "ref": "95c3fb4e-3896-40c5-8d90-3676946f4d3e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "158d9d95-6606-4757-8078-d3dc872ac7fe"
        },
        "item": {
          "id": "99d7eb4a-06e4-4c4c-94f7-d5346bf6a8e2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "28622ccd-ecef-4970-a985-76257bf8ffed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d354d503-9cc9-473a-99db-b35940dcc5a1",
        "cursor": {
          "ref": "b0c34fce-1ea3-427a-a4d6-f92fcb4ed3df",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9aa9507e-1f52-4cec-ae13-d889a8a02189"
        },
        "item": {
          "id": "d354d503-9cc9-473a-99db-b35940dcc5a1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "71fd38ae-c28a-4b2d-8efb-1076809b1d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da595c4f-0171-4fd5-b88b-98e166585a75",
        "cursor": {
          "ref": "8abc38fc-b1ee-45cd-824f-ba7693167446",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1b95699c-72e3-4b9d-a29d-1041a684eb26"
        },
        "item": {
          "id": "da595c4f-0171-4fd5-b88b-98e166585a75",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "32da4103-13ea-4676-a6c3-5b7cf37a6e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b776654-c735-4198-af58-eb043f7b51dc",
        "cursor": {
          "ref": "cab451a9-7985-4c89-bc2a-fb93e8208f0b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "030af417-bf82-4119-b1f0-209fdd40a55c"
        },
        "item": {
          "id": "3b776654-c735-4198-af58-eb043f7b51dc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d64de7d9-54d3-4c22-a4d6-7fab4066ca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fe95b8-2183-4f78-8b06-8bd2315fc435",
        "cursor": {
          "ref": "75c899d6-bd59-4e17-b7d3-dcaf6d4a709f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ad8492cc-593c-47c2-bfd4-962ca7980b45"
        },
        "item": {
          "id": "f0fe95b8-2183-4f78-8b06-8bd2315fc435",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ab8ebfef-7311-4626-8f21-476e3c6c4e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db212ce-295c-446d-8753-5d4dcb4aca51",
        "cursor": {
          "ref": "901149a5-0e5c-49d8-aeac-37a2a0966487",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1a6ee318-a17f-4635-886b-34297afc507c"
        },
        "item": {
          "id": "4db212ce-295c-446d-8753-5d4dcb4aca51",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9b088418-d3eb-4cd7-a81b-5aa5b46a80ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22058ce-ead0-4c3a-b6a2-a0faa0f2baf9",
        "cursor": {
          "ref": "52778a05-bd26-4f73-b7ec-3bb1ef127277",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3a7871a7-1788-4227-8c79-27996e905b97"
        },
        "item": {
          "id": "c22058ce-ead0-4c3a-b6a2-a0faa0f2baf9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3f8669d-0fca-42f5-9111-2271605441ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b780e99-0af3-43fb-b18a-bae295576a08",
        "cursor": {
          "ref": "b0a8dd15-8e7e-4ab7-b051-daf8f0dffa06",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "afb16cda-0104-48cf-9d91-c0dd59de53c4"
        },
        "item": {
          "id": "3b780e99-0af3-43fb-b18a-bae295576a08",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85575bc1-77fa-4282-9979-d637d66500a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b3787a-f76d-47e5-bdac-38ee8a85b07a",
        "cursor": {
          "ref": "948ea156-65ca-45c2-b43e-953ffb8661db",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2df0c2b1-a3a6-4769-bb6d-df1fc4aa48d7"
        },
        "item": {
          "id": "d1b3787a-f76d-47e5-bdac-38ee8a85b07a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a489304a-1fbc-4f03-9304-7abd652be429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da7bc32-812e-4d03-b0d6-9cfb5d126f28",
        "cursor": {
          "ref": "f4a1ba85-54c9-49e8-a42e-cda6b125cd33",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b44b69da-0664-41a4-afad-53e856106ace"
        },
        "item": {
          "id": "7da7bc32-812e-4d03-b0d6-9cfb5d126f28",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a25ff5df-5f79-4a97-8f10-93c4796fe731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e82f3b-e566-48ab-a7bd-46faf8e13cbc",
        "cursor": {
          "ref": "90b66d49-c1a6-48e2-9ddb-5589fe266fb4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c891b253-6a4f-4260-914b-4c5bd33f7d0b"
        },
        "item": {
          "id": "e6e82f3b-e566-48ab-a7bd-46faf8e13cbc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "be88d251-94e0-4936-b33b-9b2f0ba79b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4796a0-38fe-42da-8b37-3896b419db97",
        "cursor": {
          "ref": "1b9d5c1c-d9f6-4bca-a697-2bf8491087ed",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "00dcd2ae-781d-42a7-8d02-47f1315f09f6"
        },
        "item": {
          "id": "ca4796a0-38fe-42da-8b37-3896b419db97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "920c4908-a81e-45c9-93a1-dfffbfc76dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431beefd-d0b5-4a7a-9dfe-6619d7640cdc",
        "cursor": {
          "ref": "ad1d1f4d-6140-4995-a897-83b78596bf83",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5ef16fb6-ccdf-4d50-86ea-b046f1832fac"
        },
        "item": {
          "id": "431beefd-d0b5-4a7a-9dfe-6619d7640cdc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4a556afc-20a7-411d-9a0d-cc8cfabb8c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e85628-3be1-4f87-866c-a0ad3606abf1",
        "cursor": {
          "ref": "f1e3864a-5592-44f5-bf37-34306200a66e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0ec7f3cb-f77e-4748-bf25-877b5183be24"
        },
        "item": {
          "id": "33e85628-3be1-4f87-866c-a0ad3606abf1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a7391efe-150c-45da-bf28-77c1866b2811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8a0015-4573-4718-8578-7e272d0637d7",
        "cursor": {
          "ref": "7a4a7884-90ce-43c9-bb38-c5c7ae9d9bdd",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7b1ed359-ffa2-4eed-b620-ce1bdc895d9f"
        },
        "item": {
          "id": "6b8a0015-4573-4718-8578-7e272d0637d7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d1157914-e7ca-4060-a960-d1d08757273c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e4934b-b2c9-4268-9fd1-8a14f19bf788",
        "cursor": {
          "ref": "91e8e046-8dbf-48e8-82d5-819b301133d5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9196b1f4-ce07-4ba6-a649-d6de64cb8095"
        },
        "item": {
          "id": "b1e4934b-b2c9-4268-9fd1-8a14f19bf788",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d884f782-da2d-4979-9de6-cd3efdd7fd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c281baa6-04dc-4a5a-ade0-827b00e72a48",
        "cursor": {
          "ref": "5f8c4c4f-dc6c-4ec8-acca-68530af245ef",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "37ad3854-521f-426e-9124-ba7222f1e0f6"
        },
        "item": {
          "id": "c281baa6-04dc-4a5a-ade0-827b00e72a48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "27047ad4-8501-47a9-a7d1-ea62562cdb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d6589f-33e5-4991-bd2e-5d812d1386e7",
        "cursor": {
          "ref": "5c6cc913-1cd4-4be6-95ea-7eff7d971eb8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "76609372-5b1f-4174-a66d-ae9652edb43e"
        },
        "item": {
          "id": "a0d6589f-33e5-4991-bd2e-5d812d1386e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2c8fd555-8e23-45c4-8524-763fbbcc1302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7de9a8-d9f4-4399-b305-346d2ef05754",
        "cursor": {
          "ref": "fcc727c9-bf43-4863-b719-1cba4cdd099a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e700a726-317f-4b04-bb0b-94e734ceb8ba"
        },
        "item": {
          "id": "6b7de9a8-d9f4-4399-b305-346d2ef05754",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0aab151f-739c-4777-8e1d-a57d9f531311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d6a4c4-0a9f-4ea9-a2a4-7e1d23e23f5c",
        "cursor": {
          "ref": "c74cc32e-6807-4b67-a03e-3bc082ae03ad",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "199865b3-4c82-4b82-8a6a-a11c7ffa8c7e"
        },
        "item": {
          "id": "51d6a4c4-0a9f-4ea9-a2a4-7e1d23e23f5c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9efd6383-c15c-4d32-b697-a16e25d8ad68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7ae2e5-7140-4a4e-b3e0-a7f69d4ff59a",
        "cursor": {
          "ref": "b8942169-b956-41ec-ba89-d5d8cb12b4ab",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "936d9b2a-902d-409b-8550-d0bb0eb38169"
        },
        "item": {
          "id": "fd7ae2e5-7140-4a4e-b3e0-a7f69d4ff59a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "38d6ada7-bf08-41da-bde3-dc4a4393ad54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5036345-c3fa-47dd-ace5-9d18cb606805",
        "cursor": {
          "ref": "3f163064-d13f-4d52-8b43-344f40b48604",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c8392e14-7e4e-467c-a2a5-33fc5f536eea"
        },
        "item": {
          "id": "b5036345-c3fa-47dd-ace5-9d18cb606805",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "232e60f9-df05-457d-8f0c-715a8e901106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8011759f-10cc-4722-b934-df5651db2028",
        "cursor": {
          "ref": "84000d28-3b99-4ae5-a09e-c1ada2cfe3b1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2c0cc893-ec91-46ef-8fee-b29446a958af"
        },
        "item": {
          "id": "8011759f-10cc-4722-b934-df5651db2028",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3ab70cf8-3b55-4415-9f7d-48141fb3833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ba6842-325a-4769-9b0b-65b0d22e1fde",
        "cursor": {
          "ref": "fa1e4e92-e685-445f-ad5b-bea5d89deac3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b27aa93d-7077-4f45-8ffa-5e24ea6ef09e"
        },
        "item": {
          "id": "c9ba6842-325a-4769-9b0b-65b0d22e1fde",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "667c9596-a3d8-40fa-98b8-b0daa7139be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837cd99d-112f-4a14-87a0-3ccb95ed120d",
        "cursor": {
          "ref": "5977e69c-2bbe-46f5-bd4d-acb14918ce0d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "513e37b3-9e46-439f-9a04-48c275b226ff"
        },
        "item": {
          "id": "837cd99d-112f-4a14-87a0-3ccb95ed120d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ff12cdd7-0d7f-4511-8353-2e110d9864ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316e8a20-2852-403c-afa4-6f120d8b8712",
        "cursor": {
          "ref": "50aeb33b-df5f-42e2-a670-5407c169c53f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bf433c85-0889-48e1-805c-7485ea1b11c1"
        },
        "item": {
          "id": "316e8a20-2852-403c-afa4-6f120d8b8712",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6a263b66-d6ff-44ff-8492-3998c8ffbf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6308908-5ed5-457a-aa43-df4c0a6ddbe7",
        "cursor": {
          "ref": "f5acedcc-cbae-47ae-ae07-439885c73d12",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c2046a0a-6414-4617-88d5-3cab16193380"
        },
        "item": {
          "id": "a6308908-5ed5-457a-aa43-df4c0a6ddbe7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "31d8fbcb-b960-4b73-803b-d1a4488ddda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e528eb8f-00ea-42d4-b9c4-ddde0b193fa1",
        "cursor": {
          "ref": "8ca304b5-2c8c-43c0-bde2-179b3fa30066",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d1e57d22-6e0c-47dd-9d8a-e909bc0c97d9"
        },
        "item": {
          "id": "e528eb8f-00ea-42d4-b9c4-ddde0b193fa1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "260201a4-ab65-4ee4-8972-3989468df7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346f0faf-9cab-4e51-96ac-c4b2ebba3052",
        "cursor": {
          "ref": "de705501-8a0a-4bd1-817f-503e59114d37",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "17a96210-1a0b-4949-b6ab-1a00570aeb98"
        },
        "item": {
          "id": "346f0faf-9cab-4e51-96ac-c4b2ebba3052",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "680eada9-befe-4e32-8678-7e060c234990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dc1a41-8b12-45de-b1cb-7162062e8f05",
        "cursor": {
          "ref": "178356dc-e4e3-48ab-9d45-f763ea2472e5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe1ade09-ee31-4bec-bb90-78a99e482277"
        },
        "item": {
          "id": "72dc1a41-8b12-45de-b1cb-7162062e8f05",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9e98a3a6-dd5d-44e8-8b29-0be0e0cefc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c3cb5a-5145-42d1-9e0b-846094dcf29c",
        "cursor": {
          "ref": "1c3ca70a-a65d-4a66-b755-b930835c2a5d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c5f0c168-a4e4-4fda-a6ef-ff8db573adf5"
        },
        "item": {
          "id": "a4c3cb5a-5145-42d1-9e0b-846094dcf29c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ad6bc5a6-3a42-4d1f-b35e-f6aa1d1a2dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056fb8a4-6507-417a-bfff-c7082d34d0b1",
        "cursor": {
          "ref": "42b4dc0c-df14-4d08-b877-98f12fcbf1b9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "03e8ab99-842d-4fec-b8c4-1eb09b90feaa"
        },
        "item": {
          "id": "056fb8a4-6507-417a-bfff-c7082d34d0b1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cf64501a-6624-44ed-a6c5-95921e81fd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae12670-3037-4d2e-8c27-aec236b7a494",
        "cursor": {
          "ref": "8c3732cb-a739-48b7-8a02-b6940ea5c0d9",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "73ce3ed8-2289-41cc-86aa-005cef13fc67"
        },
        "item": {
          "id": "1ae12670-3037-4d2e-8c27-aec236b7a494",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "86e59000-f948-4908-9590-58627d49a4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7723ea4f-5345-433f-b901-4ccb6ca6cbc4",
        "cursor": {
          "ref": "e0b578da-3f14-4c73-afb8-bf94bf1deb39",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "37cdf045-c2cb-43d7-89f9-d8796e092bda"
        },
        "item": {
          "id": "7723ea4f-5345-433f-b901-4ccb6ca6cbc4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f10ad73e-6661-4d34-963a-5aa332cbb9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee14cf0-9531-40ff-9066-e61b99cc329a",
        "cursor": {
          "ref": "61de80ae-b6f2-4022-8bdc-77add5acace9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b6643fea-c6dd-409c-ab06-a5ef2c7d6fac"
        },
        "item": {
          "id": "7ee14cf0-9531-40ff-9066-e61b99cc329a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "42d00032-6f7f-4d9c-8c82-834dca95c12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f0aaf3-005f-4583-9bd6-7c24c303bb81",
        "cursor": {
          "ref": "a27aa81f-430e-4e31-a412-c5ef84d9aa8f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0f3cd053-0bcb-421e-a85a-02ea27ca9211"
        },
        "item": {
          "id": "e2f0aaf3-005f-4583-9bd6-7c24c303bb81",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e919a45a-acc0-4293-b906-6c9005b55161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031cd62a-9155-4485-9f15-e76ffadacc6a",
        "cursor": {
          "ref": "737099ab-fc75-4b6e-a744-eaffc4bc25fe",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "393dd912-2c6f-452c-b08d-f2a6995bc354"
        },
        "item": {
          "id": "031cd62a-9155-4485-9f15-e76ffadacc6a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "38231519-65f4-4152-87d2-ce3a503ec9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14792e-0583-449b-b735-cdb6d2e234b9",
        "cursor": {
          "ref": "2a6f4c24-a6dc-4c1d-a608-aad3fdd27695",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "666bb6b8-eecd-48aa-abe4-b30431035a3a"
        },
        "item": {
          "id": "fc14792e-0583-449b-b735-cdb6d2e234b9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8a90da08-37d2-4ff6-ae72-82208f6012a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3de3ce-463d-4683-9bfd-0d38f2ed2f90",
        "cursor": {
          "ref": "81b74c5e-9516-4ef1-9a79-5081bc606a7f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d6832c1-04ec-4612-9807-2551f6c621d9"
        },
        "item": {
          "id": "fc3de3ce-463d-4683-9bfd-0d38f2ed2f90",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "352fe708-f2f8-458e-9554-61e2ffda5d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe0e32-a83d-4773-92e8-bb0006b9935c",
        "cursor": {
          "ref": "c19af21a-9bbf-4d1e-a70c-d7a81a4043bf",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "19b1220f-9c25-42dc-bb5a-b7ba244100af"
        },
        "item": {
          "id": "40fe0e32-a83d-4773-92e8-bb0006b9935c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9a398dab-99cd-4101-aaf0-f264039b9df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4683e2-984f-4fde-922c-273039e34290",
        "cursor": {
          "ref": "ed49d861-ced2-4371-8b3e-f89788e27717",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "01bd5a79-6840-4d45-85df-81a07de92efb"
        },
        "item": {
          "id": "9f4683e2-984f-4fde-922c-273039e34290",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5a4d57d6-8a1f-469a-9725-c2b048153b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4a8552-56a0-4e57-b45a-50f891380ded",
        "cursor": {
          "ref": "0b614fa3-80b8-4871-af46-2d2d764bdb78",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ff85bc6-f2ed-4d64-a576-2da23b36d3a7"
        },
        "item": {
          "id": "1b4a8552-56a0-4e57-b45a-50f891380ded",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "72f09f19-0ae4-40f6-ae45-0ecb3de43b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266f8502-7d9e-4343-bc1d-667cdf0c864b",
        "cursor": {
          "ref": "b752f5d4-e6d6-43de-b306-397beccebb6c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a5c70e17-3e36-4052-b831-2122946c92ce"
        },
        "item": {
          "id": "266f8502-7d9e-4343-bc1d-667cdf0c864b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cbc5b1bd-2736-4101-8759-ffa3c170a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc5b59b-ccac-440f-ae67-866d21852dd4",
        "cursor": {
          "ref": "86018511-21a4-4143-a079-6711f16d58f3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "08d30d0f-d876-4195-85b6-0f56e6c3188b"
        },
        "item": {
          "id": "2bc5b59b-ccac-440f-ae67-866d21852dd4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a1985cd5-adcb-4c02-8626-3d250cd28af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74777962-948b-429c-917d-c7247eb3b220",
        "cursor": {
          "ref": "3da3478e-ae79-4891-a37f-51ea4133b297",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "36ed6bde-e25f-4569-bd8d-64cbda05552d"
        },
        "item": {
          "id": "74777962-948b-429c-917d-c7247eb3b220",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f14ae663-6c24-499d-9ced-9a98059c0749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d987ea-a4b5-4b88-996f-b4487725d484",
        "cursor": {
          "ref": "74bf8c54-1dda-42ba-80c4-876c2a97f7f1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b5ea3c3f-63fd-44be-bafa-7121db8e8fbc"
        },
        "item": {
          "id": "21d987ea-a4b5-4b88-996f-b4487725d484",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0056927a-6ea4-4f46-b930-32e91004b8ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67347a4c-25ac-4022-a229-0650e277d007",
        "cursor": {
          "ref": "506e7a2a-e392-406c-8393-a31456ee4c95",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "94d47a39-9126-4772-8238-537c7f7c6c94"
        },
        "item": {
          "id": "67347a4c-25ac-4022-a229-0650e277d007",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "23913455-ad53-488d-a228-0b3d5fbabb3f",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171ba91-3a9d-4f7c-a1db-da11fa82cad1",
        "cursor": {
          "ref": "8c52539f-55a7-48a5-8998-c1a450f19870",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c4c7e73e-efbc-4477-83a4-d517604ef002"
        },
        "item": {
          "id": "b171ba91-3a9d-4f7c-a1db-da11fa82cad1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e42508f7-72c5-45c2-9dd1-8dace19a39da",
          "status": "Created",
          "code": 201,
          "responseTime": 516,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5084d53b-d3bc-4430-b636-26d3806504cb",
        "cursor": {
          "ref": "8bdb66d2-b647-4761-9138-604c0c9728b2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b8db6ee6-02c0-4635-8e91-c9fec3747751"
        },
        "item": {
          "id": "5084d53b-d3bc-4430-b636-26d3806504cb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9a16662a-e8b0-4e23-9dcc-308bb75f2566",
          "status": "Created",
          "code": 201,
          "responseTime": 96,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c60d0-1c95-4544-974e-82a0834560bd",
        "cursor": {
          "ref": "b42e5e1b-f0e3-4946-9aa0-ff9e54f72a31",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aa0a47d3-a8ef-480a-8ceb-d6ee884539ef"
        },
        "item": {
          "id": "ef6c60d0-1c95-4544-974e-82a0834560bd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4d0a1809-dc7d-4f79-aeec-4f2edcfeeeb8",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "784753c1-3b21-417c-a5cb-b2ba1c9ede58",
        "cursor": {
          "ref": "ea31bb7e-dbd1-4f99-b428-ed2b8d716494",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c4eca77f-654b-4f06-94c4-c06aabc24463"
        },
        "item": {
          "id": "784753c1-3b21-417c-a5cb-b2ba1c9ede58",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9681be19-ebc5-4498-ae97-1447473f6e91",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "075047ce-62b9-4495-9aee-040c9a497abe",
        "cursor": {
          "ref": "4084f180-f331-4e2f-ac7c-f6f39f788329",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ca419857-8319-49e7-bf65-bc375a847877"
        },
        "item": {
          "id": "075047ce-62b9-4495-9aee-040c9a497abe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b074e31-226b-41c8-bd3d-5e94ad43a74d",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d436f0-5efa-4346-b184-92aee449d137",
        "cursor": {
          "ref": "eda7c61b-bd28-49d5-ac40-19c2c8a2d84e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e6c6d0f-aac3-43bb-952b-f377e6ed15b2"
        },
        "item": {
          "id": "39d436f0-5efa-4346-b184-92aee449d137",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "74dccf3f-b530-4dbb-bd44-a6b6d326c5dc",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59596935-bc07-4b6e-a54d-9abda79f1dd7",
        "cursor": {
          "ref": "67d9dc49-75b3-4c9d-a9dc-82fb1f9f9369",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02530c9e-7628-4ae7-8ca2-79adf84c271c"
        },
        "item": {
          "id": "59596935-bc07-4b6e-a54d-9abda79f1dd7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "718c3ad8-f1f5-4a09-bea5-8f0a727a7681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42ec5af-c4c7-4c6f-ade9-4a83cd40ac02",
        "cursor": {
          "ref": "dfc2a9ec-6870-446a-a100-770adc2bee8b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b8f1c54f-4cb8-4c80-ba03-7f58bbd66795"
        },
        "item": {
          "id": "d42ec5af-c4c7-4c6f-ade9-4a83cd40ac02",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cf7a7c8d-8d5c-4e76-aa39-41c456503ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa7570b-9f96-4c6e-b36c-a3a5da32bbd5",
        "cursor": {
          "ref": "f0254052-2336-47ec-882a-c7af22d227b3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "61c928dc-bf39-4543-947d-ad5e5e04088d"
        },
        "item": {
          "id": "eaa7570b-9f96-4c6e-b36c-a3a5da32bbd5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "28d944af-4756-4228-ace9-b6240c71596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a3de37-7145-454f-8a3b-902951cd0c3c",
        "cursor": {
          "ref": "9a5f3c94-0bfb-46a6-baa2-900d870987d6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "536712de-18e0-4b7d-bc5d-12d644c698b4"
        },
        "item": {
          "id": "80a3de37-7145-454f-8a3b-902951cd0c3c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cbde9b54-3060-4126-b1e5-bf31154b5147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caeecf6-80ec-4574-958d-8603a244c5d1",
        "cursor": {
          "ref": "2d9ed0a2-f2a3-453f-bb80-3c9904352222",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e3e80e03-b7b5-412b-aac4-889b299c0744"
        },
        "item": {
          "id": "5caeecf6-80ec-4574-958d-8603a244c5d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "deaea0b4-3c38-408c-96ea-10c95ec41efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a678634-db04-4d27-a70a-036ebc902779",
        "cursor": {
          "ref": "7ecf9059-c77b-42d3-bb3e-7af4a1090a8b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "94622d26-c9a8-436f-886e-d8318ae33a9e"
        },
        "item": {
          "id": "4a678634-db04-4d27-a70a-036ebc902779",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "938ce322-ef2f-493c-8c81-fd439c9130c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e832bb-df0c-4322-a143-e8bf5f9a2607",
        "cursor": {
          "ref": "92374dfe-2381-4387-9ae5-b9b6f2a6c427",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fb853795-0187-47dd-967b-8c55109a5264"
        },
        "item": {
          "id": "66e832bb-df0c-4322-a143-e8bf5f9a2607",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7774ea9-a778-426d-811f-532bd48b39a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92707cb2-19e9-4c29-adaf-1f96b3ef09b1",
        "cursor": {
          "ref": "853a7e87-0e48-41a1-8c97-912d3026460c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bdf62233-9a72-48ff-97a6-b05156079259"
        },
        "item": {
          "id": "92707cb2-19e9-4c29-adaf-1f96b3ef09b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9770f5bb-840c-4828-a039-6d0e3ff79854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5317dd2-ca66-42cd-a18a-72c451a4013f",
        "cursor": {
          "ref": "45bab196-7330-41a7-a968-a8adb6cd389b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b8091394-9aa9-4319-9009-72039d618da1"
        },
        "item": {
          "id": "d5317dd2-ca66-42cd-a18a-72c451a4013f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "02711d22-3678-4a9c-ad14-06caa786c2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7ca172-2335-4d85-b49d-964a34120dc7",
        "cursor": {
          "ref": "e0496cf1-4635-4498-9bd5-5ce4edf4b875",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d15b069d-ffea-4f27-9b11-1747f540783e"
        },
        "item": {
          "id": "ea7ca172-2335-4d85-b49d-964a34120dc7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0359c31c-7927-4a29-937a-510760a90727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916a7583-e15b-4dc7-9ed4-aca06d913f32",
        "cursor": {
          "ref": "8513f175-1f8f-44f6-b923-8886603dfb00",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "12cf9bea-0930-4fe3-8c2e-d9e04c9765ca"
        },
        "item": {
          "id": "916a7583-e15b-4dc7-9ed4-aca06d913f32",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4a57fb35-d488-4019-be5d-e4a68ca470f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0f57f3-def7-4988-80bb-45f3972d340a",
        "cursor": {
          "ref": "b41c7be4-2c94-42a3-a665-92966b0ad7f6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cbbf09ef-ff13-47f8-b81f-f9f8aa56b189"
        },
        "item": {
          "id": "8d0f57f3-def7-4988-80bb-45f3972d340a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b6353a20-074c-4488-8bfc-46942609b7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf66cee-f91a-4f88-bd49-1cdbdd3e1bba",
        "cursor": {
          "ref": "2465e526-56f1-45cd-9b4d-783e45968b7c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fd8f7a9d-1502-4244-8389-be2b53869fa7"
        },
        "item": {
          "id": "3bf66cee-f91a-4f88-bd49-1cdbdd3e1bba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b2c5014b-117a-4a12-8101-960c8b4204b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ff4058-45c9-4f26-af4b-23af9889f75a",
        "cursor": {
          "ref": "edfd79b9-86f9-4cdc-b85e-1d180cc42288",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5091e591-5b9a-4bde-85b1-9f742aec73a8"
        },
        "item": {
          "id": "89ff4058-45c9-4f26-af4b-23af9889f75a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd64bda6-1fa4-48b9-90a8-32e6900650b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0595b5b8-a25f-40fd-9983-e42dd523b7d1",
        "cursor": {
          "ref": "c76c3614-242a-4547-b8d5-d371f6b3e3b0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "864793fa-9fdb-42ef-93a0-8eccb433b42e"
        },
        "item": {
          "id": "0595b5b8-a25f-40fd-9983-e42dd523b7d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b376bfcc-1294-43f7-93fe-c6f03d0193ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82de41f-b28b-474f-a3e6-ac35933c687c",
        "cursor": {
          "ref": "3651c1cd-0586-4343-b4ec-015d2ab2b3b6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f5ae4c0b-b6d9-40e6-9171-345a604a23a3"
        },
        "item": {
          "id": "e82de41f-b28b-474f-a3e6-ac35933c687c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "160d5b16-dffa-4eda-a919-6cf4b97b4a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37e9c8d-5b40-4043-ba24-f768df29e178",
        "cursor": {
          "ref": "6e6c4269-6eb9-45af-a489-267eeac4bd10",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "784c61fd-d234-455a-b3d8-877ca68734b9"
        },
        "item": {
          "id": "b37e9c8d-5b40-4043-ba24-f768df29e178",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0bab40ae-b71d-4022-b3e6-ebe70f1c39c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d8b970-7d64-4ecc-8feb-f6e5b2cca249",
        "cursor": {
          "ref": "b4164272-b6b8-4e5b-9982-19b59451136f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f92f1e97-cadb-4a66-9ab2-b61a89af1b4e"
        },
        "item": {
          "id": "15d8b970-7d64-4ecc-8feb-f6e5b2cca249",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d590c3ff-7516-41e5-8bfa-5e1b65f3a52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70fcb7-d300-4f4b-8abe-1d52ae4d9a0c",
        "cursor": {
          "ref": "59c274ec-ef35-49d6-a946-55c10b9f8d79",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a38cde55-4a53-4a2c-996b-b9c35f966019"
        },
        "item": {
          "id": "9f70fcb7-d300-4f4b-8abe-1d52ae4d9a0c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2fc5a644-de76-44b1-a152-0d088715dcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc68e52a-4d9f-481e-be50-b255edc9d36e",
        "cursor": {
          "ref": "0b787755-b279-4f42-8767-1b11ad922ee1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c8f39366-c018-4c13-b285-d7b8be317c5b"
        },
        "item": {
          "id": "fc68e52a-4d9f-481e-be50-b255edc9d36e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec0aa9b9-5b31-486b-9270-f140fedd267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f088d9c-63cc-4d46-bbbf-9b44851a822a",
        "cursor": {
          "ref": "55ae03ee-4f41-427b-946d-52fcf5ed5b01",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a6ccde63-e47c-41f6-be03-f388f13f11b2"
        },
        "item": {
          "id": "6f088d9c-63cc-4d46-bbbf-9b44851a822a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "da7b63ca-ee8b-44e0-b9d1-2b437858253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59e9252-3ee4-4fea-a9b3-839e30964fa4",
        "cursor": {
          "ref": "edd33a43-105c-4d79-96a7-3f6bdbe5c11c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e7fde21b-5f01-498e-ada1-0b837cdf9175"
        },
        "item": {
          "id": "a59e9252-3ee4-4fea-a9b3-839e30964fa4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "62cda03f-8faa-425a-bb53-e6f29ca6f50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff8906-01b0-49dc-976f-be5f914cf845",
        "cursor": {
          "ref": "2927b4bf-2b08-4008-9c71-c68de3ce9c9d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2a085d4b-38b8-44c4-b8c9-b5eb8f9a74be"
        },
        "item": {
          "id": "f7ff8906-01b0-49dc-976f-be5f914cf845",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3994a289-69ad-4e90-8a17-341bdd3c5e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7b9280-d5f5-4680-bc23-403554280056",
        "cursor": {
          "ref": "7f23fc18-b5af-4b71-9939-79b3d439871e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "994d181b-6627-4621-a4c5-e3c79847a8b4"
        },
        "item": {
          "id": "da7b9280-d5f5-4680-bc23-403554280056",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d266e5fa-8afb-4cc5-bcd4-0eb4060cf128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f75ca8-8c90-42c1-9429-a4f01a5c19fb",
        "cursor": {
          "ref": "0ddd20b6-22e6-48cf-90a2-90a40c70b1ff",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f44c6f4c-daaf-41d9-9701-91b57afbbad7"
        },
        "item": {
          "id": "84f75ca8-8c90-42c1-9429-a4f01a5c19fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca5a929d-b97c-4570-9b4c-dae914af90f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2d2683-5e82-4abf-9797-d91375402799",
        "cursor": {
          "ref": "49287d0a-2c3f-451e-87b6-172e13f2bc4a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c0e66d33-b7e5-4960-bc03-42130265018e"
        },
        "item": {
          "id": "4a2d2683-5e82-4abf-9797-d91375402799",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85038143-741b-43d9-b326-4decb1119afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe5423f-a11a-4670-b753-02e1bb0429da",
        "cursor": {
          "ref": "04ed67e5-fab4-4223-b22f-7d95cf67f138",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8739802e-c52a-415e-b369-a7413ca9f588"
        },
        "item": {
          "id": "3fe5423f-a11a-4670-b753-02e1bb0429da",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bd8faef5-cfa7-48b4-a386-7be8d78c99ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40628e6a-c7b6-4a4b-a01a-a373c5e84b86",
        "cursor": {
          "ref": "80a065ac-611a-4484-8857-97e0ee4bdf19",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fbeca9bc-0568-47fe-a0b8-3979d7ce4c65"
        },
        "item": {
          "id": "40628e6a-c7b6-4a4b-a01a-a373c5e84b86",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3dd81b29-0f18-4cb2-bad7-7d7cb61704c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829dcbbd-f3ce-44bc-9127-ad59a4fac375",
        "cursor": {
          "ref": "c4d0a275-474b-4bfc-b4d5-79da2eaba3ad",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5d776a2-640f-4a10-bb98-f39c485ce1cf"
        },
        "item": {
          "id": "829dcbbd-f3ce-44bc-9127-ad59a4fac375",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ef581d8b-f5e8-4ba0-b2f1-d68c1e0d590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f356b4-a8ac-422f-a6b8-e9f3d06921a8",
        "cursor": {
          "ref": "06d83773-0744-4b38-8427-f5e8eb40d87b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f13b1225-38f8-4473-983f-eab2965a0fff"
        },
        "item": {
          "id": "98f356b4-a8ac-422f-a6b8-e9f3d06921a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "79f28cc4-85e7-42f1-a4ee-690b4872b988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01029be1-22a4-4b55-9b3c-bb40dcd0104a",
        "cursor": {
          "ref": "53815f38-876e-4df1-bdf4-9066e7be5424",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d0106ad8-ba44-4574-a1c4-837fc3e66d79"
        },
        "item": {
          "id": "01029be1-22a4-4b55-9b3c-bb40dcd0104a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "92b9b042-6eb7-45f4-9a79-4b3f46d49bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8118634-90aa-47c3-b655-9d43e2047745",
        "cursor": {
          "ref": "8eda8e10-2825-4e7b-91ce-7dfa8a708537",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "999b1388-8366-4a1d-b734-9c8e327a9dbf"
        },
        "item": {
          "id": "f8118634-90aa-47c3-b655-9d43e2047745",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1bec4c87-3b09-46b8-a507-fb0e38e7ce5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0de1e6-5045-425b-bb2d-11d3e34d9102",
        "cursor": {
          "ref": "2fb22207-a55a-4c58-bdf9-289f45eb4f61",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c5192c87-cf51-4472-a50e-82a26ab0c8f9"
        },
        "item": {
          "id": "4d0de1e6-5045-425b-bb2d-11d3e34d9102",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0551adf1-2126-4980-8c3c-e8d2c22acec3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc69824-7eed-4dab-9b80-c8192b2bfaaf",
        "cursor": {
          "ref": "ff555966-161a-4e01-b752-e4a3ef2b0cc8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f424e17-3d4b-4d19-8728-1abbf09afe05"
        },
        "item": {
          "id": "2bc69824-7eed-4dab-9b80-c8192b2bfaaf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "24ad38fa-7dcf-425e-b476-f1a468e01712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c5225a-581a-4957-82d8-8a7555439592",
        "cursor": {
          "ref": "e66b60f4-ef0b-4fa6-ac71-af20d0e585c8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bb3a945c-1c82-4bb6-a1b2-319b520012ab"
        },
        "item": {
          "id": "25c5225a-581a-4957-82d8-8a7555439592",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b9f056d0-ffc8-42ec-b863-69e90cab3665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629cbce4-ec26-4a43-aeeb-c0fa9c256b1b",
        "cursor": {
          "ref": "45c6a583-2f6f-4931-8057-329d2cd4500e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ea11d3b5-f7b5-4180-8f2d-083d08b73935"
        },
        "item": {
          "id": "629cbce4-ec26-4a43-aeeb-c0fa9c256b1b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f7d6f349-a0a2-4e0e-bd2e-7f6bbac56606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f2a49c-6339-4596-b82c-ec850030498d",
        "cursor": {
          "ref": "d6bf1514-c13d-44bb-94e6-9caa36fa4b56",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bc15cd81-03c1-4ecd-9fd0-aad888f662fa"
        },
        "item": {
          "id": "94f2a49c-6339-4596-b82c-ec850030498d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e395e04b-4822-43e1-b1f1-33e52d299a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880b9602-6bcd-4e86-b2cc-7ddeac1e6eb5",
        "cursor": {
          "ref": "4b86b5be-613d-488d-9be8-fe36873d1cd9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9afbbc65-2912-4919-9854-1d30d87f5714"
        },
        "item": {
          "id": "880b9602-6bcd-4e86-b2cc-7ddeac1e6eb5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66c4d173-5d96-4625-8a96-b15ff8b04fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb4fd68-3033-4b05-a9e2-f82b41c6bce6",
        "cursor": {
          "ref": "dbb9a64f-2df3-4821-9a00-e704981fd41d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2779cdcb-d8eb-422c-af94-a5c5653c1bed"
        },
        "item": {
          "id": "5bb4fd68-3033-4b05-a9e2-f82b41c6bce6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b95a68a-8e02-4239-8a8e-6c8f7ad6a69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e092e24-bf99-45fe-a700-d19517ec4dc5",
        "cursor": {
          "ref": "b5cc51f1-079f-4914-a69a-8313600b5364",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eda5ffdf-28cd-49aa-b81e-32b3ee411087"
        },
        "item": {
          "id": "0e092e24-bf99-45fe-a700-d19517ec4dc5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f68d37b-8074-4a1c-a80e-bf5d72b90ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcd699f-8460-4762-bbcb-43e545a92d4d",
        "cursor": {
          "ref": "b4df5d57-50bd-4a5b-84eb-b3338f75c720",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "23b46917-bbbe-4c1c-9497-6c0863972881"
        },
        "item": {
          "id": "8dcd699f-8460-4762-bbcb-43e545a92d4d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e818c5e0-c723-4b1b-a328-c19877a207c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672b46b9-b6a5-4bcb-98f9-3c6da13247fe",
        "cursor": {
          "ref": "7204eb12-0503-4087-b70c-c6b8f9824fc2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f3863d9c-72a9-4af0-9d94-384e64251b53"
        },
        "item": {
          "id": "672b46b9-b6a5-4bcb-98f9-3c6da13247fe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7aafd6ef-6da7-476a-97ee-78ecc856d447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3069db-005b-4e9f-b408-8be7b3f0be60",
        "cursor": {
          "ref": "92809d50-b1b7-4474-b836-52ea1bfb9096",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "887caea4-8431-4cc1-b5b8-1f6e12199c29"
        },
        "item": {
          "id": "fa3069db-005b-4e9f-b408-8be7b3f0be60",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "398e1ae6-f4d7-4715-bdeb-0da6e4593ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64b0524-d6d2-4dfb-aa76-01383bcea815",
        "cursor": {
          "ref": "d7561119-a0e8-48cc-84e7-7b827014aaa0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "818744ba-2d34-4343-a880-76e178f510f3"
        },
        "item": {
          "id": "e64b0524-d6d2-4dfb-aa76-01383bcea815",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cf41e8a3-2e2b-4ac0-abc1-620772650dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c31164-2c86-4cb7-87de-903dc18d62ac",
        "cursor": {
          "ref": "0cb378ff-0b36-432d-bb9d-128fefc64e6a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a3c530ae-7961-4763-8bc6-3ad7f162dac0"
        },
        "item": {
          "id": "f6c31164-2c86-4cb7-87de-903dc18d62ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7fc3e8e3-7899-4a7a-b4aa-cd282995a396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb079b6-0bd4-44d6-8c6a-39a0e45405e2",
        "cursor": {
          "ref": "06cab750-281f-440d-a639-1e38d519e4bf",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "69963820-8573-4484-9252-0f9393d012f2"
        },
        "item": {
          "id": "adb079b6-0bd4-44d6-8c6a-39a0e45405e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a14f69e-f8c5-4d53-bc58-326e45529ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cf5840-fb4f-4a67-8fc7-8610d1e66985",
        "cursor": {
          "ref": "c4c4d003-6e92-4ccd-819c-ee9139a65a9a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cf009ee6-5885-4209-8956-4415ae3e7159"
        },
        "item": {
          "id": "48cf5840-fb4f-4a67-8fc7-8610d1e66985",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6890c5b1-43ea-46f3-b973-b26772dc47d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c15877-2e24-4e59-b5e1-46b4fdd7fdfc",
        "cursor": {
          "ref": "2b4e275c-edcf-4418-9fcc-5cbf370813d0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8fef60dd-1a43-4d82-8246-853bbe84e11b"
        },
        "item": {
          "id": "e7c15877-2e24-4e59-b5e1-46b4fdd7fdfc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fcf412b8-e4de-4494-9e3a-b3e95c0bea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baff45f-6e4f-43ea-8ec3-98641264909f",
        "cursor": {
          "ref": "635bbf41-e0e4-4a23-87ab-01becb209b49",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ae6a6518-b775-4ea9-96a7-3eb93f040121"
        },
        "item": {
          "id": "5baff45f-6e4f-43ea-8ec3-98641264909f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6498efd-a4e4-46cd-965e-f17f7345fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd509a7-a8dd-4d53-898e-89c8b0b258c3",
        "cursor": {
          "ref": "e3ec77c6-79cd-4e7f-9929-013c4dba8587",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3b922888-dc93-43a9-bea7-d664f23c5e40"
        },
        "item": {
          "id": "4cd509a7-a8dd-4d53-898e-89c8b0b258c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26057bfc-b714-4ab8-b919-f90c524c05de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f569fc17-b2f4-466e-9e0b-a304d59d15f7",
        "cursor": {
          "ref": "81730e92-5f31-45f3-b23d-771ed5553f7a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e787cbf7-7bb5-4289-a334-802abeefd976"
        },
        "item": {
          "id": "f569fc17-b2f4-466e-9e0b-a304d59d15f7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e5dac4ce-c49c-4fab-aca3-a8fa4c8f5b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3397613-5332-44d0-92c6-fb5093a39abb",
        "cursor": {
          "ref": "536425d0-b284-4354-a200-dd6d98828c61",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "51adb462-bf17-46bd-bbde-e7455f0347ce"
        },
        "item": {
          "id": "c3397613-5332-44d0-92c6-fb5093a39abb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fbf2b37d-0ef2-401b-8f94-a99265454b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb963c4c-f155-4fda-8125-53ae803b5f01",
        "cursor": {
          "ref": "cbad4653-3572-4dd1-85d1-94feeebbf385",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "85234459-7d7a-4e89-91a9-35cc317f3a7d"
        },
        "item": {
          "id": "fb963c4c-f155-4fda-8125-53ae803b5f01",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01cd4a69-6a1d-4c86-bb59-5fa39ccfbc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b991f9-4a45-4025-9c82-65413936374a",
        "cursor": {
          "ref": "828b3bd3-40f7-4fab-9911-4d6fd894d899",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2660b5de-40f7-4c71-9ea6-295124c5a311"
        },
        "item": {
          "id": "93b991f9-4a45-4025-9c82-65413936374a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "158c6289-b36b-482e-898c-f0909dec7e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a24a0cc-57d2-4804-9e08-66358deb5ca9",
        "cursor": {
          "ref": "75d578db-e398-45e2-97a9-31cfaa69432a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a8aa009e-e46a-4ee7-bf1b-8e4693a6b6ea"
        },
        "item": {
          "id": "9a24a0cc-57d2-4804-9e08-66358deb5ca9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "446758da-a45c-4631-9d3f-232f6536c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06829c43-1680-452e-bd0b-a0bef60347f8",
        "cursor": {
          "ref": "261ec167-5052-4555-9839-f65f8843ad32",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "102d18a8-58bc-400e-8670-cee3c1770697"
        },
        "item": {
          "id": "06829c43-1680-452e-bd0b-a0bef60347f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9aebd45b-372c-461c-9ee3-655123f0adc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b3ac38-b3f2-4ddf-a0b9-ebb71750bdee",
        "cursor": {
          "ref": "3e8bbab8-d229-4cc7-9494-0338fa271a85",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a12a97e4-f0de-4772-9049-478445465b52"
        },
        "item": {
          "id": "17b3ac38-b3f2-4ddf-a0b9-ebb71750bdee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c566cc29-801a-4ed8-8c9b-a4fd5e1c3ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a779a6b2-2f40-4b96-a1eb-86aa77f77977",
        "cursor": {
          "ref": "1aad1e6d-d564-40c1-875d-a8bbc2e66d16",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a4f8d456-19ef-4ed7-92ec-d6752b6f98c9"
        },
        "item": {
          "id": "a779a6b2-2f40-4b96-a1eb-86aa77f77977",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd5317be-0137-4e72-9604-d908e5786255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea2e1c7-92de-440d-a662-fa7f95c4a9ac",
        "cursor": {
          "ref": "d9fc379e-0f9d-4303-b955-b164774af7d8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "12675ba6-e766-48ac-8c27-e3e495fce388"
        },
        "item": {
          "id": "fea2e1c7-92de-440d-a662-fa7f95c4a9ac",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a7c77fb6-391a-43f2-9d30-1478a8deacd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bae69d-6584-49e9-8eee-156fcd7bfbdc",
        "cursor": {
          "ref": "a94871de-01f9-4745-9442-09b3c239eac4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "257d7825-c093-4a6e-b5dc-c65bb18c5372"
        },
        "item": {
          "id": "00bae69d-6584-49e9-8eee-156fcd7bfbdc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3a0078f-6391-4b55-9965-a825e331e598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72235e37-f854-4550-8f15-8030598c27b5",
        "cursor": {
          "ref": "104e17f6-19ed-4667-9c66-0a98c7feb404",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9ca3253d-4ac5-409c-846b-9c54ea730ebb"
        },
        "item": {
          "id": "72235e37-f854-4550-8f15-8030598c27b5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "139a6ce5-f47e-4c67-878c-95ca384bfdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979edc16-811b-440b-9ff3-3ad9ab0a804a",
        "cursor": {
          "ref": "5800c179-f39f-4ab0-9589-35d88dcb640e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "42918800-5c1d-44c0-bdf8-87b2126b387f"
        },
        "item": {
          "id": "979edc16-811b-440b-9ff3-3ad9ab0a804a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "faecb0da-cb3e-4812-a7dd-2f6c09b719f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d9dca8-6b97-4576-b613-1aaec0eb2865",
        "cursor": {
          "ref": "1917bed6-7f21-45f2-aba8-85995c1bc68d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5814ff6f-468d-4cf9-8647-a2675d11f8d6"
        },
        "item": {
          "id": "32d9dca8-6b97-4576-b613-1aaec0eb2865",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1950b764-f989-4da1-bc02-ff228339b00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add97bea-1a16-4c4b-9283-74a521612ea8",
        "cursor": {
          "ref": "adbaed0b-20a8-4d8e-9364-89846f26bf43",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "21e98dbf-f8ac-4694-860d-bb61ffa9dc1f"
        },
        "item": {
          "id": "add97bea-1a16-4c4b-9283-74a521612ea8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1d93aca6-f96c-4be3-ab51-846714e57881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c690a9e-1209-4c56-a627-a9c7fd07c172",
        "cursor": {
          "ref": "2df49e78-b1f4-4ec1-b3d0-a9d28115cd49",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "feb14216-c9e1-4404-a6d3-c4ecffcb81ac"
        },
        "item": {
          "id": "1c690a9e-1209-4c56-a627-a9c7fd07c172",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "db9df290-bc33-4c51-8a6f-1a51b149ef33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1342fbf-b27c-4589-9e74-8a4cb3974bc4",
        "cursor": {
          "ref": "912ae690-5f18-4e3a-8afb-fcb71943644d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb180d30-e5c8-425e-afce-5ff337614095"
        },
        "item": {
          "id": "f1342fbf-b27c-4589-9e74-8a4cb3974bc4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "959778a8-d751-4a26-ad88-e79916678d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bda12e-1f70-4fae-921f-fe6ab666cc13",
        "cursor": {
          "ref": "d36712d4-7360-40da-9b64-8e0958ce9c3d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "62d501f7-2f98-4cfa-897d-0118ac1596a2"
        },
        "item": {
          "id": "99bda12e-1f70-4fae-921f-fe6ab666cc13",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6bfea438-ded5-4acf-9506-c984b65eb469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530e7623-36c0-4424-956f-15fc41eb788d",
        "cursor": {
          "ref": "57fba17c-3bb8-4a5a-a007-765a075ac773",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f3827ced-1ea0-4c72-8c61-c35f7d470867"
        },
        "item": {
          "id": "530e7623-36c0-4424-956f-15fc41eb788d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "45c8f4fe-4b43-408f-b3f9-1f4f52cf570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9edfa6-9306-4c62-b1af-5e72f3017f6a",
        "cursor": {
          "ref": "ba750c47-474d-4a04-8b35-0cb4750202ff",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ddd2b533-89da-42a4-a92e-3977d43ec427"
        },
        "item": {
          "id": "fa9edfa6-9306-4c62-b1af-5e72f3017f6a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "50e4ae1b-9e2c-4a67-a75d-9c6024d88f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b02f4c-9616-482a-ad6d-6c01ae7c8c81",
        "cursor": {
          "ref": "1094be1d-2a83-46b8-88c1-4709cb653554",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e6abf92-fff4-47e0-9f5b-c17166d6f7df"
        },
        "item": {
          "id": "98b02f4c-9616-482a-ad6d-6c01ae7c8c81",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9cd08c8e-41c6-4e93-ab48-205e0a212a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c6f04b-d351-4be3-a41a-d843107a2355",
        "cursor": {
          "ref": "ec63f8a5-ff56-4a3c-b10c-9d74fd53d370",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "011b22f2-d627-4be7-bdd4-fedb3ebe8338"
        },
        "item": {
          "id": "e0c6f04b-d351-4be3-a41a-d843107a2355",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16ec15d8-ea81-4d1a-92bd-b2e536b5a3b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6990ee72-43ae-4d44-8c12-9adc7e736575",
        "cursor": {
          "ref": "196f1a0d-ab39-4b99-b671-aa36ec611abd",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "04793c55-c254-4cac-a582-5b5b9fec34f7"
        },
        "item": {
          "id": "6990ee72-43ae-4d44-8c12-9adc7e736575",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33abf43b-8dff-4e11-a887-50779e1de891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f31475f-9204-443e-9b15-d6e064f8f5f8",
        "cursor": {
          "ref": "08320f57-af1e-4396-9d8a-67c3c240117d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a5a87a27-1ea8-4131-a3e5-8b9b9742c472"
        },
        "item": {
          "id": "3f31475f-9204-443e-9b15-d6e064f8f5f8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9dbc81ea-204f-4293-aea0-e7decd0f8503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dbe9f2-b305-4280-a3d5-65cfe695e6a3",
        "cursor": {
          "ref": "93b41c63-709e-432c-9d88-6eb008ba131f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8aec0000-6095-4d04-905f-0e808b3a376e"
        },
        "item": {
          "id": "f8dbe9f2-b305-4280-a3d5-65cfe695e6a3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d2e187d-ca5f-45bb-adac-c3f2741e0d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecd19d5-2474-48f8-8fd4-3d25bd86fc5f",
        "cursor": {
          "ref": "792b286d-e433-4709-8b58-a7e9f7715a9b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "76e53c1c-c241-4134-90d4-37cb21e1f12c"
        },
        "item": {
          "id": "7ecd19d5-2474-48f8-8fd4-3d25bd86fc5f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "171457e7-7675-4f98-8e11-534cfa0e702b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2fdaf8-d80e-499e-ab2e-de94dbb3c825",
        "cursor": {
          "ref": "dbb85047-2172-4cb3-a39e-2eac0a323bd4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5413c0b-546c-4f24-b53b-9b3673e133d4"
        },
        "item": {
          "id": "9f2fdaf8-d80e-499e-ab2e-de94dbb3c825",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7c6b995e-ca07-40f6-99b7-e543e055c327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846adfe7-7496-40ee-8b2d-f03fd63730d1",
        "cursor": {
          "ref": "0e4bbc46-89fa-4411-a26c-6fcd9fc39c91",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "86d2effd-46d8-49ba-a536-eb9247b85c44"
        },
        "item": {
          "id": "846adfe7-7496-40ee-8b2d-f03fd63730d1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eeaacafe-e00d-49ba-9c75-74590c737d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e5e84-686a-4d00-9dd6-9adaad307dd8",
        "cursor": {
          "ref": "b5698e40-9e6b-4bf8-8b83-60d2eed9fb32",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "28a9366a-4fab-44af-ad5d-224ff8621f43"
        },
        "item": {
          "id": "df1e5e84-686a-4d00-9dd6-9adaad307dd8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4273b355-1cac-47d4-939a-47b82b8a1a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab45353-c49e-4652-9327-1a486fed14b2",
        "cursor": {
          "ref": "a3d32511-a382-4e48-b616-3e46647bcf38",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3af8c4cf-230f-4fc3-9686-68ea9c7482c3"
        },
        "item": {
          "id": "cab45353-c49e-4652-9327-1a486fed14b2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c86898e0-a684-41f1-abb6-0b893cdecf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b49607-d9d5-4a4b-be61-fbd2015db582",
        "cursor": {
          "ref": "6266a177-0e1f-4fee-a86c-6bc418836f6e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f7067a8d-91f4-4096-88b4-8de2bfde7a5e"
        },
        "item": {
          "id": "77b49607-d9d5-4a4b-be61-fbd2015db582",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "28027524-a843-4654-8e6d-160f9e62ef3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81e2b72-5b26-40a2-94e2-d68f1f7f1650",
        "cursor": {
          "ref": "f88f0fe3-c779-4188-936d-b764a8ceacc5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "392c93ad-b988-4343-be8c-aa49e2a22adb"
        },
        "item": {
          "id": "b81e2b72-5b26-40a2-94e2-d68f1f7f1650",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9f0ab83c-593c-4acd-95df-fcfb3eca4739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c145b6-935b-453d-9424-21a24901a269",
        "cursor": {
          "ref": "b07a8c6d-7307-4287-aca8-c5f39d109270",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "54ab6bf6-97c6-4501-ae4b-03ba586b4fe4"
        },
        "item": {
          "id": "d7c145b6-935b-453d-9424-21a24901a269",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "03fdc79f-66a8-4eb7-acb5-6484158a6341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c27409-d150-4ac8-bd65-620fdae451a2",
        "cursor": {
          "ref": "fdd45d88-30b3-46de-befa-1246db814b6f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "713a3b0e-aa02-471e-886a-d50d28dbd5b4"
        },
        "item": {
          "id": "d3c27409-d150-4ac8-bd65-620fdae451a2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "888c0afe-21eb-47d2-9c98-955ffa7545cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a07826-c549-44db-8d98-84663a954035",
        "cursor": {
          "ref": "e34d4ed4-c401-426f-a8ce-5d0f89305549",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "71f0ce34-20c9-44e2-a698-a808f0be7c60"
        },
        "item": {
          "id": "75a07826-c549-44db-8d98-84663a954035",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30c67460-923d-4389-9292-b1c45876e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c625c88-a8b7-4a7a-beff-dbff8ccfe642",
        "cursor": {
          "ref": "8303659f-2db5-48ff-989d-d5cc4900af62",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "846147f3-e36e-4b92-b3fa-36b16bb9f510"
        },
        "item": {
          "id": "5c625c88-a8b7-4a7a-beff-dbff8ccfe642",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bbcdd47a-2399-4730-a218-40f2907520fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdd6864-ea34-4bc0-99c3-17615db3524b",
        "cursor": {
          "ref": "21ef6a69-ddd5-4ad5-b0b6-f9f457018c69",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02e78608-1f6c-4ce0-a882-19dd76ea923e"
        },
        "item": {
          "id": "0fdd6864-ea34-4bc0-99c3-17615db3524b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cd56a39b-8277-410e-a9b6-a69b3c84b115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f60420-25a9-4605-b694-718bd35326b9",
        "cursor": {
          "ref": "5507eeb5-39b8-4c0f-bca5-9f87c61dc2b7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5ad81470-1a46-4e9b-becf-afb9bb8ca156"
        },
        "item": {
          "id": "57f60420-25a9-4605-b694-718bd35326b9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "88faaedc-3023-46bc-9e39-27eb4b4edaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd57ac0-fe80-49c4-9652-37a9aec7c4a9",
        "cursor": {
          "ref": "cc5a4c12-5702-4e56-be3d-67b1a2ae0967",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36607d56-c4a7-470d-8601-2feded800828"
        },
        "item": {
          "id": "5bd57ac0-fe80-49c4-9652-37a9aec7c4a9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "62c37390-4022-4fdc-9487-ed8322a3653c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c31ab1-6005-4247-8ee3-ffda05b3b093",
        "cursor": {
          "ref": "980e8d29-53ac-4754-a22c-7453214319fb",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "01c6f38f-33e2-4e95-9599-d1d1a6130613"
        },
        "item": {
          "id": "a8c31ab1-6005-4247-8ee3-ffda05b3b093",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2d34e47d-40d6-4978-8657-d247bb516194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e16ba7-93f5-43f3-ac4b-8c48944ef635",
        "cursor": {
          "ref": "9f1b8625-430c-46c7-a3c9-5d8a35d47b74",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0b4fe9cd-a157-485d-8124-3172b405fc1c"
        },
        "item": {
          "id": "a1e16ba7-93f5-43f3-ac4b-8c48944ef635",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7ace0d4f-44a7-4a49-8ad3-09e2df941ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6b6695-f5aa-4cfa-9a2f-dff011877dc4",
        "cursor": {
          "ref": "37ba3909-3aff-4347-b0cf-4cf64065998c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8efcb233-ed02-42e5-bed2-db166611db4b"
        },
        "item": {
          "id": "ea6b6695-f5aa-4cfa-9a2f-dff011877dc4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c78a109e-0a85-459e-883d-0bcd6d8fc305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94b7f25-cc26-40a8-9ca3-3211e02a37af",
        "cursor": {
          "ref": "bffce2e1-9ce9-480a-948c-b1ee85296054",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "445c9473-4772-48bf-9671-7af1145e9906"
        },
        "item": {
          "id": "b94b7f25-cc26-40a8-9ca3-3211e02a37af",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2e640654-084b-4b72-8e87-2ff200536748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac9b3bf-ef7f-4ca7-aa19-5bcf9ddd6329",
        "cursor": {
          "ref": "33682ec2-03d4-40e5-a3b4-9e4742cf50cc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f204ba2-b6ae-4c34-9eff-3e85e1af0fbf"
        },
        "item": {
          "id": "dac9b3bf-ef7f-4ca7-aa19-5bcf9ddd6329",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "45acd1cf-0d8b-4573-a351-2d656072063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8b1475-8166-4ee9-874e-3f4699f3d908",
        "cursor": {
          "ref": "10a3d076-9cba-44d8-a1e6-8f5a9bbc311b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2ffa25f0-a4d8-4fd9-9f25-58f89d368cf2"
        },
        "item": {
          "id": "3a8b1475-8166-4ee9-874e-3f4699f3d908",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "19dda996-ada4-4c10-9b88-e54c0158aaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd746f2-a636-4f6b-8e41-23f191879b5c",
        "cursor": {
          "ref": "c0a3b51d-37bf-434f-be51-68cdb53d66be",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "14c650ca-ca49-4258-ac56-16baa38a32ac"
        },
        "item": {
          "id": "cdd746f2-a636-4f6b-8e41-23f191879b5c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a909dbdf-e177-48a6-add1-f5f7266c341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaf8a0e-eaea-459c-9317-90c8d35cf05d",
        "cursor": {
          "ref": "e75a9535-2aa1-48b6-b760-3818e29be069",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ea5e7b89-c8fd-42a2-a0cc-775544159342"
        },
        "item": {
          "id": "2eaf8a0e-eaea-459c-9317-90c8d35cf05d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ea7fb513-d6d7-48eb-bcc5-3dd4983322f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6cea4d-2267-4884-aef3-e233e316ff6a",
        "cursor": {
          "ref": "b8c6de6d-efe1-4738-917a-75b3d7b0a62b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e6916906-f8f5-4e6c-87ad-0d17b660debc"
        },
        "item": {
          "id": "ab6cea4d-2267-4884-aef3-e233e316ff6a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "df32310f-7967-440c-b46c-1e1a7082d60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56544556-c4ec-4a70-b59f-5e8f04a9e91f",
        "cursor": {
          "ref": "e683fb12-8d2c-4789-9bc1-efb6b2c2c969",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1a346105-c80d-460e-bd29-663d64d98ab0"
        },
        "item": {
          "id": "56544556-c4ec-4a70-b59f-5e8f04a9e91f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "da6677f7-e452-480b-b9de-3ab04c0c63ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc3869-31e0-473d-9ac2-776f916e08a9",
        "cursor": {
          "ref": "47deee51-aec5-415f-8150-92b29549eb60",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2ed8f3c6-99c0-40d8-930f-1806361e2f8e"
        },
        "item": {
          "id": "dadc3869-31e0-473d-9ac2-776f916e08a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17b826fe-11ef-4577-ae45-940ddc9a2a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e21db56-cac9-4efb-8a88-ab85289eb123",
        "cursor": {
          "ref": "d7cc7cb7-43e9-4d72-bc28-f2cb1f5fd47f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c299c796-c1f0-489f-8010-dd6ff426d469"
        },
        "item": {
          "id": "6e21db56-cac9-4efb-8a88-ab85289eb123",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3acc2b0b-18a6-49c0-a528-01bdbdd2a064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba4e0bb-5330-4696-91f4-e95c7a80ef11",
        "cursor": {
          "ref": "fe410258-6087-4eae-bd07-2277a1e875e5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "53672faf-a469-4afa-8937-d6e8d0c06295"
        },
        "item": {
          "id": "0ba4e0bb-5330-4696-91f4-e95c7a80ef11",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1abf3065-320b-4a5e-a580-1d1196324450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf4b8f2-e10f-42f4-bb6e-a1aef35f8b91",
        "cursor": {
          "ref": "b47d6a83-103b-435e-8873-4768a9db76ef",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dbbd833c-7d60-44cd-a76d-dba99db655a1"
        },
        "item": {
          "id": "4bf4b8f2-e10f-42f4-bb6e-a1aef35f8b91",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e46e84b3-2f15-4e2f-aa49-e4bd19d70824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776c90fd-4b2f-4422-8db6-44f4c23434ca",
        "cursor": {
          "ref": "3df623fb-133b-47f1-b895-347c9682c1ed",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fbef5bb4-3182-4334-bca5-eb187fb02354"
        },
        "item": {
          "id": "776c90fd-4b2f-4422-8db6-44f4c23434ca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f4e8730-981c-4ae7-9924-fb09bd07ae95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e27d91-be28-46d3-998b-9f48caa13619",
        "cursor": {
          "ref": "4a3ad539-499d-4ee7-a067-301c7a3b473e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f16e8690-3a7e-47f2-8e15-0987847393af"
        },
        "item": {
          "id": "41e27d91-be28-46d3-998b-9f48caa13619",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c4a111c8-bc4c-4035-a554-70f788f2fffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce9ad83-7bd4-4fbf-a88e-87763d5bdc72",
        "cursor": {
          "ref": "5ddd4c21-4408-46fa-adf3-a7a9620faead",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "036e585c-82f6-4131-97e7-1cf087b73dd2"
        },
        "item": {
          "id": "fce9ad83-7bd4-4fbf-a88e-87763d5bdc72",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7c33b25a-3634-4325-8b13-9e24dd7ad70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ddb99b-33d0-4522-9b87-c802fc0d304e",
        "cursor": {
          "ref": "caa8ba47-f832-4c22-a8e9-f63d0fa536fd",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3e2e2ca4-4761-4c27-98d7-43af910c52e8"
        },
        "item": {
          "id": "d3ddb99b-33d0-4522-9b87-c802fc0d304e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5eb30948-081f-4d7a-87db-84b2f2a97111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31963d20-717b-4ac0-904d-b1a05461b3d6",
        "cursor": {
          "ref": "abc22fad-6287-4c22-a6a1-b581361470e3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b78fc3e2-f138-4145-aa38-b4b3eb998e05"
        },
        "item": {
          "id": "31963d20-717b-4ac0-904d-b1a05461b3d6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0a13f6e0-04ae-40b8-b977-e1a90f74d374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461b3d9f-8cc8-4f09-8d2f-e7b95b84bf93",
        "cursor": {
          "ref": "6cbafdba-97f9-44a2-adf7-b11ce9051a6b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "521e017c-e11d-4fa6-8e9c-d23e4cc28166"
        },
        "item": {
          "id": "461b3d9f-8cc8-4f09-8d2f-e7b95b84bf93",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7fc4a0bd-eb6a-4e31-928f-07bb61937637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bf358f-7851-4c38-97b4-f365bef61c68",
        "cursor": {
          "ref": "cf00d6c2-14c2-4630-a4e3-d0c9788a73cc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c9516e2b-ca4e-4a32-84a3-c4fe72d74df2"
        },
        "item": {
          "id": "17bf358f-7851-4c38-97b4-f365bef61c68",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3d185f67-affb-4102-bf89-b3bbfe82eaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b52cae-cf89-4ed5-a380-1992d796823f",
        "cursor": {
          "ref": "e50b3307-6ce7-479f-8d38-3d6dc6d8ea62",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d501f055-c3bc-4037-bd41-ceed32a4c3eb"
        },
        "item": {
          "id": "57b52cae-cf89-4ed5-a380-1992d796823f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9237f370-6ecf-4824-876e-e0807900b32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6081f85f-9cdc-4dfd-a359-9b76ae1e8422",
        "cursor": {
          "ref": "449fb087-9bc5-4725-a6e8-7c3c283b026c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "747ff5e9-bd8d-4788-9b74-1416e6c10fe4"
        },
        "item": {
          "id": "6081f85f-9cdc-4dfd-a359-9b76ae1e8422",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3c59218c-18b4-4dac-946a-ba17d073ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d29d66-58bf-4e63-ad6c-77a37e868056",
        "cursor": {
          "ref": "2a4443e7-efcd-4188-9832-a9cc05ac87fb",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4c4643e9-5016-4c4c-822a-d6273964d9fa"
        },
        "item": {
          "id": "10d29d66-58bf-4e63-ad6c-77a37e868056",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fe4c01c9-b431-4d80-ac01-bebd11a3f604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bd2045-d68c-426e-9d79-7d8f4cab69c1",
        "cursor": {
          "ref": "5bf3e222-62ed-46e7-b7c7-1ae3355a028f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d365dc54-8195-41e2-ad38-f9ae2f7a7498"
        },
        "item": {
          "id": "e6bd2045-d68c-426e-9d79-7d8f4cab69c1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6acf1784-6fec-472a-8584-98f58929fe3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fedccc7-5f53-4655-8d02-cafffb0aaf0f",
        "cursor": {
          "ref": "5ad01aea-22c7-414b-82e1-51e04c6caf54",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e29db704-e47f-4980-bdb2-39cc24d83ead"
        },
        "item": {
          "id": "5fedccc7-5f53-4655-8d02-cafffb0aaf0f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7c0caff8-7afb-4873-afd5-a12096b33b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179af709-7fe2-48b0-aa88-4e7a6d16852a",
        "cursor": {
          "ref": "dafe5c5a-6ed4-4e92-8097-55accd211d3e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4eccd0fa-16c6-4757-aded-36ffa2352c0e"
        },
        "item": {
          "id": "179af709-7fe2-48b0-aa88-4e7a6d16852a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "32478c62-4629-4b7c-8a10-6308dc8dce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd8d893-22f4-4b4d-acd0-c2ddcdd75c71",
        "cursor": {
          "ref": "37d47ca4-6ce9-4401-9091-5086869d0a07",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "60a34bc3-6601-4040-834d-194130116bc6"
        },
        "item": {
          "id": "2dd8d893-22f4-4b4d-acd0-c2ddcdd75c71",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b435586c-2a78-44de-8a63-b55c18dceb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce17196e-4d88-41d7-98e4-b3f1bdcc0dec",
        "cursor": {
          "ref": "a26be429-8435-44f7-be00-5288eadf3b30",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "316ad1cf-8160-415b-a5db-26d0564514e3"
        },
        "item": {
          "id": "ce17196e-4d88-41d7-98e4-b3f1bdcc0dec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "76232fc6-61be-42b5-8ba7-ac5e367e7794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3385e1cb-35bc-42e4-95b7-0b2fc64ebba6",
        "cursor": {
          "ref": "8eccb5a5-c3f0-4035-8e9a-616461c48a55",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3f7570f-4dd9-470f-b141-d030d399fff7"
        },
        "item": {
          "id": "3385e1cb-35bc-42e4-95b7-0b2fc64ebba6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "340a0626-cbfc-4b24-86a1-b75cdb60abd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774c0d4a-90ed-4a20-9dab-d1294ce2bf57",
        "cursor": {
          "ref": "f465a8cf-d275-4262-abe8-4e5b72f354bf",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "387105ac-ef37-49dc-b0c9-e30696e97203"
        },
        "item": {
          "id": "774c0d4a-90ed-4a20-9dab-d1294ce2bf57",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e94b3c40-f91d-4270-924e-4bbdc9777ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e55db89-74fd-49db-a59b-54d9df417bbc",
        "cursor": {
          "ref": "047b8d33-c8fc-489c-ae88-96bebefa2f91",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e5af2698-04c2-4455-aa72-85c2b34df206"
        },
        "item": {
          "id": "8e55db89-74fd-49db-a59b-54d9df417bbc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bae67437-3271-402c-bb94-a313d6bcaec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1878994d-123b-4245-9fcf-03de7bb315fa",
        "cursor": {
          "ref": "ce089f35-91e2-49ef-93ac-24185a94f6c7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "271ad342-d985-476b-a79c-269b4d2e6f49"
        },
        "item": {
          "id": "1878994d-123b-4245-9fcf-03de7bb315fa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e8d2a151-7e34-4b2b-b51a-3cb415793aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf48748f-1660-4267-bd4c-aec2a6e2a9b5",
        "cursor": {
          "ref": "88b4e362-48a7-477c-8fae-65c7c7c61e70",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dd661758-d257-4808-bb50-ae3dcc2d31db"
        },
        "item": {
          "id": "cf48748f-1660-4267-bd4c-aec2a6e2a9b5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "464632dd-aa15-4b35-beac-7150b29e801b",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "250e6cc4-7cf6-4c7d-a3b6-6240e4894c13",
        "cursor": {
          "ref": "98c54650-187d-430c-9c04-467ab3ecb267",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f081c48d-3105-4c36-baf1-30eb4ce55f73"
        },
        "item": {
          "id": "250e6cc4-7cf6-4c7d-a3b6-6240e4894c13",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "46a69199-aee9-42fb-83e2-04c45d1729fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dff8f24-7971-4822-83d6-9a13705f1d20",
        "cursor": {
          "ref": "259bae20-6fa4-494b-8d78-5e819a832dcf",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "acb5e868-3418-404e-ac5f-3f4da32419c4"
        },
        "item": {
          "id": "6dff8f24-7971-4822-83d6-9a13705f1d20",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4566b86e-15a9-46c8-bd59-9d2db43b0a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474ce4ca-9583-41c3-92af-27ecb426959a",
        "cursor": {
          "ref": "4615b930-6075-4878-a171-089e26dc1488",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f3cac42e-2a4a-4401-b86a-e49a2ad813a6"
        },
        "item": {
          "id": "474ce4ca-9583-41c3-92af-27ecb426959a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b8a2214a-b80a-4a2f-9320-f5f10c2c2d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dbed92-0c85-4cc6-86e5-e45d047a7781",
        "cursor": {
          "ref": "f5f55421-4c7c-4620-b04d-68364adda9de",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "54d5d31e-5e5e-47aa-9338-cb454fd7630c"
        },
        "item": {
          "id": "b4dbed92-0c85-4cc6-86e5-e45d047a7781",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9ce84716-d651-415d-b25c-d78b475ac32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ff4b18-5167-4a39-bca8-218105b17ece",
        "cursor": {
          "ref": "4cdfaecf-9c18-478d-9860-e421e7289d7f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "21bc85ab-8ce7-4448-a865-643ffabfc662"
        },
        "item": {
          "id": "a7ff4b18-5167-4a39-bca8-218105b17ece",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7575e2de-a66d-4535-ab4c-2c6b3bff88fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbed764-4502-4cfd-931d-e3968f837048",
        "cursor": {
          "ref": "d9b930f5-764f-45fc-8b9f-223718167956",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5ed6437-5a75-416f-8832-8cf2c518498b"
        },
        "item": {
          "id": "3cbed764-4502-4cfd-931d-e3968f837048",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e91d0959-d52e-4b73-bd17-1e6232a5363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02cf335-b7ae-4532-ae46-70f0489d041b",
        "cursor": {
          "ref": "9db24565-5692-4b8f-b9ff-279101d48ad2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b5a4702b-7c3e-416c-8edc-169b82b3f9ee"
        },
        "item": {
          "id": "d02cf335-b7ae-4532-ae46-70f0489d041b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7be069f7-91ea-499a-aef0-603792f71d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331ddae9-2fb3-41dc-a52b-bf2f0c8a4785",
        "cursor": {
          "ref": "bb572780-8d2b-4213-b2ba-6de4fca5a6d1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c34f8c47-73fc-45e7-828f-07adfe46a9e8"
        },
        "item": {
          "id": "331ddae9-2fb3-41dc-a52b-bf2f0c8a4785",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a2f80622-25b0-4236-9bae-b7801b89bd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f9cf4-8581-40ca-be11-bc17ee9f2e41",
        "cursor": {
          "ref": "1099b63b-ca3a-4566-a4e2-d02e1cadcda7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "76b27edf-ba54-42d8-a47d-ebcc97fe6fbf"
        },
        "item": {
          "id": "c63f9cf4-8581-40ca-be11-bc17ee9f2e41",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f76614c-d3b5-4733-8537-2e8d24d6a671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fdc292-6652-4ebf-8aa7-7f8335a96dfb",
        "cursor": {
          "ref": "271b6239-75e4-4a61-bfeb-f7b02b5e0fd8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "68d2d9fd-346e-447a-b240-492b0b134b28"
        },
        "item": {
          "id": "68fdc292-6652-4ebf-8aa7-7f8335a96dfb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "272eba53-8b7f-48ac-b39b-640709b308bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522ee0c2-84e7-480a-8785-8cb468a17b68",
        "cursor": {
          "ref": "1e517d7f-12a1-46b7-96a8-6d3dd8f024cb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2d27d75c-51e8-4b91-9a5f-688579181eb4"
        },
        "item": {
          "id": "522ee0c2-84e7-480a-8785-8cb468a17b68",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eed3644d-9dd4-4f71-b67d-3f337708b53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84f775f-fbaf-44d2-b965-49f2f68c7ef8",
        "cursor": {
          "ref": "d3a71617-3606-44d1-995f-bbc51b87a311",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9facb33f-1b9b-40d4-b864-0de4c332aed7"
        },
        "item": {
          "id": "e84f775f-fbaf-44d2-b965-49f2f68c7ef8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ffd33890-db36-4ad4-bd79-ab3bcf5b87f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bd781f-d3a0-4c15-8b20-0eda8b29c077",
        "cursor": {
          "ref": "c0c4d4cb-5c6b-46d8-a1be-63fae40f03a7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "15005f64-edce-464a-88c6-0dafe142192c"
        },
        "item": {
          "id": "d3bd781f-d3a0-4c15-8b20-0eda8b29c077",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a58fcc02-f731-4655-8c19-c73f9f7312b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af6699e-3041-4a07-8c6a-d84a9d0fdeb2",
        "cursor": {
          "ref": "406b7180-c8fb-42cd-92e2-7b70975a5c7d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "48b64cd3-27de-4cd8-b341-49b0dbb3aa96"
        },
        "item": {
          "id": "1af6699e-3041-4a07-8c6a-d84a9d0fdeb2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "146fa7b5-84d1-456f-bdb6-07daba15c2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec81ec-4af0-4c1d-8cb8-026356c702b9",
        "cursor": {
          "ref": "5b02f6eb-f1d7-4131-8153-ba951d7151c7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "37757e70-bf3e-4ca5-bbcb-960fad88716e"
        },
        "item": {
          "id": "62ec81ec-4af0-4c1d-8cb8-026356c702b9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0de01d59-896d-4b7c-a7cb-1c951f23ae8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53b6a6-422c-4d92-a925-e4f109a4fabf",
        "cursor": {
          "ref": "e684100f-c110-4c72-bd2e-2d9524fd8dcf",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0efc4ddf-2070-4dd5-91ce-ac95edc70665"
        },
        "item": {
          "id": "0e53b6a6-422c-4d92-a925-e4f109a4fabf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "654bddf6-b3f1-42bd-9bf9-098265d20dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fe8d11-18c5-4c72-8e9a-ddaba9d295f9",
        "cursor": {
          "ref": "af7c3644-f407-48b8-8064-d60f1dae04d6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "28906030-7535-4389-abe6-be35a6278674"
        },
        "item": {
          "id": "83fe8d11-18c5-4c72-8e9a-ddaba9d295f9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9ba3dce9-1e75-48d7-bb15-3887f57552d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18ae55b-1871-40de-a394-d16aa047141d",
        "cursor": {
          "ref": "c78a3ff8-d0e2-41b7-89fa-7159c21686c0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7554741e-e380-4bbb-92b5-8624af9f4373"
        },
        "item": {
          "id": "f18ae55b-1871-40de-a394-d16aa047141d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3b7f2368-0701-4162-9495-a56cea63d5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5b511-b407-490a-9118-a6730c4fdf98",
        "cursor": {
          "ref": "f147ffe6-614f-4108-87fc-89098a8eb858",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31ba6d88-c128-4235-b112-64649a9a85a6"
        },
        "item": {
          "id": "0bc5b511-b407-490a-9118-a6730c4fdf98",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "79330dc2-2fe4-4df5-b7ca-8782d6e8c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcec470-b87e-4baa-9bcb-e66e9bf8ad27",
        "cursor": {
          "ref": "521a9662-b8c0-49ce-b22f-48a2347e9b77",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0293e7ca-aed1-437e-9d55-b4396b82c60f"
        },
        "item": {
          "id": "9bcec470-b87e-4baa-9bcb-e66e9bf8ad27",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "47fbab41-7a37-4844-b919-73b07e3ae754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342a0d0e-d715-4d54-911f-9b341ac96be8",
        "cursor": {
          "ref": "e1070585-ad08-4f73-8fa6-f1272443ca55",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d406dd3d-49f1-4bbd-92ec-96deb7581e22"
        },
        "item": {
          "id": "342a0d0e-d715-4d54-911f-9b341ac96be8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7de7f547-99f7-4331-86d0-e9f78b3a82e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee673bd-86a8-439c-90f2-a7cb56c82dfa",
        "cursor": {
          "ref": "e8dffb9f-7cbd-40ea-b50e-edcb92340117",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8c90b75b-e509-4276-99d7-7dda026c5405"
        },
        "item": {
          "id": "5ee673bd-86a8-439c-90f2-a7cb56c82dfa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9f18c3f4-5353-4539-b20a-4e2f316f8bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de63310f-ec69-419e-ae60-70e36120bc4d",
        "cursor": {
          "ref": "a3c2f370-9f59-4239-8667-b887380a550d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "022e54b8-2a8f-42ca-888a-f5b24860a232"
        },
        "item": {
          "id": "de63310f-ec69-419e-ae60-70e36120bc4d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "264c7d84-c5c9-4c29-9cfd-d522b31962f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5254e4a-6901-4e83-9388-88243ca6e0da",
        "cursor": {
          "ref": "f0fbbb3f-254a-449b-b76a-b526285b8055",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aa247322-d1b5-4785-a8d9-bad5aa335324"
        },
        "item": {
          "id": "f5254e4a-6901-4e83-9388-88243ca6e0da",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "133fe0ac-d4e7-4516-a1ff-8798a655cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06022716-cd4b-486c-b670-7c57c0bfc4f1",
        "cursor": {
          "ref": "0830c428-7905-4a87-8802-4cdaf88f906e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "837c7d45-16b2-49a9-9913-edb8ad35106a"
        },
        "item": {
          "id": "06022716-cd4b-486c-b670-7c57c0bfc4f1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9a721524-0798-4c1d-a8ff-8bd872ccb683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59640c16-dcd3-4a86-9054-ca4b373e26dd",
        "cursor": {
          "ref": "7699f7a2-125d-40f1-b600-bd85a4d3fa3c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4ff1f75b-80b7-4172-b969-9958b2a6b3df"
        },
        "item": {
          "id": "59640c16-dcd3-4a86-9054-ca4b373e26dd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c6f042b6-5437-43a7-8129-2f4e233d5b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b300cf0-16f0-4263-94dc-a8e414d38e2f",
        "cursor": {
          "ref": "9c768867-61cf-4567-871b-c3c5ce576652",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6998ac62-4b4a-445a-aa71-7fbabe62a43b"
        },
        "item": {
          "id": "7b300cf0-16f0-4263-94dc-a8e414d38e2f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e44cd2b0-7c5b-46c4-bacf-ea7676cc81b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42526786-ac89-4266-b778-ff4e97adbe0b",
        "cursor": {
          "ref": "dd37183f-d3a9-4318-bfcc-7ce20c27787a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7c2fba2e-52ca-49e3-86cf-451f00a2b084"
        },
        "item": {
          "id": "42526786-ac89-4266-b778-ff4e97adbe0b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "615c9a39-c240-4786-97dd-c603397ccb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb559924-5aa5-40d4-b4e1-370604d5d6ea",
        "cursor": {
          "ref": "a914ad2e-7acc-42af-a34b-232d36ba9e46",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a7b35f2b-1af8-4389-ae8a-ea5640ba4d47"
        },
        "item": {
          "id": "eb559924-5aa5-40d4-b4e1-370604d5d6ea",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d9ffb464-a7bf-4a79-b395-3225db99f5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1b66d7-7661-4b68-be8c-5c7e27fd6585",
        "cursor": {
          "ref": "c665585c-91ca-4aee-ae82-e8710217f59f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "35229e78-a2e5-4d25-9087-91303820f58d"
        },
        "item": {
          "id": "3c1b66d7-7661-4b68-be8c-5c7e27fd6585",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d37264bc-300c-4e8e-ba5d-854644c4daec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2e785a-9701-4c79-ac62-dce31718629a",
        "cursor": {
          "ref": "a606ce3a-5953-444b-8dd9-06eb8bd44463",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "741667a3-232b-4db1-b3ff-aac546e13955"
        },
        "item": {
          "id": "cd2e785a-9701-4c79-ac62-dce31718629a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "62cad42f-d29e-4ce8-9b59-21c29f3c3396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e105000-3c30-4ccb-9834-c3ad1f2c8557",
        "cursor": {
          "ref": "f157a41b-c85b-4415-bdb7-41042d4e332c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "eb2822b8-e068-4791-a522-8af6a623aa66"
        },
        "item": {
          "id": "0e105000-3c30-4ccb-9834-c3ad1f2c8557",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49e948ac-483b-4738-86da-51f736c16d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c44165-368c-44a5-824b-cea95f72f506",
        "cursor": {
          "ref": "f10df446-24d9-4e0a-b817-7b9e34a1c046",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0d2f07e8-22b4-41b9-be7f-e026ae8267ad"
        },
        "item": {
          "id": "43c44165-368c-44a5-824b-cea95f72f506",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "59e25baa-f0ab-454c-89fe-3280bffb179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6408b8d5-9508-4430-8cb6-4a824a47d8af",
        "cursor": {
          "ref": "d49c4e68-3f10-4057-8d7b-cd3d675672e9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "32428c62-c132-4cea-b985-21737209b08d"
        },
        "item": {
          "id": "6408b8d5-9508-4430-8cb6-4a824a47d8af",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e12d4c2a-4fd4-488b-a078-acc2542d3c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4ebbfc-ccc4-431e-a951-b07ba8f8c763",
        "cursor": {
          "ref": "7c1ccfa3-c1a2-4d76-95bd-9f3c691a911a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "99134187-a9b0-4e07-9af7-70546b38a86f"
        },
        "item": {
          "id": "3d4ebbfc-ccc4-431e-a951-b07ba8f8c763",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b1df2621-dc68-40ac-80c3-89be3429c6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b935d0-3fea-4b32-8f32-a2028ee987ef",
        "cursor": {
          "ref": "7a2c51c6-5da4-405c-a278-3cdf887e00ed",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "12bc1ede-7c88-405f-9f58-60830cd684ac"
        },
        "item": {
          "id": "62b935d0-3fea-4b32-8f32-a2028ee987ef",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "281edaf0-423c-4b0d-b8d1-485cf40aa844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b52a039-39ff-4ee0-a514-0adfd68caee7",
        "cursor": {
          "ref": "6c4e4e13-d845-4aeb-8118-fb457796f706",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8c5d0758-65dc-44c6-9fbd-762e5d486e5c"
        },
        "item": {
          "id": "2b52a039-39ff-4ee0-a514-0adfd68caee7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "09ebd238-4b7f-4959-810d-1649bb239a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a3eb39-74e4-4577-863b-febedf2b71ed",
        "cursor": {
          "ref": "f45157fd-4e22-49f3-a919-1f70cad1f483",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1c6d9cc7-0800-4365-8f8a-8c4f6571e49f"
        },
        "item": {
          "id": "60a3eb39-74e4-4577-863b-febedf2b71ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac606071-f836-40e7-8cfc-f5777115835a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8540529f-bfb5-4ced-a81b-cf3b60b35ec7",
        "cursor": {
          "ref": "440eb9e3-6bba-4f26-9176-7c119cb96cbe",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d1e3334d-ae7e-4cb4-8dad-0bf948270e26"
        },
        "item": {
          "id": "8540529f-bfb5-4ced-a81b-cf3b60b35ec7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d364eb60-b6b8-43da-a6aa-443786423c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e5dd1-3040-4a67-a273-afd2bdfeb49b",
        "cursor": {
          "ref": "3c1a8e0a-1152-4325-9827-7ffcd88907d5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eeca7146-2847-435b-97f0-feb48592b6eb"
        },
        "item": {
          "id": "449e5dd1-3040-4a67-a273-afd2bdfeb49b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9c651381-b26c-4321-8e7c-3a3e9f532a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd698f5-f2c6-4c0c-8b96-2ce03af281b2",
        "cursor": {
          "ref": "25bbed53-5c41-4d24-9ef4-91a33a97d84c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ac7ccce4-ff59-43b2-b8b8-deb639582f9f"
        },
        "item": {
          "id": "8fd698f5-f2c6-4c0c-8b96-2ce03af281b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "345fd7e6-591f-4372-8e71-07f036e98633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe84a9e-757b-4466-b0b6-8a3f3abfc808",
        "cursor": {
          "ref": "4dedbd2b-883b-40d6-8628-212e907842ba",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1890d319-cead-402f-b21b-b5962956cba7"
        },
        "item": {
          "id": "abe84a9e-757b-4466-b0b6-8a3f3abfc808",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ceb4a58d-0fbf-4188-90cc-6c0509d5a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf29141-22ee-4725-9acf-e9ce2b97e6c4",
        "cursor": {
          "ref": "8da72d6b-1e61-4f70-be96-41c19b6d636f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "607fec65-620d-459d-b0d9-2cf7f64d5f1f"
        },
        "item": {
          "id": "0bf29141-22ee-4725-9acf-e9ce2b97e6c4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ad5c0708-85f5-4c84-93e7-5fcf1205ebc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c812ab72-5604-45f0-a2ce-b9d5814cdcf1",
        "cursor": {
          "ref": "f8b8dc65-9b47-4473-942f-b31cb5cb3dbe",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e9833881-8f2c-4319-96f4-c1a51c9e198b"
        },
        "item": {
          "id": "c812ab72-5604-45f0-a2ce-b9d5814cdcf1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a980512-d471-4393-a8ed-09c6d6ffee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fd2919-4f5a-4228-b68b-327456327464",
        "cursor": {
          "ref": "502c7a79-996c-4f6d-97aa-38cd575d2da1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e6535916-d7c1-4845-a9de-0bab67be33ba"
        },
        "item": {
          "id": "c6fd2919-4f5a-4228-b68b-327456327464",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1dc8e4bc-e1e0-4648-a428-8a518edb7e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a943c99-c90b-40a7-aef1-27ee5921913c",
        "cursor": {
          "ref": "440fce86-3bd2-48f7-a022-e6fc3d66a034",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5ebd1905-8c87-4b29-a934-ecc2d57ec855"
        },
        "item": {
          "id": "1a943c99-c90b-40a7-aef1-27ee5921913c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0b641780-bf02-4177-a75b-488d534a0d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3d8a60-5ea4-435d-bd45-7b76d1ea93c5",
        "cursor": {
          "ref": "0e4e7fb6-8988-4543-b6f6-5e4fea839536",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "41bb7ae7-04c6-43d9-823e-1ae4172fb5d0"
        },
        "item": {
          "id": "cc3d8a60-5ea4-435d-bd45-7b76d1ea93c5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a97f7a4b-ea0f-4d2c-9e4b-0ebe335e1a73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d64078-75e4-4c64-965e-329f1187bda5",
        "cursor": {
          "ref": "6ac25bec-e076-4fe6-9c77-43e8179a90e9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4b0b3acf-23fb-4752-a675-b92f454d4a5e"
        },
        "item": {
          "id": "b1d64078-75e4-4c64-965e-329f1187bda5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "21282655-5c71-4339-86f5-209cfe7e10a5",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "00219e96-39e7-4fcd-ab91-c014bcc0e2ad",
        "cursor": {
          "ref": "c6ece253-7867-4d3e-90fc-690106097e6f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "59d0ab40-8dc8-4910-a632-35735c7da67f"
        },
        "item": {
          "id": "00219e96-39e7-4fcd-ab91-c014bcc0e2ad",
          "name": "credentials_verify"
        },
        "response": {
          "id": "63839512-3cb5-41cb-a796-54e1be10bc22",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be17f71f-3175-4caa-b463-aee6b2f01137",
        "cursor": {
          "ref": "dd580ac4-4756-4729-884a-09c05b213ea1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ced7c586-05b6-4a49-bf54-671de8533b90"
        },
        "item": {
          "id": "be17f71f-3175-4caa-b463-aee6b2f01137",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "42ef040d-877d-44bd-b9f0-639bbdd4e991",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "58654ca6-959c-4310-90db-18834612024d",
        "cursor": {
          "ref": "2372a08b-4ecd-4cdd-8b7c-eb945081034f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cefdbb02-b3a8-4141-aef1-41566d7a67fc"
        },
        "item": {
          "id": "58654ca6-959c-4310-90db-18834612024d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df275e2e-90c7-4a26-bf1e-d26021e63fb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58654ca6-959c-4310-90db-18834612024d",
        "cursor": {
          "ref": "2372a08b-4ecd-4cdd-8b7c-eb945081034f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cefdbb02-b3a8-4141-aef1-41566d7a67fc"
        },
        "item": {
          "id": "58654ca6-959c-4310-90db-18834612024d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df275e2e-90c7-4a26-bf1e-d26021e63fb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf8714a-9e60-4dbe-8f94-c96895f5368f",
        "cursor": {
          "ref": "18e0dc55-cd30-4e95-85e3-3b2fff73c88c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5f0c0aa8-d192-41b5-b1f2-8292da095bc2"
        },
        "item": {
          "id": "bbf8714a-9e60-4dbe-8f94-c96895f5368f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "91760f48-7345-4533-8d46-a4da14ce9f1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6ee69f-8a90-4bca-a369-a0ba1eb7467b",
        "cursor": {
          "ref": "6d347e0f-4a28-4187-a1e7-e4c84aa96f44",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ec19b88a-661d-4685-97ae-848e4f56839e"
        },
        "item": {
          "id": "cf6ee69f-8a90-4bca-a369-a0ba1eb7467b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0cfb8cfe-07a6-4716-bee2-e02a5906e190",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}