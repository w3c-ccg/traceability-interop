{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "546beccc-7f53-4500-bfb5-6286a5d9e5fd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a33253d6-d308-47df-9564-348f6787d743",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74fc750c-bbb5-409c-b9c4-d53dad3c0d50",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "02d0c276-439c-4db6-9c10-8b8d6308366a"
                }
              }
            ]
          },
          {
            "id": "ad961091-5a8e-4946-ba5a-ec75c7ffe11e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30f738e9-f29d-4615-8f2a-be7a8facbe31",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42b3fc0b-83a5-49cd-a9a9-0926428822a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8375153-e195-49e4-a9a7-7f37c35ebdb1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eeb92f3f-3a50-4ac9-b200-8dee47979906",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fc4d9aa-6502-4303-837f-ab547d4b33a3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6489f8-ccdb-472a-9725-79d6c9e24f5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ec80d52-4cc6-41ce-a45c-c9ad2e410f55"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff0c8e16-d1ce-4ec3-b087-1082407054b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d864ed2a-8ab6-489d-bcdd-76e88fce14e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "164c8dc4-ba9b-4ead-8f5a-f4afdc899e5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a6cd6de-97a6-41ee-87d2-9e2e045e9385"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f7cb724-2ac9-4d95-9c2d-eefa19d74c6e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7ff67a78-cffa-4636-9102-96ab63d8c06b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cc25855-e1fd-431b-82f0-6963bc999e76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e87cf3ef-374e-47ad-9d52-80fd54bbba39"
            }
          }
        ]
      },
      {
        "id": "118bff8d-7aee-4bff-80a6-141a7567a943",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "237ae141-4d3d-48a4-aa56-e66df24d7d12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4301e0cf-4477-4fe7-ac08-a141ad72437f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0bce89a-8337-44d5-9f1f-4394f031c3e4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95805940-d68c-4d86-a7d7-1846660c7a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31d30bad-6735-47a7-ab5f-a9e5bc5351bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22167c73-cb61-43ac-aad4-d958df7ef3af",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da0a23a-2599-40a7-bb79-1152f319c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da1b5c02-83a0-40d6-be86-11452f50353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb49b8b-a396-42b6-8121-a8908a5b3d28",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b1b59-31c3-4bc6-94b8-a367ab4e5e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d51a45d-74d2-4897-921d-112726055454"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20ad1683-bcd7-4a18-8d5c-343652f20446",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9691b708-0720-484a-95ae-153fc97c4925",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2e3391-28db-4c81-9a85-ab8de3b2894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d42b9bd-b1e7-450a-9a40-b03ceccc3587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8263ea-aaa1-4824-8b79-0ab8c612eca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53069a9-2ee5-42a2-9fa5-ffebcff0077b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38b639ec-a243-4ff4-a113-3ac82390fdb0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc8e8df4-160b-451f-af5a-67c5938fc056",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc6b4a27-7220-401c-a3d1-0cad7037fad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "19a0ca7e-dac5-482c-8e01-8ca38d222283"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58d5f0bc-35d0-4aaf-8870-120d995ebe8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "822ea782-05e6-460a-8ddd-38b54728da37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be02a75e-aaf3-4d16-9a42-90941df97995",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50f0983e-3d48-4988-9d9f-172b2924c49d"
            }
          }
        ]
      },
      {
        "id": "5c225e05-ea7a-446e-be3d-27019fcc7e8f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c13e7bb2-b0f3-40d8-94a4-7fcaba2898e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee95b003-8752-4da8-8a07-e14cd776d7fa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4ba6ab92-1aab-4d3f-af42-70643125c4d7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9340d1ed-762e-4d7f-bab3-11f7658e5cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee44be14-6a1d-4aef-8214-256a98b4c8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3b64c2-1041-4b5e-80e2-898eba397329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "772b00d6-f0b0-4a9f-836a-080b197e3705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cd6d16-c608-4445-858d-8f26ce77e91c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd221e55-1d24-4a4a-a8a0-f59a56f0437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b9a3ab-e6ea-4840-9c9f-0de3503173a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ba7373-34c7-41be-bc35-e5154751646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b943ee88-5112-4681-bac6-818265ed12eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a44614-f4a5-4b5e-957b-7fb7f6b0fcd8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef159af-7e60-4422-980b-3a46285bce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fe00e5-e12d-4c3d-b7bf-de3954fe575e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903a2bed-220e-4b9c-809f-4b43bb7d7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "692952f5-59f4-4a3b-adef-2a794012b3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa85ff5-a555-4bca-bcba-d7ccd0db2fc4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35698012-e1c4-46c6-b8b3-baabfb72470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92b4923-41f3-485c-9a81-712474ecda6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5690756e-ab1d-4a59-9842-2ace14feaf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c9bb1f-b189-409e-bf42-eea391ba0e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838f5036-3354-40e8-b52d-d8d0b8b15331",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f345e176-d323-4b18-8ac3-b238dcf936fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30d5895-edc9-44f5-8366-f8bb3196faef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341f3f16-1f30-4a90-93cf-c916156a5acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "963918e3-d19f-46da-88ad-5f8ce7ed205e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8ef2b9-8808-4504-993e-ca34573a7f41",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d8867f-b878-4b61-896a-1f5b8d3c6343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dcb24d-94cf-4bbf-a36f-99bfad794ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3807e3-f044-4655-bc2d-6ff89474e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9240efc-dd04-469b-9470-8f4d218d83fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e70ca8-0be3-43ed-af96-4426898650f5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7929b8-4347-4170-b63f-ec95af745d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67866965-0765-4a80-ad93-659a5dce367d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd940f9-a3c9-4729-8c7a-a0ab8c51764c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edfcde45-1cd6-43fe-93f7-48ccf7425fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4941a7a-c16e-47b3-bc76-c42642df685a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2bede-25a1-47b8-95f4-85aa22ea64c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ad1ae5-2e70-4757-9267-4a969107c3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1abf8d-7a2b-4f47-b8a9-abd690838863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88bde547-04c3-4c31-ab9d-eb14f5374120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4eccef-c25d-4ad5-8731-457ef0cd1114",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b45402-224c-42ca-83f1-ef3c8179c789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2b8252-02db-4a03-b22c-fb47d8bee993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4387579a-70fd-42bf-845c-635b8fe419fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51b76168-497f-4607-bed8-137092e30eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa07ac3-5bc1-4b5b-8e55-e1c4dbab4cd5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfe6f7e-8fa4-440f-82fd-e849f9720d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcb40dd-85d7-45ce-b334-b3c6a18cc635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623cf3a2-4b8c-4b66-835a-6c60f664e8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88b648d3-0cef-406a-8f36-b8de588bd59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb343fe-536a-4bf3-bf4b-1946b4f6195c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b033e-9e19-4fd7-9ef5-2e4a0de17d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f216a2c-63f9-4a83-a311-0010abfcc26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5e778-4414-4063-b43c-d1117bd876ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e918a4-875b-4af2-94ca-fcf5d4414314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed6e946-4f10-40cc-98e8-093c450a6523",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a98b9f-8b81-4994-8a26-fea18e725de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8073d19-3680-46e5-95c6-a8611e513347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0203bbb-3efe-4bc3-bf54-92b76d781d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adfa5f2f-a642-4b46-842e-6990f3ca2af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7c7070-b866-41a8-9582-daae4860f89c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c898ae2-1644-4a36-b0a9-6e4569358842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2217f7-aaec-4d7c-a822-b440443c0395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c95285f-f4b1-40bd-978d-8162b87eb96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64242d6f-161f-43b8-820f-bbf1d4d553b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9644c40-9488-4509-8c1e-98074016a688",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489fbdbf-2aae-4736-b35b-54a66bfe2dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec187fec-963c-43aa-bf01-3299a6c945ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935c611c-1cc4-4d81-9821-d96be697baa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc0649e5-6afc-47f0-9f97-08a6ad49a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fec88e-e732-466e-ab05-50c64c9f2595",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778178ae-18cc-4f14-bebd-a4cb3460694c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eecc70-be2b-4874-a68b-283726c26deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc51f19-0d94-448b-a446-3d999631e067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4407c4ac-4815-45cb-8813-e78dea413754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754463c0-2f6d-4a12-bab6-1d82d06f2468",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6327984-94d5-4eb6-9a7f-1d9abeadf295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648de105-f41a-45c2-a413-707aa9aefef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a60af2-e6d9-4999-8571-18aa821c69f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f193f450-c3a8-4342-a9dd-f051c99b809a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492ed3bc-0313-41ca-95ef-8e3ce6ab169b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b07be7a-d594-4fc3-bdeb-8eae180dc55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89e914b-6f14-4f62-87a6-7b9fcaeda671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f1b3d7-9b69-4f52-9c22-2fddd0d8d844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0308f5d3-0518-46af-9f90-a69836b2b06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc014da-d788-4cb5-ab19-ccf1f5b43ecb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07445fc-f4de-42f8-b18d-1cf01e5c31c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0261e0e6-2ff5-41a7-b6dc-6c67789e0ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf3d038-45cc-46d0-8834-9c4551c88090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd8a9f7-b4c2-4304-9b6e-0acc54824c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41d2634-ef7b-463a-930e-dc69346a0f1d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd550c4-012d-4ff8-b7ff-683f662d3fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5cf397-b72a-4195-bef9-d60a90830ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd8c578-9c74-443b-8102-b3000e24cf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e16f8a-21cc-43b2-9494-e360e3c7adb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c887d283-7501-4307-bd58-6ac81ee49b2a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7642eca-7dc3-46b3-a979-4a5aa2bf7e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19530481-e433-48b7-ad3a-f6adb5b2d98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef579038-1d5c-4008-8f69-8c534f3d9ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cefe1835-2211-41e0-bc75-cff49eebb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa3744d-b86b-44fd-9494-ab311306cbfa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944cce07-dcd3-446a-a3d7-f5c484a70705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120fe641-3abb-48f1-8abb-da8439cb44d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffc8e0e-c2af-4d82-846a-dc35bb3cf809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be0a3a5-e2ba-4089-895f-cdd61f94f90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c9785-d530-40a1-be05-11f1ede5ca2a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6524e6f7-61a3-4da1-8f3f-77a03ec45129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228478da-f97a-496d-838a-38c0d8a608da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f9b235-c599-4903-b951-b00389265c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a172305c-aa7c-424a-8042-a29b5c8de417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255d0d12-28ed-474f-9b41-6b16e7bb7c3f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f753272-270e-4854-8197-53b0b5f51950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad9adb7-27ce-4b55-893d-0f70f9afb12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6b7e26-5216-4b66-a33c-1aeeab64ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "057b8697-5880-4a56-847a-0530468dbd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77a98b2-95b4-40c4-9a03-f42958f96324",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0770e5d-d970-4e80-9baa-3f076cb01b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c625fe3c-9ae0-4024-b752-2e0bab0fbc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa61a1-9fdc-4867-946b-21ed5cec7119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c33e7e-0506-47f7-accf-9a4dcec9a71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5abfa5-a44f-4d7b-aebf-b2d5b132551e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a6cac5-7391-4cb8-afff-34f489da74b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1ba6e7-3e2f-4e99-a337-89ac71f1e54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e755b596-655f-4fda-94d0-30ad7b3c2267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2cc27f-0e3f-473a-8bed-8a51b0fb5dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8f43fd-1e2d-4734-93db-2a8a86e8013b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938e482a-e80c-41ac-b02f-e4235c7b130f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362fe4bf-40d7-4785-ba7e-73b5ceeedd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a78d9-d23c-4794-a1dc-3d71cddf86d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a618c0-ea03-4dad-96fb-74fe982c3f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e59b598-d34c-40ef-889c-8b0e9e730d0a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7110b7dc-6a14-4698-8268-2555ff254a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cb0b27-04df-4c5d-b152-3d81d548e5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fad62e-f466-4bb2-a969-b4aa044615e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c9e80f-45d7-41fb-86c6-5242ed959fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee0a8ff-dcf2-4e6c-9a5c-0b003e879ba7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a5d8e4-1730-4f19-979f-150466e91920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d2d17b-9489-4cbc-a680-592d69c9bc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5183ae16-ee3c-4324-86e6-b30932e9d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7ed7bc-e493-4eb5-b760-b81295e79428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a00eae-0268-4753-93be-afd09ca77291",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7dd48d-834d-4058-855f-79cc55811306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c7ad22-98c0-4cb7-ac46-d471642a2fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ffeb98-da28-4754-93fb-c3a0592b9340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a258bb9d-e629-4e4a-9f0b-9790e7f1127d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d4c6c5-02b1-4bbf-93a6-443cad0146da",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7062101c-4e16-426c-a542-387946b5715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefe3ab9-50eb-46f7-b90c-598da374ee9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0aeac-5113-4cd7-85f2-7bab697c9f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1f2a78-3510-43e7-9cca-14a8f3d09d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6999eb70-8570-47b6-9d96-0885509d7dee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac30293-35d5-4b05-a400-530b9d7c68e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f7f89d-07fd-4970-a4e5-9896246bfc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9a3c4b-262d-43ea-976d-e6f15674b193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6220d3-12c8-4019-b6a4-57af81cff9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dc0efe-4dda-44ac-837c-b1cc3d6a4c8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430b277-0c19-4d12-af00-26e601b71066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcbd996-f729-40d4-944b-73d29771c2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ff69c0-2ea7-48a4-82b9-7b13a5a839ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "769042ee-dbcf-4bea-9943-163f3ee2d8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7606c22-da6f-4b79-a335-4a23e03eff51",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba40c2e5-c7c6-4447-9693-0d9e731d20e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e76054-6c88-4399-9551-a0c85ca79d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16eb0c7-150d-42b1-a6ba-f2688d9d770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b1a495-cdfb-4738-816e-75c8f79f0e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77657e63-fd82-4ad9-b91d-888ec3bd051c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0274620e-67f9-486d-b19f-c8d4441815a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac43481f-3e58-4dc3-9482-239995f5d883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d81a470-732c-4a77-a6c5-7191983776a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f59db5-8d5d-41a6-a8e0-df81f4ab7187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be11c8c-867d-473f-93ba-cb3b1548c0c0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab9ea9-dc33-41f1-b179-a9e9f89fded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186aceab-6047-46a3-8bbc-e6ea3a981abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c535da-4b0a-4521-ad88-7a8b189d5a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7c31f2-7d11-45f7-b262-1f9cdcd384b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd880498-dcd1-4946-a164-38836c3ee2b7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41f60f1-3a5c-4a7d-bb41-4e8fd11b8533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "537ed354-d8e9-4b2c-9d3e-7bf523e57fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edeec91-2f4b-4dde-af53-61ea588d342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c66e8c6-d4a4-4717-bf57-d9dd3409414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dfc452-909b-43cd-ad64-d8c6da62e694",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df61693c-78bf-486d-9999-568a14ec7fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c0657a-adc7-480a-8fd4-5ebbc959d269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccfe23e-9e5f-4f14-a503-fa694f18bea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c209f4b9-6ef7-4cba-96d0-c0e419284845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0c99c5-d626-46f9-a1b2-d74e1f9c30ba",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9098a01-dcce-470a-95c0-843aa066ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08273f23-7776-4a1c-bdac-a1ecbfff14bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c8d3eb-9e8a-4257-bb37-f279c39e0479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93412dcf-3b72-4610-8ae8-5b9963e93bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ac7d7c-f517-4050-a148-6654debf948b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8271035d-5372-41c3-8e06-748c6198f209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56542f8-5099-4440-9c07-27a8109b4777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597bb03-f72f-4649-ac8f-9a802c3764b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df060958-219b-43f8-8322-aba977c89a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce3128c-a185-4834-a0e2-d75136c2a203",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b4ca51-7833-4fcf-a6e1-8baf2a7f63c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9ffd2f-4878-4ff9-adc9-d4655bbb1b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c3346f-d6e2-4db5-893c-8d740469e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d39b331-0b81-48a9-bb49-cb61ddb17fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bd2671-a3c8-4394-a5c0-0fb80f103529",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d16608-2de1-4abc-b2a6-b373aabf25e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c1e4eb-974c-4908-826d-6e982c2b2b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88523fc9-0254-4c9c-8331-dc9d7acdae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a22a5d-a9a7-4f2d-b025-173db03da0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62bc285-01bc-4174-89b3-5df17b8a0642",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef03f82-bf8d-4146-bb0e-5d63081008c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6220f1-92da-4f6b-86ed-2672e54677da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9b02fe-c9da-445d-8416-43f2a312e232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0b20bcc6-5614-40da-80c1-8f0a70bb613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c7872c-e80c-4648-bedc-76b84aabf5ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23317bc6-c510-4804-addd-27786899acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac1a654-1576-43c5-9f72-2cd75a350894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc082424-560d-45fe-9c26-419aaa210176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26400f04-5c25-49ac-ab97-522afec39435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b94aee-47f6-46db-8908-058f8a5da76a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2fd041-e8fd-4e37-9567-7eb70e6181ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a28d1-7e22-4c25-9eb1-6c98c37a7504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb8a455-957c-4014-a12b-e6e93b39e325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2600c99-5e67-4568-bc55-b464b7f13b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6921642c-4287-4260-9ee6-806784a1e90e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74728e93-6d04-4d49-bfb1-6af1f1b4a23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591e5795-5d3b-4823-ae67-7a7672bff93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e6a49c-1093-472b-8d05-02765f817da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a48cf5-f2b6-4958-bd6d-4255c5dc8e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917e3472-82fc-4064-9fde-259918ad323c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec49a950-b648-4cb4-90f1-dae93cb68727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcef3ad-f851-45fd-b04f-647f82a96fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca45ac50-5639-4380-8ff3-c17007f5362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "357403a5-c4bc-4027-8eb2-8c28e2916fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c119feb-8d8b-478c-8d0f-67c9d4336b86",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4deda5d-712f-402a-a905-451b8826ca78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbacc7a-d0a6-472f-9223-43564007c029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af61222-6c36-4052-a400-89a14f9ea7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ff43f4-357b-4baa-b554-49772a3411c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487715dd-e337-4528-ab83-8f579ab740d6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fe1e77-856c-4998-a28c-997a87af21bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bbe907-c574-475e-8f36-fe721feae2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d445a7d6-ef52-4484-9c49-7b5713e6ec17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "055c7e2c-ea08-4b72-acd4-110312cf894b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e10227-c456-4a6d-b634-4c0af5f11505",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35234de-0274-446b-9082-758ed4209aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7458db-1af4-42d8-970e-5cd50651971d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac8a3d1-ec97-40fe-9e05-0e9ace176ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72b740ba-0f13-438d-b20f-31ed2b99ed5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1e7675-18d7-4cba-9401-637e79bf607c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bab4251-c769-40b1-a0ca-1fa659f76684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c989bff9-a6f1-4814-9ae6-0157178be163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3731737a-c549-43da-84e9-810840fb1bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09f39591-b095-4759-b103-3749ef491294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbbef67-a38d-4c82-929e-da532f3e1221",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa145fd-6dea-41aa-a8b6-5a12105fb1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c10df9-dcf5-4eb4-bf72-c89b39900451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c321036-c3ed-4fa2-815e-b40a67c80aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7798219f-60be-498b-a78f-7a25d7ee466a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ec4c64-e814-4894-b4a2-7141453caf44",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629436ea-b958-4f09-b0e0-2a50dfdfc0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b76bc49-a260-4464-80ae-a81d10f6523d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ba05c4-93c3-421f-ad32-fd785a7a5105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acaee393-fa2a-44f0-b08b-5bcb2bb88b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa436b7-d8d1-4486-831d-45a168436fee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ea649-7779-4c0f-a69a-49a08a45cf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f444336-7664-445c-8137-211ecb05328c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd095e85-e2c8-430e-8bcd-0860ea73cc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b95296d-6f88-43e3-95bc-e98ff25f3046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30db6aa3-f9d0-4adc-957d-b058e39112b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3da5056-10e4-49fc-ab4e-870d14cdd9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f199fe-8820-4aff-b8ab-4b242b38d3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee46376d-0c77-4f5e-acd1-6168b7ee94b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0435de7d-477f-48db-9472-943f59de943d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1912834-8e51-4ed2-9bf2-92de8fe6bb7f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b0a609-5b16-4361-a275-8d2ccab63285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1afa725-50d8-4ea1-b78c-c1b11504d7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8a42a8-d538-48e8-8ae2-9578315ab615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5f6c38-4c30-461e-9c2c-7a01768d9ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62314894-d2e5-4dfa-bded-4432bfa220b4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3083305f-8b6e-49de-a530-dcfd3c45d113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8522f9bd-015a-41c6-bd13-67bd21a9d2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e84379b-1f95-492e-8171-6c4246234537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1e94c7-72da-48d8-b7a3-4fdaa69f34f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9a4a7c-42ca-436b-8abc-e22f8ac8cedf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44762562-effd-45ac-a714-115ba8b78700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd304fd-662a-47d2-a0f7-8b9f28a156b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03c9623-7a68-4a22-b133-25507e61f293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeefcb01-a20e-4da6-a0dc-d31eaa10db9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01caaa89-c464-45bb-b22c-27f563bca545",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77369e48-7a07-4c31-85a1-21192b38b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452bcacf-813a-4dfe-ae0e-02ddc68aaa89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856e480c-a959-425b-9a8f-82e02ab7a1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f91018-94b7-4df3-9798-e6dafb78d830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554b2d8d-62bc-4b1d-98f9-9573ad450292",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5308efc4-ed05-4d80-b02f-e70c99ff511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cadc97-b791-4775-b4a2-e54301ca15e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fcc404-a317-4e97-8aff-1816ed0d6260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "920cc908-7d16-4ad3-9004-fc69b0dc69d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08229d96-c700-46f9-8477-7fcc45f6c5ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e475d8-caff-429a-88e5-772f7bdd9ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c237ef-fbbb-464c-8191-b5ecd22a156c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae6dadc-6776-4799-88ff-00006db58f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5c5526-4869-4657-a142-5f5b64573ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28804fa4-fe85-4a8e-a7b8-d1746091f567",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e194ebc-ba3d-49df-87ea-cdd4c975f41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108d1d7a-527f-4b52-bb9f-20332bd7f0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aae0ce4-1a57-438b-b0ae-663b34cc58fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5feb6e3f-8b53-4a0e-a87f-3d6a55992504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7271a73d-6c5e-4e70-8a16-1efa9ffef328",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c919c00-314e-4f56-ae1e-2db1560b9204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c100fe5f-fefe-46d3-99d7-4d4ae7c71fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d163b58-3c6e-4913-bd58-03722a264244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c801e3dd-f050-42c8-98e7-f5a98ad010bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41802359-975b-4ec0-9ed1-005b91697853",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e2edd0-0411-4728-b8bd-f844816a0f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e10d98-d274-4b73-a229-a512b6bef5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad49a7-b109-4938-9662-560ccdbe7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18bf32df-93b1-4b0a-98bc-653e319e4e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39766752-d11b-437f-8716-fda7e2d36f1f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42942220-4cde-4e60-9d25-6ec3092cdb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2e0348-5e62-4e1a-8196-30ef7459a96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee4f77-8a55-4b5e-a937-3684ee69733e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d21763-3bc8-437b-846e-cd1e93752c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fee58f-7ae8-444f-9147-9e56d1001275",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c892fc8d-6983-4898-96d4-f630df2b1574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a918f2-7746-4268-abca-aae258497def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c93319-5cbe-48cb-9090-e2cf9c665e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1309c4ee-9724-4398-87d8-a5a64ab39694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597211c8-cfa7-4478-a673-df81e4303bc0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e3981a-49fd-486e-8b15-9009e67938e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3031055-67bc-4f84-b79b-055eb167010b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70538aa2-2926-4762-b089-07d0a839c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b88d9b59-047a-44cb-aa41-8f99f09c6a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31af4110-81c4-483d-b40b-c0f37bc7c664",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76c319a-80dd-4048-a617-425b486e8bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42682c60-ade4-4503-a581-f9c81cf92664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b06b49-15f4-4339-9fb6-a665a01730cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3835a7b9-b8e6-453c-9379-7599470f4d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ed24cf-ce22-42b2-ab97-2c99e71ef4cb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314077b2-93fb-4c09-a30f-bda967be0e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d506c7-0949-40ee-bb46-20838d22d7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7fa92d-4c41-47c7-baf8-6c86e1cca22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9c4f3a-1d49-4187-b06c-be3f5c6ee052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6155076-a18a-4ee5-b7d3-506a2eb20397",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd49b4-d6e7-40f3-a018-010739140568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45016d83-f808-4c88-a733-af4dccfc826b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9002b63e-eee1-4298-af02-2bac2f1560bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5c2f4d-34fc-4c33-a10b-0d78bd230e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4323a934-2d0e-467d-bb2e-f0a5129884dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c628e2f-27f3-47a0-93b0-52be61806dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4742732-6591-4738-92ba-82da9768e461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57801ae5-160a-48be-bade-537f48bc7fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf6275c-8f0a-4f05-9691-0a6e5714694f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b387bac4-3d6b-422d-8f6d-c69812355b22",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17720269-102a-4ccb-b28a-4073f7a307ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae16fbe-91db-4b0f-881f-2066619344f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f0cc25-7e70-469f-83ad-ccbf14bff637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f132de20-da14-4b77-9541-ec9b4c0afb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13aa6b48-8acb-4b34-acef-6c39d5cbcede",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdca605-e914-4bfa-ba8d-d0281d29821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c6a4a0-9f66-4761-b5f5-d62cecd57361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55342807-49db-4844-b0c0-e376280ae32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db2739e-ef4e-46e6-9798-2c7886feaa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb69e954-2d7e-40e7-9ced-a90ecf291bf9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d962e54d-d0b2-49e2-9b4d-b967f84028ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33ea15f-9854-4023-9e11-1d9fa0088769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4af84c2-2311-4338-9d29-d6f5d9a351ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff71660-f5f7-4d48-8de9-1b7be0e8b67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5665d41-2558-4e9f-90a8-ef618932e745",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ecb881-649c-40f9-870a-6b7f434a0aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ae20df-aea3-41d3-8bbe-6f4f70ae18fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642759b3-9a93-4c39-b8bc-90e327878fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0664d4-7c7b-4fa9-9fd6-ed1a7072370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30e5618-c3cc-486c-91de-8fac148f6887",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc767345-3093-44ed-9e6f-ca45ad267e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813f1495-d844-4e97-b0dc-8c4518bf9313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3362b7-fd2e-4ba7-ab18-dc7986ca69a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd5c5f6-e9f3-4277-8b02-e42c9375ae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba71db6-ba9b-4e32-bf50-712afec19da4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c9d2aa-26f9-4231-af77-ea9984726de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b2edcf-3231-4ffe-a74b-6f2ca332b208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30dfce4-9a3c-4fc4-8a73-fc9de3a9902c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05c3e3d-8f40-4f69-a1fa-a80a33bc603a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb2c79a-dd3a-4a8c-8478-e777eaa44ebf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec02f1ca-a62d-452d-ba0f-a274d6c4cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b9c74b-6ea5-4996-a5ec-49bb0a2752dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f883e-b7ce-44d2-bfd6-daff7e5cc8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaa3859-fa95-41c5-b050-b6cb0826a354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2297ac67-ae80-4dc8-b47c-c14bd9012691",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb5f767-3a99-433d-a73f-9085da63c82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0710539-4ea4-4f13-8dee-7cbe697ecf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b8fc2-f40f-4622-b05b-a17c37568bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6c210d-6df4-48ef-816a-0420d88ff7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ac36c3-c851-4a4b-b749-2ab11a58e53f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5f0307-faea-4de4-9648-76e264afab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80af7870-5d74-43a4-a6d5-57a2fa2afc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c070417a-260c-47bd-876d-9860fd7703b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53f9fa93-84c1-4d18-bb03-4f6b5fab020a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f9251-892e-4f8b-8e52-0ab698e869e5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cfc2a0-57ab-4e8a-a680-a326b3b9b31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54cc578-fa59-4707-92dc-d9995ce84dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526c31c2-e823-4d8d-b8ee-14ec031fde99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21fbbbb6-bebc-438a-a348-97b0e77a8887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1729fe4-dec0-4ad1-90d0-0178026d006e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28beb11a-4d57-401c-bcc0-7ebcbd3ec331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469c7c84-3163-4b4e-9435-ba815646683c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfb8f5a-7a7d-405f-b506-cc18ef8f1994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23be6831-7586-4051-a31a-b3ab01c7e862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9f3762-b300-42b8-bb6d-8c831c6af0cc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ae5d85-7d76-4368-9ea2-5adf6ef2406b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eef667-5301-4b9f-919a-b770304815fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edb8418-8663-4282-a218-6e4c9ec3c499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e33a038-e2a1-4ec6-8128-15a600662d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90015553-859c-4b60-b1ee-b3b81e0796c1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e6fa72-50db-4bb3-96a4-df71394f1094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d04bca-8dc0-4702-9884-f2647b0e8fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50ea6fd-b8a3-4c3a-b51a-5e9751589255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6930ab05-776b-4075-8719-9fbcfbcdcd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea60762c-2f28-4305-b962-ef2c9364b678",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fa3755-f1a6-4b75-8341-b1f934e96376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a198336-0e3e-4155-b885-3de82121eb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209e951-3181-49c0-a6e0-60d90c8d0371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b5bf1d-0ef7-487b-b053-bf1a5f9ca839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcfabb3-c792-48a8-a472-cc7487a0c4df",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571d6b17-1894-4134-9eda-7b6a4bb67e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cc4952-1563-4107-a6af-dc10622516b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96a276b-2c01-4f3a-bd97-bf6a6afc22cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df72235e-fa36-4546-ac41-0c7807fc9c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29da1599-fbdb-4fba-b57a-6748b384f372",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d18cb1b-aef5-40b7-9f07-ef7b80585f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad365573-8ddf-4d41-b087-aa70d9177167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa0840a-8fec-4cba-b3f6-0ce20fd75e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7c6183-d8d4-4c2d-b2e6-6abb98910a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460c63dc-21f8-461c-8370-4740055531f7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c396306-e408-4dad-8ec2-0af38a180d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f845adad-1c14-48b2-be64-736e7babda47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42880961-bcd9-415d-bf45-84d180b96a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ab58b6-f63f-4958-bae2-2432355a0f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2506fa23-f537-4d44-b95f-1ded2b730598",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af01fe5-2b62-469b-86e1-cb1ba4c107bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d99fff-1783-444f-b325-2bb384735d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef1715d-0b31-4222-8331-472662f2c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f321634-4092-4da9-946f-b62d7cf35bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9124fdaf-d5cf-4360-931f-377a12b59c2a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb1c4df-7de7-4450-baa7-aa1504b58b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b93e273-4aee-4302-a0b8-0400efd0ca96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5356e7-2a2e-46ba-8950-c0b9bbdfa555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdbf567-23c1-4c3f-8de3-5c289ecb8d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ed47aa-25d0-4ad7-976b-9ab9d459a25f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f414b45-0171-4a29-81be-e3bb82e77f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467eb81e-3e79-4bba-83a4-5a6b05a8ae76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851cd674-cce7-4505-82ff-f119a374a6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68981091-db06-4705-91d5-133d6e19ede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898c6b2e-9b38-4774-98ee-50447170b335",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803fcd6d-d202-415d-84d1-ac58babf0588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57799ab-2c5c-40f4-99fc-b65b35ea6454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b941762e-44a9-4b0d-b3cc-888d43b7f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f091b384-4c4c-4d3b-9364-23f590c05729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da78f61c-de7f-47e0-a96c-f0f81335bf5c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17ee569-8354-4417-bea5-c5c5dc6b7300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38c0729f-ad85-4ecf-9619-456dfa201213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314de1c3-fa4e-4147-901f-f6ab0d660ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "45b772c9-cb66-4c3a-9902-5448dae304f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f38af95-db73-4052-aa5f-34392c5afb7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0a2970a-d9a0-4f57-bb51-2d77fdd416cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba476dc5-ec6c-4b69-8c68-e58ca6401841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9af6635c-a5e6-48a3-9db8-97bab763f02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1189209a-453b-4bb5-8082-670d7e056249",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f94657-8c94-42d6-ad2e-285377287a0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec007f02-53e5-4f1e-983e-6607210fec8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f1bf72-19cf-44d6-ac3d-e7688501ffeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "186ac9b0-59ad-45a0-ad3c-5c9b91521865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e3d9c2-46a1-4a22-b563-479616aba45f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62bfcada-b1fd-4ab7-874c-5d98f53e9411",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "313a4fb8-0b59-4e91-b3c8-5e8d5d039969"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb6f5d71-9195-491f-98a7-436c72269c7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd624e68-b9e3-4f0f-a756-da36a80f41cf"
                }
              }
            ]
          },
          {
            "id": "cc781e9c-8aac-43e6-adff-9b1a289eb37e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3409053d-ef96-4687-a0c9-80dda02e43f4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32a1719e-ac28-4afb-8129-87e537cefcce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b34cd6a-e7f6-4578-b92a-ca0cbaaf0e9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41927aff-db45-45f5-85ba-5cbaffa7053a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "280b6308-6e98-4569-b7c4-1f3ff6438e78"
                    }
                  }
                ]
              },
              {
                "id": "49bbdeb9-7016-4a82-91d6-f4011d72436d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c224f8e4-4d52-41b7-ac87-d20bf3e9ac68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3a5f8bf-6e73-4b3e-95f8-cbbeb030e3c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fa6362c-624a-44b4-93c3-90b344a8165e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9be63407-5781-4d8c-980b-d528a2f8c31c"
                    }
                  }
                ]
              },
              {
                "id": "693d5ad0-d8d2-44a5-93d6-5bdc2a29d252",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d91425a3-70cd-4d35-b08d-749a0057f669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef8ed2ba-44d3-4574-93a1-22adb2c77c11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36ea6c65-3abe-43e6-a844-ef79d1af8eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc7b497a-3672-4399-a938-762cd87a9f6b"
                    }
                  }
                ]
              },
              {
                "id": "93ff9faf-eded-48c4-b4a2-b319fac763fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d586684-22fb-4c9a-a051-aa3e0ec747fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f4232c9-088c-4731-8023-0f1a48c8f49d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c994306e-b489-4187-9d3c-9a2f61c4eb68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "62917062-b474-448a-86fa-04a9f62db66c"
                    }
                  }
                ]
              },
              {
                "id": "533a958c-f240-485c-a846-21601e2be27b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b64b42a-639f-47c9-a7a8-7e27dab8a741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ac718e0-4192-4205-be5c-2df48f3133f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0028408-ce66-471c-bc22-52df01e805cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8f5ee38b-9f9d-43dc-ba8a-d5e56eb20a80"
                    }
                  }
                ]
              },
              {
                "id": "abeb9848-1999-4489-add9-a694449057e0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b2f783e-73ab-4944-86c0-2db4eece113d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a20e67a-3b41-489e-84af-803163a2facd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc43941-16dc-4bf6-9d74-7f251fb1001e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84447adf-4d4f-4cee-bc52-cedb526a1c97"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0a2913e-d23c-4c63-b7cc-0b4b455f4cdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4ea9f4c-6863-4da7-a859-c364280cb300"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5afde17-9a70-46f0-928a-22818f3a26b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d295ffca-16b7-430c-a9ea-0473d9f91723"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c19f8fbc-64f1-4e95-b5c7-50ed07c16abe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0006cfa0-26c8-4a94-88c9-29666b178818"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf898fcb-2308-488a-8b7c-9e80ccb3bbe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25fa279e-652c-45d4-af25-fa7705ace52a"
            }
          }
        ]
      },
      {
        "id": "b13f9d6d-2a61-4e5a-80e7-79f68c2b7539",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "db2fe0e4-3024-4c84-a1b0-04988a897488",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9baed5f5-6970-4372-8672-9c7246d7a8bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "803314d6-9c34-461d-86b0-2c275a489db3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c2ade-7ab5-4eca-a5ff-3d3e965e6bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb5f7f9-0922-483e-aa2f-99435a34f775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4769fdd3-ae8e-4e61-abea-2d2fb55ddb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e8d1ce-e432-4638-8f26-854e5b11ead0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2655df2-6f23-4474-9a41-22274b3043e2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5260d29d-707c-43bd-9d20-e6349e3253f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecc4ee4-db06-44b5-a9bb-340402f14a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b4a1e2-6e5e-4f5e-8489-557583236dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce45d3f7-6802-42d0-a9c4-10149e18d389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea5b465-41eb-4ebd-9d3c-381e4ae14a20",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81d75b7-4a68-4d5c-a3db-163521bd9a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274f2659-bdf5-49cd-8ae3-ad7059faf87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367ed457-f05d-4991-9d8b-624b11a5dd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a946e565-462e-41b7-939b-0cf905268862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78df8963-2a4c-49e2-89b9-99e44277fffc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5559052e-545e-486f-924c-14336a7a837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6e973f-2c10-4393-81ed-286bf36412c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de261f7-fbc4-4a58-b95e-e0189fb7e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f6a311-4f4f-45a1-bab0-eff15ee266ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22d7021-af45-42b1-a877-1e5ac0e2fa63",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3788fb20-0bf9-4d2d-85d3-6998c10016aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b9bd55-33f3-4562-9716-ea2238071c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a47a7ad-6689-46cb-a24f-51c562bcc982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2758fb32-897f-49e2-91db-2896fd716ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca63a96c-112f-4a59-bed2-88a5bc5aa993",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da379334-d27c-426c-aed7-09f3843921e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eec65fc-ecf6-4863-9926-d5cd94403d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd62d4b8-09d4-48cf-aa53-017867352059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8c8fab-3571-4fd8-88c5-4b4ad25dc3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2680d6-1954-4104-9a9e-610fc178ce37",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0901363-cb6b-4841-992e-cf7838b3cf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eb48be-7def-4e89-bfe0-bd1681958ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f00501-0bf9-4ffa-902f-b0352a0162bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "375497f9-2886-4b6f-a43e-c7cb7668b3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3819a5a-2fda-42b0-bfbd-30c458518807",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4bd02-7dde-47b6-abd4-42eb2470bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003b1ef7-28f2-4d58-99c4-70e2e55b2fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b05594-60b0-41ab-8a40-70b040d2d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9319f077-de1e-46b1-89fa-df9d09fcd911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a973bd6-18b6-4e30-996c-034e875695cb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e59868-8269-46ec-aa3a-c8244410b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76c9573-9187-47d4-ad15-a2d6b1bbf382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a744a5-2122-4cb8-9d22-4c91c97cbf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11475915-39eb-429f-bb99-57d5234db1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ed8ca6-e3b0-4947-8541-83a0e699959c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f6cb6d-47de-4d3e-8113-18d68eac702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e957d67-e4c7-477e-b1ff-d054d25ccc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386f8e20-582a-4db9-93e7-c9d0e66df560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c41fd5-3286-4181-adbc-d096f2de0544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ad7336-ac5f-4b7d-a4c4-20b9d9764985",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8f309-af27-4a3e-84fe-517020de04f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c378bd-ed93-4d50-8457-38251d928876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f727df78-916b-47bd-9a22-9ca08582991e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d82843ec-92d0-44c3-aa1d-682c4daad566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767029c1-eb61-4f57-9b74-fedc971803a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff28cbdf-44d9-4f70-822a-7a75ffb9b292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284c1ad9-662b-4907-9d2d-2f41b49037c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be438de3-42e7-478c-9957-76ab0f325fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cec7287-8cce-4f13-8f9a-bf9b92dc8b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9016dc06-15f5-4f40-af38-5dce9f1972cf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcd7e94-c340-463c-adb5-21f45eb30c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4f70e1-6a83-4d28-882e-3fde31d46432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0ef968-df56-4227-a616-0843de7568f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "068feee3-35fd-4011-a08c-381f6248935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edf20c5-33f7-4727-b42c-bcb3df7e47a0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2a6c51-0cef-491d-bd8f-14880f4a1cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6747b3-f2c8-45f6-8691-baa0ed796057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f716ed-0926-4021-8705-17fb5b0e2986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0163307b-ddd1-4b2f-a030-ed30255601b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28e9f0b-5fea-4910-b0eb-8abefb23633b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b661d-962c-4b46-ac06-ba32f5a4e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48facba-50ba-4894-a3a6-6c2f78759288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf60f7a3-9411-4284-9e6b-880cf9486dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "238047c2-f5b9-40f5-8697-1f60c50dc4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c23c80-35f7-40b6-9901-af9256f112a8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c8964b-5b55-4a5c-99ee-0aac56ecf759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b4ffbf-61ec-4447-ad40-47f4311fa764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b523575-3360-4c42-9b13-11d9ca3d160c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b98b9c4-bd47-4bc7-b640-026852fc24c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3ddf31-1208-40de-b15a-72cb3d424bd4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab683f0c-c3d1-4e2e-a0bc-2ae1ba3fd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f90dc7c-9049-47c9-bf07-e189b4e01834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbfc60c-84cf-4578-b128-7e6ae5835aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e152e0-d61f-4172-868e-6e9227f93599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfdb1cc-b36a-4a06-985f-fdf08c02eec9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6758fff-25d5-40de-a8ce-41ef4a885904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28cf80f-8f69-4bad-8a06-a96ef6593dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddf461b-dff9-4b05-b6d2-1604ef9a678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b15c485-6748-4785-b158-b9ee1cf0927c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c59a29-14c6-4a7a-9403-6a528d57fcd3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77434d65-0d47-4dd4-a380-ef14f12aa24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2024614e-bca4-4b08-8144-67ecdc3eb168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834b84d0-66f4-45bb-bf2e-5f3a2e081511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b832fd-344c-4a38-b51e-8f1c209a85cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed2a836-c9f4-4c9a-91f9-612522e74fc8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb8f3cf-9ac9-4db0-b11a-23af022b2578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f432ac-1500-4387-bc52-ce2232f816fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26072276-2d2f-4437-a2f9-fadf8d1c742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992e26ce-849e-4398-b2fe-cde5fb0ef3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fa806d-8a0d-4458-8dfd-9d8e42d308e3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f70bfe-c955-434c-8768-64146ee0bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69c7b1d-d005-4c17-a4ba-f25ebc45ec34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36614459-0b07-45f0-b023-39b7510c007b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "386c1131-9c55-4348-8539-b8031ba47182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a17b8aa-eec9-4729-9c4c-59fa5248e370",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b66cb66-6cd6-4ad7-be22-9baa553532df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93e2c5a-b1a6-458a-9e22-4620774a96b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292e934c-9c46-49bc-bba6-64cf73fda17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c469fd-0419-4931-9818-c49bcdfca631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fd59d5-bce3-4419-93b4-ee9656f54a61",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ecc1ba-55cf-44d2-a350-6cdafdf30940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c0aac8-ae90-41ff-991c-42d5a52ba1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcacf057-6bca-4e22-8eca-6779a78fa457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a3e610-56f5-481a-9f50-25b8580cac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85760114-49e6-452b-a168-47487eeda29e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cabe0fc-782f-4887-9374-988f0a33b57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b54182-0d6c-4a47-ae1b-3805e71c264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c639e2af-d1e7-444b-a02f-334220d83e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b56a05-ba2c-49d5-957c-2323c8e843fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa42868-c538-42d9-a688-6a3c3b5ac28f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc59ebe1-6361-46d3-b55f-ee282bdac8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8225bf05-f653-4580-9f92-07e5f9b684ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5976230-2326-4c97-a24c-efba8795fe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88942417-1a86-4d0d-bed8-cf70c1e8f3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d603f91-9e3e-4d6e-b41b-683247e9c7d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde73497-102e-4d2e-9ac7-d40f6f9a1434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b87fe88-794c-4756-b0ea-09ec637b9f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faef2a9-aeff-490e-98b1-b3b57cf570d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7113566e-e4d4-4679-886b-1b57dfedf6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2801665-1d27-48c5-9169-bf9d312f1dc3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34029db8-1749-4ce3-ab6e-4c4cc21acae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb928f8-cfae-42fe-90c3-d8edc2193162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c41bfb4-0a2c-42d6-a821-a2a901af537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aec7604-0a65-4e28-a24b-09b83bd6ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04c8508-dbd7-466a-9590-93f17fdde2c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40c9535-3873-4d7c-ac64-4c5203a1b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af95a435-db00-4bda-959a-488966554da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dbf68b-00bb-4f5d-a0b2-dd4c1a0df607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a970906d-ec7b-4090-8448-5c1b000d0618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646cf1d3-c179-408a-9821-93d1239d5beb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a42e3-1c8d-4e4a-8ef0-8f3f6d1cb0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cbfd4c-c0a9-4d21-ab3e-a510534d9acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447b75a3-5048-46aa-9aea-e6d764c77525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "421bc33b-c6ca-4f54-b666-6ee6f914ce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec98ed-645c-47c6-89e2-e881a72c4e6c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084f4f72-5b95-4bf9-8b13-56530b4a1059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139a07a7-450a-4ef8-8fda-c332e10ca516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e975c7f4-fba7-4020-ae91-1b7298011217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef23404c-a66d-4988-b994-791d1746955f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b1faae-f6f9-4063-aeff-dd88cfc1aac5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93926a57-4528-4e50-83dc-e4a31c9bbbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b235afa-49d7-42e3-b7cf-3392a6ca0945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7778554-e18e-4ef7-8420-2db4992370bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4da42a-6a27-400b-8635-e27c915c9ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf5e0c5-592b-4e3f-ace9-e9bfab3bc8ac",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb7faa6-a467-4727-9f71-52ee3cb24141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dc5372-3a05-4b41-a46d-c3bf773bd3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47162603-d591-435d-9dd8-d2ce1552b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcc1014-b6d2-4fdd-b235-9dacaece5a1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b32f14a5-685b-4729-9c04-310dc18e713d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "446fc4a1-a324-46ba-a9a2-4d6581d4d57b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bd6316-e7c3-479c-a22a-ed3fb9690964",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f3157672-4333-4fd7-8ef6-5fce455f5828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215036b1-d8ec-4e41-92a6-ff3f1219a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9388d134-8ea9-4ab3-88ee-c8fa96647d1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e578eb-9051-4b1f-8d31-6e50011a7db9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0476d248-2a01-488d-82f5-7cf02379b464"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ef00a6-23aa-4984-b260-af36dbaea05c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd95f1ba-f500-4d26-8449-c58faaf3a9e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98c00772-df98-4eb6-b321-6589389be422",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c893606-d33b-4e00-88df-960fee212021"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f3f3d32-84fb-424e-b5d4-f6de48d8a7eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b23abc72-9509-4b32-ab1f-bb15f99fe3c1"
            }
          }
        ]
      },
      {
        "id": "b08cdb36-048f-4e48-b371-3bf71e74cf97",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ea0299d4-2f2a-4ce2-ab91-bd0d3ca37df4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3031aa3d-8622-41e1-9c0a-85ae11eddbbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc0bf53e-5d20-44e1-acc2-27e30e4eb637",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1aa771-b3e4-4852-8131-0d948b25c74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8819614-1c22-4abd-acf5-b65d4776a5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993f2774-e71a-44cf-b4b1-00acd65e4362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "066a49f1-b042-4764-bad4-bcd8738a9785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897d350f-51f1-4ba3-9563-8c14b3e862ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e11342-dd0f-4d64-91f8-0bb59bf9bf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54392c52-869b-40fc-85ee-d5374be476c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594bf441-76da-4f0c-a8d3-91fa2385aa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "312313dd-602e-43cc-ba1f-c51a354db98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f66e39b-ead0-4060-88e9-d705dccc893f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac90bf-5c36-49ad-a79a-b0bd04fbd273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c895c6c-d359-4569-9a18-b1163ee09d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deed805-c634-45c3-9181-b71afcc39f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c81c662-0c50-4f1f-8a0b-c193a33ff7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9002aaa2-54ea-453f-aa6d-f3c582765f2f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaff4450-3807-4632-8dd3-44309d4d161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2509a71f-e01f-47b8-8501-4912ef7429c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd1e5c9-6b8d-48a9-9cf1-2d588356b0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f750a41c-b1a2-4009-8211-925730c65f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5291acee-5fe1-46fd-a177-2f9943c77076",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b953a6-31c0-4647-8399-5dd9a7ca31ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46899796-7c1d-4a8e-8472-129e40344b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99006c0-7313-497f-b5ae-48e57a415115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aefa97-479b-4b91-bf90-ee6ed8459d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eec02e1-e386-42ad-a74f-921f86a60929",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa3c7e2-924f-4332-92e2-7575f72051e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec42e28-ff19-4e26-a727-f893d5ef9986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bb21e9-af6c-487b-a85c-06fbf113aa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25063e2e-241e-4078-89cd-43ef5291593b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bfb7c0-df59-4f2a-8921-6f5cd999d36c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9b2e57-d55b-454d-9cb3-102b278ba32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946f821d-bed7-45c4-afbc-23b04e1309bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0728fd6-b4ad-4110-b5b8-c9c7ac66405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c594634-6201-4ec8-ab2d-13d939b5d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8356c746-9019-44df-95b6-91631af19f9f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b878e3-36b3-4030-af50-dadfde35d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5871a926-be7c-49c9-b766-027cf7546929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7007c43f-df91-412c-9c6e-aeaf7ba424ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07f7a5a-4aaf-4c33-86b6-970c1f62dff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4e56d7-a235-4ee6-9ae7-c60ff1360d4f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2dcabd-964d-47ef-b618-e50fa572dc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1493de9-c521-40d3-b593-6e8dad7664f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdccde19-4916-423d-8ffc-c8040d45b523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14b8feb-d1de-4be3-827c-cec4449b74eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76df1d9-6205-4ab9-867d-d1e9ad7b67e5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eff067d-54e3-458f-83fe-393895361d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5133b829-3fa8-4135-a48c-0d7dbd144c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3b31c0-d841-4eb6-aae7-db2c2246b984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1899585b-30bb-4291-aca1-1096dbc72d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b45a6c9-1845-44de-8da9-d0295cbd7378",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a192a28a-33c1-4824-a3e3-095bdafd22f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c03186-0d71-4f86-8876-16109c1c0b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f21db2-3f89-45bf-9e5b-419de864c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0e5c6c-c9c2-4724-9573-7570f3a62acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e10d4e-8c32-4da6-a927-d6d9e6099df9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b25161-7f7e-49dc-b3fb-7de2b942317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be70a1a-b535-44a7-9dcb-941194610fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ab0a1b-d2a8-411f-abc1-b587b64f50db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cad7d55-5e49-4801-a2cd-6b4232fda306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93408115-3a82-41ea-b7a6-1b1c4c6e9824",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e49e9d-2a6b-49d9-9c6c-bc8a277969b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2568e6c-efa2-4258-8d39-5a4bb256a92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00b2258-5f07-4608-85d1-8767ef8a5a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43de668-410a-4cd5-a93f-4034ff925aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c17eb0-8a06-4dcd-8073-21b2a46171ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84826d63-37b4-404b-828c-5da0f1a309e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7823ddc7-9d97-42d2-b031-75d5f6bc6a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb719f2-9ca2-4c9b-9967-852488143675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd7d84d-75ef-4015-a811-a12844d922ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76ab789-4653-425c-90b4-4782e8d7b0ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e0fc7c-734e-4419-b1dc-1d5560979f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6429a382-eb0b-40b6-9495-9d9e204c864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97457fd7-7b77-465a-988e-8f4f8a617bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfb848c-bc8b-4e00-b749-a03d72cfae07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897eac38-da55-4399-976a-74186488cff2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bf3789-4a4d-4a56-8af9-0a42cf5d5614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9c709a-43a8-40cd-bb5e-ff86d8251256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f70ee4-9cfb-43c9-835b-d909363e3ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cda2e4-38b2-43bf-a252-06aaa4cc51c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9ad93b-71d6-42d7-a51d-73abb1b1d35e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60076736-b9a1-4835-a726-353cb672a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb39cc0-c708-458a-9951-a04a2dcbd389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1167b8c8-5996-439e-8653-1cc048fffa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b64a8e-df80-4c3f-bd9e-d02467cffd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb2a635-fbb6-4442-8709-f418c3fa6ad5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d5ef56-8260-4c1f-99cd-c8ee6b67f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fae3e31-1874-4f84-bcb4-7e43f70df4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7079ad32-8486-4b19-96a4-2114e564228c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "124cd27d-b560-4900-aa16-2c4e6ae67119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59f9c6d-91ec-4458-96d8-db725b32fa3b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce95473-ce0f-4992-9fcb-35d515aa0c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e6e061-bc06-4332-be28-0bb14a632cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2743061-92a2-47e4-aba7-37f558a7c5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c435192-db1e-422c-9762-5f661255cca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9580664-4d62-4447-8c57-46921a8f2971",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084fc213-045f-42c1-99f6-4a0dd54e4bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdfb6e5-9dc7-48f7-9b67-3aea8446138c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fc5b11-2d3b-4451-9500-1a7f0dabfc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "546c83dc-2dbc-4036-881d-676ceeb47ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40efa239-f3da-464a-adb6-da56d90f0444",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c46a48-cc6a-49e7-bb1f-fd5cf1acdbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb549667-6922-4849-86be-8333ff85f59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a4ee82-9e22-4cef-a4cc-f2556414458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "461117f4-5341-43be-9cc8-e2216ed83444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79dec22-bbf3-4d8d-ab1f-a4d9c81ded17",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9669fb4-26f0-4f20-85f5-fdab42a80c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adfb12c-67ab-44cf-ba3b-766e3457f719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270e5625-21aa-41f0-a22b-37c2a0388099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "442697ac-9002-4aca-830f-302722bd180b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bda9958-64d2-4e4a-a4ff-f416c7298de6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4655fad8-125d-44cf-98b0-6883f3c4942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ec6378-224a-4178-b68e-edbf2540abe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd66b18-f916-4bd1-b5f7-cfb436f5299f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "391d88f7-985e-4897-963a-7112f24a6a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e65769-e8a7-4a4d-9c52-17dcf25f9ab1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f039da-907b-44a1-ac33-a0769df78594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb51d735-2968-438f-a041-19f853cebfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83fd1aa-2b67-4d8b-8304-636462a4e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f18b524-99ea-4b88-afc3-82a00c23b2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da8dae4-f671-4c2b-88a6-8e83878431c8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ea8669-7742-4360-851e-0dff93c2fa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f86748-dced-460d-b5da-231b4c90ce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa9135-9001-4d48-8fc0-03680a7ab45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f132eb67-ee5f-45de-8752-cf99b4beecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312914a9-6a6d-416c-b776-66ac63473d53",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db105505-be71-4054-89a0-cd75b9ab5745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ba1075-692f-4b64-ab43-b1d870400101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680217cc-ba5e-41b0-b12c-5dff931ad50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8d61d3-bda8-489c-9dd3-786765afac9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3056d3ee-5850-445e-896e-71b97fcc2fd4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e600df-d811-4816-893d-68ad8d681039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921a796e-5e7c-4893-b799-2d51e8c4e955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077219a3-86ba-4e0f-8111-8ba4a79ba184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd00569-fee4-4689-9ef0-23ca6aa951c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a988b994-24bb-41a9-87e0-312de89e3a7a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b12c109-03d7-4307-bc22-9b4dcf529fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a098f2-6468-49d4-9b7c-aa1ee007b683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be723b0b-29aa-451c-8d36-584b80f14c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3228670-0d26-4230-89bf-41c2db6c2382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06299c1-33fe-47e1-b7e4-c7b9bd012fbb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd768de-f6b2-423a-85ed-e720ee2ea061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebc2ad3-b00e-41b3-811a-29a6450a6b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ae9780-a79e-421a-bb84-c1c0936a9631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b59b126f-dc2e-49e4-ba56-f49fa4454411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f1f19-9c2d-4ce3-984e-35443880bebf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5406eff-cf42-40fe-9575-cecfe5932b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212da851-ecfc-42d3-8b3a-064753889b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991d1749-c944-432c-a9ed-1826229aa51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e0155e-b33c-4ddb-8706-16e6b7df463e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edbcd63-5927-408d-b0a9-7a0bdbf44e6a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771a0142-b0cf-429a-9784-e6000b6d7cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777acb1a-9509-4f4e-a3b6-56117ca8de4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ca0c0a-51de-40ef-8e76-e4ddebcdc2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b21abbe-537e-43a3-97e9-276f586830d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a13b86a-7b67-4e46-bf24-012bd67943dd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562835ed-944a-4dd8-9d38-ae050b3ea2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315f2122-157a-4098-843e-9539209297a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895be247-854b-4d8b-af67-89e0a4a0b132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f811f9-f3c0-4117-b10f-f898f38349b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ca1c73-7fe5-4078-bb27-f82ebdb69177",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb839f5-9f28-47f8-9caf-9dc80491d9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f16d396-1b36-4576-aaea-bd9289e549ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b54d4e2-0c27-4b18-97d9-77fa9575c45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef127b0-2476-4162-84d9-9ec511099ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b4bb95-b301-422f-8241-fd5ba88fed09",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e2c9d2-0c2f-42df-977e-5c32cb699e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad4c375-2bb2-459a-9d9c-cd58f44a54be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad31afa6-87e4-4cc1-9857-4d3fbaa1df28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c34e3ed-f313-4e12-9ccc-dfc6931a1b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eaffa5-bf01-4726-8817-385063647d04",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ff5dd1-c0b4-446e-9222-9533a77a46ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cfe89c-2ca3-473d-828c-eabdfa45ef39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec501bc-d9ed-4492-9173-8a78a4189c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0201b16-bcdf-42f4-983d-02586feeb767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be542dd-7a7f-477a-96f0-7aaf39a65b58",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e37f895-0bdb-4165-ba77-e9bac6471739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b69e2e-8c89-431c-915a-2d296e6be595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cd1d93-a881-4bfc-96de-1c4365fddf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "add56808-abaf-4c21-90ed-bfd729381552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f887f5e-1de2-41a7-9fe0-952201490235",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960b3d97-d215-4811-9486-3068dbff42e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dbd10b-7bd3-43c6-a3e6-7aecd0933038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc19ead-22d4-4fdd-a293-db0895d63015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec258e43-9646-4abf-99ba-a9c8b02f0424"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec24e023-e957-44a2-9ef9-b55f2f45b806",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7485c383-5949-4795-b2d6-70faf9799d4a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca7ab4-685a-41df-a940-a0d4b8be8918",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3a6fe9-3996-4281-9215-41b4f0c20947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224ad6fd-7479-44ad-b4cc-f76e936d17ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8193e2f0-79b6-4995-9edd-5addd9ceb276"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "764a249b-acd4-4de0-a883-ae6494f10a22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fb0bda3-b2ef-470e-91af-f31da2e31ca8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "837b7af0-abdb-4f87-9e08-d716ea5bfd0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf42700-0fec-4257-be15-51b1ba41bdb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "678c6690-d2b7-4b0f-b111-8e07aa9942c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f036c1e-dfdf-4199-bc3b-31e33385eddb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a21da063-c15b-49a9-acd3-aae5d0666e97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9825b030-812c-4d37-9525-9a063e3b974f"
            }
          }
        ]
      },
      {
        "id": "fcfc430c-b6ce-4f51-bdab-675aba056dcc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "822bb4a0-578e-4663-b94e-76e04f964f2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8be8d935-2c64-4658-84f4-be378b5da217",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce23b33e-978f-4b46-a756-75f9390e3bf1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc99a0c-5601-49d8-ac39-e3f7919bc1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b6d83b-4b00-40be-9b61-73c81ba796aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb49909-d8a4-48ee-9967-6e169bbf7810",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ebe01-5593-41ca-9d92-67091a4b508a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e587a3-0b40-4323-8cf0-56f7043a0db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774df7de-957d-44fc-904f-428f02e2dd85",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc8b1b-be03-4cf3-add3-3ad3ddd4c62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03192ce-b1ec-491a-88ed-bdb8f72f96fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9b175c-42db-4d6e-a2fa-3ee3e957f76f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d651ee-40f8-4cd0-bd27-f0d5f092cc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae48bfd-3f8a-40ee-bbbc-ac6f42fc0484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f272cccf-0b40-450e-9ed6-d36fcf95f651",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a84191b-63dc-4fbe-998a-db24942ab200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9014869-f31e-4d8c-aa8f-083b85348b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cf61a7-a123-4761-8f22-6358cb18e741",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c7a122-bf4f-44be-b963-b78f5ea7e393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa9d4d2-7f7b-4461-b7db-8e4157c8e7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884fdcb-e8e9-42d4-940f-44223e803839",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5738bd0-5b7f-4047-a3f0-079b9938a660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae85fb1-9b6a-44ca-95c4-a7d478ccca00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b2b3cd-a58a-408b-befb-9d4097e69ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d58272-c829-45fe-8398-0b0fe9db1947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5153d469-1741-4507-91f8-0cdd0bedef17",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b8a2b1-ac39-42a9-8019-de08ac7b4090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2987ce-8d4d-436d-a200-3a5c4cec908a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f83997-d4c9-48c7-a4b5-e1d2c12e9499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cfeffd-72d4-440d-a1b6-a01d4fc98b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c8af5f-b05e-4a0e-a76c-f0137345bed6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4bdb69-e346-4777-a573-c2a9c48bb633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7175a07c-9546-487c-a9f7-f2148b445777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c93f10-2d50-4b4d-aabd-4008dff6dfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5036e7e4-a562-4211-978f-99b671a7cdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a38060e-e765-43ab-a348-fa58b919528c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2a20a8-ee6a-456c-994a-f72728024351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c0dc51-c871-41dd-8ae8-f7eeffd8560e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922fe6bf-a4b3-4b2e-bfae-c749779744a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baa1915-dea4-4d5b-ac74-1e94fe922f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b048de-7891-4924-b000-754344e56d0c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aecb56-2982-43ab-98e9-f9aed7b32b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fad23d8-ee10-4196-91e0-7c12cf202df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb97523-82e8-48e1-a48f-39712aa61bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6069c6f8-4704-4c78-910c-237f4bcc1a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2429ab-afb4-41da-a2ae-44a147561dfa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983a2ece-8626-45a2-aafb-33b7d673b6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443f6e45-3b45-4679-b92c-0518c20eea14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ced066-f7cc-4018-907a-b16ba7444fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17feddf-c413-4be9-811b-46b4337c9add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ca7a6d-03a9-4f95-aa1d-ad6a62fdf305",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3695e6-9ca8-4fe3-8785-c80743d1f617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024f38ad-f9ca-46d3-8f48-f06f694bb9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eca48b7-b03b-4ec4-9149-5aa231ce83cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e94e91-d698-485e-b111-8ae2b00a2578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10abe0ea-d026-4556-b00d-3b75a86398ac",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc00fa8-438f-4e43-b368-6c6fe2090a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8a813d-a74d-4c3b-8d56-6f749ff58d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f638dc43-14f5-41bc-9559-b39be165a516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a21d24-9e31-426b-984e-cc1f414c6b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bed4366-499a-44df-9ff9-917e89bc2f2a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c5ebba-79cb-4a16-9ad6-250359618a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c84189-dab9-4a7c-a5d1-34eb4fe2b5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41441482-b421-4ee7-98fb-450afa8dc3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b379c4-a60f-4f50-b7d3-0281f80f9038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbeda8f-9f29-4c01-bc7b-6cbf5616a347",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1045d993-6982-4ffb-a9e8-63a07f2c5d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc02de93-9c5f-40ad-b0d2-94ed4313c71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43632b08-e902-42eb-b850-36aacdeb4ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6133d7c5-9834-4219-9f70-2a8446f60c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3103b327-b527-49d1-a45b-0821df13d113",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e7243f-a73b-4698-a31c-f0b11eb446b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4e9934-8cf2-4ae1-96b4-2c9b76ca1afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682f8e0-d0a5-4f52-b1b9-4bb4d71f4f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcbedc3-ea1d-4efe-8035-c1e203035d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9addfbb1-289c-4c0d-88e0-6ebc359b5cf4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b778f3b-7222-4823-abd6-b121f87e2adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad014ec9-0218-45b0-8ee9-f5415d3b790d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17149e5b-9085-4597-89ee-1a192d5985a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5dad41-d198-4786-bc31-c3b0fffc8fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95797ff3-27ee-4fd9-b717-f630b8fca587",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479fa6f6-f9f8-41f8-b41f-7ea4abe5f9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab0b251-e310-4473-8bb8-ec68f693b132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ddbf9b-28af-4a9d-b6a9-b440933f4c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0b3f06-5918-4dc1-a7b1-2b5dbd16418d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb0b184-8ad0-4e04-b55e-c1c5b919329f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8698178f-8e15-4f3c-8ef3-68ba23f464cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58790e20-c816-4e60-ad65-66dff52664b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e0c9e2-041f-429a-809a-a79115256741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929780ee-d9de-4f17-86c0-154a82e9b363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cb5708-7a53-4921-95a3-375504302571",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422b0d7f-1044-49e0-b609-e155445d8b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72895859-4c1a-4caa-9099-55b125cb5978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce34cec-3084-4154-9a10-af50a3eb4062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd9a3be-a744-4cb0-a74f-619258fffb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060d2afd-df0f-434b-a312-5f776c699300",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1677c2-53cb-4780-a6a8-03df3c4db112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e79b81d-af63-4344-b6fa-f90734cd28b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e229bd73-2716-4d68-862d-c3962bd33783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a16d624-ec0b-4b32-be7e-6632877434a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d71bcd-ca9a-4b65-ab4f-3de67c28c603",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3364509-8862-4e86-b724-6aeb460af49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790e442b-a272-481c-8a24-a334a07716ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5969573d-4703-4f18-b790-6adabe5be42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d087599a-86ec-4a88-9bea-c10c410d8589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57454dc3-df87-4ab2-836e-6048f180dc47",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87207c75-6e70-4e3f-bdaa-4061b5b399ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "257d5f5a-ba35-4814-8bcd-0bb8a56acda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf4f301-a574-46fa-9df3-12e84f058163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba824c8b-b3c6-438f-a678-893426ab48ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e215ea79-4854-481c-8c49-f0bb9411c605",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af61f462-2f25-4388-a5cc-1a435260094c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1155e350-dfca-4742-92c9-6836e4d39bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0480b27-601a-4eaf-be0e-0538c9f73ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93133e04-6018-461e-a11d-da8cfe2afeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e866a669-2e4e-46c0-bf38-291574fc0824",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d956c09-a37b-42d0-a4b9-cb47052a8d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8598dd26-1a7e-4481-b00c-3baf1a8d50d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8bb8c-43be-48bc-9d17-cee42b719f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a908c53-99c0-4e9e-a1f6-a8f309872c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4b8144-6442-4ccf-8500-df976dde2f72",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb7f4c6-62a8-4fba-bc7c-1ca2251ef7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d68426-45e1-4049-8636-522db38cf871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524847d4-40b3-46e8-88e7-ffee904c5a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7225be3d-2977-4fbb-8d8b-455ce39f2978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8dde70-5ef3-44eb-bf54-5481ee3a4343",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2c4cd7-410a-4865-84e3-70e6bf7bd0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cacd2d-ee34-4d7e-833a-ffd8827f8393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8409135d-308b-4755-9419-af43b74528bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4127d248-3127-4d55-9ee7-006bc3cf4df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415cae13-6831-4ed3-a103-c34351bad143",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7323de-c253-4b86-ac09-4472977d40f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516234bc-41ea-4c71-9be8-52cc2db73493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9632df29-4218-4523-a6b6-df7a2a3be8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9230f2ca-615c-42e4-9771-fa3c57b8902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78bb049-9944-429f-9064-a9ca1d5a6ae3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ced26b-04dc-41ee-8a79-ce02f384d9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9500a64-c3c9-4c95-af07-37fd3a2d8814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c547a913-8c94-4205-b205-b5d77aadec63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1190cf-6b65-40a4-b663-08dbe604adf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbbfa4f-7903-49b7-b287-8b9c11211b45",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc5ec06-ab4d-49b7-98e4-30c2d09960be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3efe9063-c3b7-4580-8af8-d50f5f741f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc0631e-f40c-427c-a99b-675e68b05f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1669e35e-b55f-4540-b2c4-99c24cbff073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4202b2d-339c-4fe2-815c-47cf88ff256b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aa890c-a768-48ea-aedb-051bde684574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe34afc-16d1-4bf0-9549-0b8e48771e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d978669-909d-4061-b838-67cd0a3c2a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4548d975-ef29-40a8-8bce-2b213227cf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db027e43-0bbf-43c2-9607-a25da7a2107e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058bc6c1-80fd-4cc6-bb96-280b3dea5e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bc4e2b-2c93-4112-998f-dd4c77cfe89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddec9e0-b4c3-45d9-8366-336c7253078f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e9d639-5eca-4c04-80eb-aee58fac0e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45836bf-1f8e-4488-9e49-d9f2596dbb19",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcdb703-fd0d-469c-b984-74c3235bf926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e5a7929-e8e3-4e30-8708-090ca7d5e36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a803219-7d45-4197-9810-c645484e999e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911b1762-1efd-4f1c-9a64-fd51c6aa3b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a0f0dc-d142-48d5-b1af-3d72c29dc323",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f2b468-fdec-457b-989c-b511708d9b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6809f8a-5197-4839-b7a4-c9294a154a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d16fe93-3065-42e0-93a4-30fdcd8abcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3da1106-97c8-4b9a-ba1d-b1e3a98dc36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd31e690-3723-4155-9bee-b23df686f24d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4276d679-34af-4839-8b28-b154bfed8662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9022e8f7-647b-47af-9ebc-22c360ecc719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2eb1fd-5810-47d4-a3b8-ae0915391c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943d1eef-d5a1-4b79-b818-dc5995f2e00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bf87bd-b211-4aa5-a36e-f36c1d60e295",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6a4d7e-aee5-449f-b333-9cde26ac6477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da850240-9f6b-4e32-8629-c94320ac1f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd80e84-8f5a-4e9a-98ed-0786673a2b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9de4d4-2513-4412-bea6-8f52da78ddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd42c18-b595-4adc-ab87-65223f622517",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc139f6-5783-4f74-8dde-27484eb50dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a25c99-d1a7-4ef8-a257-1b1c7db29159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee4ee30-e758-4c96-a201-2a600f411fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0487d3-3820-4782-b3f2-87bc474438d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318801c1-9495-446c-b06c-444cb76da20d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a009e3-8d76-4289-8fac-d125e6d3c4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736bd373-062e-4b4b-9c46-4eca2ea9ddf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5c56c4-fc4e-491b-a80d-f12d3156b184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb44b7d9-64ba-4803-aa53-881dff697ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f575615-4283-47ec-a652-7ef01777ae52",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a647dca-d4ae-442b-b5a6-6b83319ccf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e0cfd7-d919-43f4-a88a-e667391d0c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f431fa4-e11d-4e6e-9647-9f78816b6dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4af623e-5c70-4045-96b5-de5c90e88ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81248d22-4841-4270-a9a7-d17ee3306999",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d0fb21-322d-44a3-8c52-f34da09978a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a842ba4-ccfe-4a72-a8b3-0c8e34cf6c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f968c8db-28e6-4444-8320-be30e43d964f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e883d2cc-6101-44ec-bd2b-02071ab4d424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1850a0f-abea-42d1-b0f2-c258696aac5f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f38f3e5-f52e-4117-94f2-1d221e75d81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351f6d95-48ae-421a-babb-6d061799d8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a417cf2-1b38-457b-8f5c-b3a1a75ca31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc76938a-9606-419b-979d-e6a5e8efd7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be73220f-7816-43da-89c5-f12debec0ff3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16df9de6-2b23-4f7c-b796-fd4d3ece6dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f555001-0b8d-4bfa-8728-fb9eac4cd6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb74a7cd-5e53-47b2-9496-e3a007e3c55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13c3c83-76e4-449b-90f8-b50fe1843b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baab59d4-2464-4fd4-b020-4990022a0ae8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22360253-3a1e-48e1-8ed7-08e7aafa9173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc356cc-7ed8-40d3-870c-50e8831cbfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b4a2e-f129-41a6-a2cb-e5c75e9feee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7319272-66bb-4351-92e4-3edacaaa03ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba90182e-4e09-4e5b-95ac-57096117db5c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2f671a-1ec1-4ce4-9b69-ecc894650503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ea1c53-562e-4aad-8c77-3be0071ac286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e14b4b7-8ed3-4098-a9d0-885b9d60ba2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32b1e07-9986-44c2-9562-6fa76cfd936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aa4479-fb34-451b-b9da-d7ecf1ad4b6d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a533923-ac94-481d-abcc-b4c702eef7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9817bfe8-0590-470c-8deb-757ebf92fd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea14b1e-4d60-4658-92ec-ba817f7c691c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d4dd18-e008-4b4a-a43f-426a7f85f03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7d14d4-0a2d-44ca-8f72-cc2243e3d82e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a3e9b1-1b07-4b2d-af96-58a969170942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4894dc5-310b-42db-92ca-ddd7512be322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f50163d-0f83-4882-8c1a-617ce1138c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff91d01e-5ac1-447f-a98b-4f5f47751b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512f656a-b348-4166-9ec1-26bb458c0823",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0de399d-c6dc-4a70-bbbe-c7010cd1cf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde15902-f80b-47e6-8a02-852a6044c89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44518b2-6572-4dbe-a206-1af31507dd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305531c2-c81e-4b56-8d47-94689bc4ec07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9ac9df-b0ad-4c07-a6d8-24176968b9f0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8ab0de-56ed-4d7e-ba26-1d3ed200fe92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8101473f-0f2f-40cc-beec-7970c2e41bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bc7a58-76b1-463d-99ee-6cb5d21d2620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd02752-539e-41c7-b135-51431c5d152a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091add48-9791-4b24-8ba8-4ac125e15eb5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60444d75-c1f9-4c75-b52c-2e44cc89e5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5bb011-98da-4a80-b491-74cf5bd9df31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a54d7-5929-4057-bbec-4b750ac37a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488b5167-96c1-491e-8809-a9bbaa2cf19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762153c7-24cb-4953-99d9-b21f2f5caedc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f85f3b-8714-436f-a43c-49da18c1348f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be17b25-1eb8-48bd-96e2-909300d824ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c31fffe-92c1-42eb-a33e-a5f742644930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f09f9b8-ad4e-4976-9e66-35e64dceea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348faa97-a142-4c46-b27c-d504c1ec06d0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdfd717-30a9-4169-ba69-40eb4a64ffaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de4873a-8bd4-4ee9-b605-2c997570c895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52291312-b543-47fd-9dd6-685c7b0beee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b2f37c-bcf6-4f00-b245-5a6788890b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2412ba24-51e8-4b65-8c19-47b4b143d4a3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93792526-e466-43da-b43d-1086100481a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121137da-7145-4264-8ce5-a4bb1a581115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f848b01-3f8b-41f8-9bf8-d96cc28a2b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2945cabb-29a1-401c-8b46-5fd342fb0720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6352507-f095-44c3-8d06-7bc011ce64cc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9809c1-4231-4a98-9db4-36722b2f73fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcd458f-7a9f-412d-87e7-28439deae4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfd1df2-18d1-49eb-a186-730ae7e2b956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fdc513-35dc-4226-bebb-98fa65c06281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bd683c-3277-4dca-964b-44b807807a77",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffea0a40-b8b1-4dc6-8244-bf89e6044d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8fa898-8859-494a-ba5e-ea9cfb3a08c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b8823-ce89-4ed4-ad14-bdfc6b87e55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da12cc81-6c38-49bf-8b8d-f4e43f9ae763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96671b8e-d24b-4a94-9b79-90e4a8ffee77",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63926a30-8018-48eb-8356-571f16b6c4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a9c07e-f5ff-450c-b302-cd4ea1be4ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff5fbff-477d-4cf5-82b7-e3e13f258a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1db27e-523d-483e-9027-c2b0811df6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf2d10-d763-4903-ad3e-059b4ec9607f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f556d3-a255-4502-8fd3-091e5706de5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ee399a-f33f-4487-b5ed-eae668b1122b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a660d8ab-d199-4ca9-9607-c2a6ca67cecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2898507c-487a-4161-9c3a-3b97fedcfd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998380cf-82ed-4af5-b444-03c8e7598f3d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd47b2-d430-4ef1-a1dd-fe36c7fcc541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9bb5ac-6c6d-4a19-916d-8dbbd4b36969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e7e849-0088-453f-8657-c0320e8e755d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1affd794-36a2-4596-808f-62ccb4b76926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc74f559-6fc6-4e37-9894-6d166fe68dcc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd22c6d6-b29e-4a97-ba72-928f4080504b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0690b32-ebc4-407a-9c68-248c14d7263b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f206b994-7646-46b9-894f-b3f130ed2d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3b5726-9474-4d80-a01e-4e5079d729de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828bcc88-88df-4230-ad20-1e2e810b1af4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8a99bb-ed2d-4327-b511-a9a3e035ad17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be34e7dc-9301-4299-bc46-c030a87a87da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24792841-9e00-4fd1-9aed-16eabfb7d74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29402522-bc42-42e8-bcdf-061e6d639bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a90a1-dcb6-4a62-9218-af54cbf49375",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b899049f-cca3-4710-924e-908d2823a583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dfb504-d798-45ad-91ee-a075d5bda832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d992f9-c2ea-45cc-8c01-72085df870d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27362c9f-35a5-40f7-b8d3-7472cdf35b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc083959-4dfc-4572-9103-5df12bca8b66",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f074d520-e250-4544-a210-6d5031e6bb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2299e2-598a-4275-8dad-4b9b6ccb5f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b6a6d7-5caf-471b-98cd-5559706b484f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73630e0-b3ce-4504-b922-54cd7c4f3b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae6e642-d8df-43ea-a3fd-c45a5630409c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2579bf58-d87b-47df-a80d-7e937d82bf4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d7ea06-c3d9-4d3a-8d60-ff6bbcf8061b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692b98cf-da29-4baa-baab-35fd27723ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c918438c-3b3e-41d5-b2d2-88f1b9f991e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a5219f-c19a-4ccf-a271-ec95babea803",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5554a9-dd6f-49b3-b619-8fcde251b1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e0aeb5-60a5-4c41-a8b3-8e98817aeba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f884e8-f636-45ba-9b1c-c56032b1107e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e02ef46-962a-4086-85a2-21d1b142b705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b43d10b-c8a3-42de-adc9-ab37afc46090",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7035fad7-8f81-40f5-95fe-7c97c9ffd5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407c63fb-2466-44cd-bf14-8bb95950e6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949155d0-4b14-4ed3-ba2a-5c175e85d656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe20398c-c072-48da-ac4c-c49cdcdbfd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10b6aee-87b9-4888-b743-864137591eac",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551de50b-c356-4e90-9808-096c99e50651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09a940f-fb72-49e5-8dab-1f16d6a43fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df24d93-a5b7-488a-8366-344ddb4b7801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b1cd8f-190f-45b0-b76d-9b0ed37c9eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73183350-b945-47d7-a79c-42275afbab00",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de4e85c-3773-4e9b-83b8-645b36c33b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f604fa35-c602-4284-be1c-6036cc79b4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6894a7c-2ca4-4d8d-951d-e533f1d9c154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9da6a55-c2f3-479a-920a-a154a85d6001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4056ec9d-020a-4637-b5dd-7a3b5c40121c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f811e219-1c6e-4a52-8f34-d84c194a3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f48fb67-ccc8-4b49-92f7-c43e5779b29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafd0ef2-c8c6-4766-b39e-67f344172f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1077bfb1-b5b8-4b4d-a09d-1d5cdecbad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f1e23b-f5bb-4ca1-b468-ea29ff2458e2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b061c43-af8c-4f02-b7f4-47b5749f6abc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a20754e6-dc72-4b18-bcea-04fbd4b94957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56595db9-a53c-4f28-a69b-a66a24e87ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106baa4e-9a29-4a57-aa1d-a1025e22c36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e3923e-e6b5-45e6-9a89-7e8ce7aefd08",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e431fa-351e-41a7-a768-b5f778ba59c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f71a88-2369-4a28-b051-94bbd477ca15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9b239e-8be9-4ec3-8a77-eacdee8728cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dac50b-56ea-415c-a22a-e44ccbf507c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a575df-dd1e-4c51-9a5f-df4c5c7809e0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219ae9ab-a070-41ed-b20e-a59fa74e5e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b7d553-1ab3-4ec7-98c5-e1fae6e5309a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2e248e-c771-4ef7-84ea-dcb8b15eb9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dd8978-bd7a-49d5-8ca4-12b44054430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428610ba-9511-4266-b45e-67e2078b2915",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad4b34e-3fab-4051-80bd-dc6c60ef19b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc8b8e9-15f2-4adb-9f71-f2a2128599e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9a5bd0-c156-4448-b4e3-4006f8859327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd7cdce-6507-468d-99c1-ea3a45ce710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d964557f-085a-4b98-8162-9e2e47ea88c1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9564a09-c3e2-4797-94fe-121d088330a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f08149c-f19f-4713-b4e7-3ae22c95ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59ea5b5-6d2b-4cf0-9d14-46abcbe86d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12154b40-aad7-467d-8c58-e205f1be2ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b8aa2e-b0bd-4287-9eb5-242626b34b63",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf34a24-fb38-4dc2-a3e0-0248c261781c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662c4923-6282-4555-ac15-c164e2749055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4a8777-2f1d-4618-85c2-603ab9887250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a8bedf-ade1-4bec-96db-ccab2c1c06ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b02186-7a45-47ae-9b06-134bc0155e86",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b5836-e6b3-4072-88a8-692199a3ebab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144ad210-aff1-4fe5-80d1-5bf89711375f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7298fd9a-636a-4607-9e49-72cc8d9d636c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7fd5bc-a7ae-4222-b381-c78f498605bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282453e9-f89d-42cc-b7fd-e7e429819916",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe2b584-90a3-4888-b14e-5c88e89bc1ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2075b59a-d981-44a1-9235-883c1133ea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60743175-4b79-42ae-94fd-4f07d7b8f348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ab7ffb-0d3b-4740-9efa-f44e604e30cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69963415-d781-4b10-8a12-cd66276a2920",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac0a1b9-d338-4a8e-bfa2-a9acce521d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061924fd-79d5-4466-923d-d9ff7bf36f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9f5adc-8a50-4285-94ee-14cfbe6b47e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92567a29-7c24-4399-90ad-f68e93752e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0729137c-b9dd-4abc-a02f-4228ed87ac09",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41779c9-6105-40a7-8814-f8d77977b004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b823301-effc-45b0-9a3b-f4a356e50219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7399264-58c2-4d38-bbce-55f6782e5e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5fa8bd-fa0d-40c6-a32c-1e44a5746cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6112e878-f929-4add-b323-9cae0c9dd259",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f8a09a-6ea4-42ba-a5ab-1c621bd015ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d84e1cf-dd9b-4fca-be66-71afa0fb669c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8bc519-1ce6-415a-a532-ed549e642578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0f3c1c-2094-44a3-b716-8f18bb481165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071eab33-9ff8-4347-a4bf-073b0c8f78a9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92492d-ae18-45da-9773-49ab521742a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8532df87-942e-441c-b679-ffc63f80dec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566a3edb-74d6-496c-9c39-227837fc7a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82f00a9-38bb-4ac8-9cd9-ce5aca81e0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb27ef2-74b8-45d7-aced-be75779aaa49",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dfdfc7-496f-4829-bef4-e02194ec5e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a452dee1-fed0-451e-bad6-45d01e91ce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b6db67-5d7d-4a68-9ab3-7caf00da746c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc8aecd-cc7c-44c7-ab4e-45a67f2f5621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824d62ac-39b3-44ce-b7a1-fe0a4a91731a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2c60e2-1ff4-44cb-a227-12189c6b1623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00926b5-6661-4f5c-b717-84a67dcca917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc80f26-99e5-426a-bc45-6ebc62790b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71610f97-e7d9-4b9e-a85f-056c0f15f3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca13b066-fb05-425b-9253-86d3c6fd58ea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdce92c-c9f2-4586-8d9f-371d3937c226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be886fff-f82c-497d-ac7a-887b6c9fc316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796a9f7e-9fc8-4048-8c40-0be434e1f274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3dd068-2eb7-4042-8daf-40e11dda7407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3296a46a-a48b-4348-813a-75b874f140b3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fafdb4-32de-4026-aee0-d1c239d46ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf96df3-8172-46e6-a8cb-6da1da2f59d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b84693-f97b-49c0-b4f3-d115f4ded027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a869b2-f554-4cab-a9e2-e6ac2aa361e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd7dd45-657a-44b2-a6df-94de1b98c88d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc95b18-6368-4c4a-acb0-b9b835eb67aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63192a66-6e71-43c1-9c7f-9f08808bd639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4babc463-8824-46fd-a26c-b0520d2fbe01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458bdc88-c573-4da8-b730-fe0f49ac3d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bc75f9-a1b8-4299-a86f-86ce4c2218f9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00972655-8534-4484-b49d-d461e0bacc46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ac35fd-e3a8-489b-a15a-b022cdb48713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f8977e-af10-4e09-b4e3-13af3c90fd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54485dc9-b8f3-43cd-8082-afe83dc3c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73e77cd-af0f-4d88-8a29-5953a681b952",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2543a5-fed5-48a8-a38b-5f7756f6cda4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7a7cfd-b42b-47d0-bcef-b2118c22f666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc8ef50-d51f-4fc1-98a2-135b599425d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebf1169-d95e-4eca-88f7-dc19fc0aeadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d187fc1e-f9b8-4f43-aaa6-8b6ea2044e4c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f46b5e8-f30c-4da0-bfc8-967eaeb1ae43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52aa999c-8abd-44b7-88e6-14056f776854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e83d9d3-a93f-429a-bb4f-48d564bc75ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7f51fa-f31f-4604-9245-98390a24bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7aa088-51e2-4e11-930b-3b97ed536f4d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c88578c-c128-40fc-91cf-ac0c44034b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2117f20b-207d-42e5-880b-8feb43755ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62089c6f-fff1-4cbb-8ca5-59cb96e96328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4593ced-b33f-4b9c-ad54-a37388a3440a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6d3920-e1aa-4d2e-83d1-a3d9ca30c256",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbde78d7-8f1c-401a-abc2-aeadeac54042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc53e12f-ebb2-4935-875b-53c3435fe243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ac6f89-78b8-453e-a424-6c1052fa4aed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f073cfe2-efd7-4011-ba7f-1ece5d42ae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6b94c1-946e-4e82-a363-6af13e2f85ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f410c8-9d57-413c-b29d-a52efc61967b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3a8846-1767-4079-be5c-0d78668c066b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6b87bf-47be-40e0-917d-dcf0906d2313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d23b4d-1604-41b2-b44c-30a3a3fd475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02ab545-88f8-4a9a-9ac4-eb0bba6f3388",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a2aed5-4afd-4305-bcfe-fc9cba4d4f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6933985-6efa-428f-bfde-a4862850851d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c00757-540a-47d7-ae1d-bc00b21a54db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7758c1c-e52b-4681-a14a-4c3e26b839dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45477e1a-7a61-4001-aac0-cad50287d30c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913ad970-0259-4832-a65c-12d59690d34d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f36c36-8929-4458-8ab6-a6afe86fce17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dbfcda-e588-4f65-a474-c6e9100b7079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538ac45c-e5eb-4f04-ac97-e9f3541d7799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcee14b6-fbae-448e-a068-47f969d975af",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efa0ede-a1c1-4a87-911c-df09c7a33998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007c5aff-7701-4c35-a532-d293d723a193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c51e69-0829-49ef-8f85-34ec9d927640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215aae31-52e1-4870-b2c0-5fce6d68983a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a585d9-2415-4984-9159-3df59ca0f34c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54307071-275b-460d-b081-14ef9486d560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96abcc07-1503-46be-8a66-f14512441c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206f1308-f038-442f-b578-8ac1184ae976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4117bea-4877-48ea-92b6-35aac9745d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9c0e16-946b-45f5-a306-37718563d03b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483e3d69-6af0-4aa0-aad6-55a3441b2886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bda799-ae59-4e4f-8761-c116c4db8295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ece548f-adac-4f71-b660-f47f0a0cf9d7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e3761e-f01f-4f7b-b4b9-d67ad25032ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43495ee1-5493-452e-b2c2-42e9a119f20d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105a592f-971b-4077-89cc-944234c8db6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998d36e2-ae05-407c-aa8c-5d92eb13a6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ffeee0-b3b6-4acb-a85c-684accba87e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be045a6-87b2-4047-af71-03e1dfae6e87"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc220beb-8ce9-44d7-8ae4-3efb1d47f063",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d1be6da-acb4-41f0-8c10-aa82de1b37ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "088aa9b9-adf9-40dc-8571-1f1abbeb6e5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a417295e-a9b9-4b65-a7ad-d4e999c89f1a"
                    }
                  }
                ]
              },
              {
                "id": "b914ace1-1e26-4635-b6c9-58f5139a1b98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3270ef30-fd3c-4559-a61c-8063a987e609",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7340e7cb-3d17-4fed-9d99-5a6c52389eb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d733453-d3fc-4759-a963-9af43109bf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89859d6e-939d-415f-92ea-97f01abd0d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ee8e0ad-ee6c-4063-a6de-1c4fa994aec5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb09d4b4-9876-4676-9791-a66b499f4d74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600107d8-a597-4fa0-b172-92e476cd1537"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af92688e-b7ff-4dbe-b086-b28760fc22e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfd49c20-a378-42b2-b4a3-0a2bad73cebc"
                    }
                  }
                ]
              },
              {
                "id": "6363da58-b25a-41ff-b6b2-7c867cf695ad",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8e800aad-54db-4ec1-b83d-95e9867f2005",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c88d4-c7be-43c2-9bcd-e88de4ed02c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b04c7a9f-f4c4-433e-8839-050f0c544768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dffa97-8ece-4b25-b2a6-f016dfd5c016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de12df81-f222-46b5-9719-21982064244c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd5a547f-769b-4332-a39c-698c33b10282",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c7968ed-0d96-40dd-80b7-771977f93354",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4995ce4-5c8a-4a9a-bb7c-a59b8d3d29bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d8bad23d-9795-48f3-8c53-2fdcde24a8b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "281143af-1bd3-4726-b00a-169444c7b1a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95c0a300-110f-49a9-b95f-2b77644445eb"
                    }
                  }
                ]
              },
              {
                "id": "123a1fcc-9a2a-4a0e-8ba3-31c24a63d28c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1009b02d-a5ba-43ab-8506-e61c895e1b13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "940d7b45-10b8-46c3-b77b-3f4a61bdf0d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f22db7aa-028a-4668-a0d9-4172a29678a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09d9608e-2e0c-4518-8007-2d4f53d608c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9499d22a-e818-48d3-bfe2-d85e97652cfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "764f77e2-3542-4720-9712-1703a7b0aed2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf91f18-9fd8-4ab3-b192-389485a1245e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f37d04ab-7ac0-4f8b-b9ea-0bd123377960"
            }
          }
        ]
      },
      {
        "id": "0b286dea-9c4e-439c-84a2-0245791a06b9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "56d88a1a-0034-4180-b2c8-d92a2875ec6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c41fef2-c129-4e23-9afb-fb7d05537b11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55a8a087-5ec3-457e-a344-0bf09fd397b9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2b30cf-f076-4637-9e58-921bcd9092bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c1037ee-c68f-442f-a9cb-c28a9cb119b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5ca4a6-6104-4579-bdc2-5cfc2db0be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d808ab0-a966-47eb-9763-fcaef4268725"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a69f6990-74c9-48ab-973e-fc922e1167ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a2f51a7-4333-4b60-9881-d561cce72e6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab1bf770-ad02-46e4-a4b9-cddfcff6008b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a981848c-2f11-47f0-9dce-ae3bcacb52e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb305e1e-6b41-4253-84b2-a24c454a1bac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f296a67-9c51-4980-883b-f3ea3f5d3191"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6a81a2a-e84c-4386-84b2-dee742df2645",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8d7d677-2a34-4005-8adb-05cc0ee2eefd"
            }
          }
        ]
      },
      {
        "id": "637ee357-74a0-4b0d-a970-6d62eaeb47ac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de87e6cc-9b0d-4889-b299-2e3cf40a38ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8467b67-1472-4398-a030-d4a7af947b9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "907beab6-c1d7-46c5-82a5-3bb3cd0935b8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2b61fe-de25-4f44-aaf7-0645a6d31404",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ba002c-2fec-478d-95e4-0679057b498d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f238145d-90bc-47c3-85aa-e8be02572a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21f3b639-7b8d-4e41-96ae-9fd7a18c63a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de31cf99-82e9-4a46-923d-1e0659dc3caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9977c496-d2c3-4390-8427-20b29bf0a456"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c095117b-5164-401b-9853-50521f499245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab5dd354-9c28-4f40-92d1-4573841819eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f522392f-5748-4aee-82ac-bd6fbf70684b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffdffe49-19c0-4494-a15a-81d4a4aa3344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0198b4dd-787f-4d74-9e0a-59ef2bd93b1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49f03918-453d-4ba6-9658-f9fd2248b79e"
            }
          }
        ]
      },
      {
        "id": "5e3e2f61-0662-4d40-81d2-ca00189611a1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "931591c7-8e5b-4cc3-b2ff-a8ea4f0734ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c71af70-1851-4ac3-a896-3a1a08696955",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2793d3b6-e7a9-4cbe-96f5-11a311e68d9f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29baa04-4b6c-48ec-9866-c6ede4b70d4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83250545-3b97-4af1-847c-42f6ac2b7632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0488a7a2-a5d7-4871-a305-e50e60b326c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3c626a1-2b1b-436b-96c0-d5c15e210136"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b489788c-3031-45df-9f88-a4484350ed6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfa8a1ad-3a3a-4d62-b542-2af4a1f71d74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b23d7b2f-9854-49bf-9b16-f6dccebfaf3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b13f4955-123a-4e7b-8ea6-8a12daab7e28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44682719-b4e0-4ae4-91b0-03c9e9c1472f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1030aeee-03ca-4f5c-857d-d9e648f9e22e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "307960b0-baae-4900-90a1-c1c8e82e187f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6db35c7b-847e-4400-b777-1f77cc3437cb"
            }
          }
        ]
      },
      {
        "id": "99c30aa2-a184-4af5-8fbc-ff0ab220da7d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5b5f9b7-0dff-4163-8455-e1a232d9021b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e06a97e0-b4a4-4814-bcd9-9676c4366274",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bf2d35e9-7ed1-432a-9805-09c66adbe3c4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c2f3d18-72a4-45ad-bf2e-bbff6573c308",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74473ac4-e2d7-4038-9a03-4ca13e4b20c4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.440140845070445,
      "responseMin": 18,
      "responseMax": 362,
      "responseSd": 27.70150135723604,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696466012051,
      "completed": 1696466037950
    },
    "executions": [
      {
        "id": "a33253d6-d308-47df-9564-348f6787d743",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bf46fc9c-7c3d-45b7-bfba-66e8d63509e8",
          "httpRequestId": "b936928a-f8f0-4422-81e0-4869b0a4fe1f"
        },
        "item": {
          "id": "a33253d6-d308-47df-9564-348f6787d743",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "300a93e6-d571-444a-822d-c37071bdaae6",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 0
        }
      },
      {
        "id": "ad961091-5a8e-4946-ba5a-ec75c7ffe11e",
        "cursor": {
          "ref": "468c9e70-2141-40d0-9d4f-e47d33468774",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fa3c3c00-e4b4-4e6b-9c2a-e2aa3b5dffa5"
        },
        "item": {
          "id": "ad961091-5a8e-4946-ba5a-ec75c7ffe11e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c74ce87e-779f-4919-8072-a7f354b742ee",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "6fc4d9aa-6502-4303-837f-ab547d4b33a3",
        "cursor": {
          "ref": "faa5fc22-d24e-42aa-898f-a060c638ab43",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b5f33991-4591-484a-b184-ae8a77f6b8ec"
        },
        "item": {
          "id": "6fc4d9aa-6502-4303-837f-ab547d4b33a3",
          "name": "did_json"
        },
        "response": {
          "id": "ca1aea7f-8862-4a70-8199-1a8a9725fb20",
          "status": "OK",
          "code": 200,
          "responseTime": 258,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bce89a-8337-44d5-9f1f-4394f031c3e4",
        "cursor": {
          "ref": "2651689c-1878-4b5c-a0ea-e0309903cc75",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10f27766-8e1d-4257-a462-a873ae2763b2"
        },
        "item": {
          "id": "a0bce89a-8337-44d5-9f1f-4394f031c3e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "b34c1934-1bf8-465e-aa2f-94d4c5e0224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bce89a-8337-44d5-9f1f-4394f031c3e4",
        "cursor": {
          "ref": "2651689c-1878-4b5c-a0ea-e0309903cc75",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10f27766-8e1d-4257-a462-a873ae2763b2"
        },
        "item": {
          "id": "a0bce89a-8337-44d5-9f1f-4394f031c3e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "b34c1934-1bf8-465e-aa2f-94d4c5e0224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22167c73-cb61-43ac-aad4-d958df7ef3af",
        "cursor": {
          "ref": "0ba5745f-8b91-4814-95ed-169bc9e8d597",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "09749f34-e2d0-4b1f-a8a7-e2d11e063aa6"
        },
        "item": {
          "id": "22167c73-cb61-43ac-aad4-d958df7ef3af",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2d3abc5-910b-4a0d-abb7-4d524abb2ca2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb49b8b-a396-42b6-8121-a8908a5b3d28",
        "cursor": {
          "ref": "eebc59d2-76ff-478a-b3c7-c92232fb0b48",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c8d18073-a250-4a9e-82b3-7e5855fa29c0"
        },
        "item": {
          "id": "bfb49b8b-a396-42b6-8121-a8908a5b3d28",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6e2bbcfc-bf47-4fb9-9bd5-ac69b2993d08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9691b708-0720-484a-95ae-153fc97c4925",
        "cursor": {
          "ref": "316da468-578b-4a17-9103-0c0a5560ce24",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88773ab5-69a8-4c7f-aaa6-62312b95f8e3"
        },
        "item": {
          "id": "9691b708-0720-484a-95ae-153fc97c4925",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8a63c52e-3df4-4f4d-bac8-20b5da576cdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8e8df4-160b-451f-af5a-67c5938fc056",
        "cursor": {
          "ref": "adc5575b-3a48-401f-b1f1-0e8fedb89933",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c714d33a-d35b-43af-b008-0a131d8191e7"
        },
        "item": {
          "id": "bc8e8df4-160b-451f-af5a-67c5938fc056",
          "name": "identifiers"
        },
        "response": {
          "id": "e0522b7c-ae05-4cdd-8e9e-0d786be66c2f",
          "status": "OK",
          "code": 200,
          "responseTime": 191,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba6ab92-1aab-4d3f-af42-70643125c4d7",
        "cursor": {
          "ref": "600141f9-23f3-4780-94e9-99986ec0fba7",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b1edea4e-6d8f-4320-9620-eedc94c3628a"
        },
        "item": {
          "id": "4ba6ab92-1aab-4d3f-af42-70643125c4d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5fbd92fe-533f-4476-8312-6b0909889d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cd6d16-c608-4445-858d-8f26ce77e91c",
        "cursor": {
          "ref": "38712c3f-2855-4bbc-93d3-62eee182046b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8aae6437-8244-4682-ae99-fb79113a9b20"
        },
        "item": {
          "id": "d1cd6d16-c608-4445-858d-8f26ce77e91c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88483e90-3058-480b-8b4f-ba130b81daf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a44614-f4a5-4b5e-957b-7fb7f6b0fcd8",
        "cursor": {
          "ref": "3a6f034f-ac92-4956-acea-b3d871d35e6e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d23fce48-296a-46fa-af4c-29c70f6a9866"
        },
        "item": {
          "id": "58a44614-f4a5-4b5e-957b-7fb7f6b0fcd8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e04e6902-4eb1-46ad-8007-26d5c3d44bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa85ff5-a555-4bca-bcba-d7ccd0db2fc4",
        "cursor": {
          "ref": "84f5ce95-3954-4382-86f5-cbaf1836af4b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0ad291d4-7f5e-47bb-b7d1-442eb05c32a4"
        },
        "item": {
          "id": "efa85ff5-a555-4bca-bcba-d7ccd0db2fc4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d5870993-4cb8-4a65-81bb-431b38dff9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838f5036-3354-40e8-b52d-d8d0b8b15331",
        "cursor": {
          "ref": "bebcbcac-6693-4728-9cd7-9b1370ef54e5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3d2d4c25-a5b8-4ef6-a0b6-61e3ec6cd286"
        },
        "item": {
          "id": "838f5036-3354-40e8-b52d-d8d0b8b15331",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0878e506-e559-4392-922d-4661fe765801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8ef2b9-8808-4504-993e-ca34573a7f41",
        "cursor": {
          "ref": "cc6cddf7-6261-4acc-81e9-b9da251937e6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a6202c6-681a-4164-b079-9a4c6462b023"
        },
        "item": {
          "id": "1a8ef2b9-8808-4504-993e-ca34573a7f41",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "697a1d5b-cc51-41c5-aa19-ebb7e91740f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e70ca8-0be3-43ed-af96-4426898650f5",
        "cursor": {
          "ref": "49ff6265-a5ac-46a1-806e-1c0161eafaee",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e6d4ba9b-c91a-41c0-90a7-0889b36e0bd6"
        },
        "item": {
          "id": "07e70ca8-0be3-43ed-af96-4426898650f5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4945a33b-39fc-4036-b8bc-8de68e499e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4941a7a-c16e-47b3-bc76-c42642df685a",
        "cursor": {
          "ref": "26a0a5a9-d1f5-4a6f-93a7-5860bd634e61",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5572b208-96b4-4834-9c14-da6fbe060deb"
        },
        "item": {
          "id": "f4941a7a-c16e-47b3-bc76-c42642df685a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0ec34ae8-58d9-41af-a84a-ece70a1ccdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4eccef-c25d-4ad5-8731-457ef0cd1114",
        "cursor": {
          "ref": "c6e4c7f0-848e-4f57-9a59-ef691653d943",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6a845807-93a9-472c-a9e6-a15283cd46a4"
        },
        "item": {
          "id": "ce4eccef-c25d-4ad5-8731-457ef0cd1114",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "89eae6a2-07d4-4e9a-a8b4-e6ad5c2b0ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa07ac3-5bc1-4b5b-8e55-e1c4dbab4cd5",
        "cursor": {
          "ref": "b823cc31-4c7e-4c3a-b0ac-b440c835fc4c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "769de592-7c40-4673-88d8-313ce7eaacad"
        },
        "item": {
          "id": "8fa07ac3-5bc1-4b5b-8e55-e1c4dbab4cd5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e89bd8d2-0cdc-4862-8490-8d7b72387591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb343fe-536a-4bf3-bf4b-1946b4f6195c",
        "cursor": {
          "ref": "6852f835-c170-403a-a579-fa7ddc9bc26a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b3415fb0-4e8d-4432-b1f0-015890abffef"
        },
        "item": {
          "id": "9cb343fe-536a-4bf3-bf4b-1946b4f6195c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f71ffc0-fb36-4d71-a9bb-b26444dab49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed6e946-4f10-40cc-98e8-093c450a6523",
        "cursor": {
          "ref": "ef50dbd6-63fb-49dd-b2ec-e6f0ea7eba13",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a247e148-1176-4841-8b8c-e1ab41680dbe"
        },
        "item": {
          "id": "3ed6e946-4f10-40cc-98e8-093c450a6523",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "af1251b1-357a-4134-8f05-ab4236d8e3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c7070-b866-41a8-9582-daae4860f89c",
        "cursor": {
          "ref": "9e863371-a699-4647-b80e-c3900ba6e9d2",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "58a3b285-d85c-48b3-8032-fe086e42277a"
        },
        "item": {
          "id": "9c7c7070-b866-41a8-9582-daae4860f89c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "59c45649-0bb8-4f0e-b458-49d8fc2b6116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9644c40-9488-4509-8c1e-98074016a688",
        "cursor": {
          "ref": "1a68ecbc-5356-4e45-88ee-1051ec408506",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8c2ad593-0fcf-48a7-ab15-ab68d15308e9"
        },
        "item": {
          "id": "d9644c40-9488-4509-8c1e-98074016a688",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0bc0a0b3-9454-4036-9dab-2fa0f7951c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fec88e-e732-466e-ab05-50c64c9f2595",
        "cursor": {
          "ref": "7cd1dde8-8480-4840-ad81-588cd86d842d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f7a56e22-711f-48cc-b11b-ecd3e5e2fa9f"
        },
        "item": {
          "id": "e5fec88e-e732-466e-ab05-50c64c9f2595",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "17cdadf7-7541-41fb-a855-235560d1c9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754463c0-2f6d-4a12-bab6-1d82d06f2468",
        "cursor": {
          "ref": "86acb2dd-2bbf-4ce1-b711-86c2d8917d70",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5af964d4-863b-4202-8d64-b48ec014ff3b"
        },
        "item": {
          "id": "754463c0-2f6d-4a12-bab6-1d82d06f2468",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c678090a-b9b1-4bbf-8db5-93531859d160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492ed3bc-0313-41ca-95ef-8e3ce6ab169b",
        "cursor": {
          "ref": "19df0508-8f46-4d9e-8edd-57a5408f1b95",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "14c0625d-2ab2-4f5a-af49-5d3a21bb1253"
        },
        "item": {
          "id": "492ed3bc-0313-41ca-95ef-8e3ce6ab169b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "24a9dd78-94da-4160-9f5d-a3d8185227b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc014da-d788-4cb5-ab19-ccf1f5b43ecb",
        "cursor": {
          "ref": "50c5cc06-d8a3-4901-b333-5d0f92881ea3",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c714d09e-8000-4cff-8ff3-e37c0817cd43"
        },
        "item": {
          "id": "8fc014da-d788-4cb5-ab19-ccf1f5b43ecb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "304c836f-2ff8-4949-b11e-7e08c1c2720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41d2634-ef7b-463a-930e-dc69346a0f1d",
        "cursor": {
          "ref": "1c9e1350-5e12-4a5d-9aa4-657ee05d37d2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c04d2578-74ee-48ed-adf1-184c90f3898a"
        },
        "item": {
          "id": "f41d2634-ef7b-463a-930e-dc69346a0f1d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8e69a99d-2863-4cc1-abb0-2982a43c649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c887d283-7501-4307-bd58-6ac81ee49b2a",
        "cursor": {
          "ref": "122c5af2-dc13-483c-8712-b8c77d8a33a4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4612b349-7dc1-4673-821c-cce2a86dc764"
        },
        "item": {
          "id": "c887d283-7501-4307-bd58-6ac81ee49b2a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2d293ba6-643c-4a89-8c56-0c9e1f430858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa3744d-b86b-44fd-9494-ab311306cbfa",
        "cursor": {
          "ref": "12d4497c-4a89-47da-9856-a3a99e31b4a1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c6136ed6-5996-451d-9740-11d769765d55"
        },
        "item": {
          "id": "8aa3744d-b86b-44fd-9494-ab311306cbfa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "73ceadac-3394-42d5-810d-eb3b390b3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c9785-d530-40a1-be05-11f1ede5ca2a",
        "cursor": {
          "ref": "fd2ea841-bafe-456e-9a88-49c3f1bfd560",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "131bab8c-d5e0-4197-93f3-baa6759842e3"
        },
        "item": {
          "id": "162c9785-d530-40a1-be05-11f1ede5ca2a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "66d89b54-f210-4373-ad33-030db260cbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255d0d12-28ed-474f-9b41-6b16e7bb7c3f",
        "cursor": {
          "ref": "e5b5343a-a77d-463a-b1ad-f17205810836",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bc587e2d-288c-4321-a133-79d06c1ff010"
        },
        "item": {
          "id": "255d0d12-28ed-474f-9b41-6b16e7bb7c3f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "376c2317-b5ed-4347-b9d4-877a57aebfd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77a98b2-95b4-40c4-9a03-f42958f96324",
        "cursor": {
          "ref": "c524ecc7-a6c3-42e7-a55f-40af03837427",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3fe4f707-6a5b-470b-9986-56c876539b55"
        },
        "item": {
          "id": "f77a98b2-95b4-40c4-9a03-f42958f96324",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c8c0407a-00c6-4a42-a0a7-5376e4df2282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5abfa5-a44f-4d7b-aebf-b2d5b132551e",
        "cursor": {
          "ref": "4d29d006-61c4-453e-94ff-f62855de860d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43860d13-41ed-44c0-9110-af020d8e2fb7"
        },
        "item": {
          "id": "0c5abfa5-a44f-4d7b-aebf-b2d5b132551e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d515da28-7b1d-4ce9-b280-7b72ea352138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8f43fd-1e2d-4734-93db-2a8a86e8013b",
        "cursor": {
          "ref": "0a65492a-2aee-4b3b-b909-5327efdcc98b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8884b8a5-cc0f-4969-a9cb-803383a1d1e7"
        },
        "item": {
          "id": "7f8f43fd-1e2d-4734-93db-2a8a86e8013b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "baf1084b-fee5-4606-a9b1-b391a05d126b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e59b598-d34c-40ef-889c-8b0e9e730d0a",
        "cursor": {
          "ref": "9d6cb064-b0db-494d-a158-31f97d2d98a2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "81f7fad0-0e2c-41b9-ad17-154c91b7adad"
        },
        "item": {
          "id": "2e59b598-d34c-40ef-889c-8b0e9e730d0a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6ced1fb9-696f-4732-83dd-cf944d2f9485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee0a8ff-dcf2-4e6c-9a5c-0b003e879ba7",
        "cursor": {
          "ref": "37db3a61-c0f5-424f-b2c1-a97df2d50a19",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9968b00e-d067-4d01-8cd7-5290039717a6"
        },
        "item": {
          "id": "4ee0a8ff-dcf2-4e6c-9a5c-0b003e879ba7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7c146adf-9d24-4817-be98-1653630f460c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a00eae-0268-4753-93be-afd09ca77291",
        "cursor": {
          "ref": "931e8b8b-e966-4c46-91da-005285dc7925",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "081c6df9-cc83-4aaf-8aa0-7a737cd5fe65"
        },
        "item": {
          "id": "a3a00eae-0268-4753-93be-afd09ca77291",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "95655d99-3060-4e97-81f0-0796b7c93e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d4c6c5-02b1-4bbf-93a6-443cad0146da",
        "cursor": {
          "ref": "51d27217-d12a-4d55-acc8-594d1a989a18",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "426dd0e3-03e3-41f4-a99a-d077a3c5b338"
        },
        "item": {
          "id": "82d4c6c5-02b1-4bbf-93a6-443cad0146da",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3fd1a8ba-12ac-4f78-9ab5-2631de5e8573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6999eb70-8570-47b6-9d96-0885509d7dee",
        "cursor": {
          "ref": "e8171997-c020-4b52-be73-d382e42aef61",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1b4e04c9-9eb1-43fb-8d31-c5c0498ab50e"
        },
        "item": {
          "id": "6999eb70-8570-47b6-9d96-0885509d7dee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe5e86d2-d21d-4f46-b36c-481041f9250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dc0efe-4dda-44ac-837c-b1cc3d6a4c8c",
        "cursor": {
          "ref": "a14bcc75-fb5a-429a-af3d-7f1ac202854d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ba1c6e79-7505-4bb7-afd1-ec2014af9bde"
        },
        "item": {
          "id": "d5dc0efe-4dda-44ac-837c-b1cc3d6a4c8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "48d1d83a-20b2-4140-a440-6393086610fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7606c22-da6f-4b79-a335-4a23e03eff51",
        "cursor": {
          "ref": "29de07ed-4d9b-4a68-8724-57442cf14589",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "24b95a38-893f-4bdf-a39e-4483d91355bd"
        },
        "item": {
          "id": "a7606c22-da6f-4b79-a335-4a23e03eff51",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5a4d1165-d034-4dae-9a38-740c4e0905d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77657e63-fd82-4ad9-b91d-888ec3bd051c",
        "cursor": {
          "ref": "a46b6808-a23e-48df-8a17-5c89215392fd",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33c89fe7-c6c0-4039-a395-d020758f82e0"
        },
        "item": {
          "id": "77657e63-fd82-4ad9-b91d-888ec3bd051c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2d2900d5-b707-43bc-80a0-d011a6ff6c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be11c8c-867d-473f-93ba-cb3b1548c0c0",
        "cursor": {
          "ref": "fa9200cb-9696-4299-9dac-5c11f76f07a3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4a879bcd-1fbe-4bbf-948a-ceed07e8c088"
        },
        "item": {
          "id": "0be11c8c-867d-473f-93ba-cb3b1548c0c0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2a8cf1ba-0a5e-4c7c-ac4c-eae4520caa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd880498-dcd1-4946-a164-38836c3ee2b7",
        "cursor": {
          "ref": "7d9b0077-cceb-4b99-920d-0bb67a31fb4c",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b6151f6-2d47-4440-85e8-ae1d95f87f28"
        },
        "item": {
          "id": "cd880498-dcd1-4946-a164-38836c3ee2b7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5f5fab25-d2ec-4bb3-9735-ca008c26653d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dfc452-909b-43cd-ad64-d8c6da62e694",
        "cursor": {
          "ref": "9f13b73b-b964-4ef4-bb7b-95ffab98513b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c5968529-0db1-41a4-82e5-fc62daf03b10"
        },
        "item": {
          "id": "46dfc452-909b-43cd-ad64-d8c6da62e694",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8452ddbf-7cca-4da8-a2b0-bb56a8552aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0c99c5-d626-46f9-a1b2-d74e1f9c30ba",
        "cursor": {
          "ref": "23098ac1-fa2d-4f8c-90be-1e3be734ebc3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d9accb99-ed34-48a3-821e-5d1497c3c961"
        },
        "item": {
          "id": "0c0c99c5-d626-46f9-a1b2-d74e1f9c30ba",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "39d39ce8-7c82-4975-96f6-9cbef11b6d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ac7d7c-f517-4050-a148-6654debf948b",
        "cursor": {
          "ref": "9afc9ab8-ce60-4fb2-9e93-c0fa8b3d5867",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6319e2d3-3268-42d0-8116-72a94119ea10"
        },
        "item": {
          "id": "77ac7d7c-f517-4050-a148-6654debf948b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "809b18d1-3eb7-4298-9b6c-76e967798c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce3128c-a185-4834-a0e2-d75136c2a203",
        "cursor": {
          "ref": "c76a14d1-c06b-4d24-abf4-92efb35f23df",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "39bb3412-b993-4e06-88a7-ffea1497202e"
        },
        "item": {
          "id": "fce3128c-a185-4834-a0e2-d75136c2a203",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "776f9aca-005c-49ec-872d-03030776469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bd2671-a3c8-4394-a5c0-0fb80f103529",
        "cursor": {
          "ref": "2996e84f-71f4-47f1-b9ce-8a0bae03e7e3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ed4305c8-84bf-4e3c-9265-d1958d64be66"
        },
        "item": {
          "id": "a6bd2671-a3c8-4394-a5c0-0fb80f103529",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "208c762b-fad3-4b83-ad2a-6e2d29e295ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62bc285-01bc-4174-89b3-5df17b8a0642",
        "cursor": {
          "ref": "a809214e-fed2-490a-8ad3-74630ddfd625",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "71f9d225-6273-4dad-acdf-47aa825e8298"
        },
        "item": {
          "id": "e62bc285-01bc-4174-89b3-5df17b8a0642",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1cf4301d-a1ab-4bb8-acc6-77d1bd1abe12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c7872c-e80c-4648-bedc-76b84aabf5ae",
        "cursor": {
          "ref": "61b6a067-b994-4e78-bcc7-a5223fb59af0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3e5ab0dd-6b2b-4a6d-9222-df09ccdbcade"
        },
        "item": {
          "id": "46c7872c-e80c-4648-bedc-76b84aabf5ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "326e2eff-b65d-4042-aa84-319525e94e18",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b94aee-47f6-46db-8908-058f8a5da76a",
        "cursor": {
          "ref": "7b640e81-ff34-488d-a187-f49c0433facd",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d6aba9dc-6dec-4170-bc9d-6c634af783ac"
        },
        "item": {
          "id": "d0b94aee-47f6-46db-8908-058f8a5da76a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0bda0743-2263-4736-9c0d-9e94b0ff65a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6921642c-4287-4260-9ee6-806784a1e90e",
        "cursor": {
          "ref": "035f5dec-9e3c-41e0-8284-6daa80b0ad1d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c12cc8e6-58b9-46c2-acfb-d99a56260b04"
        },
        "item": {
          "id": "6921642c-4287-4260-9ee6-806784a1e90e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "27123363-78fb-4275-b8e0-f9ee01e20676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917e3472-82fc-4064-9fde-259918ad323c",
        "cursor": {
          "ref": "6a9e92d7-27d9-48c4-a59c-241713de2b63",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "068bb9e1-05c4-42c7-b2f6-fe7c5e970b28"
        },
        "item": {
          "id": "917e3472-82fc-4064-9fde-259918ad323c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "31f3f519-eb9b-4a62-9e37-5b5d4df596e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c119feb-8d8b-478c-8d0f-67c9d4336b86",
        "cursor": {
          "ref": "ebbd5347-68ac-449b-ad74-cd366787b9c4",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f8e4faaa-7f71-43c5-a4bf-37aab97d1261"
        },
        "item": {
          "id": "0c119feb-8d8b-478c-8d0f-67c9d4336b86",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc8c6608-7b97-4666-9f54-edacd14f1cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487715dd-e337-4528-ab83-8f579ab740d6",
        "cursor": {
          "ref": "c33d94e3-1fd8-4b17-a9df-c7a93c1c2d41",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1f9f46d8-0a3e-44c4-a755-5c8dd1333c56"
        },
        "item": {
          "id": "487715dd-e337-4528-ab83-8f579ab740d6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "10fe49fb-b96e-4d48-b109-8d149b9bf101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e10227-c456-4a6d-b634-4c0af5f11505",
        "cursor": {
          "ref": "39997ca2-5cfb-4dc6-b5a7-6a2220834124",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c2cf0190-262b-4b6b-8a51-696c25524572"
        },
        "item": {
          "id": "93e10227-c456-4a6d-b634-4c0af5f11505",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "83ea5646-9651-4a35-8c89-f842e1a28245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1e7675-18d7-4cba-9401-637e79bf607c",
        "cursor": {
          "ref": "ee0b0ba3-405f-4e13-b74f-981139dce443",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ad926d67-c792-4e66-a6f1-20a740979c7e"
        },
        "item": {
          "id": "4f1e7675-18d7-4cba-9401-637e79bf607c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e10e2a3e-ecc2-41e8-b437-3eca791b4c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbbef67-a38d-4c82-929e-da532f3e1221",
        "cursor": {
          "ref": "bc275894-3eda-466b-bb8e-53b928bd9f1b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "974adf75-5265-4cc8-ab0a-a75e4d9c7cbd"
        },
        "item": {
          "id": "5cbbef67-a38d-4c82-929e-da532f3e1221",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b5082cc1-a0b6-445a-b68a-c2024c3d110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ec4c64-e814-4894-b4a2-7141453caf44",
        "cursor": {
          "ref": "217cf3c2-5307-451a-8bca-0103fe9dfb02",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1c3777de-d723-4f24-94fa-835abfe1a9c0"
        },
        "item": {
          "id": "e8ec4c64-e814-4894-b4a2-7141453caf44",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3e2554f2-e90c-43d6-a0df-9bbadf21a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa436b7-d8d1-4486-831d-45a168436fee",
        "cursor": {
          "ref": "d42e43e9-ead5-48dd-ab5c-18b7f6a4f3dd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6cb46d91-d3f7-4b6b-8301-34eb98247025"
        },
        "item": {
          "id": "8aa436b7-d8d1-4486-831d-45a168436fee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6d56e16d-b123-4b48-8c3f-9c7b5d74901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30db6aa3-f9d0-4adc-957d-b058e39112b9",
        "cursor": {
          "ref": "e1e100e9-a6c4-4f6e-be6b-6fb0bae8fa18",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "06dea316-f512-4651-a38f-59c7b065a393"
        },
        "item": {
          "id": "30db6aa3-f9d0-4adc-957d-b058e39112b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e2f84e7e-b3d4-455e-a40b-11b867037d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1912834-8e51-4ed2-9bf2-92de8fe6bb7f",
        "cursor": {
          "ref": "11491e8e-4c39-4a99-a3b9-6eee3b8f83b8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6ca929e6-c8ed-4983-8a4a-2809270bd80c"
        },
        "item": {
          "id": "c1912834-8e51-4ed2-9bf2-92de8fe6bb7f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d4f0031-4233-4065-b985-2e09da30c2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62314894-d2e5-4dfa-bded-4432bfa220b4",
        "cursor": {
          "ref": "0044fd4d-625f-40d7-bd0e-c162d2b7c17f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3d86ab2-ce35-47c0-9026-47d6811603e8"
        },
        "item": {
          "id": "62314894-d2e5-4dfa-bded-4432bfa220b4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "88593bcb-3e1d-4710-8d7d-fad3fc782614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9a4a7c-42ca-436b-8abc-e22f8ac8cedf",
        "cursor": {
          "ref": "226982d0-29e3-4c3c-ad65-9e8c28234990",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c6c928db-2805-4047-9c09-ef836646fb76"
        },
        "item": {
          "id": "3f9a4a7c-42ca-436b-8abc-e22f8ac8cedf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5d7b061f-cbc0-47b6-b51b-e2a7feec65f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01caaa89-c464-45bb-b22c-27f563bca545",
        "cursor": {
          "ref": "93418d69-4800-4e90-b080-52a664b0131d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a7ffaa7a-832d-4148-a738-33c29c3918d5"
        },
        "item": {
          "id": "01caaa89-c464-45bb-b22c-27f563bca545",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3b0aa25e-983a-4325-b2da-0d47510a5b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554b2d8d-62bc-4b1d-98f9-9573ad450292",
        "cursor": {
          "ref": "4e3b4823-468d-4da6-8cda-1956d1b1be3f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f180ba57-7889-4972-b8fb-4fbddf13d043"
        },
        "item": {
          "id": "554b2d8d-62bc-4b1d-98f9-9573ad450292",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4f450c53-199b-4c57-bfa0-44e90d3ef47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08229d96-c700-46f9-8477-7fcc45f6c5ed",
        "cursor": {
          "ref": "c4c251ed-cca9-43da-b500-038039853fb4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "533fcc71-8efd-45b1-a4dc-344a0c237842"
        },
        "item": {
          "id": "08229d96-c700-46f9-8477-7fcc45f6c5ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "361c970c-5abb-496a-95b9-a29876ac46fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28804fa4-fe85-4a8e-a7b8-d1746091f567",
        "cursor": {
          "ref": "39526ea0-c9cb-4a82-9980-afcb580e7e4f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5cba4368-a203-436c-b8b7-9882a8d4b50a"
        },
        "item": {
          "id": "28804fa4-fe85-4a8e-a7b8-d1746091f567",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "da492efd-a069-4953-903a-e5836a8e25c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7271a73d-6c5e-4e70-8a16-1efa9ffef328",
        "cursor": {
          "ref": "c7b12158-bca0-44de-921a-87a38ba2940c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd5f3496-cc8a-485d-acf5-a1c8d6f885d2"
        },
        "item": {
          "id": "7271a73d-6c5e-4e70-8a16-1efa9ffef328",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e9f48a81-903a-4df7-9477-537bf8283a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41802359-975b-4ec0-9ed1-005b91697853",
        "cursor": {
          "ref": "4d6a0cc3-7195-435a-8c40-d91a3faa0250",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ce62b313-5589-407b-920c-75b21ac1837c"
        },
        "item": {
          "id": "41802359-975b-4ec0-9ed1-005b91697853",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9f54fae1-35a2-45c0-b9d5-84ab8876899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39766752-d11b-437f-8716-fda7e2d36f1f",
        "cursor": {
          "ref": "5ff58849-fd60-4903-adbd-b321142f7abe",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c40f1fbb-515a-4648-b5bc-a63c33aa0c5a"
        },
        "item": {
          "id": "39766752-d11b-437f-8716-fda7e2d36f1f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f6e33c53-a1f9-41b0-914a-f7c28b64d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fee58f-7ae8-444f-9147-9e56d1001275",
        "cursor": {
          "ref": "cc29c2d9-7acc-45f0-b3a9-517cc9ae1176",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "800f2524-0919-4a5d-b610-2e21f5567986"
        },
        "item": {
          "id": "e6fee58f-7ae8-444f-9147-9e56d1001275",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0bf3e5fb-04b9-4d56-b225-53a3788d4732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597211c8-cfa7-4478-a673-df81e4303bc0",
        "cursor": {
          "ref": "149a8499-a717-4183-a5ae-4a4c26471cb1",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "95e6d0de-2694-4a73-be96-f15b9089725a"
        },
        "item": {
          "id": "597211c8-cfa7-4478-a673-df81e4303bc0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "31c77de3-befd-4f30-873c-c316ed13205c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31af4110-81c4-483d-b40b-c0f37bc7c664",
        "cursor": {
          "ref": "fb8cf17b-a512-4c15-9cdc-4e3bf3146efd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "68259bb1-c22d-4ee4-aaac-b50a30fda64a"
        },
        "item": {
          "id": "31af4110-81c4-483d-b40b-c0f37bc7c664",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "12a4ba4b-5aad-4b63-a047-1df7f523be25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ed24cf-ce22-42b2-ab97-2c99e71ef4cb",
        "cursor": {
          "ref": "f3e1dbea-c208-4192-9422-600945a93c23",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1bf33cb2-6e94-4d0f-a275-dd34420863e2"
        },
        "item": {
          "id": "e9ed24cf-ce22-42b2-ab97-2c99e71ef4cb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "751eb5f0-3b5c-4037-b9e5-4f6f327a049c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6155076-a18a-4ee5-b7d3-506a2eb20397",
        "cursor": {
          "ref": "1ba87233-2f40-40cc-8f5d-295794ca6881",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "47e8d633-457e-4dde-a6df-5e36cec9358f"
        },
        "item": {
          "id": "e6155076-a18a-4ee5-b7d3-506a2eb20397",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "781e9428-06a7-4060-9039-c684713e6cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4323a934-2d0e-467d-bb2e-f0a5129884dd",
        "cursor": {
          "ref": "b6eff1dd-537f-4f09-8e25-42d2c48dbd7b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a45e70e0-3e2c-45eb-a5b6-3ed22a942f63"
        },
        "item": {
          "id": "4323a934-2d0e-467d-bb2e-f0a5129884dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c06eff60-9230-4c5f-bf71-b5f58ae1d57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b387bac4-3d6b-422d-8f6d-c69812355b22",
        "cursor": {
          "ref": "3c5de98a-9e7e-4b9b-a54b-3bb77adefd7c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5734b92c-ba51-4c88-93b2-1e5b1cd96071"
        },
        "item": {
          "id": "b387bac4-3d6b-422d-8f6d-c69812355b22",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "91e63362-fb45-4531-9275-553368f70d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13aa6b48-8acb-4b34-acef-6c39d5cbcede",
        "cursor": {
          "ref": "c89b9b8e-51d0-4a8b-90b9-287f4fd2c5c0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06e25d8e-7997-4de2-8a57-09102526583f"
        },
        "item": {
          "id": "13aa6b48-8acb-4b34-acef-6c39d5cbcede",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "05d7efa9-25df-4b30-b691-0eaab3a7be08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb69e954-2d7e-40e7-9ced-a90ecf291bf9",
        "cursor": {
          "ref": "257a163c-2701-4561-ab3c-4acd0083c975",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee1bea73-56fa-4384-bfff-ac70b61f9cb2"
        },
        "item": {
          "id": "bb69e954-2d7e-40e7-9ced-a90ecf291bf9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6bf04cff-f572-4e57-9ee2-b6e82cf13761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5665d41-2558-4e9f-90a8-ef618932e745",
        "cursor": {
          "ref": "bd2ad970-d865-4d39-9c25-bb4f7775967d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca8d7271-7854-4cc3-a801-9e98a29b2336"
        },
        "item": {
          "id": "b5665d41-2558-4e9f-90a8-ef618932e745",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b00f6f81-6413-429d-bcf3-7b8bade96600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30e5618-c3cc-486c-91de-8fac148f6887",
        "cursor": {
          "ref": "d7872f3d-d6d1-4307-b48e-5e1c8e8a2533",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "258d69f9-8098-480a-aef3-71cf8ccf002f"
        },
        "item": {
          "id": "a30e5618-c3cc-486c-91de-8fac148f6887",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "41dae69b-c81b-4662-91fb-8893e9dcd125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba71db6-ba9b-4e32-bf50-712afec19da4",
        "cursor": {
          "ref": "04a8931f-2d3f-4d9e-bf7b-165720b6b4fb",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c21f15b-08a2-4a77-8970-077bdcbc5622"
        },
        "item": {
          "id": "0ba71db6-ba9b-4e32-bf50-712afec19da4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "19057a2c-33c0-4f35-89d6-22844a5bc170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb2c79a-dd3a-4a8c-8478-e777eaa44ebf",
        "cursor": {
          "ref": "e7d559f8-c4e3-43d3-9b45-97f1a5ad612d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cc836ca5-51b2-41dc-ad27-6b5b2a3777bb"
        },
        "item": {
          "id": "3fb2c79a-dd3a-4a8c-8478-e777eaa44ebf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "90652a11-b423-42b6-af81-5d4e0205a285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2297ac67-ae80-4dc8-b47c-c14bd9012691",
        "cursor": {
          "ref": "60584e3a-d569-41ea-86b2-776e262e0f2a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "65a04372-dc95-4851-9d0f-990141b32ce4"
        },
        "item": {
          "id": "2297ac67-ae80-4dc8-b47c-c14bd9012691",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ecfc8263-5992-4b6f-bb87-59ac08bbaf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ac36c3-c851-4a4b-b749-2ab11a58e53f",
        "cursor": {
          "ref": "9f958a74-be50-4a23-a5ee-8c1380f1ceb6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d5bd5f5c-b6f5-4667-ac22-fe801b5bb73a"
        },
        "item": {
          "id": "e6ac36c3-c851-4a4b-b749-2ab11a58e53f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e095006-99fb-4d70-8e47-8cb250e4196d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4f9251-892e-4f8b-8e52-0ab698e869e5",
        "cursor": {
          "ref": "d1ef3e67-8ea4-4091-8773-34ee26f76bb8",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2503dd7a-84d0-45e4-a5c9-f09ffa628180"
        },
        "item": {
          "id": "4e4f9251-892e-4f8b-8e52-0ab698e869e5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "10aee415-83e3-4d26-97e3-3a3967ee0af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1729fe4-dec0-4ad1-90d0-0178026d006e",
        "cursor": {
          "ref": "7bf396d2-cd6a-4eb3-aba7-e34f24d3e22c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aef6ac35-3c14-4120-846f-13f572eb09bd"
        },
        "item": {
          "id": "f1729fe4-dec0-4ad1-90d0-0178026d006e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0bb490d-adf5-4a1e-b40e-b42ad42bb683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9f3762-b300-42b8-bb6d-8c831c6af0cc",
        "cursor": {
          "ref": "2f371a27-367f-47d3-81a8-21e5c37b7a98",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b69b7fd2-7ec7-4b33-819d-504d7c5f62fe"
        },
        "item": {
          "id": "dd9f3762-b300-42b8-bb6d-8c831c6af0cc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c845696f-564f-4bd2-87dd-02e36e275a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90015553-859c-4b60-b1ee-b3b81e0796c1",
        "cursor": {
          "ref": "afef4a9b-4408-480b-b67f-276d247dee1d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "55091307-9cf1-4c90-b8cc-88f222c96bfe"
        },
        "item": {
          "id": "90015553-859c-4b60-b1ee-b3b81e0796c1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b85600b3-9743-4c57-a398-ff6904bedcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60762c-2f28-4305-b962-ef2c9364b678",
        "cursor": {
          "ref": "3c3682b9-e942-4a83-b65e-98d312bb97fd",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "84325f9f-b8be-452a-9bf7-a4b7fe5decc2"
        },
        "item": {
          "id": "ea60762c-2f28-4305-b962-ef2c9364b678",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "707f4271-29e6-40e9-84e3-7a4841718e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcfabb3-c792-48a8-a472-cc7487a0c4df",
        "cursor": {
          "ref": "091f857b-5355-4bc4-a0ec-ef064963dadf",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c60cb0e8-cd5c-4cdd-8fa2-3b6083c0a881"
        },
        "item": {
          "id": "ddcfabb3-c792-48a8-a472-cc7487a0c4df",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c7d86650-c238-4c10-964c-f04ef354abec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29da1599-fbdb-4fba-b57a-6748b384f372",
        "cursor": {
          "ref": "909fcd36-930e-4eb5-9397-f805d369fcd6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cb8a7b50-bc8a-4f95-8632-4a58535af71f"
        },
        "item": {
          "id": "29da1599-fbdb-4fba-b57a-6748b384f372",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "56c7ab19-c3fb-4f18-8ab9-aef3ae78d9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460c63dc-21f8-461c-8370-4740055531f7",
        "cursor": {
          "ref": "03a29c8d-a84a-471c-a626-d5ebf8e1c379",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "389a4541-c42b-4fe9-aaf7-0154563ba082"
        },
        "item": {
          "id": "460c63dc-21f8-461c-8370-4740055531f7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e482f91-ef51-4296-9f61-89024f088cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2506fa23-f537-4d44-b95f-1ded2b730598",
        "cursor": {
          "ref": "d9163d6b-c2b6-4db1-ac20-8931671f5afc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "35b77afc-cca2-4329-959f-9188ac0f2677"
        },
        "item": {
          "id": "2506fa23-f537-4d44-b95f-1ded2b730598",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fbdb87e4-23eb-41c1-b355-3031000c90af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9124fdaf-d5cf-4360-931f-377a12b59c2a",
        "cursor": {
          "ref": "7e9bc59c-0602-49d8-8704-380dff22ad91",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "608e3677-afd6-408a-af92-4aaf443482e5"
        },
        "item": {
          "id": "9124fdaf-d5cf-4360-931f-377a12b59c2a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "840e7058-0eac-479a-a004-0f581e5ea862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ed47aa-25d0-4ad7-976b-9ab9d459a25f",
        "cursor": {
          "ref": "90a90472-0692-4730-9dc5-d03e28291f30",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "39ec4cb3-de69-4621-9743-122d749d62cc"
        },
        "item": {
          "id": "f6ed47aa-25d0-4ad7-976b-9ab9d459a25f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bcad8ddd-a7b1-4973-a9a4-cf8588382042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898c6b2e-9b38-4774-98ee-50447170b335",
        "cursor": {
          "ref": "46b699c6-6645-4206-960d-597c58f19a69",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dde7c862-743f-4741-bb09-744c53cde28e"
        },
        "item": {
          "id": "898c6b2e-9b38-4774-98ee-50447170b335",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2e91ff95-4cbe-4247-a74e-c2761d235f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da78f61c-de7f-47e0-a96c-f0f81335bf5c",
        "cursor": {
          "ref": "dbc89dd6-75a8-48ae-a835-f47d69ed7d9f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "918f3523-99cd-4760-86f0-fe155f87e72e"
        },
        "item": {
          "id": "da78f61c-de7f-47e0-a96c-f0f81335bf5c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0fea50fd-42f2-4796-9b72-b7ef4ffb72b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a2970a-d9a0-4f57-bb51-2d77fdd416cf",
        "cursor": {
          "ref": "ab5484ad-774e-4014-99a4-f4dceaa8fa4e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9aaccad2-6c4c-477d-aebe-5e37b633bc21"
        },
        "item": {
          "id": "f0a2970a-d9a0-4f57-bb51-2d77fdd416cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "896f393d-6dac-4c94-ae4b-84188f4cf9f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3409053d-ef96-4687-a0c9-80dda02e43f4",
        "cursor": {
          "ref": "b6c38469-8076-4945-9f93-1ec283af3625",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "697b6f27-3e06-4f3f-9ced-b6136e669f17"
        },
        "item": {
          "id": "3409053d-ef96-4687-a0c9-80dda02e43f4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8a90c307-9e43-4006-8a9b-1b29c39d9153",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bbdeb9-7016-4a82-91d6-f4011d72436d",
        "cursor": {
          "ref": "5f7f89da-0d38-44df-a8fd-231dbbc66f6b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b8e4428d-6899-491d-93d6-91e4f0b49333"
        },
        "item": {
          "id": "49bbdeb9-7016-4a82-91d6-f4011d72436d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5dd8d187-129b-46b9-ba61-fe8687455713",
          "status": "Created",
          "code": 201,
          "responseTime": 148,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d5ad0-d8d2-44a5-93d6-5bdc2a29d252",
        "cursor": {
          "ref": "1904ad0d-33b8-4285-913b-b43aadaf8986",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9eccde0-b66d-423e-8893-00ac32be7565"
        },
        "item": {
          "id": "693d5ad0-d8d2-44a5-93d6-5bdc2a29d252",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ef6994a2-49c5-4173-be7c-a34ff5766d8c",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ff9faf-eded-48c4-b4a2-b319fac763fa",
        "cursor": {
          "ref": "221777bb-28d0-464a-95d7-73cdaf5b5202",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f5220663-a78c-4b99-9cd8-f616e8bca3d8"
        },
        "item": {
          "id": "93ff9faf-eded-48c4-b4a2-b319fac763fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "415732c4-0c12-47b6-8c75-0e425a57d7c5",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "533a958c-f240-485c-a846-21601e2be27b",
        "cursor": {
          "ref": "997fe29a-a5b1-49e9-af0c-a8d6198ab2c6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fdbfd963-290a-4777-b09f-1d06475a6330"
        },
        "item": {
          "id": "533a958c-f240-485c-a846-21601e2be27b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e36c791b-a976-438e-adb2-a966d7dbf34b",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb9848-1999-4489-add9-a694449057e0",
        "cursor": {
          "ref": "d8845b6c-cfcd-4819-af1a-fe392e4d7fcb",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0f5b8ef1-5636-4adc-bea6-7a154f9dab4f"
        },
        "item": {
          "id": "abeb9848-1999-4489-add9-a694449057e0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2a2feea2-485d-445d-a27c-735e9130900a",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803314d6-9c34-461d-86b0-2c275a489db3",
        "cursor": {
          "ref": "ecfb7af9-8eb2-4ed6-b893-3e64c50fd482",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "25da92f6-526e-40b6-bd9b-9cb14ffcf4b4"
        },
        "item": {
          "id": "803314d6-9c34-461d-86b0-2c275a489db3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0657707-239f-4803-9ea7-1bf32424a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2655df2-6f23-4474-9a41-22274b3043e2",
        "cursor": {
          "ref": "06011a97-e20e-4d70-b537-fbb85527fd30",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c39761d6-89de-4a74-80c3-32fd3222afe2"
        },
        "item": {
          "id": "c2655df2-6f23-4474-9a41-22274b3043e2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7620b7bd-8991-4e0a-80e6-54996c08712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea5b465-41eb-4ebd-9d3c-381e4ae14a20",
        "cursor": {
          "ref": "9a96525d-50cf-4e32-a421-cf0f0153d131",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "888b5dcc-7168-462b-b4f6-8ed4351705da"
        },
        "item": {
          "id": "dea5b465-41eb-4ebd-9d3c-381e4ae14a20",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d50f77a3-44cf-42e5-a951-a5473fd753fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78df8963-2a4c-49e2-89b9-99e44277fffc",
        "cursor": {
          "ref": "651b7222-7299-4e4c-b9ef-50628a3b54c1",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "34645991-be54-4ab1-b6c7-c8e041cad7f4"
        },
        "item": {
          "id": "78df8963-2a4c-49e2-89b9-99e44277fffc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0ebfeb8e-bb92-450f-bc9b-cebbac9fcd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22d7021-af45-42b1-a877-1e5ac0e2fa63",
        "cursor": {
          "ref": "9aa21963-9fcc-4bce-9a61-79651106411e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9eb297f6-a830-4b6f-9c5a-a9fe22850e6a"
        },
        "item": {
          "id": "b22d7021-af45-42b1-a877-1e5ac0e2fa63",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b424ecfc-83a3-4a23-b629-69eaa4a8fc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca63a96c-112f-4a59-bed2-88a5bc5aa993",
        "cursor": {
          "ref": "190c95bb-2dfa-4341-9913-f168759a434e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0dfe8925-1ea9-466f-90d4-3ea7289c7387"
        },
        "item": {
          "id": "ca63a96c-112f-4a59-bed2-88a5bc5aa993",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89f9892a-24a0-418d-9191-8af750a51305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2680d6-1954-4104-9a9e-610fc178ce37",
        "cursor": {
          "ref": "76e69a25-e590-472e-a504-331e0015f9f3",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f12de2d8-0eb7-4113-b956-41afee6dc381"
        },
        "item": {
          "id": "1f2680d6-1954-4104-9a9e-610fc178ce37",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f022dc8-7b53-4d89-b358-1cb9d4cc4c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3819a5a-2fda-42b0-bfbd-30c458518807",
        "cursor": {
          "ref": "0c7b701c-0f4a-4112-bac3-45a10161903c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "063b041e-4bc9-4bd7-b624-26aebb3da285"
        },
        "item": {
          "id": "b3819a5a-2fda-42b0-bfbd-30c458518807",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "20314c8d-32c4-435b-8ce8-e7751c4e595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a973bd6-18b6-4e30-996c-034e875695cb",
        "cursor": {
          "ref": "60d226a0-3bcd-4a64-85dc-102a6567c594",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e55476fc-409c-4d08-84c7-4cfbc8538c9e"
        },
        "item": {
          "id": "9a973bd6-18b6-4e30-996c-034e875695cb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff5eab5b-f1cf-480a-9764-c677ca3ddc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed8ca6-e3b0-4947-8541-83a0e699959c",
        "cursor": {
          "ref": "ef07e6aa-b27e-4c4d-9e09-abf90e2d2555",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f3b614a7-ab53-40c4-988c-52734da06b65"
        },
        "item": {
          "id": "31ed8ca6-e3b0-4947-8541-83a0e699959c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0c34e13d-157d-4d65-9068-b3f9e8a4c30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ad7336-ac5f-4b7d-a4c4-20b9d9764985",
        "cursor": {
          "ref": "e42ac5f6-f7f6-4d4a-a4a9-ad2bfaf2afe7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4cff2126-812b-4340-a3c2-d1632e25fbd4"
        },
        "item": {
          "id": "06ad7336-ac5f-4b7d-a4c4-20b9d9764985",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "170e0545-61de-4392-b08f-e705e99c82be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767029c1-eb61-4f57-9b74-fedc971803a3",
        "cursor": {
          "ref": "26fa7dd9-a960-4f30-8e5d-9bc90ebf3f4b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "92fa1498-0797-4b25-8dce-df10ceb70943"
        },
        "item": {
          "id": "767029c1-eb61-4f57-9b74-fedc971803a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c401a22a-a809-4f2b-9ec0-92d7698cc186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9016dc06-15f5-4f40-af38-5dce9f1972cf",
        "cursor": {
          "ref": "8463a870-41ed-46ba-9116-82b65727e643",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0395881d-01af-4185-85bb-c84a29d85f02"
        },
        "item": {
          "id": "9016dc06-15f5-4f40-af38-5dce9f1972cf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ebb89087-3ff5-484d-9c97-60f494611665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edf20c5-33f7-4727-b42c-bcb3df7e47a0",
        "cursor": {
          "ref": "e91c2b70-f971-4a3c-bcce-e9688456a26a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9cc6d121-372d-4793-9e79-d4c3d4403d4a"
        },
        "item": {
          "id": "0edf20c5-33f7-4727-b42c-bcb3df7e47a0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2ad874b9-1a8a-4467-8377-52d94e549ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28e9f0b-5fea-4910-b0eb-8abefb23633b",
        "cursor": {
          "ref": "e855c502-096b-4ad4-bc32-9a402419b26a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b885534c-a583-4994-82d1-9d3ea4e5227d"
        },
        "item": {
          "id": "d28e9f0b-5fea-4910-b0eb-8abefb23633b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1c4fa74b-7aae-421c-be0b-0784af52fa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c23c80-35f7-40b6-9901-af9256f112a8",
        "cursor": {
          "ref": "6b0f3aa0-cab6-4cd9-b720-0e36f43cc146",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aaec8c98-e675-4931-acda-e0a238a83118"
        },
        "item": {
          "id": "d1c23c80-35f7-40b6-9901-af9256f112a8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2ca1ec5c-7e7d-4776-9c61-f3cf24c3afbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3ddf31-1208-40de-b15a-72cb3d424bd4",
        "cursor": {
          "ref": "13b2d14a-cf43-45d1-a0ef-fb7422bc04f4",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2842ce3b-c36f-47cd-80e3-afa3eaca442b"
        },
        "item": {
          "id": "4d3ddf31-1208-40de-b15a-72cb3d424bd4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2450626-2aa3-4320-b104-456e6073a97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfdb1cc-b36a-4a06-985f-fdf08c02eec9",
        "cursor": {
          "ref": "3ceab62d-44e5-4e31-97e2-e00546599ff4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "27ad4b68-f832-4ea7-863d-c8fcf25f6949"
        },
        "item": {
          "id": "cdfdb1cc-b36a-4a06-985f-fdf08c02eec9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "49333014-e2ad-4f1d-b2a3-c561d30cd218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c59a29-14c6-4a7a-9403-6a528d57fcd3",
        "cursor": {
          "ref": "5b553975-e5e7-4888-966f-2e593d482b23",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "56b5f4de-6e0f-49d9-9c5b-8717dc488496"
        },
        "item": {
          "id": "b9c59a29-14c6-4a7a-9403-6a528d57fcd3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c641f935-398e-4227-ad73-48c4f52af6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed2a836-c9f4-4c9a-91f9-612522e74fc8",
        "cursor": {
          "ref": "cbdf9900-2ff1-42c5-8f2f-9f1e80409f53",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0947737d-95a5-423a-9456-1765debcf00a"
        },
        "item": {
          "id": "4ed2a836-c9f4-4c9a-91f9-612522e74fc8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "49469420-6633-4b25-94c4-c45504c9adb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa806d-8a0d-4458-8dfd-9d8e42d308e3",
        "cursor": {
          "ref": "82e61f03-96b7-407d-a738-857acb565b15",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d8e4af2c-0c31-4296-83b1-03207da90f01"
        },
        "item": {
          "id": "39fa806d-8a0d-4458-8dfd-9d8e42d308e3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a468c84c-baa7-47b2-ba75-4def44ccb89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a17b8aa-eec9-4729-9c4c-59fa5248e370",
        "cursor": {
          "ref": "03f0cd7c-a6dc-4167-a7be-5317a90239d3",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c6c9369e-226f-4490-a165-1f4983a5323e"
        },
        "item": {
          "id": "6a17b8aa-eec9-4729-9c4c-59fa5248e370",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ab20d87-6b2d-48a2-81a3-b06f42b57da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fd59d5-bce3-4419-93b4-ee9656f54a61",
        "cursor": {
          "ref": "ec904c9c-3faf-4c54-95d3-c2b5780e3370",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d57c2e1d-f06a-4165-84b5-57da5a3d1724"
        },
        "item": {
          "id": "12fd59d5-bce3-4419-93b4-ee9656f54a61",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b4e71615-257c-42cc-8ef0-7e2d0f8743c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85760114-49e6-452b-a168-47487eeda29e",
        "cursor": {
          "ref": "24836ed3-7fa3-4417-9178-2a2a8aedd229",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "60096f99-a026-483d-b17b-4125afa99a7f"
        },
        "item": {
          "id": "85760114-49e6-452b-a168-47487eeda29e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a5ba6f67-71f9-418f-a1cc-71ea691ce3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa42868-c538-42d9-a688-6a3c3b5ac28f",
        "cursor": {
          "ref": "98619f81-f703-4dfb-a08c-f61c4fdd78b4",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ce9e8dd8-ae27-47ea-b9db-8f3954661a54"
        },
        "item": {
          "id": "1fa42868-c538-42d9-a688-6a3c3b5ac28f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34ca9000-acc5-4027-9d5c-455e29af3b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d603f91-9e3e-4d6e-b41b-683247e9c7d9",
        "cursor": {
          "ref": "a7118bbe-ba95-4a7a-8637-7c5363258985",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "86c26307-c2de-445c-83fe-f513e836a355"
        },
        "item": {
          "id": "2d603f91-9e3e-4d6e-b41b-683247e9c7d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e28158c1-b727-4eca-b4e8-ad7339713d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2801665-1d27-48c5-9169-bf9d312f1dc3",
        "cursor": {
          "ref": "a4f83ccb-8383-4484-ad4d-318ed77a3d3b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d4ac51dc-0476-4ed1-b172-e8c906ba7b88"
        },
        "item": {
          "id": "d2801665-1d27-48c5-9169-bf9d312f1dc3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7a6449e1-d0ee-4afe-a292-26fbf7fa57d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04c8508-dbd7-466a-9590-93f17fdde2c7",
        "cursor": {
          "ref": "31d7692d-980d-44d8-b14f-4d207e5598b3",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "22c686e8-d11e-43f8-98a1-985256a51d82"
        },
        "item": {
          "id": "a04c8508-dbd7-466a-9590-93f17fdde2c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d3bb76ee-6169-4070-b0e3-6a27f5f47efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646cf1d3-c179-408a-9821-93d1239d5beb",
        "cursor": {
          "ref": "025a8cea-4ffb-4fd1-ba75-6b8544864522",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0e1e99e-f1ed-44c9-9b89-048467b6fb97"
        },
        "item": {
          "id": "646cf1d3-c179-408a-9821-93d1239d5beb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a678a936-74b3-45e2-9e7f-2baa0ff95c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec98ed-645c-47c6-89e2-e881a72c4e6c",
        "cursor": {
          "ref": "716d8238-ec6e-4e09-b508-88d5050530aa",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a4dbc1d-9a05-420e-b9ed-e9cd93cc5424"
        },
        "item": {
          "id": "17ec98ed-645c-47c6-89e2-e881a72c4e6c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "33960813-fa02-4432-8d74-3edc1a36c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b1faae-f6f9-4063-aeff-dd88cfc1aac5",
        "cursor": {
          "ref": "c333d465-bedd-44fd-9fb8-c8135f2eb4a1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30a714a4-83ab-49b5-9152-6575093b9a5e"
        },
        "item": {
          "id": "70b1faae-f6f9-4063-aeff-dd88cfc1aac5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "54f04e09-ac67-4262-b993-a826e622471f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf5e0c5-592b-4e3f-ace9-e9bfab3bc8ac",
        "cursor": {
          "ref": "92408673-04a9-4e47-a232-888f795cf0e7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1076b9e7-13a1-4a46-aaee-97e513918de2"
        },
        "item": {
          "id": "adf5e0c5-592b-4e3f-ace9-e9bfab3bc8ac",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fced6776-c148-4dd6-82fe-67606b68d81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446fc4a1-a324-46ba-a9a2-4d6581d4d57b",
        "cursor": {
          "ref": "43da9520-6458-45cf-83e5-4d7fe0840578",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37cef4df-395d-4542-aaeb-cb65abf95d50"
        },
        "item": {
          "id": "446fc4a1-a324-46ba-a9a2-4d6581d4d57b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "71d9abf3-a4dc-4ad4-b0f5-dd9f43cc0f60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0bf53e-5d20-44e1-acc2-27e30e4eb637",
        "cursor": {
          "ref": "2a4f60ea-e164-4ef8-b049-6ec122614e33",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9b4d527c-c6d6-4604-8aa1-8385f73ab9da"
        },
        "item": {
          "id": "cc0bf53e-5d20-44e1-acc2-27e30e4eb637",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "25714cef-876d-4611-985a-5699f91a336d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897d350f-51f1-4ba3-9563-8c14b3e862ef",
        "cursor": {
          "ref": "0e43e91f-ac21-47e1-a75f-f490704039dc",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "09dfee9e-abdf-4e0b-83ec-11c21cd9b609"
        },
        "item": {
          "id": "897d350f-51f1-4ba3-9563-8c14b3e862ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "01c1059c-e7c2-48e6-bfa7-54ae6df7607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f66e39b-ead0-4060-88e9-d705dccc893f",
        "cursor": {
          "ref": "64c0d121-b85b-4742-877c-d591d5afd76e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f56d6e32-b4b8-4e4c-93ac-c374c8edd514"
        },
        "item": {
          "id": "2f66e39b-ead0-4060-88e9-d705dccc893f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8c91285a-cb9e-40fb-83cc-63500ad3d029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9002aaa2-54ea-453f-aa6d-f3c582765f2f",
        "cursor": {
          "ref": "bd43ecda-33e2-4946-83a9-5c7a58795b26",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bb1b2962-ceb3-4be7-b4ed-ba64b7b64c9f"
        },
        "item": {
          "id": "9002aaa2-54ea-453f-aa6d-f3c582765f2f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "02d833ca-8ae0-41d6-b698-f6b337ccf4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5291acee-5fe1-46fd-a177-2f9943c77076",
        "cursor": {
          "ref": "12eb5ca9-8800-4cb3-ae18-f27c4d2acdfd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "72f32b59-bf1f-46ec-9724-5c70c805d35b"
        },
        "item": {
          "id": "5291acee-5fe1-46fd-a177-2f9943c77076",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5f172c4e-bb4f-408c-af26-301c5c92d25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eec02e1-e386-42ad-a74f-921f86a60929",
        "cursor": {
          "ref": "77507b6d-e054-464a-93d1-af19f7de75c6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6108f239-348d-40b9-b1df-f7232d517c5e"
        },
        "item": {
          "id": "6eec02e1-e386-42ad-a74f-921f86a60929",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7d4d608-b623-4497-83e1-eee797cb56ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bfb7c0-df59-4f2a-8921-6f5cd999d36c",
        "cursor": {
          "ref": "5a37930c-7895-4a07-95ce-64bd85229f9d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4eeb82c-291c-4dc7-bff8-7881de5673a4"
        },
        "item": {
          "id": "b3bfb7c0-df59-4f2a-8921-6f5cd999d36c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5f9da606-bed4-49c1-8a64-6518b81b8cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8356c746-9019-44df-95b6-91631af19f9f",
        "cursor": {
          "ref": "1382a3fc-931f-4fee-8d4e-cc84a9891d6f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "55082b38-e43d-4200-aa90-15ef850698d9"
        },
        "item": {
          "id": "8356c746-9019-44df-95b6-91631af19f9f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1b7fe53a-4076-495d-b98b-94568472fbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4e56d7-a235-4ee6-9ae7-c60ff1360d4f",
        "cursor": {
          "ref": "7e3f8443-c859-4c01-bc04-14a59886ad8f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "536dec58-fde0-41cc-a193-5a09da472386"
        },
        "item": {
          "id": "fa4e56d7-a235-4ee6-9ae7-c60ff1360d4f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "67bffd25-eda3-4b75-9629-341fc52a256c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76df1d9-6205-4ab9-867d-d1e9ad7b67e5",
        "cursor": {
          "ref": "13025ea3-6b9b-4950-9875-5fa35b03b3ce",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3c95895d-505d-4454-b077-a68c4d95cf5a"
        },
        "item": {
          "id": "e76df1d9-6205-4ab9-867d-d1e9ad7b67e5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c4865bc6-14eb-427d-87cb-a35c0e4ea066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b45a6c9-1845-44de-8da9-d0295cbd7378",
        "cursor": {
          "ref": "3be3bfec-d97d-4019-95e4-1d1cdd9f3270",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a1d6dd23-c78d-4c9f-8693-0a2b530ec446"
        },
        "item": {
          "id": "5b45a6c9-1845-44de-8da9-d0295cbd7378",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c248ee37-0700-4d49-97ca-766157d64462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e10d4e-8c32-4da6-a927-d6d9e6099df9",
        "cursor": {
          "ref": "7db769a8-e083-4fdf-9d94-e1d3028c5d42",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b8222633-df15-49b8-818d-368f8cb37824"
        },
        "item": {
          "id": "42e10d4e-8c32-4da6-a927-d6d9e6099df9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca6d1346-185c-488e-b92b-0696e6a29feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93408115-3a82-41ea-b7a6-1b1c4c6e9824",
        "cursor": {
          "ref": "67204bd7-c5b5-4e83-b484-3431d66a4196",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2657f183-9e22-48a3-9a63-6645e354410c"
        },
        "item": {
          "id": "93408115-3a82-41ea-b7a6-1b1c4c6e9824",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4bde056d-2412-4046-8eb1-3631e841b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c17eb0-8a06-4dcd-8073-21b2a46171ad",
        "cursor": {
          "ref": "a7cade97-d92f-4e2f-9f97-4497d74a8844",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2cc4d8c3-ca83-4872-8f82-dd0e8c8a83bc"
        },
        "item": {
          "id": "17c17eb0-8a06-4dcd-8073-21b2a46171ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c4fb088a-d25e-45b0-a78a-d81d5bff7f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76ab789-4653-425c-90b4-4782e8d7b0ca",
        "cursor": {
          "ref": "5e5952dd-c193-4689-8a6d-e035d2eda193",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "806119c3-1d93-40ae-a538-1224109c23d4"
        },
        "item": {
          "id": "f76ab789-4653-425c-90b4-4782e8d7b0ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6894be65-b31a-4d93-95f6-b8d13bbd2a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897eac38-da55-4399-976a-74186488cff2",
        "cursor": {
          "ref": "3ba53744-9ec6-4860-9fb8-daef991ada71",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "df4ad48a-d0b0-4af8-be94-b3cf75d7ea6e"
        },
        "item": {
          "id": "897eac38-da55-4399-976a-74186488cff2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "23ec34f6-91d9-4b04-a0b5-e4e74e70e033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9ad93b-71d6-42d7-a51d-73abb1b1d35e",
        "cursor": {
          "ref": "75f4487f-c96a-42d9-ad30-6176b949966e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "922c2cc4-3d49-40ff-be79-ead955d180ec"
        },
        "item": {
          "id": "5a9ad93b-71d6-42d7-a51d-73abb1b1d35e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8c9c7886-6cc8-4877-aae4-2d37cc4a1dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb2a635-fbb6-4442-8709-f418c3fa6ad5",
        "cursor": {
          "ref": "8ceec643-407b-4853-b495-448d4c8d02bf",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "04e185b6-c8df-49fe-a212-1566fe6dadf1"
        },
        "item": {
          "id": "9eb2a635-fbb6-4442-8709-f418c3fa6ad5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a8616ce0-2e44-42bf-8fc2-7e0d399020e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59f9c6d-91ec-4458-96d8-db725b32fa3b",
        "cursor": {
          "ref": "d0b8c04c-03b5-40ea-a712-af9e4515478a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f2a96b84-3a8a-4b86-bff4-a6ce3fd1e8da"
        },
        "item": {
          "id": "e59f9c6d-91ec-4458-96d8-db725b32fa3b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "249ee80b-1cf5-4654-a333-f5a81c3d32e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9580664-4d62-4447-8c57-46921a8f2971",
        "cursor": {
          "ref": "0d88aa0a-1070-47bb-a0dc-5f44ac56de26",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "321cabec-d528-40ed-b5cc-a7a47075ab3f"
        },
        "item": {
          "id": "c9580664-4d62-4447-8c57-46921a8f2971",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f943f57-f7fb-47c6-91a8-c89915d844d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40efa239-f3da-464a-adb6-da56d90f0444",
        "cursor": {
          "ref": "202fc319-24af-46e7-a4c9-0ab1ce495c0a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8863259e-aac7-4383-990d-2b3921840f1c"
        },
        "item": {
          "id": "40efa239-f3da-464a-adb6-da56d90f0444",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "56501098-712e-4208-917d-5162c603dfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79dec22-bbf3-4d8d-ab1f-a4d9c81ded17",
        "cursor": {
          "ref": "907c315c-f660-4fe5-b768-0228113db54a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9ffb3591-0c71-4985-89ad-9f2e5447e42e"
        },
        "item": {
          "id": "d79dec22-bbf3-4d8d-ab1f-a4d9c81ded17",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "745322bb-eadf-4430-b4e7-b1559260f5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bda9958-64d2-4e4a-a4ff-f416c7298de6",
        "cursor": {
          "ref": "e4382b68-7166-46a4-97a9-e056ecfebe19",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "60b274d7-1eaa-4148-924e-5b08b10ed3b1"
        },
        "item": {
          "id": "1bda9958-64d2-4e4a-a4ff-f416c7298de6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "32e968ad-65b4-4b71-ac92-ec5c0dbadc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e65769-e8a7-4a4d-9c52-17dcf25f9ab1",
        "cursor": {
          "ref": "aff05d5c-cc32-44af-9319-199f121b5819",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8a2a3591-3b59-423d-8ab8-577cf202db30"
        },
        "item": {
          "id": "84e65769-e8a7-4a4d-9c52-17dcf25f9ab1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d66dab97-c741-429a-aa91-917af94e6617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da8dae4-f671-4c2b-88a6-8e83878431c8",
        "cursor": {
          "ref": "56f6426c-7d44-4df1-8f9e-c179b92194ae",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "acc80d50-6986-4477-afee-34978331a33a"
        },
        "item": {
          "id": "9da8dae4-f671-4c2b-88a6-8e83878431c8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71d7d2c7-245d-444c-9932-8477a423b140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312914a9-6a6d-416c-b776-66ac63473d53",
        "cursor": {
          "ref": "279394a3-decf-4389-9ad2-711b0da8db54",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7bf9f2be-30e1-4e1c-8105-6e0b1c0eaae4"
        },
        "item": {
          "id": "312914a9-6a6d-416c-b776-66ac63473d53",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c2e373ca-7e3a-4a86-ac35-fd768beeaabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3056d3ee-5850-445e-896e-71b97fcc2fd4",
        "cursor": {
          "ref": "614bc901-9d85-4648-ac36-9c318d017c43",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e54ae352-55c3-4574-ad21-91c2046e8385"
        },
        "item": {
          "id": "3056d3ee-5850-445e-896e-71b97fcc2fd4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df905712-83ef-4525-9127-1576b719eb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a988b994-24bb-41a9-87e0-312de89e3a7a",
        "cursor": {
          "ref": "6e96b0be-7fa4-4989-8373-a7ab8da1bc61",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3d171e45-c176-4226-b4cb-ee1be4bc1802"
        },
        "item": {
          "id": "a988b994-24bb-41a9-87e0-312de89e3a7a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61e1ac31-bec7-473a-86b0-2cf7d5c90b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06299c1-33fe-47e1-b7e4-c7b9bd012fbb",
        "cursor": {
          "ref": "52ad6e56-7cf8-44ab-8d8d-8e462f423b5c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6c104d5c-2af6-42ad-9772-c94a57d94cb2"
        },
        "item": {
          "id": "d06299c1-33fe-47e1-b7e4-c7b9bd012fbb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e141083-fb5d-464d-b763-3d078f0ccdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f1f19-9c2d-4ce3-984e-35443880bebf",
        "cursor": {
          "ref": "2ced1541-bfee-4cda-9a0c-6ae3d132112a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bc29ef2d-9ce8-4b59-9bc5-224de3d905b1"
        },
        "item": {
          "id": "8b5f1f19-9c2d-4ce3-984e-35443880bebf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7436298c-914c-4d2a-b295-103b076327f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edbcd63-5927-408d-b0a9-7a0bdbf44e6a",
        "cursor": {
          "ref": "470346ee-56fc-46b1-8f12-7334887d96a0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5148f677-9dab-4b2f-8277-8bc571eb8ef0"
        },
        "item": {
          "id": "9edbcd63-5927-408d-b0a9-7a0bdbf44e6a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3b3e82cc-6c1e-45f6-8054-793feae535b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a13b86a-7b67-4e46-bf24-012bd67943dd",
        "cursor": {
          "ref": "39faf2ae-dfd8-4b0a-a8cc-bab9aa57dd7d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bf45d718-27b2-4698-90ca-d7d4c24757ac"
        },
        "item": {
          "id": "2a13b86a-7b67-4e46-bf24-012bd67943dd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b3537287-646b-4d76-bd6d-0f7e4d1cc342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ca1c73-7fe5-4078-bb27-f82ebdb69177",
        "cursor": {
          "ref": "d5cb3aef-d22d-4e52-8d8a-2e5e8f7c77c3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f2f9dc86-e4e5-40b3-a8c4-3abdcd713822"
        },
        "item": {
          "id": "65ca1c73-7fe5-4078-bb27-f82ebdb69177",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "61550caf-f58f-4b22-a67e-c30f43ee8dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b4bb95-b301-422f-8241-fd5ba88fed09",
        "cursor": {
          "ref": "be4825fc-124f-428b-a313-cb53e68813e0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cd096166-a522-4c56-991a-87f34ae72052"
        },
        "item": {
          "id": "40b4bb95-b301-422f-8241-fd5ba88fed09",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f82f2ed5-3111-4426-b0af-70a638779b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eaffa5-bf01-4726-8817-385063647d04",
        "cursor": {
          "ref": "0ef193c5-9ae9-4c71-98d1-4b1b5abed9c0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6950cc8b-121d-4307-97ab-9c1e506b5abe"
        },
        "item": {
          "id": "e7eaffa5-bf01-4726-8817-385063647d04",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d25f24f3-1cee-46dd-88f4-76375ffdcc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be542dd-7a7f-477a-96f0-7aaf39a65b58",
        "cursor": {
          "ref": "46dff773-8d36-4de6-bb07-1e611810eae2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ed2418a3-26ed-4cb2-b59c-26ee8b52442e"
        },
        "item": {
          "id": "4be542dd-7a7f-477a-96f0-7aaf39a65b58",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5eb8583b-3dd5-4cc1-9681-76920ce737eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f887f5e-1de2-41a7-9fe0-952201490235",
        "cursor": {
          "ref": "71eff938-7b75-4094-a8c7-563f3954b660",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4b3d969d-bedf-47df-9571-187b5f0aa029"
        },
        "item": {
          "id": "4f887f5e-1de2-41a7-9fe0-952201490235",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4f68d85d-7399-4fda-b187-0ace38ee64e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7485c383-5949-4795-b2d6-70faf9799d4a",
        "cursor": {
          "ref": "de46335e-d0ce-4067-a410-2edaf08105a3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fd05d070-a3df-4bf3-8596-b249a0122ab2"
        },
        "item": {
          "id": "7485c383-5949-4795-b2d6-70faf9799d4a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "80bfed7e-acde-48c5-8b99-4cc8194e63df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce23b33e-978f-4b46-a756-75f9390e3bf1",
        "cursor": {
          "ref": "6fe46342-8d6d-40fe-afe6-773e44f3f044",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d168ad76-e748-47e8-9382-73af0cc46b71"
        },
        "item": {
          "id": "ce23b33e-978f-4b46-a756-75f9390e3bf1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9660eb49-2c37-463c-b783-d9b5f375037e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb49909-d8a4-48ee-9967-6e169bbf7810",
        "cursor": {
          "ref": "ad1654ea-5daa-44b8-84b4-bdc3abedb0ce",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "66a8ca81-58f2-4edc-8d28-126e447a6aa5"
        },
        "item": {
          "id": "adb49909-d8a4-48ee-9967-6e169bbf7810",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e3c157b6-d525-4943-8eb9-46b94e272949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774df7de-957d-44fc-904f-428f02e2dd85",
        "cursor": {
          "ref": "56268201-0d3d-47a5-86b4-e23adc4418ab",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9cffe843-15be-43e8-b664-085028474784"
        },
        "item": {
          "id": "774df7de-957d-44fc-904f-428f02e2dd85",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a845cb5c-eea9-49dd-b48b-110f81edf553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9b175c-42db-4d6e-a2fa-3ee3e957f76f",
        "cursor": {
          "ref": "ca838133-c0f9-4528-b956-c4e5359b79be",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ecdc238-6779-40c6-bd0d-384fe7aa4d09"
        },
        "item": {
          "id": "1a9b175c-42db-4d6e-a2fa-3ee3e957f76f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "03dd18ef-b89f-4e79-8135-d6aa0d6869c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f272cccf-0b40-450e-9ed6-d36fcf95f651",
        "cursor": {
          "ref": "0dc2e80c-6340-44a4-b8c9-77f6fdb94b36",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "492779a1-303d-41d1-a193-a56db9dd3437"
        },
        "item": {
          "id": "f272cccf-0b40-450e-9ed6-d36fcf95f651",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1d131322-fedd-4f22-a4db-e8bbe3725f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cf61a7-a123-4761-8f22-6358cb18e741",
        "cursor": {
          "ref": "192ef958-1bce-4b48-a0ff-1d70cfaad7d4",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "67c48fa6-c628-4a5f-ba17-7e80aab0f7ef"
        },
        "item": {
          "id": "a4cf61a7-a123-4761-8f22-6358cb18e741",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b13ebd2-ccb3-42f9-9634-3caab0920fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884fdcb-e8e9-42d4-940f-44223e803839",
        "cursor": {
          "ref": "4325af40-2032-42b4-8a97-4212bdabeef3",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b82703d5-117b-42f0-b75f-c9531fa3a880"
        },
        "item": {
          "id": "8884fdcb-e8e9-42d4-940f-44223e803839",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f51f4589-bf5e-4a85-9194-52afc5d0f3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5153d469-1741-4507-91f8-0cdd0bedef17",
        "cursor": {
          "ref": "fb61e646-6e75-4622-b85a-39c8da3be61c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d4df44d8-d599-4f53-b4c4-1ee537b5cec1"
        },
        "item": {
          "id": "5153d469-1741-4507-91f8-0cdd0bedef17",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "87812878-ac9d-4a29-bdac-a06a98ce8598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c8af5f-b05e-4a0e-a76c-f0137345bed6",
        "cursor": {
          "ref": "534f860d-5076-4754-9972-784a6b4e8e11",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6d58f406-5d4a-46e0-9189-be723dbf5185"
        },
        "item": {
          "id": "73c8af5f-b05e-4a0e-a76c-f0137345bed6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "91956fe0-dcd3-47a8-b317-c104c1b57543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a38060e-e765-43ab-a348-fa58b919528c",
        "cursor": {
          "ref": "15becb72-efab-4ed8-8f89-e2ee99dfb727",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0e2e937e-b7e0-469f-a67b-54cc38b1618b"
        },
        "item": {
          "id": "4a38060e-e765-43ab-a348-fa58b919528c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ff01fa01-bfd7-4f4a-ae71-18f7543e73ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b048de-7891-4924-b000-754344e56d0c",
        "cursor": {
          "ref": "6f120990-864e-42fe-b06c-7bc8913ed6f4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f32052c-4580-4c82-9f09-c4ba8a50e888"
        },
        "item": {
          "id": "11b048de-7891-4924-b000-754344e56d0c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "33b046c7-9c07-490a-9ed2-46ac48d6e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2429ab-afb4-41da-a2ae-44a147561dfa",
        "cursor": {
          "ref": "7ba84636-62a3-4541-b047-cc6f3332e9eb",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b194734e-5505-4448-814b-d23a685a470d"
        },
        "item": {
          "id": "ea2429ab-afb4-41da-a2ae-44a147561dfa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e8b2b6d6-0859-4204-b35d-5775fdd0ae4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ca7a6d-03a9-4f95-aa1d-ad6a62fdf305",
        "cursor": {
          "ref": "5d51b680-4a57-45f1-91c0-ab76c1342057",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a662729d-84e9-402b-aa9d-fca3ea72ed22"
        },
        "item": {
          "id": "31ca7a6d-03a9-4f95-aa1d-ad6a62fdf305",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c01386ff-0606-4259-8eea-53fe2db3956a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10abe0ea-d026-4556-b00d-3b75a86398ac",
        "cursor": {
          "ref": "9f212316-837c-4b53-8df2-b0f84aa84bce",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e74cb273-66b1-4098-9b58-ab5ebad19f4b"
        },
        "item": {
          "id": "10abe0ea-d026-4556-b00d-3b75a86398ac",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b0ccdc58-54e7-4f6f-bda4-122eb976598c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bed4366-499a-44df-9ff9-917e89bc2f2a",
        "cursor": {
          "ref": "48a7f7ae-2c9f-44f4-9b7d-58cf0fdb6371",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b19d87d4-4f55-4749-8b27-a9339e54c3a6"
        },
        "item": {
          "id": "7bed4366-499a-44df-9ff9-917e89bc2f2a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "47ce4c70-5ff0-4ba4-82c4-a8834f814025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbeda8f-9f29-4c01-bc7b-6cbf5616a347",
        "cursor": {
          "ref": "4dacb5cd-bf1b-4b55-99fe-3ce71fedc77b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cb45ed18-be70-478c-a138-1d7dd2516a6c"
        },
        "item": {
          "id": "9dbeda8f-9f29-4c01-bc7b-6cbf5616a347",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c416404a-b831-47e5-87a8-0b09552bb1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3103b327-b527-49d1-a45b-0821df13d113",
        "cursor": {
          "ref": "f10e250b-c9f7-423a-b880-cbffa74efb6f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "df575c7c-72fa-470c-aab3-56fc48a4aebb"
        },
        "item": {
          "id": "3103b327-b527-49d1-a45b-0821df13d113",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4e471be0-1293-450e-9128-e9a18793aaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9addfbb1-289c-4c0d-88e0-6ebc359b5cf4",
        "cursor": {
          "ref": "83162781-0185-44ab-a849-053f9a300f30",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5afdaf6c-515b-4423-aa2a-d6448f352cfd"
        },
        "item": {
          "id": "9addfbb1-289c-4c0d-88e0-6ebc359b5cf4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2c2e1dcc-13e4-426a-ac9b-ca1ab812fd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95797ff3-27ee-4fd9-b717-f630b8fca587",
        "cursor": {
          "ref": "9ce58029-94cf-4c57-a674-80220d4a183c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3e815158-ee9d-4fc5-875c-8a6f7b5021c8"
        },
        "item": {
          "id": "95797ff3-27ee-4fd9-b717-f630b8fca587",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "101fae1c-5eec-4a64-a93a-78fe531320f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb0b184-8ad0-4e04-b55e-c1c5b919329f",
        "cursor": {
          "ref": "3aa59f59-9f76-4724-9644-dc18e662a3a1",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "335ffbe0-1ca5-4cca-8a6c-145db3f17684"
        },
        "item": {
          "id": "efb0b184-8ad0-4e04-b55e-c1c5b919329f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f4cad4db-72d2-4629-abad-ab0ea14efc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cb5708-7a53-4921-95a3-375504302571",
        "cursor": {
          "ref": "0c9bb37b-eeab-424c-9139-23cbbd53d85a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e48bdb5d-b181-4d36-81c5-9aff6585bffa"
        },
        "item": {
          "id": "c4cb5708-7a53-4921-95a3-375504302571",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0ecac77d-8ffc-4b25-bf58-ff59e8877771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060d2afd-df0f-434b-a312-5f776c699300",
        "cursor": {
          "ref": "ef582b02-c151-401a-a15d-39ec9560604b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2f2ef86f-ecf5-4ea8-a8d6-c56051d536d7"
        },
        "item": {
          "id": "060d2afd-df0f-434b-a312-5f776c699300",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "49a6d0b8-3753-4fcb-8ff9-4c1edd2fc03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d71bcd-ca9a-4b65-ab4f-3de67c28c603",
        "cursor": {
          "ref": "c36e569a-16bf-46e9-a7ee-9a1d312248e8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "787dfbc4-b59e-4f9f-b4ae-8407ce60e893"
        },
        "item": {
          "id": "66d71bcd-ca9a-4b65-ab4f-3de67c28c603",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d72fd1a9-924f-4ac4-8f82-e51d0abd40aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57454dc3-df87-4ab2-836e-6048f180dc47",
        "cursor": {
          "ref": "bc49355d-b8c3-49eb-b989-c1671e6c60d7",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "16fc69e7-45bb-4a89-a7f7-96674ff7d170"
        },
        "item": {
          "id": "57454dc3-df87-4ab2-836e-6048f180dc47",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "998f7f0d-d628-48d4-b2b2-1474781a610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e215ea79-4854-481c-8c49-f0bb9411c605",
        "cursor": {
          "ref": "ba043e15-6dbb-461c-9ef7-311c2d795bfa",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8e5cbd91-1819-4cf3-bf17-88fa4c894ed8"
        },
        "item": {
          "id": "e215ea79-4854-481c-8c49-f0bb9411c605",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7fa5921b-e7ec-45b7-b887-0c3bb1ca3e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e866a669-2e4e-46c0-bf38-291574fc0824",
        "cursor": {
          "ref": "e823239c-9949-49e1-bbb5-6c620ef39576",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "77f57c36-505d-47be-aca5-09432de5d537"
        },
        "item": {
          "id": "e866a669-2e4e-46c0-bf38-291574fc0824",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8c6fcd12-f4ff-4268-aeea-fde430df1f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4b8144-6442-4ccf-8500-df976dde2f72",
        "cursor": {
          "ref": "1481ee7e-9a7f-472d-912d-487e4abac4c7",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b0037ac-9053-409e-b55d-ed367721e94f"
        },
        "item": {
          "id": "3f4b8144-6442-4ccf-8500-df976dde2f72",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6b4af311-34af-466a-ac7f-a572ecd05897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8dde70-5ef3-44eb-bf54-5481ee3a4343",
        "cursor": {
          "ref": "af15849c-d532-45ef-bb05-e5c43b4deac9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1e3d27bd-31e3-42e2-bc53-0ae01c3c2b3e"
        },
        "item": {
          "id": "8e8dde70-5ef3-44eb-bf54-5481ee3a4343",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6ca9c1b2-4ed9-4147-ac60-710afb94d46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415cae13-6831-4ed3-a103-c34351bad143",
        "cursor": {
          "ref": "7365ef26-10f0-4bff-bc59-1ea3625b5a38",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f940e49-caa0-4c26-94db-cd8f3655fba9"
        },
        "item": {
          "id": "415cae13-6831-4ed3-a103-c34351bad143",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "748b8ed5-5759-4b58-9b42-8b8cdad6fb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78bb049-9944-429f-9064-a9ca1d5a6ae3",
        "cursor": {
          "ref": "588a0592-54b9-44d7-a26c-7ea069fee8c9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d0966756-25ba-421b-b7cd-ad8a40365eac"
        },
        "item": {
          "id": "b78bb049-9944-429f-9064-a9ca1d5a6ae3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ab6f90b1-b8d9-4e0e-b2f0-e49b5267c447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbbfa4f-7903-49b7-b287-8b9c11211b45",
        "cursor": {
          "ref": "ba55e336-16ca-4b8c-9365-e933bf96d204",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "07940813-7e7c-4ec2-9d45-c3c5038cbd1f"
        },
        "item": {
          "id": "afbbfa4f-7903-49b7-b287-8b9c11211b45",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1ae6443c-c0d2-4b5a-9388-bbafbcae2087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4202b2d-339c-4fe2-815c-47cf88ff256b",
        "cursor": {
          "ref": "28ef4e2e-b5a7-488e-bd5f-8fb92ae0035e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c93004bf-716d-4833-b2f1-60fbae88aa83"
        },
        "item": {
          "id": "f4202b2d-339c-4fe2-815c-47cf88ff256b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "77533229-eb5f-4a19-9911-3e9a920fcd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db027e43-0bbf-43c2-9607-a25da7a2107e",
        "cursor": {
          "ref": "cbe1ece9-37e5-4ba9-b831-a2f622955fb4",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "afb0699d-1e46-44d0-8e5e-eb9153c1d8b8"
        },
        "item": {
          "id": "db027e43-0bbf-43c2-9607-a25da7a2107e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "85dc87a6-f613-491f-89cc-9894f8b88873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45836bf-1f8e-4488-9e49-d9f2596dbb19",
        "cursor": {
          "ref": "2f3c9490-7209-477f-aa17-18bcd264c3c2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4af71f45-5dc5-4a39-b780-ae93ada9a935"
        },
        "item": {
          "id": "a45836bf-1f8e-4488-9e49-d9f2596dbb19",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b84621a2-6100-4a04-8c77-24a7137e73b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a0f0dc-d142-48d5-b1af-3d72c29dc323",
        "cursor": {
          "ref": "a03810c3-06f3-483e-972b-0c813fc9f2e0",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a478903f-2e4c-4aa6-bbe4-6399813e9e76"
        },
        "item": {
          "id": "43a0f0dc-d142-48d5-b1af-3d72c29dc323",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ace5b1a0-497c-41a7-9685-1ccbde99596e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd31e690-3723-4155-9bee-b23df686f24d",
        "cursor": {
          "ref": "a7c25814-ea2a-431a-bd93-7de6c3a241e1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "19c7611f-a612-4fd1-8cea-420ab9ad4927"
        },
        "item": {
          "id": "bd31e690-3723-4155-9bee-b23df686f24d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1917a726-6d80-4119-a80d-35a286335195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bf87bd-b211-4aa5-a36e-f36c1d60e295",
        "cursor": {
          "ref": "e27143a9-1099-40da-830a-c664024106a8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "18048f0c-59b1-4323-87e1-c9d6ef7461f6"
        },
        "item": {
          "id": "13bf87bd-b211-4aa5-a36e-f36c1d60e295",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "73f1ddc6-d8d5-4d3a-afac-98c385173dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd42c18-b595-4adc-ab87-65223f622517",
        "cursor": {
          "ref": "f0df378e-3381-41a1-a241-67ac5ecf67da",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "835eed58-acdb-451b-9fbe-5262d4d044ab"
        },
        "item": {
          "id": "9fd42c18-b595-4adc-ab87-65223f622517",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e39748e9-58e6-4bea-9baa-f32299321286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318801c1-9495-446c-b06c-444cb76da20d",
        "cursor": {
          "ref": "24e5ec11-dfa6-4f2a-a599-c67634479900",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3d531f7e-69a8-4d68-8e3d-dd18673c36cc"
        },
        "item": {
          "id": "318801c1-9495-446c-b06c-444cb76da20d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "843c4a74-e56d-4f40-a4ae-c9ce64d9eec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f575615-4283-47ec-a652-7ef01777ae52",
        "cursor": {
          "ref": "918dadd3-581b-4c32-b3d8-d64f6e976574",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ae96d4f0-5512-44b6-a775-29499fe31848"
        },
        "item": {
          "id": "6f575615-4283-47ec-a652-7ef01777ae52",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9fc985a0-71be-4868-b029-32122ab0cebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81248d22-4841-4270-a9a7-d17ee3306999",
        "cursor": {
          "ref": "eb63fb96-6da4-4505-8f11-fb8d4b608b2f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "86894782-b3d9-40e4-8a07-d00b0c23b2bf"
        },
        "item": {
          "id": "81248d22-4841-4270-a9a7-d17ee3306999",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "30e6c090-4bf6-4b03-9501-e2dbabbf392f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1850a0f-abea-42d1-b0f2-c258696aac5f",
        "cursor": {
          "ref": "e31e094f-e455-4caf-9c7f-a6a49ce92caa",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "914e0165-7fb6-462d-8daa-9856b7422d39"
        },
        "item": {
          "id": "b1850a0f-abea-42d1-b0f2-c258696aac5f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "00e81069-5680-41ea-b4e1-984794794952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be73220f-7816-43da-89c5-f12debec0ff3",
        "cursor": {
          "ref": "2d16963b-f782-42ad-a0a3-a20f699607d9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "20f85ed3-73b1-4e6a-a177-017fcee093c9"
        },
        "item": {
          "id": "be73220f-7816-43da-89c5-f12debec0ff3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6461d697-ebd1-4b1b-aa7a-31c86d658713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baab59d4-2464-4fd4-b020-4990022a0ae8",
        "cursor": {
          "ref": "e692ca39-3aef-45bc-89ae-33bd5c06b7dd",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cf10da95-45ff-4310-821b-d22ac57870bb"
        },
        "item": {
          "id": "baab59d4-2464-4fd4-b020-4990022a0ae8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "705dc3cc-d3d5-4d37-9ff5-dce3bee948ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba90182e-4e09-4e5b-95ac-57096117db5c",
        "cursor": {
          "ref": "1af0a13c-01da-4eb9-9e55-de38fb5a7e06",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8d072c00-3239-43dd-8a81-d26f7b86cc6a"
        },
        "item": {
          "id": "ba90182e-4e09-4e5b-95ac-57096117db5c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5b606708-ae04-4ece-85bd-ed261a065931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aa4479-fb34-451b-b9da-d7ecf1ad4b6d",
        "cursor": {
          "ref": "7c28d30a-88a7-44f8-b153-fa4ca3f69e62",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5d187cf1-d024-42d6-afdc-7fcb0584819c"
        },
        "item": {
          "id": "e7aa4479-fb34-451b-b9da-d7ecf1ad4b6d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47dd97d5-8c7b-4433-ac3b-8ec4522849d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7d14d4-0a2d-44ca-8f72-cc2243e3d82e",
        "cursor": {
          "ref": "cd88a94a-a55f-458c-85dd-dbf92a02ea44",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f76f073b-9adc-4961-b02a-3e295064b8b2"
        },
        "item": {
          "id": "4b7d14d4-0a2d-44ca-8f72-cc2243e3d82e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "be4b40e6-db37-4060-b10b-c72b3ffaa9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512f656a-b348-4166-9ec1-26bb458c0823",
        "cursor": {
          "ref": "6c3bec8e-0db2-445c-a62c-7a69f98c04a8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cf3e8faa-04ee-4fb6-b5e6-b9abaa49f7ac"
        },
        "item": {
          "id": "512f656a-b348-4166-9ec1-26bb458c0823",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "08eb1050-28f7-41af-92ca-1c9004dd295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9ac9df-b0ad-4c07-a6d8-24176968b9f0",
        "cursor": {
          "ref": "f1b47319-46e5-4909-9202-eb361e4cd4e1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c72162a1-3862-4a4d-b5b5-aba0544a5b09"
        },
        "item": {
          "id": "cf9ac9df-b0ad-4c07-a6d8-24176968b9f0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8066204d-431f-4117-b52a-858e33cee074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091add48-9791-4b24-8ba8-4ac125e15eb5",
        "cursor": {
          "ref": "5ce3a695-aefd-4af3-ba08-f73eb2f87970",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c93caf15-bab4-4dc1-83ea-f249427a61d2"
        },
        "item": {
          "id": "091add48-9791-4b24-8ba8-4ac125e15eb5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "55e78327-7f21-4e45-b461-b78e67ab3df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762153c7-24cb-4953-99d9-b21f2f5caedc",
        "cursor": {
          "ref": "bdefee90-af89-46a0-b8c0-eac854241edc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e4f62823-6706-4aaa-8721-5c39aacf6b7e"
        },
        "item": {
          "id": "762153c7-24cb-4953-99d9-b21f2f5caedc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "36a8047a-05e2-4bcd-9cf1-df22b8b3445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348faa97-a142-4c46-b27c-d504c1ec06d0",
        "cursor": {
          "ref": "dac425fd-991b-446e-a8b0-a132ed89988d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "55b35f19-55ee-4834-92ae-407aa8e7b466"
        },
        "item": {
          "id": "348faa97-a142-4c46-b27c-d504c1ec06d0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "309f4bff-6e35-4860-a22f-a3945ff47c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2412ba24-51e8-4b65-8c19-47b4b143d4a3",
        "cursor": {
          "ref": "c2f8d017-70f0-470c-ad1a-578ad5613132",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d9755b14-e864-4a91-ae09-e8052d28450e"
        },
        "item": {
          "id": "2412ba24-51e8-4b65-8c19-47b4b143d4a3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "51306843-e1c9-45cd-a82d-5d107f8aa295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6352507-f095-44c3-8d06-7bc011ce64cc",
        "cursor": {
          "ref": "f89588c3-f750-44c3-bfba-b8162d464bbd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e52432dd-ad04-4b16-8578-900c70738366"
        },
        "item": {
          "id": "e6352507-f095-44c3-8d06-7bc011ce64cc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7ab2e140-5c10-4c1e-ab8b-3f9ba4304545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bd683c-3277-4dca-964b-44b807807a77",
        "cursor": {
          "ref": "a43e164a-ced2-41de-a836-64c7de40fda3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7fd8dc39-d5a5-4127-bd5a-49994c151b59"
        },
        "item": {
          "id": "85bd683c-3277-4dca-964b-44b807807a77",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9fa8a6a0-4d69-42a4-a34f-33c118069b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96671b8e-d24b-4a94-9b79-90e4a8ffee77",
        "cursor": {
          "ref": "f34c08df-4a88-4d2f-9274-a574705a4c36",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "effb2867-e01a-4493-bac7-f13872b83afe"
        },
        "item": {
          "id": "96671b8e-d24b-4a94-9b79-90e4a8ffee77",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5a447d4e-09d6-416e-9abb-52e33352b5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf2d10-d763-4903-ad3e-059b4ec9607f",
        "cursor": {
          "ref": "3b9ac892-e1f6-4a82-a10a-45da84fe5e07",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "613c301f-f2d9-4f27-a67b-8c2a16f2d63a"
        },
        "item": {
          "id": "6cbf2d10-d763-4903-ad3e-059b4ec9607f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "250a23aa-a862-43ac-ac2f-395b81aad099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998380cf-82ed-4af5-b444-03c8e7598f3d",
        "cursor": {
          "ref": "ceca40d2-a41e-4c66-b8c8-dbef0c3cf110",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "486bff61-27e4-456d-ade0-5a41cadd6c0a"
        },
        "item": {
          "id": "998380cf-82ed-4af5-b444-03c8e7598f3d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "275d832e-1933-4611-a750-f927bc28296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc74f559-6fc6-4e37-9894-6d166fe68dcc",
        "cursor": {
          "ref": "d952c88b-f721-492b-bc87-cbefce65183e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d3b21772-f852-4c83-a605-1c5b1c7d8ffc"
        },
        "item": {
          "id": "bc74f559-6fc6-4e37-9894-6d166fe68dcc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "175dfb85-1a2c-497a-9940-fffd2c98d1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828bcc88-88df-4230-ad20-1e2e810b1af4",
        "cursor": {
          "ref": "a518b614-e5ff-4b11-9c61-651ff6812c0f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24426e31-910f-4168-bca4-d3030b5d94fc"
        },
        "item": {
          "id": "828bcc88-88df-4230-ad20-1e2e810b1af4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "596bbaf6-adfe-49b0-b4fc-25f092118fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a90a1-dcb6-4a62-9218-af54cbf49375",
        "cursor": {
          "ref": "c18e2c55-a214-4143-8877-6ae527b579e1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1e90fd20-e209-4e82-bbe2-6aa9b120f67b"
        },
        "item": {
          "id": "705a90a1-dcb6-4a62-9218-af54cbf49375",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "150225f8-f4af-432e-b158-94867c45ae40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc083959-4dfc-4572-9103-5df12bca8b66",
        "cursor": {
          "ref": "7063d431-460d-4568-9cf9-1ca5f9551f7d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f4ae9a1b-214c-4595-be92-c98bc30b467e"
        },
        "item": {
          "id": "cc083959-4dfc-4572-9103-5df12bca8b66",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bd49242d-33a8-46e3-9f53-cd0afbc0127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae6e642-d8df-43ea-a3fd-c45a5630409c",
        "cursor": {
          "ref": "b73de348-b4a6-4509-ac29-c1482bcce883",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "99520fb6-5087-430f-89ff-c1827a3e4dcf"
        },
        "item": {
          "id": "aae6e642-d8df-43ea-a3fd-c45a5630409c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "831f8af8-aa52-4968-ab1d-368788c3b7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a5219f-c19a-4ccf-a271-ec95babea803",
        "cursor": {
          "ref": "454c9d6a-a07b-4c35-84ac-4a4fe7996eae",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "be7f2d71-3970-4bc8-ad79-0851167b6587"
        },
        "item": {
          "id": "43a5219f-c19a-4ccf-a271-ec95babea803",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b1a5d4d8-2485-4914-84fc-716365cb83b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b43d10b-c8a3-42de-adc9-ab37afc46090",
        "cursor": {
          "ref": "5818fd66-cbd0-4c13-b52b-52d146c74faa",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6f8a5fec-eff1-4518-93cd-a20745a84dd6"
        },
        "item": {
          "id": "1b43d10b-c8a3-42de-adc9-ab37afc46090",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e19fc42c-7ee6-4ebb-b2a1-87253dc495fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b6aee-87b9-4888-b743-864137591eac",
        "cursor": {
          "ref": "c9656216-0f12-453d-87ec-4e3efa1ea6f7",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "348eeb2c-438e-4daf-9d7c-f0a7938fc87b"
        },
        "item": {
          "id": "e10b6aee-87b9-4888-b743-864137591eac",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "04ac0029-0b51-4221-a883-d5762f79deeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73183350-b945-47d7-a79c-42275afbab00",
        "cursor": {
          "ref": "bbebb4b4-82f6-472b-9372-74726fba7a78",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5b191546-af93-486c-8310-e292012e7b2d"
        },
        "item": {
          "id": "73183350-b945-47d7-a79c-42275afbab00",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b5388ea9-e85a-4a9c-88aa-2005b3090663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4056ec9d-020a-4637-b5dd-7a3b5c40121c",
        "cursor": {
          "ref": "7afdc473-44c6-4411-804f-22af2803fb5a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bbbb0854-93d5-46ee-a45f-71cf1a2fc276"
        },
        "item": {
          "id": "4056ec9d-020a-4637-b5dd-7a3b5c40121c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "50a55adc-2a40-40b6-addd-d3570a355a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f1e23b-f5bb-4ca1-b468-ea29ff2458e2",
        "cursor": {
          "ref": "99b6ebd6-668f-4c25-8819-dd678fabf9b4",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5703c199-d4a3-4f37-a17b-98cf862b4389"
        },
        "item": {
          "id": "82f1e23b-f5bb-4ca1-b468-ea29ff2458e2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6d968bdb-31eb-44f4-9e3a-6e5d28946376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e3923e-e6b5-45e6-9a89-7e8ce7aefd08",
        "cursor": {
          "ref": "28955cef-f705-42f8-b2e3-2962496a9c9c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "211e6d8e-8119-4bf4-92d4-9236b17047a3"
        },
        "item": {
          "id": "76e3923e-e6b5-45e6-9a89-7e8ce7aefd08",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dccd93b4-d912-48c5-b1aa-c66b79c8158b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a575df-dd1e-4c51-9a5f-df4c5c7809e0",
        "cursor": {
          "ref": "05bede19-df24-458d-a1ba-32b8d9ba2e1f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "98d66fcd-5221-418b-b85d-65861a54fcf8"
        },
        "item": {
          "id": "d6a575df-dd1e-4c51-9a5f-df4c5c7809e0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5ba9b5f7-9f7a-406b-a8cc-6296be20fd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428610ba-9511-4266-b45e-67e2078b2915",
        "cursor": {
          "ref": "2dda8e2e-337c-4093-8fcd-02153ce57503",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "19d190e9-481a-48cd-ab93-8b291d024ff8"
        },
        "item": {
          "id": "428610ba-9511-4266-b45e-67e2078b2915",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d94bd640-0800-4d88-8266-88c4d1f25018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d964557f-085a-4b98-8162-9e2e47ea88c1",
        "cursor": {
          "ref": "1a48ab0c-01cb-4378-b279-8a0b6094821e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dfaa9ef4-2239-49e5-b245-1b64f736cf44"
        },
        "item": {
          "id": "d964557f-085a-4b98-8162-9e2e47ea88c1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c3cc3f3c-70a4-42cd-bb7d-6cb87aae5352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b8aa2e-b0bd-4287-9eb5-242626b34b63",
        "cursor": {
          "ref": "b7a5974c-af0a-4e80-9aa1-bb4a0957b1d1",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "13388ab4-14ba-492c-a077-22926ff4cf41"
        },
        "item": {
          "id": "b0b8aa2e-b0bd-4287-9eb5-242626b34b63",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "23b5d115-adac-4464-83b8-b929f24f5304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b02186-7a45-47ae-9b06-134bc0155e86",
        "cursor": {
          "ref": "d7851d72-63f7-47c0-91ec-ade4401a039f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "125c3b78-0894-44c7-ad68-ba056abea86e"
        },
        "item": {
          "id": "17b02186-7a45-47ae-9b06-134bc0155e86",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a5641e98-ad83-4f21-824e-cba61abff246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282453e9-f89d-42cc-b7fd-e7e429819916",
        "cursor": {
          "ref": "c62ddf56-209b-4d12-9780-0785851dcdcd",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "02179981-2ef7-487d-ad41-fcdb0757e87c"
        },
        "item": {
          "id": "282453e9-f89d-42cc-b7fd-e7e429819916",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "93664f7f-4592-4695-8270-ab0fdc34bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69963415-d781-4b10-8a12-cd66276a2920",
        "cursor": {
          "ref": "9847691d-6978-42af-bd5d-50725cff149e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3ec1c325-f7ed-47b8-965c-05f3135b6ef6"
        },
        "item": {
          "id": "69963415-d781-4b10-8a12-cd66276a2920",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "77b412f9-a90c-40fb-b36a-31cae3034fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0729137c-b9dd-4abc-a02f-4228ed87ac09",
        "cursor": {
          "ref": "86d94c42-86a5-479c-95f2-bf3044f9d350",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3491256f-e0f8-41a2-9fd5-9e610e343dcc"
        },
        "item": {
          "id": "0729137c-b9dd-4abc-a02f-4228ed87ac09",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d13cea2f-b613-4f1a-b900-b69c88bbc572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6112e878-f929-4add-b323-9cae0c9dd259",
        "cursor": {
          "ref": "5db6a4d7-da61-4bbe-a19a-a4c5f077cfd1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9837fa6d-9dbe-4154-88f1-8cb157b0995e"
        },
        "item": {
          "id": "6112e878-f929-4add-b323-9cae0c9dd259",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d8145991-07e1-4d90-9d4e-95788214df52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071eab33-9ff8-4347-a4bf-073b0c8f78a9",
        "cursor": {
          "ref": "547b000c-6018-4272-a43b-975d34d8d1aa",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "87a688a0-020c-49ab-ae5f-99e1070054e2"
        },
        "item": {
          "id": "071eab33-9ff8-4347-a4bf-073b0c8f78a9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0fc0db8a-aa2b-4d9c-950c-e019bd3049ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb27ef2-74b8-45d7-aced-be75779aaa49",
        "cursor": {
          "ref": "e4872bb4-f7eb-49f9-bc3c-bb61259cf8dc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4cf064b4-d8aa-4301-9c51-3fadbf57856a"
        },
        "item": {
          "id": "6cb27ef2-74b8-45d7-aced-be75779aaa49",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6cc4bd85-7683-425b-9482-fe983a6b2749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824d62ac-39b3-44ce-b7a1-fe0a4a91731a",
        "cursor": {
          "ref": "4c39690b-9b78-4d21-96e6-001ed630c833",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "10efddd8-1a90-4af4-a975-a0cf0efce26d"
        },
        "item": {
          "id": "824d62ac-39b3-44ce-b7a1-fe0a4a91731a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aca5cdf4-c99f-40b4-9fbb-6657589e2742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca13b066-fb05-425b-9253-86d3c6fd58ea",
        "cursor": {
          "ref": "aa983f2e-0b0c-4d8f-831f-87d0c9347fba",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8c3da1ac-59c0-45d4-abdc-3a5dda9d28b6"
        },
        "item": {
          "id": "ca13b066-fb05-425b-9253-86d3c6fd58ea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "068e86f8-68f1-436d-9805-fc6717059798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3296a46a-a48b-4348-813a-75b874f140b3",
        "cursor": {
          "ref": "a231a87a-1cb2-49d4-b1bf-ad3af0799dfe",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "62c899e5-fa40-4584-86af-109868c3f2d1"
        },
        "item": {
          "id": "3296a46a-a48b-4348-813a-75b874f140b3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "557d32fe-2763-48a6-a61c-77e0be698f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd7dd45-657a-44b2-a6df-94de1b98c88d",
        "cursor": {
          "ref": "4d0534a3-bc21-4eb5-8cfe-54c348759248",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5798b582-22e2-4177-884c-de4c3d312bd9"
        },
        "item": {
          "id": "8fd7dd45-657a-44b2-a6df-94de1b98c88d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "94be3f3c-3004-4978-89f3-8c13860057ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc75f9-a1b8-4299-a86f-86ce4c2218f9",
        "cursor": {
          "ref": "36a6e1b8-c763-401f-8990-f0748a6d09b4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f5b15902-8e8f-44b4-a231-b0aa01f09e06"
        },
        "item": {
          "id": "20bc75f9-a1b8-4299-a86f-86ce4c2218f9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fa3ea950-1fdf-4bb2-8256-d2b43ab725e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e77cd-af0f-4d88-8a29-5953a681b952",
        "cursor": {
          "ref": "f382c45c-b1d0-4574-a9d7-a0c4b7c6cd96",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d1e15feb-1b65-4c59-92b6-1d928d80a6dd"
        },
        "item": {
          "id": "f73e77cd-af0f-4d88-8a29-5953a681b952",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d2ddccb3-26ec-4b7d-b5cc-22e7b11c9ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d187fc1e-f9b8-4f43-aaa6-8b6ea2044e4c",
        "cursor": {
          "ref": "d4511fa6-9850-4e1f-95ac-7d4d6974add7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "64209f9c-7617-4ddc-b01d-d7e5738d693e"
        },
        "item": {
          "id": "d187fc1e-f9b8-4f43-aaa6-8b6ea2044e4c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "673e779c-4af0-4eab-bcde-2146884eb6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7aa088-51e2-4e11-930b-3b97ed536f4d",
        "cursor": {
          "ref": "d025ccd3-a9eb-43ba-805d-6389b1b908a5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "087f015c-ebe9-4e77-abf8-c43572633004"
        },
        "item": {
          "id": "8f7aa088-51e2-4e11-930b-3b97ed536f4d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "56cfc1ea-d2b8-45cf-a08f-f64ac9460940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6d3920-e1aa-4d2e-83d1-a3d9ca30c256",
        "cursor": {
          "ref": "00cf45ad-7f8c-421c-a328-48b04f04b70e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4c2c493e-8492-4951-b0ef-c5f0ec983218"
        },
        "item": {
          "id": "7a6d3920-e1aa-4d2e-83d1-a3d9ca30c256",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "abfac6ce-2d37-47b3-9055-bf1b86e243dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6b94c1-946e-4e82-a363-6af13e2f85ba",
        "cursor": {
          "ref": "b06a9ceb-f5dd-4ebf-a1c5-8dbdc083a4ce",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4fcff0d8-7ea5-48a4-998f-4c27d9322020"
        },
        "item": {
          "id": "6e6b94c1-946e-4e82-a363-6af13e2f85ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9756cba2-4a8c-4b1f-bd89-de5f39d46223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02ab545-88f8-4a9a-9ac4-eb0bba6f3388",
        "cursor": {
          "ref": "1529eb86-fd88-4ddf-875b-f8856b1eb8cf",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a74e9241-5e64-401a-b219-f452346829ea"
        },
        "item": {
          "id": "b02ab545-88f8-4a9a-9ac4-eb0bba6f3388",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7498ec6f-634b-43fc-ba9f-2cda36adc180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45477e1a-7a61-4001-aac0-cad50287d30c",
        "cursor": {
          "ref": "cafaf69d-df21-4943-8b5d-9df7aac47bc3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d7192e33-afdc-4c23-8894-c07a4fccc0bc"
        },
        "item": {
          "id": "45477e1a-7a61-4001-aac0-cad50287d30c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07645b88-0b6c-4c30-910c-2ca734bd8872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcee14b6-fbae-448e-a068-47f969d975af",
        "cursor": {
          "ref": "720d4799-3373-4f5f-a67e-6881de37d976",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4fb341fa-643a-442e-acfa-769533b3905c"
        },
        "item": {
          "id": "fcee14b6-fbae-448e-a068-47f969d975af",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d731852a-43ff-48f9-8361-fbfeba5d4308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a585d9-2415-4984-9159-3df59ca0f34c",
        "cursor": {
          "ref": "d97deba6-0890-412d-843e-0886c7e63322",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "16d7302e-f0b8-42ec-9204-e9fb50bb561b"
        },
        "item": {
          "id": "e6a585d9-2415-4984-9159-3df59ca0f34c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0ff69fd8-9849-4b7a-9826-16c3429766c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9c0e16-946b-45f5-a306-37718563d03b",
        "cursor": {
          "ref": "bf726e61-b7da-4b3f-9807-c72220fdc8d8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8d3dce83-389c-49f2-8c7d-844f65c1fbc5"
        },
        "item": {
          "id": "bd9c0e16-946b-45f5-a306-37718563d03b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8f0a6f30-14b6-4d79-979f-b791c6417307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43495ee1-5493-452e-b2c2-42e9a119f20d",
        "cursor": {
          "ref": "ebe82db5-a6b9-4b3a-a965-fb25b32880fc",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "81008f9f-65f3-4792-9e7d-3fea013fe11b"
        },
        "item": {
          "id": "43495ee1-5493-452e-b2c2-42e9a119f20d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e17ee207-ae67-4749-abbc-13174d38732c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3270ef30-fd3c-4559-a61c-8063a987e609",
        "cursor": {
          "ref": "1a76d0e6-a6a5-451e-b02e-2e012884f821",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "000a13bf-a36b-4d9f-b8c5-fccca215e281"
        },
        "item": {
          "id": "3270ef30-fd3c-4559-a61c-8063a987e609",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "48691974-4e3a-406c-abb0-d28aa605ce0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e800aad-54db-4ec1-b83d-95e9867f2005",
        "cursor": {
          "ref": "0c43a272-2026-4ccc-acbe-d4d8267f1225",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a35413da-de6e-411e-a629-5fc5b902f4ee"
        },
        "item": {
          "id": "8e800aad-54db-4ec1-b83d-95e9867f2005",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "53d56efc-e9c5-4135-8fe5-1ffb601d1a89",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7968ed-0d96-40dd-80b7-771977f93354",
        "cursor": {
          "ref": "a5c85f5d-b1b6-44f5-aa4f-569aa4a8e2c6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6f5780ce-1039-4e61-8df0-2aad733411b7"
        },
        "item": {
          "id": "5c7968ed-0d96-40dd-80b7-771977f93354",
          "name": "credentials_verify"
        },
        "response": {
          "id": "35181338-b2cf-4158-a6ab-dfde07780553",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "123a1fcc-9a2a-4a0e-8ba3-31c24a63d28c",
        "cursor": {
          "ref": "a9353f0d-bdef-4113-931e-c0c698b7c0d6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0d71973e-60fe-45e1-ab45-6cc3740e8d97"
        },
        "item": {
          "id": "123a1fcc-9a2a-4a0e-8ba3-31c24a63d28c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "afc4d654-e30b-4f6d-8048-a938696ee8dd",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a8a087-5ec3-457e-a344-0bf09fd397b9",
        "cursor": {
          "ref": "48fd6ea5-d535-4752-88b7-6dbb7f6bac98",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "70cb99ea-22fb-4f51-9285-8fd82c98540f"
        },
        "item": {
          "id": "55a8a087-5ec3-457e-a344-0bf09fd397b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef1d8b61-98aa-4008-80cf-1759c5018f0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a8a087-5ec3-457e-a344-0bf09fd397b9",
        "cursor": {
          "ref": "48fd6ea5-d535-4752-88b7-6dbb7f6bac98",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "70cb99ea-22fb-4f51-9285-8fd82c98540f"
        },
        "item": {
          "id": "55a8a087-5ec3-457e-a344-0bf09fd397b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef1d8b61-98aa-4008-80cf-1759c5018f0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907beab6-c1d7-46c5-82a5-3bb3cd0935b8",
        "cursor": {
          "ref": "59d5b625-dd21-4b59-92e5-ca011177a0d9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f5adef04-3f4b-418f-ad48-616da0266344"
        },
        "item": {
          "id": "907beab6-c1d7-46c5-82a5-3bb3cd0935b8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d605b4ff-4244-412c-840c-18c5ea6e1b0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2793d3b6-e7a9-4cbe-96f5-11a311e68d9f",
        "cursor": {
          "ref": "5b650a56-39cd-4c0e-b346-8a2ce0069760",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "96c4c751-448b-4a44-b274-93e5120e3383"
        },
        "item": {
          "id": "2793d3b6-e7a9-4cbe-96f5-11a311e68d9f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f9184265-f106-4031-b298-33acec7b5036",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}