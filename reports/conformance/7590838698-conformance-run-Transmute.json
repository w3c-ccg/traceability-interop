{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "861c919e-8766-4727-8307-497f811ad289",
        "name": "Clear Cache",
        "item": [
          {
            "id": "babee1aa-f897-46fd-b068-eb691f434e10",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad7a1775-bca7-40ad-82ed-3704e08b3375",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d1ef5677-bc2c-4a16-aada-7c658dd508cf"
                }
              }
            ]
          },
          {
            "id": "7f77fc88-ab41-4f35-a6c6-e4d2c9919a96",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80befa07-d3e9-4586-99de-336fe38fc4e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dc3aa132-fa61-4941-bf02-18e5bc9e7c20"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "913dba8d-9081-4d28-a19d-9a267c032fba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aca4b07b-1b19-46e1-ba81-67dad85c2e23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e78a3823-f1b9-4de1-84a4-4db7ac685fe5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50a4fdba-86f5-4c9d-ab51-93c563223f24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e8f3375-b0fc-40f2-ad86-6e8e4695e595"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ae32ef1-686f-494e-923a-5c114ee6a9bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac66c727-8846-4f86-9fc9-a572fffddf05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99f60d08-fe38-4ba0-8451-1c9d16c443e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad3dd518-d7ed-4927-a500-141e02fce67b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1aa0d2d-c4d0-490e-a291-c00aaa9eeed7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bbdea91a-5372-43a3-b7bf-1346e082d197"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d6f82be-a9eb-4593-ba32-9afe5e96373e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95126afa-0208-482c-868a-3fd49a148ae7"
            }
          }
        ]
      },
      {
        "id": "8a57fa82-6a14-4c68-a718-846852ecb50f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e8003da7-a7d9-40a8-b9b0-b4029396499b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c370f4cb-0096-47c9-8546-998e35171ae1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b4a17fe2-c7c1-49cd-852f-9b29acde378d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a125e84a-a7c5-4460-99cc-9f624e8e1c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dd35613-6be4-460a-850d-228a89fb09c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e815cb5-1a65-47bc-9b2e-e3f388d37750",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce405092-2ca5-45be-9ceb-e495b7f6658b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c029999-7dd8-4b0b-8c3b-5bb34d7c7caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274d470f-1eed-491e-bc11-2fadc6443b2a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eecd1aa-21e9-4f2e-bb73-13c3312b3c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7c63d56-bd8e-4726-87fa-9568e74b8c1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f064977f-b620-4342-bf44-5be79ef86cd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9b6da4b-40e4-42d2-962f-f4e8f7652ddd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fc6179-480e-468f-b3f4-a256ac611367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76d0d0ea-e316-4a14-abe4-5095d2752561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f43093-fbf1-428a-907e-48df79e9350b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa7878b-4e90-4547-b6c9-843bca27bdd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1189c6d5-fb72-4933-831d-0880b4af21ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "250e7f99-52d2-4566-898e-030d6c9d6ad9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96c78ddb-8b00-41f2-a785-744835f21f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a0a4be35-a6f3-4cc4-8ed4-295f3d3f28ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "621c54af-bbc4-4f65-a1ac-323209ef845f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8b4e89c9-c1b6-4098-bedc-39b34ef17874"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f29d9960-5b2a-40d1-8386-7a97249c6b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3248c2c8-e9fa-4d15-97c0-e08e0ae42142"
            }
          }
        ]
      },
      {
        "id": "7073b922-016c-47b2-90cd-c0aeb7881b54",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "edcb7bdb-ee13-472c-93a0-90d8c5b76844",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2e0bab7-ee4d-4ace-b7f8-949b4055c19b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1d97561f-dfb1-49b4-a943-f854ac808cc8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f35487b-940b-47b2-83a9-f2baf72792ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69247cf3-f6b3-41c6-8903-71ca7f5f9890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90254f6d-6f0d-4a0e-bca2-b5b0c8465eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cd75ddc-c9aa-469e-bac8-a180c2a75a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6dacb7-e117-4af8-a37e-51ae595d0d52",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673274b9-aed1-44c4-baac-05cfba1b0fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d437455-067f-4029-934f-e17c761702d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a63e839-b202-4219-9ed5-942295175fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e41e2f00-03e8-444b-944e-82ee2c460021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46555140-820e-4049-9bb0-50ab75591476",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c8adde-f7fe-42c1-810b-a2a4af6821b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3776663-0c7e-4fe0-b63d-fc588227df18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd926d-933e-4bd0-984d-12d804bd4af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ac1e5a0-9f0e-4fab-84b2-84338f095983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcd7963-72dd-4e56-8273-b6e3cb5e2fb2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4ec96d-e5d3-49e7-937b-ac1911c5d913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0820d401-39e6-4b40-91a5-becbdbe72edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75950ffc-73cd-472a-b00a-ff0bfc78cbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1922a92-5ff2-4e4b-bdf2-be7adabc0ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa80039-621f-4436-af2b-71ebd106b313",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deab0ae7-bb6c-4d66-8142-e1775e563852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ed09f5-ebe1-4db7-889f-f232d93e5142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534123c5-a389-43cd-8780-5b578f13872c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e552cdce-311c-420e-9e54-9efb11651923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cd4f85-55a7-4a72-9a5d-0bb046e38806",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7c6b4d-d179-4146-9c86-1ac3aeee6592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a053c9-9725-4112-8f47-7a21f8df45d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a9ec6-7bdc-41f1-a2d6-89628e53b82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6614d38f-7ccc-49fe-972d-b667879df23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731d995f-6151-4856-af94-e71c2f819066",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f74b3d0-95a7-4019-9b3b-c98baf24f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3915bdd1-8570-41a2-bf7a-0f94801fb2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f26aa5-c79f-47e3-b5c1-d0856eddd504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c84f48e-4611-498f-873b-dfa9ef6ed5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6baa4d2-7839-4f06-8de3-5400f051f4f2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c3f82b-7c56-42a8-a462-084765bd860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9c2080-ffbf-4165-b161-629165c4057c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3977b3-1ae1-43a2-ac37-0ed890324bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81597393-4854-46e7-a546-8ecb267f3594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13331058-9e83-4e94-b341-611a26b2087f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6a1ab9-abfb-4ea0-a8e0-80f1ab441c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534dfbf5-c048-4a0b-a646-d6687ebe5bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d70a3b-bddf-49e3-8782-40be713716ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db3890b0-5143-400a-8dea-d5d51b90893c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1737987-209a-4fa0-9337-22a0e2c8e0cb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d740f4-cdab-424d-8e90-279a803e1311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b4aee4-46d4-47b7-9e99-115d9d211aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba12efa-696f-480c-b7b8-46d6927c5167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32276b4c-6121-42de-8dbc-f44acbad4c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac0c501-d251-4379-9aa5-91a18fbc91b3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b48e61-4916-4f87-8286-be1392acd1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a546caa-80c0-4f98-81c4-6d4cc136788f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68569357-73ce-4322-beb5-f142e70dbbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ff4db2-bd18-4c36-b6b9-30319aff62b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e868f3c-c20d-498c-b4c7-a5291fe37699",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9c757d-cf9f-4164-a34d-eca2b1ed0789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9eb80e4-5ade-4626-a4e3-4955b74a61d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84752432-02a2-4d7b-bd3b-a83309ebdb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eaf2a75-848e-4ef9-8d61-d29553eab78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666eb05e-d77e-42cd-841d-507bdb93bf47",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b1ec94-a49a-4273-ae95-090746c42a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c62712b-4639-48df-bfee-9a75f331b574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9029f6a8-a1a4-4346-b466-7ab63f36f554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "395f200b-c6d1-4e59-9772-bda1c23912f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f3ffd1-cbb8-40cf-a387-e18890a5f6df",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b6e13d-0be6-4f1f-8552-53d860f55ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6ed8cb-0017-4594-8580-697ff79fdc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb7c7e-1377-4e5a-a71e-c0e62b4d738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889234cf-293e-46f0-80c5-f5dcd1f40f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0375bc-d06e-413a-b684-f61c5ac2b1ec",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f657bfbf-80fb-4ce9-a761-3f8b0317ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee5d888-4409-4e51-b1a4-f7771fd21e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b18e61-c7b7-4186-9d10-1522ddf7087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c2946d-9e47-46f0-b000-676fbdba412f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a080a1b-bea6-493a-9adb-e40972421098",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08d8990-9a24-4f13-b407-cfda450a5095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c13e8dc-6097-4293-9882-c44cf5cba2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85802030-cad3-406a-adff-ce52d52c286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a3f046-e71c-45ef-8e53-422f2b8b0c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a35c58e-e2fc-4706-b3a3-806d0b56e3b1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d243c4ac-1102-4de8-8d9d-46829907f801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fa40a4-38ba-49cd-9f5b-ff1321e15fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3677d6-6a9b-41f0-8c26-f9abf19d2456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99fa5481-86dc-4cc4-8b54-b209889561bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f3fd0f-7b5c-4fd4-8d5a-cd280480e09a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b2727-ce6b-4421-b297-7a0ecdb668c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60526bf2-edd6-4e5a-9a88-9699fb63f6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20270bf-0ba7-4c32-921e-94fe91689d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0e0107-baaf-41ab-b319-fc2cfb6e7ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6728762-36c7-449f-9dbe-3ace6bed68c6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e58110-afe8-4aa2-8fe8-fff33ee610b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9434d315-08a0-4f28-b769-4ee4fe0dc8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0070ad43-ae78-4438-b192-38413648286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d2d13c-2c5a-4378-aa4b-68025e74ed46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16120f8b-1c6a-4e20-a473-0e48fc439f99",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631b8a63-1778-4847-bccc-2b1c89b42081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd5f865-de03-4893-af73-060d7b9b7405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f63d5d-35a6-46a5-b66f-edddb3ca8884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade7e296-1252-4fc7-8881-da6f8c72562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca66a70-9ae8-43c6-baea-30d89524c36a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d6d1fb-dfaf-45c7-89df-fe2834ba5b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385b7f3a-9c6c-4689-85ba-4837f6beadd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27222e51-27da-472b-99b9-bd1bc5209dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2893a0-8c7b-4cc0-9fb4-2548de3bb99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d2c200-a63c-474e-9ce0-37ee097bc559",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505cc086-5f9e-424f-baa6-3aebc8f76771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5717a5-daf0-4497-9ffe-8aa3355b870b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce4170b-9624-4c37-8321-f4b3db1f390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa39e5d0-1252-4489-9f04-4a0d27239c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73f418c-0864-464e-b20a-41a57374cd63",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adef4c9-58a8-41b8-9b9c-969f3d4890e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d91556-e997-416e-a167-d610b8f6e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584732ce-a151-464b-8b1f-4d05c32e974f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a613f803-42fd-4ad1-a6d9-36b063f05e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574b3fc-f436-4ada-aa1d-f7a496d3311d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d70a97-09f1-4d83-9e9e-887f2689375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7f2c4b-429b-454b-9d83-faa7c8b732ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8829a7f-4f09-4374-9c6c-54b89ee515ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd47d944-27d8-4aca-b049-0b2c35b7a1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315a785e-935f-41d4-bbf1-f36c9fa672d5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7e7a1b-5a2d-46c2-94c5-fd95255e57d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d02c9ae-0901-41c6-8faf-9267fe0d6b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de2b84f-20e1-4e32-86ea-b0f543e0c13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "728718c5-809d-4ef6-992f-e9356aeea944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59584517-030e-41a7-bd59-a701633e1010",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4236fdae-8c9a-49e5-b639-0cfadcd114cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba68eb9-10dd-4403-99eb-4a0380bf1087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546b20f5-039a-4889-b331-8a766d896d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef0e9ee-d069-4fea-8f71-b546c1caf123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f6aaac-6340-4ae1-804d-1c534b008752",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f973f6a-65d2-4deb-8aa9-847cdeeb4dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e999bcfd-3972-49af-b002-c55d19d9e823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47ff33e-6cfe-43d4-a037-c44a107c415e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c39751-97c6-4f41-9bd3-2bca55ea9be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac5dcc-95fd-4e66-818c-1fe247a19c2f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7b1fc8-a4ba-41e4-9ce9-a067df9008af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f37bcbe-3e5e-4fe8-9464-fc526aa00b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc12ac48-46cf-461e-9cdd-0b9b140c64f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72627c1c-6ba5-4c2d-89b4-6b506b960550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec88838-09e6-4ce1-9309-b99a159466e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2e7602-08f4-4f54-a977-4e97dd5ac723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e3c92f-a515-42f5-9789-3ba7ccab88e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595a6577-d73c-4fe6-90d3-a7d4d4e30ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c15911-f72e-4a9c-9f8a-2961872387c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3be713-882a-4621-ad2a-599cc0ac9b1b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d321e8-e40e-4859-ab03-c2bf709faa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883ea8b9-cc83-4003-838d-a6448a43b5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578332bd-2684-4439-b83f-6b678a6fecc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea730d0e-5272-4cd1-9772-9331cccdd379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeaea8e-c384-4e29-aa6b-2a7e08d52e4f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692ab205-eefa-4f71-8021-0329018b5614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9834d2-b534-466b-bc4a-50327856a10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50fc52b-8fc0-4284-bab1-24c06a1b30a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37cd616d-3a2a-4fd4-b6d9-925188bb9a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f2bd8d-e752-4aa3-9ca5-3dbb7305cc7d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5b75fa-c170-427c-aab2-270c8456f6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929793c6-9bb4-4cd4-9605-8d790ea576f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bcb636-e51f-4c52-8a4f-2b32860cb0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6988adc0-1397-4ca6-85a9-47e09a252e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66a517b-3724-4e7d-bff6-90020fd25b7f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7d3894-319a-4823-9d64-e2b000d986c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91485a71-8355-4346-8215-eee45ced38f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbbed36-9f8d-4ba4-9641-d93d2aec60b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f7f8d7-3b00-4de5-94ed-39540515bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda3da53-6d96-4343-a308-851d5712a8d2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6047f1db-2572-4f59-91f7-186f08664a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9c8d90-d442-486f-a874-118a3438bca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0c1d38-90de-446e-a476-460a4a20fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c367790-8353-417c-9011-ba875d8634c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e87e5f7-d703-4bc8-ac46-9b096df70e81",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8563cc-1369-4bb6-8427-6b91748b8ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092a8003-cfba-4a01-bb88-65337d2f7c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ab0933-7842-46b0-81c9-216f8fa9fdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fadef948-0338-4e25-84f8-601dc4f3acd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab9bdba-9437-4f0f-9dc5-fae0284aa215",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cffa1c6-7933-4e3a-bc8e-c95578696506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "599e7a12-eee7-4dc7-b0ff-c6fad75593dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b61e397-da52-4136-9b65-ac7969f1220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20df4a48-3dcc-45ea-a2ed-12f79a8c67a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921d49ba-2adb-43cc-949f-7819a281f5b6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314d3bcc-b745-4585-a9cd-dd8b401217ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c04f1c-fc9e-42f3-9d22-abead3114fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc343e66-b84a-4042-bdef-481dc466951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff68fc1c-16ac-4554-8f24-436d4df0b8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e068a9-ea0f-4a6d-b118-a95065a16f74",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645e7863-2e39-425e-a43a-d40f40035d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b7c808-7103-4247-b64c-7dc7f056f9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4463dbc-eb22-423b-bba2-2285acfa6bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "22959603-d69d-4964-933a-528841b6a8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d08d5e-a07f-42d4-b4bf-491e523d362f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0711da61-e1b7-4f46-b824-8659e007897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2dc332-201f-48e6-bf94-15780d9b8bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873ac330-bbdf-4a17-98bd-1f4f1738c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2352a5b9-7bfa-4ef3-a809-ace9280be73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae6305c-6002-48d4-913a-63ce80118bd4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492d60eb-e057-40f4-8d95-718a73dbdb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802c4abd-115e-44db-a106-29452a3b307c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66e34f1-13e6-4ca3-b11d-d62eeb73c4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "107ef9b1-bfc2-4148-909e-c11e3d8ecd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bbbbd9-9c1f-4732-9ac7-1fc118cb4a32",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25911dd-291b-4e03-8828-b9d3f036f99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6799046f-c6ff-4f13-b6ac-2a5675144e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c083f-0d63-43d3-8d37-d88fd3a7da26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b7ba48-1f86-4f28-abbf-62a93d443c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeff6bd-2284-41c7-ae28-d45e154090bb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111d4155-abcc-4b25-a080-2c364aead903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9b73fb-e430-4c94-bbd9-99f441d6cadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd7aa05-5ecf-4c6b-b34c-195cec38a135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d2018f32-58c5-4ae6-b5f5-9f4411e2e042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9c174c-23b9-4069-8463-c07955a975ff",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451c40e0-9651-40c8-b0c6-8c7e259eb529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a150ad-9c2d-4444-a9f6-72a3a70a4d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431f6421-c2a8-4ee2-b6f6-884df3cb9d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7852e5c6-4acc-4089-839c-1a90b853030b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5926f3fc-709b-44f8-9298-ab2574af4297",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5459cb92-ec8b-43a8-9e3f-f337200282f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c973b90-3378-4a37-89f7-29b5c4303fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accbc8a6-3e57-45a3-b4d2-deba06b81c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c44df62-d94d-41b5-9000-722123f0bf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e6c3d5-18b1-41e4-a6c4-2fc3347c4e86",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af74e68-005b-4b63-8029-caf83e468275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cf6d8e-9303-447d-927c-5e1397bf06d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa24a65-d3a1-42b7-bd2f-66beec4213e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d7b626-6af4-4277-8892-809666c62415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b3ea65-5361-4719-9b3f-10784c40a62f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744d74a6-4d8d-4dc1-b096-17740fb1b573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4325cfb-2ba3-431d-9cd2-abd0858aa42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0508c1f-91b3-4b98-aaa4-475e4ab11d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c93c134d-06c4-4a07-9059-6e31531484c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06addcff-7ba0-48cf-9841-4ab2049c4b20",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a7515d-8ac5-4e4c-9022-dfbb77d9ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe37049-9bc1-4097-a004-56fe6f5f4964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0839f122-f471-4a38-8693-9a73406cd419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b015ab5b-47ea-45cd-b792-054bc087a1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d01cf3-6617-4a8c-ac2a-3a94857b227e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f007f92-66c6-4c0b-85cc-62223e19918a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92dce90-d495-4064-98cf-02755fd961a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabd29c4-f133-4016-8aa0-eae665e74113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f17e1b-ab26-447e-b94b-aa56e07873f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1c2663-1787-4bfb-b433-c3c46cc24871",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d3242-73c7-4ac9-9860-4ca3b487e937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c670bbce-1eee-4f66-acd7-4aca0c2d7769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196697a5-c057-4919-8c34-c86c05c404b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2dcb42-95e1-4c9d-b82c-46c840d0f16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42fe78f-975e-4286-bca0-ad7043b61189",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120319ea-0618-456a-bc08-f3caf2d03d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b05c26-ed8c-490a-a4bd-ae0c67542338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6df2159-334a-4165-819b-cc6ada2fc8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd22210-7baa-4155-83e4-b30979598a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06efbd60-1781-4956-aa03-ab52c3e08cb1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c171814-b9df-4ece-8999-188d68165b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5817be19-21a4-40df-aac7-96dfe4a4fe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd47622-0860-4c06-8738-2c6992e8fe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "881e6a9d-2acb-437b-884a-b4c782fff50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b64b2b4-cf6c-4065-957f-b07b2ee0ec98",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca5855e-b7a9-4bb8-b88e-c0b43252c8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a7c245-f847-4cf6-a265-218a7c1e3a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c5b984-dd08-4787-9d3f-b379ec66f640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8c84e8-05c8-4656-b538-ebfab23415a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9642a51b-fa27-4192-a6b9-daccd4cb6584",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae5b1aa-8bef-45e5-b208-bc928a4e4426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252d15d6-f597-4aee-a819-b642303bd87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca787951-3527-404b-8737-238896daed4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c390d38f-3ea1-46b2-b4e7-3b6e110a6a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8c4366-ceba-4d6a-8e71-aa197486abc2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8b0bc6-fbd3-4536-8fad-24bd634dbc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf93c489-2946-4e09-ae0a-cc0503b32454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7731ad-e02c-4611-b299-4d85154daf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "896d5e7f-8bc1-431c-81da-d4f78320db00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac3138-feb0-49af-98bc-b615d683855e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa8f2b-3c7b-4fc2-b691-2e8f258f49b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a140b4-1835-4599-a6fa-31322ab96db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea2f518-b5bc-4cf7-ba6f-957da4017131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5baffa0-a8ad-4b61-b3db-73dfa0b5197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f725f67-97df-4e87-a3c0-e12a7961baf0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b3c2c-e2d4-4d4f-81b4-9535fcee8f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f067dd9-d55b-4250-b7e9-b1dc966a21e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662a0f25-6640-415d-8c04-f5dda10bc9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a90c99a0-3564-412f-8450-d8347b3df677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d15215-d81a-4ae0-84e5-9ef99e616b49",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facaf9e7-ec6f-4032-bd80-e8f79bb0e186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e75c11-2d7d-4892-b910-24dc7f3c091e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace09249-46c0-4932-a173-3a590eb80d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bfa8bd-5dc9-4e57-a506-754a24e7b1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9789485-a9eb-448a-8725-a6f5f182754a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6703b205-b41e-437e-9366-6ff159c1207f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3828661-02ac-4ce5-adc3-1ea46b9635b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc3f052-fa01-4e48-ba9c-270d1605c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97020d04-ee0b-4503-b570-c4b55db9961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded1c682-471c-4a35-a5a7-f2f93bb3090f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4073eade-38f3-46c4-931e-a16312d7ef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba395b88-8c27-40a9-bda5-99769e1f1e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e0a083-c25a-4269-8114-e671e67800f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbe8685-d7a3-49ec-9c4a-056641631d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd584b5-9c38-4b0e-85bc-3d93eb14511d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0b515d-1d30-4863-8629-b06e721ce918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcae4eb-1587-42bf-8aa5-57698119814b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2b90db-be1c-4c55-8254-17dc57767d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb0ca64-640d-41ad-8db9-cdd2e422b664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e395b4fa-8d1d-4baf-920c-b8298b63ba6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8795304-bf66-4323-ba73-a8ff6f0ceefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e587f100-fb58-4a42-b023-074cc478de0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfe6191-1b53-4de9-93ff-ff737ee1d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaf3dc5-b9fc-4f9b-adb0-4b6671fb9189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d6d820-9de2-4731-a8eb-8edb2a9979cc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c02511-b98e-4e05-bc98-03f7dd50f68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff992b7-506f-4f41-bba4-9e6079b665a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc374450-f960-4cd3-a79a-db555b0a9114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a061a02-c649-4d6f-911a-e6c1a54c81ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc29b06e-4405-4c63-bbcd-925cd2396a31",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e5d4e2-5486-4596-ab29-b0fdc192801d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566f65f6-675a-42c4-9000-bac044d342f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85022e48-552a-4186-a1eb-f28d2a30665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "368667fb-a1e6-4297-9b10-6e1bf8163745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a95cdd-b492-472b-b64a-4a5e0688e8f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c31eec-8fd6-40d8-9c5c-59d08ef366bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3602c981-90e0-4faa-8e82-f091d819bdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68ff82e-8baa-4b17-8f62-b40ec5f52f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6df05b-1f25-477f-8963-454a57c45ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a043c010-26f1-4bba-97b1-6f75154553ab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f63de6c-8fe5-4cdb-b49a-74b2644a494c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9588287-cc70-4a06-a823-19d9a5a377c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b40bf1-f45e-4215-b535-cce3f8449930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80311e47-0621-4dbd-9a89-0454e5ccb91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dfcaa9-8b8b-40d8-be34-f98f8fab1bfe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a0544-c6bd-4864-9733-f031876cb96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0452395-54fc-428c-ae13-47dfefc6a3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e922efef-ba78-47a4-90d4-d143f7dd238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d1b9e7-2101-46a3-b40a-82f443021eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591dab4c-0b70-4fc4-b71d-4ce8ca1997a1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c8726-3f89-4197-a7ca-2bbd994ea398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdbf69b-b9cd-45fa-b726-45dab3582013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f77c08-411f-4fbc-b3ba-addbc3dad549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c6c2eb-be83-4755-beb0-bc4d898362c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fb1d30-7cc4-4406-aea5-128b324f401a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd43ad1e-9dde-4015-bb07-f18a43cb9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30681af4-6f3a-4a0c-a5c1-558ed6076e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa441b9b-2d3e-4489-8309-3196230d136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8870fba-096c-472d-b9e1-f9055c3cc78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b5e880-f48c-4e44-92f1-ce73c7925b12",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640398b5-8e4f-4370-be51-859002f0bfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a2e215-e0ee-456c-8e5a-8b21807ed490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d0ac44-09e9-4ec6-855a-a726ccf4fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53530039-c7bf-4625-9d64-68226f0e512a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f0fce-2ed8-4615-982a-f9711c7d093a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3300ca-eed4-41eb-bd26-3005defa0eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216fc149-4fcf-463b-8d5f-ac7a61c1ca0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd9555c-a150-432f-88fb-f4665692240f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0fa0f6-29a9-4d83-85cd-508611bb24ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87738ce-4485-44f7-978f-1174385d838a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cdd739-4fb9-44ee-81a9-48de66153b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96251aba-48c1-4066-881e-faf45d92bf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b725d70b-e391-41ed-92fb-16aac4c51c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85205c62-3d34-4299-bd29-ca583f940f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59929903-38f6-4571-b4d5-dc0dab0deb1b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4c4cc4-f030-418d-b05e-d6adfd067984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f74380-a990-45af-8562-798d30060cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59a439d-fd86-41bf-a1c2-74e1431d6d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d875813-fef1-4470-8637-264f8e8ffae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1fa8a6-4dda-41b3-b3a0-59139e7160d1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f224d83b-f278-4b54-ba2d-97cb4a55469c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315f9187-a1d3-4c0d-be02-bb45c8e84294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea922c0-5037-4792-87d1-4ba803f1e2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ada82e5f-c451-468b-8767-52b648864857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dba0ad8-25ca-4206-ad3e-825bffd5e659",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c749d2-af47-4517-a3f2-bfcf5df32cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5409e8f6-75dd-465a-b45d-9564c42f1b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed381afe-b768-4a32-b86c-766054036dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1efc22-6304-4b38-9ac3-67223b75d1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a55f994-f600-4ccc-937f-3eb1780a1c32",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92641bea-5f6c-48b2-b1e8-31cc0491dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6887a8db-e9f3-4907-a4be-a950465e605e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd7acc7-643e-473b-b70c-9b980fa9d27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c6a0b7-1315-4631-8a04-8c1eb3815eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0a9e61-baba-4755-b849-ef88dd4aa3c1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8607386d-5b1e-4895-baa0-c3fb50f8b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaffb5c-7ec5-444a-82ea-2e0a138dca6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204db226-02cd-4744-b671-5544e70a2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea8d284-92f9-4386-afc0-ecc3284b0dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b31796e-a8fa-4c42-af7e-af211ff8fc8c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ebd3a8-c9f2-4890-811a-5c1ef77a180b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e354883-b679-4b4f-8c89-72eff81e0ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d8982e-0350-4e96-ac11-005e21eabb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "276a09af-9c60-4072-8a90-4e077faca0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3326e4-567d-4a1c-9418-bcf12bf886a9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49014c6d-0f3e-4cbe-a448-d7c42236020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731f0dbb-7fbb-4164-91d5-4a5eabc94392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa71a0fd-228c-418b-baf5-7aba2a255ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "156666fb-5459-400d-bb01-69a4cfadae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4b5725-8082-4140-a96f-f24e8c085b76",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872088e3-8284-4cf0-ac3c-56850a8884cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01045a0-c70a-4e8f-b417-a4c2cbb4f4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55711045-91c5-486c-9ed1-21f40bf85065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bbb52e-4d1f-40d0-9b72-c2fc8f9b22fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a073dc9c-7507-413f-91d6-106118515887",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaf2e04-50cb-4dab-84a9-8da0c33c0493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856b6de2-612c-4307-9809-3b09f78117d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5189044d-76e4-4545-8139-d080cdafe69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd3834d-5f43-4905-9fd7-b5fd519da80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d8c6c5-296b-42f9-8d35-7e67e7f5c6b7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe27dc8-9c05-424d-a690-798a2335cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdb44db-1f58-4fec-8906-3cc28fbd6275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8090668a-9721-433a-ac23-19bd455b6064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cb0ce8-160c-47c7-86db-c1bc68f10fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8382f0-7058-4a15-8a0e-808e6a6601e0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c462d90-10f4-43d0-bf20-0d8e91cf641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a892f29-713a-46df-969f-c57fe8cbdc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177655a3-1654-4eb3-b0b8-16251b005e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "377206e6-018a-433e-8fcd-10407225831a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6d92d6-0af4-4b78-a5bb-16ee781a3d44",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b53e8-5f8d-4055-8a0a-343f9ae55920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15a4625-2fc0-462c-b9de-32f0910a9b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efdb6be-6ea8-42b9-b1b9-07586e06d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade3e775-72e5-4716-b74a-35f1f7900288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf190734-d7fc-4317-9339-91274fae6477",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f19d59-e575-4e28-a052-3f4f915871ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05a388b-6a22-48d9-8544-76b1bfcefae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4c1a58-d835-4b37-ac26-9910e705e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4baa140d-1dde-4473-a1d5-719202b58c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ceb3f1-50ad-4c78-8a5b-bbf90d710e83",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928ebb6-afa8-4920-b02b-5f94666a89d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f49948-4738-45dc-942d-08b3a302fef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae2121-6afe-4dcf-980c-263704f58c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b91f732-0a01-458b-9f6e-78305962331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14061356-d128-42d8-99c3-89dba117a409",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dca5e8-9207-4d43-84d3-eee5eff6d013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9051af96-58b6-4ba6-b195-12ff465af15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cbe821-37aa-4a2c-b7fb-cdc5b0b5a476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ae3b75-fec0-468b-88ba-882f41df891c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c9ae02-69e1-4639-931d-337cf1e8debf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be3db5c-73cd-48a8-b20e-762cbcfe1a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5b192c-3d96-4d14-9b65-ef8174438ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7411d23-29e7-46f5-a8d5-06549ff24b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a67aa3d-5ce1-4c0b-bcbf-f28fa93652dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9051133c-bf03-48a1-9812-8b855d30df55",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfbdfd1-8eec-452d-8ab2-008979344577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef617bfd-7b9a-471a-aefd-aadf69885448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301a3682-840f-483b-813f-1857edec6b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31dfd039-4c84-4388-80ed-a75fb626f2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3f8752-d9c3-4181-862c-f413be80ce3b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419c2d73-be07-4b96-852a-de21b111eb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a84bf51-a95a-433c-8df9-355ce343673f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e6327f-7f19-4da6-bc07-fe583cd00b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa458071-c75c-4869-b6a9-719a925e162a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fad7409-cbeb-4c63-8893-74cf88a2cc6d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a704ef6-8edf-464e-91e7-4691a5ecc955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9af859-af82-4df5-82e4-b3e5bda65a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ad2471-7a90-417e-aece-8b0cb9c95403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e457672e-3e15-4fe2-8e21-b00b36e80e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743d68e2-b1e0-48ae-9e4d-0bb93d00b102",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf6d79-3f4d-4d39-b5d0-24b8d0c8076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3445b951-366e-4050-8355-6ff6f27d3171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2278dd-b010-48a2-bb9e-d3aecaf720e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4f2d62-d6d3-464a-ae6e-e877948f1207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f008d15-32ce-465e-b921-2c3c1ffb4a52",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67515a7-150d-4570-a719-8c53c81a3b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a1575eb2-c40d-4557-bf54-5d2346f8fe3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2599c42e-4d1d-4d5a-8508-09d5f3fcd700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e776a6-8b74-488c-b58f-c55215c799eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb4f5c85-6ad0-4e96-98f3-2d6bf9e8ea31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ab351d0-da40-480d-b1cc-7b4ae34467e7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154736e2-90ce-4701-9cf5-8ccc2a73c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecacd3e4-5f59-468b-99d0-24278b3d7150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e2c6c2-c25d-4392-a877-4f3cac2baab7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01fb9ee6-8e28-47c0-857d-8efc9a03daa4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7546eb3b-e5f9-434e-8244-7f901438b518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fd3d8fa-cb51-4486-bc8b-cb7da9ebcdbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e677554a-6959-4f7f-bd51-a60d37b4b467",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5721815-dd07-4eda-930e-b81196d2ebf3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd4e5186-ac3f-48df-857d-de129b5f1223",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f66de116-e994-4c0d-9158-9b41fd6ab3ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "935c55d6-8767-4438-9db2-2660239b4531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d60147e-cafc-4da3-9a7e-8d09244c4d6b"
                }
              }
            ]
          },
          {
            "id": "d66d8893-a18f-44ee-9811-1c5e48eb224f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "551e8ea3-2a93-4cd1-8377-ba11de45a538",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2ae9e0eb-2718-4806-9e8a-61ef50a41852",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4a5e3d-1226-4d7f-b4ee-a6adc5c63c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b25f7d7-c559-4b47-a3bc-02784ca8f989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4ed109-2877-411c-b501-71d7669b4b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a08e52c-d0f2-4df2-b8b9-74a65f203711"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7bd8197c-9317-4028-9959-0909f772f2ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6342eb3-dfd8-43de-9515-6f8bcd5605ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9682ac13-720d-4246-a66b-6d9f84f3d481"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a365510a-47ae-4e76-bb16-1e16e0d21690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d87690f1-a448-46a6-816e-efb43c2926f7"
                    }
                  }
                ]
              },
              {
                "id": "a94e5070-a936-4eeb-8234-9f01c77ade65",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "884725c7-d72f-46fb-809b-346434ed6bba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fac7a462-7077-4c37-983a-11b5b5617773"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bc03be3-b07a-49ab-99d5-586e108250d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "376d20cd-c01d-4bf7-b425-9e810be87417"
                    }
                  }
                ]
              },
              {
                "id": "d4a83439-050c-4878-8923-5e07594dd793",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "419d8b6d-e91a-4d99-89ad-470fb6cc86fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76cf5ebe-1f33-4a8f-869a-d28c920317a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "098cbb9c-3b8b-4a5c-9f80-1818809e5f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c420d37f-60e0-46f5-b29c-cc39a9e3664c"
                    }
                  }
                ]
              },
              {
                "id": "96f55ec4-84c5-455c-a5ad-662a29d468d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88bac021-6b5f-481a-9093-4356e52b23f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad8c7182-afe1-4e9f-8f07-e498302b2ed7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3076ac6-9aa9-422e-bd73-1adacbb0a5f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05f0ba0d-7a94-4189-8b9a-f1b5ce6def97"
                    }
                  }
                ]
              },
              {
                "id": "38de1336-b132-4f4e-90b7-b56203b2c961",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dfd2ba5-3a62-4326-bc44-597200c28df1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f0f90f2-9e88-4621-8c2f-3a378a8ad54b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15a649d4-f130-4988-a10c-742dfde87011",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "986164de-7863-4367-8df8-2c8521be3e55"
                    }
                  }
                ]
              },
              {
                "id": "e18d277d-4ce8-44fd-b42e-7367792b749e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e27238e1-cccb-48d4-90bd-25020df59545",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b89ec5c8-ff1e-4b85-aa05-d116a0e4f2e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9ba60c0-ceb0-455a-868e-94e112fa5bd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac4bcd3f-1ae1-43ab-925c-3917be3d08d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55f0094f-2e97-47d7-b502-7b1b98b8318f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bec1e7f-f296-4f44-a28a-bdb2363c5607"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27bc8b4b-269c-45b1-9f68-f4910c5da246",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ab80255-422c-41bc-892e-3d1e1c41a027"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f76ef9e-2537-452c-88ba-d870bf0542d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "86937eb2-9cf8-41b0-822d-e827c0ace186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f128bb84-1e6f-4927-90ec-950b1fc544ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "933c4a8c-d464-4aa6-8ec2-a166dbe25aa2"
            }
          }
        ]
      },
      {
        "id": "773d1721-1411-4668-abdb-b98c570323c6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "736b1bab-ebea-4e93-bdbb-e7a18467a662",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28af838c-be9f-4519-ad44-117092e75f40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68c71aed-a917-4247-b188-5714f9cd32fe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb05ca0-fb4d-4ca8-81b1-a3e70b69e30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2a1036-d9e1-4c29-b1f0-bd29bb89f0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3cd313-55ca-4858-bc8b-ee5173283bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f494fd-f5b5-4ba1-9a4e-89292e876ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcdce01-bbc4-4c59-b8db-74f725a87c63",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5b146d-f6ae-47ba-91f5-05d8aa4af3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c786c0de-6dc0-4f6f-8922-b4ec27fc0e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f628964d-9934-4f0a-8fa3-aa67a69208eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb97b01-ccd4-471b-8660-58ca196f2053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af62a954-d125-414e-bb49-e041bf12f9c2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826276ba-7131-4a93-8e52-128fb50291a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23968715-0d56-4994-9f42-a7091fda8f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed156d5-6ec8-434e-a38f-b7f0de83e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db799e3c-c699-44c1-bfc3-add9e21a368d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091dff4a-13b3-4fec-ad67-f9680c872915",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff073e5-c9a6-4ad9-9cc6-ddefeabee7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775cbebf-b2d8-4738-9282-6fae3d3afbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7378949-7509-44e6-83e6-eb33a0c9c137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f360e76-6e3f-43ec-ad70-b77710e6eb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd467fd6-9c59-4474-a042-2a034f54f04d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c680a898-839f-4cbf-b552-350172ba6fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8810049c-d445-4585-946e-08bdff2a2e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781a62d6-6667-424a-9a04-c378e76b9509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a46926-1a58-4297-91fa-6348e91470a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c7d809-11e4-4ce8-a8bb-fda9fff30ac8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56266f4-cd55-4a7b-b1f7-de7d566d454c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f30ff5-7970-42bd-9db7-4a250b8f7f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1099fdb1-ac0b-4a86-ad05-7687ea80db63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7140096d-50f3-4629-a0c0-8200b9c55018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483f5c48-ae72-4cc5-8b86-0ce075296f48",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83f25c-673f-43b2-a0d1-0f9d8fed149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3986d0-667e-45e3-bfd7-9459b376b6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573825f2-99a7-4924-a3b5-4bdfde3ab4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "80aadbd4-df97-4726-9163-ea3651ac1374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e152530-59c9-4dcd-b8ae-c947497a87b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27ea0b2-b0d1-4bd8-8e81-31cc72292e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433d88eb-cbac-4620-ab0e-39eb40a05762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ec5f9b-df8b-4f38-a789-785852a808d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60a746d-98a5-451c-b532-5643f9b5cdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e93e89b-7072-4f0b-a1e9-b82c2dd1ed7b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bab861-214c-45f9-8914-273f9811e00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faa3d03-6421-4e56-b41a-2f7dc6f55b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dc841d-35b2-41aa-855d-e89ff4c9e4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "748999ef-cab4-4e97-b5db-f6329e64e690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bf7428-af03-405e-a197-711eb20880f1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02565b22-4fe8-4055-ac81-a52937b2a6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e6150d-deed-48a9-96db-a61e6dc96b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f36c222-83ea-4f17-b09b-090d38b664f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7203ffa3-ea53-408e-9deb-87b80b3339c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d804fa28-1789-4266-8865-ffdbb6355b5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2035cbe9-c77d-4955-8166-01c97f5e2dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d19ca6-8b2d-47c0-b5c8-c11ade8f0651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b637335-a054-4839-8c42-41f3119682ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8931f8-bd48-4757-86d8-b21356591806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fc3684-81d4-4fa2-9043-8b0f26c01a01",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00674c01-b9eb-4a53-9bc6-c656c6745b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fede3b63-404c-45f1-8f3e-3bb89f2e5d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e321bd1c-f389-4fe9-820f-ce51f500fb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16d23ba3-f337-40de-9ad7-c3c5f650e3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907c4ab0-782e-4a77-8808-45d4d41b2245",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1631461-12c3-4edd-bcd0-b730b33db9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e889ee-a3df-43ab-a35b-2824d9e256b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ea52dc-f882-42c6-bea0-6c11d43d11dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77798d6d-0133-418e-8652-e828e441221b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056c8543-6469-4e37-add2-f9d20a84e074",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104c9c22-da39-4746-b80a-ac5c632b0522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e693c871-3e8e-417c-a7de-c86352f8ae32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804f9653-9aa7-40e0-8317-ffa27360f158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7fa072-0d0d-46cf-828d-fe35f5c459d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac859d49-3ee1-4ed7-b6c6-617abe9d303a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee3fb3-ad0a-4d41-acd6-d34bdaefc3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9869c43b-1367-4ce7-a02d-9a3e8e88feea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37bf93f-8d60-46d2-9784-2ebcd3911070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6088ffdc-7ccc-42b6-ba5f-120d50c8f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42141e2-4bd2-4f79-a3bc-7055b408f8a8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83e416b-0d6f-4463-9858-84cde9f54fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7092527d-a57a-4ddd-9652-d7bbaa9f40d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb2865c-7643-484c-a1c6-8a9a0cd3d579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ed70e9-7801-4dc6-9118-63c69bfd683f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278bf226-49a9-4ee8-b0fa-4c2b5d90d621",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e465d5e6-bf62-418b-8c68-c22595271a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da56708c-f660-46a6-ad15-63a26afd49e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66900669-c815-441e-8eeb-31fb2d7ce6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "317857c6-34f2-4838-b24c-9e635549c2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bb6ea8-3dff-4309-960e-6455856eb76e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ed9493-1820-429a-86d0-f2fb9633c1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9331f9d5-648e-4692-87cf-fceda5f518f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c280a2d-cfdf-474b-be24-4e864e9e5287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3734cc8e-55ba-4537-be79-766d1fc0f852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd80f49-22bc-45c9-8a53-caac95a66480",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834ebb41-1efe-4372-80b7-96cc9d500e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f893b22-c674-435d-b7cb-210be92d4318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca26704-6e18-46d6-915a-1b6a92855b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a32ed5-47c0-4c7d-9fa8-6f7fcc3171a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac2f4cc-1daa-491f-8d1c-085d7768961f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cbe7f-a52f-4579-bd8f-3e5332d1cec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f625b4-012a-490a-bd8e-a88ba02a8305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bdbe9d-46fc-44dd-b1a1-a02123634c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ff0af4-e3a3-4868-847b-3e8bd9f5d0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63aabe1-3a70-4719-81ce-cdaf11ce0718",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a94b120-c85e-4171-8a47-f5833d486a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b0c1e5-3f5e-43c7-8425-ef8cda6a4a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702cfc85-2055-441f-84b6-c483ccdf0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fcd2c8-d27f-4aa5-9672-5afc30a52cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05924824-706c-41cc-bfa6-4902b2b37b8c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de7e960-36ef-4c9a-9184-8d9c95f3174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b80b8b-2ea2-4214-a095-ca5b9229dbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910b0355-9f5a-420f-b2fb-aed6d4657080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1062a500-7d08-41a4-b789-d075ff435a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4fa9e8-4bce-4d05-981e-f476474a3d13",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489b7e35-d51f-4b2e-8818-d8fc00fa7522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9340b0-0064-4c08-bf0a-e64cc4d4bf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ce724d-dd4f-49a5-a895-9fe32ffc77d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c6a1bb-e774-4f7b-835b-93551f734483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7917190c-3da1-43de-abb2-e533529fabfd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca85ba98-6d0b-46c2-932a-852540761cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791566dc-7e84-4947-9af4-be362d06a4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f068e75-7482-405e-bc73-b8eaaf53132a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862d09b6-1c76-47fe-a533-8a8c707f5a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd33651c-da45-4e63-bee2-c333c8de32d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f4684d-5d4f-4e21-994b-a66d8029d09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c012d7e1-d132-48f2-a566-8efc72843326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f19b15-7d0e-4667-a40f-8b6672fb7092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431c5e53-4687-46ce-a5de-f9b8dc3aa234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ff67c9-b3bb-4caa-be6a-60272ee53b55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c44664-a8ec-4ec8-9ba6-6d656e1b2b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a328c75-78b4-4f5f-b361-70092140a878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb8a38-b033-489d-8e13-2d2c356e061e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d433556b-3b03-4357-b03e-0d1045faf55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35d5d57-caf2-4473-9936-ae1947cd810f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5e852f-f41c-44c2-975b-70a3eae838eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94de9295-c802-40d5-94b7-7117fd11aa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c90615-e92b-46c1-bd10-79c885765835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8840a220-de30-489e-85b9-f4c8dc61d851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16a5497-4786-4663-a1d7-276c60e4f7a7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb46f19-0956-455f-823d-6ec0b7427500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4990dd62-69ac-4253-ac84-0f7d9be3c056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76429d9b-754f-4b6e-b71a-622f764f53d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69df4867-acbe-4a19-b579-51c88abe6c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c3ae4d-4549-4c72-a301-44dcf48c0971",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e811956f-bb3b-43c7-aec5-caea1f3e5de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d036af6c-a771-4135-a30d-68e560d63100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3128c8-8e53-438d-a3b0-e76882798f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d39b84-38c9-476c-b2a4-9461089ac5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e388f80b-784d-480c-be65-f89f5035f6d0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c9d4cb-7352-4272-852c-1d89b0b345ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9925e33-8594-47fe-8643-6c73f6dbb5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19062154-a43b-4728-979e-a40826ba05a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b69a71b-783f-4846-8891-ce1e9dc36ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0004cb-7977-4889-aa27-1a274306dc8b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2466d4fe-e485-4006-969a-8c86b36b442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a3fec8-1a93-4549-9312-1baf8e5c996b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1178c21-bb49-4fe0-b180-0b608b807b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5a389a-c123-45af-9da7-b92a5526910a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b731e792-219f-47ef-9f78-6998b5df6803",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de595620-74af-4bed-9cfb-ef811f6c69f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde269ea-9e3c-490a-a155-baaac6d50d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bfb700-f910-4937-a11a-e0657fec6b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3608d5a6-346a-40cb-b952-217a77795242"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73c04b6c-455e-4d94-b925-9dae4cc04ea4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cca5923-6231-4d25-b61e-c24466445050",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7519e8dc-fa3d-4a01-bb98-c09ee359062f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa588b1-0c99-42f3-ad11-168da75ec3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468b45a5-ef69-43ec-870f-fe3fdc5b73ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fda4b1f7-fb05-4245-924d-37d243ab5d2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c596e7d9-88a8-44c7-84c0-1ed2dd835fdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dea0bbc-001d-49d5-bff8-11e48e1d2e15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae3cc815-a251-4ba1-8374-2ccb37463c17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd92464e-c12f-44a3-ad76-585ceb55762a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6227745b-ba53-4a3d-a99f-5ddf6da6c03c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6bf0ba7a-b924-4a64-a0be-1ec6c256e43d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67a3629d-99ef-46ec-bd3d-b4b339c65e25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43828721-2037-4692-a41a-7f8936236fff"
            }
          }
        ]
      },
      {
        "id": "8b0d3e69-06d0-4d95-b1e1-9732f36d8673",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "28aa054e-aef0-416a-b777-541ba891e1e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0485f07a-e02e-4b1c-b94e-9944c27a3463",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e02c8158-d348-48ab-ade3-7f244e522ea7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460c4e84-57db-4344-9278-bf0cbafb5a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534ec0a4-d590-416f-8a8f-818f0a968512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822ec05b-37b1-4292-a3e9-1dcb88c73f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d474f29-83bc-4fc7-9088-0ce9d67b5bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eda5b7-0e90-495a-a3cd-84a335b39abe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703e8615-78b8-493f-b75b-937bb91c5c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6516d3-b6a9-4df8-9528-81362abed7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668659f-ae17-4626-9b83-626a41b24eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2bba27-3a48-49de-bf61-7c6145c9e2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa92a1d8-0593-4581-a352-a0913a0b4f74",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4779f094-ba2c-432c-8c63-f6bcbd7706df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576bf63e-2ebc-46a3-8fa2-fb04c967d387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8841a63b-61f6-4c46-b11d-6dcece7f5c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a841754d-3cb8-40e9-8ab4-44453f6b14d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d976d30-5518-4fac-a139-f66180f5c142",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b77794d-f449-47c4-918b-2642d153e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc172be-ce9a-4281-a197-aae4e19b1cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacdc201-0ba3-47f6-bbb3-27aab9fff478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "585b0854-19f1-4668-9f5e-4d1572b805bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b49c655-e2d2-45a4-a8a2-a26c987e02e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0063c9d-7cab-456d-bad2-16c1fbf44789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f984fa40-89a3-49e0-9cdf-f3fd225677c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2611864-850c-4209-9d8c-c5415517bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97eb424a-306d-4a8b-8430-9be2281d422d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2671ba33-4923-4841-b8f0-a23f9f1c9053",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1792f6d-bff2-4694-a780-0b9dff843fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbeb833b-f03b-457a-81f1-55427ec5a3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b012a02-481d-4b42-9cc5-ac84f5284bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c65f58-5510-4c39-8798-b1a070d06f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c82d04-cf17-4b5d-94d8-ee31d956b820",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceed2ce-917f-4da5-8fd2-4eebc58e6dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677355aa-5182-4d50-b86f-8d6460183fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc257b3-91b8-4a7d-b711-61067931747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc26691f-f4f6-4673-88f9-047aa2ef8dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a7ca8f-e8b4-4039-ad40-3fdb2266e4ae",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c523d2-f493-48aa-ad2a-3a6c93590eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afe3c6b-9150-4b47-9787-f061065578b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950e090d-ac45-4656-851f-80f1797872c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d952b89-80da-4003-b7e2-2b90fbf8df3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0710912d-aae8-4a47-9eb7-b8943f48178b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a3d35e-edc8-4dc2-a286-76a42f96e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85fb809-1b84-484d-ae7c-1c48a29d0ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736b9d28-726f-414f-b779-5fd1e414b72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1937b48-200a-4965-827e-a609ad4e9ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4acc33-c4fe-4cb0-892f-975fed912385",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d738d6ed-b429-4eb8-b3cc-69635eceaa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9b030e-86c6-4539-b35d-62905dfb6df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a02033-122f-4de6-85e0-d6917a85e615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93f8aee-e4ea-4226-9045-1c9dde0af8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa03fa44-673c-41df-b8bd-37f742029c33",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d0ecc7-8259-49de-871e-985bf657b99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec80ead4-fb1d-40ef-8e5e-297f7366264b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ea6854-82dd-437a-ae04-35032c1836d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f913a30-ed9c-43f9-bdd3-f9cf052c2df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bd3df0-cd9e-4d65-9edf-fb08c61406ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536fcca8-2495-4e2b-bfc0-f0ec6a2a9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0da034-64bb-484f-bc66-7cde24099ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24f8cc-222e-4031-a95b-67a840efa642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78accd05-c55d-4439-a659-8dccc31dc0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af01073f-6ebf-4d6a-8d08-ab3c539a0c76",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8121dc63-df69-48b8-9a15-05cc85b07fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfcf50c-f4fd-43f1-893f-4b8e99bc717d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c51ab58-f75f-48d2-834e-558d147194a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73729e0f-d85e-4f67-9887-b61e746fbcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09f5e69-1134-45bb-9fe9-59ed6f9502fd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9cf8e2-4585-408c-bd34-09ccd757a82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1307d6-7cf3-448e-a50a-01fc73ababa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0814ebe3-5d3e-4c6a-a1b4-18fb696cb990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "506dd644-bf80-4919-b1f5-815a9f88dc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3244d1-0a22-4af9-be5f-5c1ec25c0075",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4189f-889a-4210-8a41-309cd91583a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252a6636-65e9-4289-bfe1-3a19d7f8ecd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0fbbe0-2c08-4cc8-9169-baad7a28debe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f02fdb0-3b5d-469b-beea-021cb3d7dca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74a8f9b-2b78-45df-9292-2127df57cd29",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb3f541-6903-4b88-bc08-cdb707491af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d67784-1083-4680-a51f-9a059beaf887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409d0814-4956-4fed-a69b-05ceb4099ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c13cb8-939b-4acd-809a-ae9a3c82fd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af062e26-e515-47f6-80ec-c999aed259bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b953cf12-d29a-4a71-a8b1-96faac0002c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f192a5b5-fd14-44a7-a4c5-345a4071d4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172929f7-78b5-4091-bda3-bced0f637ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6077bd6b-f97b-4709-b4ee-cd7d590e08a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844d614d-3483-4811-ba17-f1671cf6d8cb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd963fb-85f9-4348-b99b-fe0c77bd0dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70911ded-6e93-4c38-8afe-89a39b16a54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8719f2c-24d2-4355-b148-37a50dd568be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd95c4ce-a2a9-4720-9cbb-66649f341753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8f86e5-495b-4a29-8824-c7be0a05c547",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a684d-abef-4352-acc5-4a148a85d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83622029-e544-4025-8004-6f74ec59ccc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf0b56a-138d-4799-ba78-31d4ab9a8a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5eaed2-4725-45ca-8355-f6cef5d71af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e210d12-db6e-4053-9c9a-b1028cf4e4c6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b2a44f-6777-4bc3-ba27-6a20a6d98a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564b8458-3246-414d-aa70-caad69f776d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a44b1f2-2b43-4d2f-8b4d-0ebf7cb55140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeab3972-aa56-4172-8dbf-aacd7198fa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb84a025-df81-4dfd-aabb-b0079b3c8dbb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82fe644-f113-403f-9a06-576154468af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b9294e-ff1f-4096-bf78-dfe6c5fbad0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc81ec5f-c3ec-41fe-a428-585809f52aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc33727-4c77-433b-bffe-a06ec00a28e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96325566-ae55-4c85-b2bf-bd693d1c1c16",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e3fba5-7bc1-408b-8cfb-d1bf8a5ffa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930912a6-cf3d-445a-a980-384c6acd01c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0a8ce5-121d-4c94-9498-b3f1ea893855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7ba62e-4f5f-463a-8f8b-b0925f7c3ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d95e56-6378-40db-a149-1bd510a11658",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60558524-60c6-413a-9fa5-e14a57d6ab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6008fecb-52ec-40a3-97a2-83a98050e0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ec5964-0205-493b-a283-bfdf220acb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c3c668-44f3-4152-ad47-63d9e9a6aae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563c7bce-5230-42fe-8b09-a82ab8f143c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c544b51-94f1-4e4f-9c84-a2ff7585dec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383a14fe-6ef9-434c-a075-61274796a61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2326719-4eec-4a04-a468-1ad199a96522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45dfb37f-1371-4136-bc0e-a31269f8126a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65085a9e-42c8-4966-b9a5-ca0a4354819e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec8671-7514-4e76-af4b-e0fe6b401df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edde4380-e87c-4bbe-8ab7-85417abd7ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a77e708-b5a4-4938-8cba-06c773ca2f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4e0b1c-a456-4561-9019-618c621750ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960dc6de-f5f3-4564-99f1-eee938ab4ee6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2c2275-c730-4636-b4f4-81022c90213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9ecc9e-1141-4d37-b2e0-24cebe145e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc4573-a95c-403c-8fa1-a05ae94dd6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82afcaf-00bf-49fe-91dd-58973a0ac043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763ffb16-b9cb-43f7-83d5-9498c21df53c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff19180-081d-4a2b-b2c6-790abf53aa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840ce1bb-ec28-4540-b9d1-57ec0ed13187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cae01c-a8c2-4c70-bbe4-d84d35a0d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f76a18-d12d-431d-ac1a-f52c883c401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56e16b-779d-4d5e-a39e-95a11bf01c6f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa34b755-e90b-4f8b-97b3-96659a7c16ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830a393c-8828-4979-86dd-aa5836f1f5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e00fc90-eb98-48ba-9922-afeed6f00188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc481a8-c75b-473c-b8aa-51d9a49a9758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf42561-9f77-4308-bee8-deb39aef8e85",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b146a4-aad5-4888-a29d-cf60bbd7f9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8152bc2f-2508-4ab7-82ae-5a910c4fde0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3701165-7bce-4f35-bc2f-e2738d9da96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df294ebc-2239-4aab-987b-1a3c9473b7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5ef966-c5ab-4f9d-897c-6eb3694b9d97",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db62ed7-b445-492c-9571-50a95924a388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a2fc0-e8fb-418b-853b-4f562d899abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23374f07-eae7-4bd7-8671-d1ab094c9a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a6aa9c-6975-4f7b-91a4-4addcbc4ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1afae-49bf-401f-8077-1a18a9eb86d8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fedfba3-4e07-4d7a-a7a9-c664354c3ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c14f2a6-563f-4438-ac5b-2e70fbb6da11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423e4801-e482-4d89-963c-603fe3c88354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf312a60-911a-4602-bfee-0a431bf3dadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce01ed41-7846-4865-bbbc-33075efba2c5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236b277-ae07-46fa-9518-11630291818a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d06477-a297-46ee-92d2-9dc799800af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dded3c75-0372-4f3b-b38b-578cdf615330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ee6020-1908-4013-9b5d-0cb0b41038f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ff4c2b-c6ab-47f7-8131-deba5d3e4b42",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5aa099-c295-4d3a-b9b4-ab4ac35029a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfc8e11-ceed-4758-a078-787d87807cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d82257-aeb9-4e20-884b-f4e282bbef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47e461e-8f43-42d3-9753-08cb998ebeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb3d886-5fa4-460e-b749-cfe264fa5e17",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7102d12-dc71-4e57-983e-deb2fabcea21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062673ba-ca44-42c0-ab16-bfae781eb460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ce6aec-ae13-4bce-8534-20090386d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43628529-9792-40e8-bf9c-a0d225f88401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc76636-81ad-425a-bba9-9ebbbf00ab65",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4533f51-2003-486f-a176-e5af881a3375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71929675-9ab6-4452-9d1b-d73bb40c065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefb02a3-93c5-46e5-ac01-7c5fd997ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f11c61-5144-4d6b-937a-6cbe22e2f1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f889a5e5-fe4c-4eb1-9541-3a7f560afc57",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d96c4ab-0760-4e22-aacf-0ead91de1c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2622076-96e4-4e7a-aa36-03f677b9a04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5ea414-4a86-4a43-b042-f57f85868508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3f73ad-bafa-48f2-9007-b5d906a2b63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ed56e3-35e3-4a48-add6-dca87f7737f9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7158f35a-6fa4-4fab-8025-addd3c8483bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b70901b-adc9-44db-9424-eefc89a198be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c7366a-c86a-42a2-a8e0-ec765afe4e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28329203-26cf-466e-9331-81851ee815c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abc29f4d-547e-4b5a-a066-be5b9a52f3b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d9b1879-ef29-4e7b-96fe-f569b909e077",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421518f2-858b-40cf-9285-173961803963",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dab439cd-2bda-4ad3-8de2-d83f112e890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186a9366-ba76-40ad-bed1-c7d1f7b94cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4368c497-12bf-43e5-bf8c-a57e1b8fceaf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d43b23f7-89f1-4132-99d2-7cabbac1c134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43222e22-1bb4-4aab-a152-a2c95b596d4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f38b655c-9260-4d00-b48a-58c4093fac40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "763ab33d-9177-4eba-a0ca-dc1157856fd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "799fa65a-1d48-42e3-b4cb-16be684fc987",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6bbaf73e-3991-4b4a-80f1-a7a4de795a9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77acb4af-e6b9-4d71-9189-e2febbcc8e0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30beac31-e147-4d74-9889-b4dad449db26"
            }
          }
        ]
      },
      {
        "id": "0a33c7ca-e1f6-4994-82a7-2981a84de2c1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d05fa20c-90d7-4c45-bd13-bd30689f7aa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e12238d3-6765-4e3a-90a3-e18f32d57059",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4f6d3cc-db1b-40c6-8ba4-e1abfe8717b0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af12217c-f3fc-425a-b475-94dfe3d95aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf10e15b-fda8-4c53-b97c-cb4f4d878f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa3fb5-722f-41a3-b2b4-08b47934e45d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3d7e9e-ce3b-4522-afe7-4bcf72010590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a2357b-360d-451f-9012-7e9b20aebaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09fea4f-1aa6-4a2a-8034-6ef310cb90f9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c89d713-c578-402c-ad37-783bb237a287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763ad422-74f7-4adb-b043-a3e4deab759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b32d954-4f0b-44a7-bacf-caf341384a6c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f282af1a-e5ad-4044-ae68-f88ce4a75dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf892cef-d6a9-483d-8a6d-54d73f251080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f9cb2-1ffc-4df0-b09b-4358e3a80b55",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c4438e-f263-4268-a696-9571c36be2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93675a8-0913-4f52-aea2-5601369b893c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226adb48-ca2f-4afe-ba3f-d6735f226797",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08ff7fd-f777-41a9-9080-1ddf4a1b6366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cbab9a-33b6-4a4e-b2ef-b20dbce744db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494990b1-41c5-4351-965b-7ac74a7633c4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6fe578-ab25-4677-b02c-6702bf605fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9951f464-dae2-4559-98f7-d821f15cc0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a0ef1a-cf01-4b11-b771-3d2555047b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad13c236-0d8a-4ff3-b66b-97a662cf44a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c11813b-b790-41f2-9764-20d54c1a044c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf443fdc-987b-4e57-ab88-8cb8c3bf016d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f57c0f-f3b2-47aa-b1ee-66eb6e1f2d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17950c90-ca1f-4548-93cc-9344adee0545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f37396d-4809-4eb1-a9dd-6f97def8f6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2719f4-48a4-479f-91a7-9d8c3c64ac6b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da02b7e6-a6dd-4c3f-b540-a1328606e5be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9537e46f-7318-40ab-a2e8-cb4afe7f1c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e1abe7-d59d-414a-aba7-31580fb2ad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0480748-c961-45da-832d-f40f0e2ffff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397826cf-8361-45dd-a8e5-26dae853f7e8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b059a795-3699-498b-b7a9-8ee48c255083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1fa4c3-12ab-4033-ae60-52b4ab8827a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46322f68-e761-4d71-b332-6f56f4dc9333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66435cb7-cbeb-4fee-86b3-5f95291402ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1f2173-7bde-4542-add1-15e25bb56ad3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4017b14e-1d67-48ab-a072-1fa08ee4e606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753e4928-3d95-4f5a-af7d-e2557a11b103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29f277c-edff-45e5-833b-e5b4cf2d247a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faec860-b756-4fa0-a060-49cb4737f712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70feb96f-6ec9-4979-9ea2-6481598a3db1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d750d29f-9f99-4aec-9c38-6f1355d9fa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa18842-5f7f-4984-96f4-473034ecf724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01e07c4-eddd-4ff3-91e3-53d9e73cd8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce88ec20-766e-428e-9e5d-bda30f10d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c70bf1d-50b3-4dce-8899-0813acefbe35",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8acfcac-c593-48a1-837e-dc2ffb087a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be710fe5-9ceb-46ff-9bcd-c43dd9e11e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c13fd1-dfc0-4404-907b-65362e49c600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c966996-088e-4b3a-9a1a-d7e871c3828d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24c2630-063e-4bb7-ac2b-4a482df033ab",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9a6463-260c-47cb-8750-dda43153e042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6a5f8c-5c18-4962-b757-3675168a8d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cca235-3b7a-42c3-a6e6-98d97f61f83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b8dd72-9781-4745-88c7-a0bcced1d423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bb3ae0-014f-4f1d-85ea-6a0dc0fe54fc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fe46ef-d2b9-4a3f-b33b-c3c2fc93803d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde7cec7-6b73-4ac9-a556-32e8ce83109a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42c868-ab81-4753-bdf0-42a970de68a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d43999-01f2-4922-b5bd-12117d77c765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9df34fa-13dd-4d4f-b0c3-dccf42e4bad7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f650d398-32f4-43d4-b3ef-5cdfb2ef3b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b04ba6-ce10-42ea-aab8-7b9632760947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2803955-3100-454d-a56d-706486a5e182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdb6e96-9d94-4206-9578-825561fa9df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001a9eb4-f70b-4c94-8608-51eca149a8f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c18d16f-21ef-4e99-b495-dfb2c457aea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059ffdbb-6a4e-4293-9ee3-ccab7828b01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7850f28-2c13-4b43-99f5-47a3b29e63c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb9341d-e63f-4334-aed9-023612aa8a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3397df8b-9c98-4d14-85a7-24e4d2a96c82",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adc5964-4791-4b41-b94c-c248af19d558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c301f600-fe73-4e9c-b21b-619c34115b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22690db5-3196-40c9-b9c8-270e3a42739d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7791ba-7843-422c-b69d-b53e351d580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7718fa1e-2ac8-4e1b-88a2-7529e4fc4f74",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734e5679-d280-461c-8767-4980f3f467f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56a888a-1bae-46cc-afa2-6de5c5a57c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2b3419-df18-4879-b6b4-bebf9816f205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab312f2-e81e-4cb3-a350-794d915c0e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e71faa-8033-4952-9a34-6ce1854ca41b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce76b55-6401-4743-be0e-bc5a91e1c5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bbd77d-dce6-41eb-b912-f271c668ab2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203e8ef-1280-47af-8a11-73c59ed0cacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295312cd-9fa3-434c-bb5b-5f35ae56b51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b4ac3-ec49-4346-b5ac-8eb40247c87a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd93f20b-5d3b-49c2-9df7-0a5ac5e5550e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b18045-8e62-40f4-ad71-d5ef0cc41054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9434cd-4489-41ba-8d93-c122a72de869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc3f2f2-9809-4bbc-b43a-087ac9a9587f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8428c06-84c7-46bd-a91c-eb00db988d0d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd841224-e8c9-420b-9720-280b7b50cadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01146857-d892-4c28-b8de-9db3e3c9d912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f943a736-68fe-46cc-93e0-bb48262a4e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32845740-2ff4-476b-b195-0eefcbf14e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cd5e4d-6b3c-456c-b4ec-463d86293043",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63bea87-4a3c-46e1-9837-2f9444138ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfba276-53e7-4d63-a8a1-8f211b077656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e519b-29fa-421d-a150-1d4b065744bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88160582-c9c1-40a2-ac75-f9746091cd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86749686-c759-49b4-b494-8d0990517055",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e03a73d-f159-463e-851f-ce84f9581402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c18f98-0db2-4977-ad97-120c81e51323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7dd3ea-da2c-4227-9fd6-18baf9217aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56909500-1e9c-470f-a48e-739e2c3fe6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569d2162-1876-41a0-8f63-c339b34f1a92",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dea2517-76b9-409f-877d-ff2b86b5c431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449c1791-cc7a-4a7a-824d-73affaa90db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782c2711-41c3-40d2-a127-610ec81d7c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379f8b61-462f-4188-86e7-00de8921ca27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccf5be3-a835-45d4-866a-4148a9565bd4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330be7b2-0a4b-45b0-85d2-e8f0c8e78ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363bbec4-c5c0-4b17-8611-d78cb8123a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64e1db6-8795-41ef-b1e9-bd081b812304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f79a76-5833-4f75-b35d-6f71335886b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af52b8c-5923-40f3-8bbe-bdf942e3ec6a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1ed18d-63be-45fa-9bfb-a0a994391761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d30816a-49fa-4953-8659-aaa6df05549d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1527c43e-c45e-4b39-87e4-1f9159d8cde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774e2a7d-6091-4b23-86f7-ac947cc78f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7477e16-5d7d-4ca4-a56a-b87eed15fc6f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb840008-7633-4d9c-a81f-33ed1a524dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f866ab-5e40-4d90-867e-c1fda9fcd059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d728b8a-d433-4bc7-a70a-1483f0df4644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871df511-888d-43be-b00c-f93b6d1dbb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449fd638-8d46-488f-9624-793f2c785f54",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbbd12c-3d54-4a0a-9346-ec9db8f37168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640583ed-3e5e-42a5-9b6d-d1c9be329f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f9283-05a2-42b9-b308-93f78d51e162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083f1df6-000e-4ed0-b8f4-c391af751a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce87e85-c2f1-4304-a4d4-1e8e4532831d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98caf73c-e265-4d1f-80e5-ed59dd020c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e053cc8a-833f-4e2c-9db3-51837b8c9b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c506b23-ed17-4452-bb58-6d0aff1c8c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d66b5cc-c663-4b3d-8145-f783d9704a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e35309a-38b6-46e1-b4bf-ea0a2daab390",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501ad299-769f-4c60-9a46-6a839a76b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903b4e51-5729-4175-b3d7-40582747694e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db494760-7fff-4ca7-a911-a78d40acad28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0fae6c-be2f-4795-aead-5b8af11f5339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30489f4f-475a-47da-b8c4-699430917abd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993e78d2-a8a4-415e-be8e-6a9c8d3db866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7b2d0d-be74-47ef-84c1-3d7562fd4d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83422d0-d0d9-4822-a670-cc99f6d67f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cf0b1a-e857-4ae3-a710-b7fb40917262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0dce5b-dc41-4f50-babe-b8e2aea53264",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b994646a-0b68-4443-87a2-7abf91b04a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137ec073-f681-49df-a19d-5cebe071edda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a15102-989b-4fbc-a5ed-ae1e6af0c85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d11f737-c493-4356-97d1-b3abae0bc260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ebdcd7-fb49-4b7b-9e1b-583231c240c3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da30adf-283d-4dd7-80fe-add21d8a9371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05407ddd-cc48-4f39-8673-06ed53ca1936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3467e8a1-b910-47d4-ab3d-dcd624b5055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4859a0-9f77-4b51-b087-20252c20e6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a3d95-fc33-41f0-ac6a-a74c0268ac9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1301e6e-cebe-46ec-bd63-571a6a6c64d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a246c6e7-bb6b-45b8-8892-5003f63e765b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cac0d46-3396-43f6-92d4-bf24f5fc6735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc57e71-9853-48ca-9d9e-cc0f6632420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafee140-7d79-4f81-b6e6-377dff905a67",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d970f-39a0-4291-ba66-ddb38d0d7673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698b3b95-6f83-4574-b5fb-96a668b8fd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a257365-9a94-4b2a-971b-9ca888b0418a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71e0d7a-bad1-456b-a827-6176757bccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a4f34c-f9dc-4b64-9d2b-609446399f75",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956e599b-05d4-442f-98c5-467c09bd5508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d3810e-acc3-41b7-9d61-b8481b4dea4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace02050-5cbe-4322-a289-754e029a0c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8e50ff-e86e-4a01-9a79-7d22a24da083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f234e3-4a7c-4f39-bfae-ac3be552b618",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3449667d-c45d-47c0-8e67-25fcfe813cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e756f2-e70b-4125-9ba0-a335ca52f8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483c60c3-497a-4bd4-9c8f-09e621658015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097662a5-d354-4323-bdf4-13e61328b448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7c79a3-e727-477a-83ad-9fc0296d6e1f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe8f54-4372-4a3f-bb98-8338ee9ab60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5937088d-c056-49f8-8b0a-0f5db2e9c930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf5a2b6-160a-4235-8287-70339565fdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fa848d-2df4-45b5-944c-13b4839dfaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3466280-86eb-49fc-8f38-59cdd9d52fd4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80f2a4-f4b9-4856-b86f-8ca3bd40bebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1149c0f7-6223-428b-bdf9-98eb25c43f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8697df16-06e4-421d-9629-c9adaa0f4f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddecde2c-be2f-435c-acd9-93b7c4621fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74795d6c-e996-415e-b22e-1dbd252c50ef",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9e7d75-1a68-4c28-937e-eaf8cc1a134d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833da6ee-3220-4bbc-957e-e6bc2a6205d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59eede2-099a-4ad6-8309-c3c9aa156db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1813b9-26cb-483a-b53d-12ba00bff579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b449a42-7b9a-4d4a-bd04-7881360e1853",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47f0d4b-39ad-4a20-94f3-e256e6a26de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0a1bdc-210a-4a68-a2c6-3ed47f9dcb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a654e02-6dad-4188-b0a7-79b0c088e6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614433e7-fe66-4bd3-91b0-47c1fef7fd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912a35ec-6e8d-4844-8655-1b19d370ed02",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8929bd31-8a6d-4517-9034-249d7e5a2dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75da257b-a7ad-4dca-b458-e9d8bf3d925a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae30149-7dea-4233-afdd-73f5bcb44ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81bb3f2-2d8a-4869-abc6-14a204abb158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d66cf9-bfec-404c-95f6-953ba54973f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279f3396-c6c5-45f7-8e0c-57cfd40bc671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2923106d-bb34-442c-b46c-c44dcc0beaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeda0b7-7358-42d3-a5d7-5a9eab22616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ed18df-2885-4af1-a4a5-9b330cfa23f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2422d84a-b221-4114-8b55-2d9abf472d6b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2790731-6f02-49b2-8fda-2d766a05ed23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d6d0f8-7d07-4cba-ac3b-6dc8e91dc97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df92624-f126-4641-9c64-ab7102c6d3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a12a32-1a38-4001-97d5-7fd4de726f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c56064-3284-460e-871a-cbdad5a65b4b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112dbe24-e0d0-4127-84de-2e2c91210d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463e4606-2dbb-4d05-915c-7aa6682d71bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea01ba00-39b7-4852-8e63-2a3a2e0a675e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781917af-4942-4438-858c-7e1b48aa733a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9925158-c938-43a1-b5a0-9ac0838ce88c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c7a346-915f-417d-bc6f-9e44f947c135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12324cca-eca7-4f98-ab70-37b5674b36d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684b2c16-4235-4ea4-9249-584e3e5e2ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37984529-24a3-4190-bc80-b28c8d23d4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4626efb6-a084-4b4f-87ab-93bd051453e4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a948a056-0558-479e-8045-70c01d072640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c57f1d4-bcb8-44cf-893f-1e6c23ac1d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119e8147-23c7-4e83-a611-d67cf5780e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b19e565-e226-4eef-90e6-6b4b9fb8e7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb076fa-73a6-49cd-94b3-d4e5bcb9821e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a5003f-df28-43f1-be32-383dcbad6b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a657379b-3419-4447-a402-b918d9f72ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0b5318-2880-429f-8e19-7c40d1b8338f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c499c67f-a53c-424c-8e29-ed01a6dbede8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c788564a-1c92-46e8-a248-fef512f574f1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011d8a46-f6f9-4286-95eb-2b23b0d01d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2708b39-94fd-4523-b739-1d2ef7c9c696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff8b52c-0726-4407-a803-aaac08262889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbf388e-65b0-4b33-84e2-fd9f717c07d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b974e7-9f0a-4bda-93af-b5d86e4874ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54512952-fbc8-4f61-a82e-791fdc4dda78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849371f2-abab-4c32-88b5-6438dfd260a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32db6b35-de79-4d0a-8a93-99ed74e5e669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf48e1c-5604-41f0-9ee6-5cc55b785d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8683c844-8774-468c-bc51-238b4741fc30",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb34ef52-1234-4718-a5a6-39b1fa80286a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb81b55-63ab-4d08-801f-bc89021b77e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6428cab6-6001-4fbe-b924-c98e0841fc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79eabb8-80bc-462e-af38-47b7235d3b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad760bf-1352-4d2b-9684-5c55028a4f12",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3b0401-0790-437d-9340-b58cee7727c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f86adf-2e70-41cb-9e0e-58af01a9c5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b080ee68-6a98-440a-a5da-19f71b5203f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afacbd7-d21a-4a67-88e8-223a47b5c3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762c15f5-94a1-4db6-a8ab-d6589e378314",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aefc7c-e6df-4b89-bbe1-9fe1c7381acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df65a91-355c-482d-a064-25c1462a89a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eec9433-54ae-4006-80a4-e54aa118570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99961a26-a1b8-474a-82d6-d33f4e54524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b029aa0f-cc9b-49b7-bea2-893e70b7f615",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28d3d48-2a0f-4940-95c2-e9c27e609e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7e2b1a-ab2a-4a07-8a18-3b4e0317500b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82cbdb9-d98e-4a72-9446-9d0678b0316b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a06e6fe-030b-4369-90cf-d87663161ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59639e2-d5ee-4531-9c92-ec834195b37b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775fdf0-2e7e-4d1d-b81d-071a5ab685fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a154dfd5-9720-4904-8aec-8abfef9d5bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4be17f-6fbd-48a3-858a-c81a97873d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17e0da5-9581-41ef-bf2a-9404e41112c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c1d3f0-d222-449c-8abe-cc00c25ba091",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c867e754-539d-4a52-898c-306b5a35d056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600bca1f-83ce-4d4a-8fd4-fb31b8d6261c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a9b381-271d-4d2c-b800-ad29f21e6080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f42572f-6294-4767-92c2-ba7b7f2d60e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65d44a5-0ad0-4329-8860-439a470a8419",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bd6223-e72b-4cc8-b790-8059f1e59210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33f7de5-3de6-4213-ae64-de22cc04abb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7644ee0d-14f9-4e6e-8ea1-5c7e1982c775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef6e892-7f94-433c-991f-8f2d44ccfc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca477e44-7164-4852-9c5d-4473f8c1b993",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c82cb28-b84d-420d-afd9-2b84cf7bd401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2e7503-c77b-4bc0-b8c5-c56a58552c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500fd1b4-e4a0-4247-9689-aa26f426e501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee4e013-5be9-40a5-bd74-7f6a8780e1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54afa3fb-8a4c-4d95-94dc-ea7e8dbcac65",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2793458-3337-4e3c-a966-5edad3094bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4340b4-75be-438e-8694-197ff3a5710f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aaf77c-c7d9-4194-aecb-5fd8b40b8c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4452677f-7991-4997-83ed-314dbd027209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da01290d-f302-435a-bbbe-2a9d9057497a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76125f91-a21f-4139-8615-5903adf4e18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcc08df-8dc8-4f9b-a601-f724b1899a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9628a830-2dfa-4b16-b2ad-52690503ac3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133d9ddd-564a-4cce-8eb0-4b9b222a6503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e9315d-3b2e-4082-92f0-41d19a482429",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d44567-ba7c-4fa4-9a46-cc82929d19b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24298804-8e1f-4832-8b7c-f3b2ebc88a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a37805-3bc0-4df4-b97f-5b06a2dda39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902b096a-1bd3-44fc-8408-35f940b6e223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9907c31e-1ac5-4c7f-b46a-75b99497c6ef",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde5eb64-ea95-4566-aa3f-95fe4c5a5964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a8d7cb-ad8b-4001-8fff-cf964c612405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe20d99-f2da-41b8-8e76-246539fecd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b4955b-7f4d-467f-a947-57bbe85b712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6a3eb9-b81f-4b4e-9af7-bbdd10deae01",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952ef33e-0b41-483c-bffc-34349f93f467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6113b94b-2fc2-44bd-9da5-647c27112d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f955f21e-9703-4e0b-8537-1d7ecccc251e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4a410f-db66-41cb-9ca8-3f59ea59bb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466675bf-9e2e-4803-b00c-a2ef0bf25d76",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d732791-9b15-421d-95f8-f3324ba772d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4681cf9-1d12-4584-9465-3c4236749220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b80994-078f-4e1c-9fac-5e6cd4beacdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e537cd-474b-4e74-b444-5bcdc2b41bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0129d00-8769-48af-8aba-f595d939da9d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c111ee-7aa6-4c12-9f59-e116c99e6c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa5af05-9c30-4277-80b1-d9cf554dbc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e15f2fb-81ba-4007-a4c8-33970af5553c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3506386-b00d-46bd-ab85-401300c24c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb96e46d-a03f-4540-808d-cdc68f5b638b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fd28f2-6dd6-4177-b09c-0f68bbe29475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280c68ab-8627-4b3a-b582-9ca55a8977c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed936d9e-c4a8-4864-9df1-689a651c015c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234652a7-b345-4ab7-815e-5e102bcf1a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdcad0a-fa81-475b-acbf-7e44d6a5dc73",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428255c3-1027-4fd8-970e-166686a5c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c172ca0-d590-4859-9e3d-7faaf89ef47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e7c62d-61ee-42f6-95f5-ff341ac41e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4c6254-a284-4a3c-a9f7-a0e4d81903ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578899a6-3f97-4b45-b217-89b61e8fe4d5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a24764-6bf0-404c-92ce-5f896525b390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c018f27-3323-496a-bc16-c7f7dae5507e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7602722-2f65-4166-86d6-8203d2269c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59740226-5fce-442a-9e83-52b34ca1513b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42311508-f717-4db0-852e-552927cc4221",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0520ba-1058-4887-8d77-860ed53d556f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f9e5d8-9e62-4d06-9d73-c8ba6416a124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cf3eff-21d2-431b-bec8-5be0657865f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5326ac25-3918-4fdc-adc2-d4b5846043ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d484c586-6071-4272-9007-d422a2b80720",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ee2e3e-0945-4456-baa2-9738f850426b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f77fe4-3598-4b6b-9504-da66e55ee183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba91f20-4680-45e6-9528-8392aa0e646f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b5edc2-6732-4a20-ba8a-621d0a5622db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0a4fd7-3975-4121-a4a4-1b3b9cd4dc58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a150023-4a21-4a51-acb5-c5f390aea5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1083d259-7c2e-41f9-8ab7-8690dc91ea6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb90a27a-2663-4fda-8157-23d157b19e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c03f159-37df-4e42-a938-6bd2a91acab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c652f04e-9bc8-49f4-b80f-683dcb69d904",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001b4540-3d95-42a5-82f7-15eec6446c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b15e959-6478-4274-bae1-17b5584b9812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b96a98-971d-40b1-bfbb-25fd2473b95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749c33dc-7b7e-414a-8e6d-b79b46e9c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6d1ea7-00b6-4b8a-adae-b076966e1e08",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eafd23-316c-4603-bd45-fc905698177b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1466c142-b19a-4f13-9fae-847465950bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03e8f3-cffa-466c-9e70-7df5008839b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c830a860-e48e-4e76-b884-e79cb3358974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4b4416-8b24-4b64-b418-65f82e4ab769",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd78b36-d9ce-46c7-9883-0a1e83acdaf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a7a039-be0c-4253-b660-e1e07d590bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a053ece-825a-4e61-86db-874706dd49e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6aa9da-0846-49a5-8923-bd1a2c035646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21050780-662f-4e32-852f-f421f7fb2772",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5b53d4-f599-4d3d-aa87-196a6aee34fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f935e973-7435-42e4-8e1c-7a8d9bffec22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288ec289-1a60-424f-9543-bb7c62d28e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83db9c1a-cc3c-41c7-8777-78d4bc76b0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467280c9-299c-4cb4-9e3a-0b2d28dc2de9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b054ce6-f785-47b5-883f-c9fb16dd49f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e91fee-040f-4aa4-9955-6861ab66192a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359fa2e-d09b-44c9-bd7e-2cba6aca48a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbf17d4-0468-4bb1-ad70-0ebad0c1e66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b1cec-086d-4d6b-a46f-c9242e0a3acb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a65cbb1-6d09-4fd7-9593-059075e38d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d18e84-5b60-496a-968a-8f018111f090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df844edd-3bee-41d5-8822-f03e689ac441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8907b758-7b1f-49d8-a4d3-f5fca01814e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847556a0-3186-449d-bba5-5b07594bfee7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f74cb4-5701-4ebc-8c6f-bf4c41701d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a787985f-5c74-444c-84d3-0d42d3872bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b313302d-9450-4ec9-b1b2-2f245a824e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c6d367-8462-4f27-bd6b-27f6fc385027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dacdae-5578-4c57-ae0b-32f028bc7d4c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def627fb-9d99-42b6-bf9c-ef511c5524ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c1c846-7766-4628-9667-a5769c2c62c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1a37f3-0410-48d8-9bcd-bc45649417a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ec7307-ddd3-49e7-a98e-bcba0e83dc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3f5f1d-78d6-4ca8-a37b-0d1db7faebd7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422fb95b-ce91-4209-b955-749c3e52073c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c46bcb7-23ca-4317-bf55-55b18a70c1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e8b9e6-e143-4419-a030-ff2c11058d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e720df-d984-440d-a981-0a9df9ce11fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4233a4-8d11-46f7-a0cd-7998f9484aa9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacfb0fc-68ec-4679-a036-a73f4c835352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0856ead7-920e-4260-b131-440067f7a570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73d8f0e-b3a8-44b7-b3b1-8a699fcb9dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895c1ea1-694a-498a-99c5-4845e6969b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b3e345-6042-4cf5-b5f0-1d935fe3a2de",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6858acb0-2fc3-43fa-9408-41c79864627e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad9e31e-d0a3-4541-944e-3c260aecf2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd161718-d1c0-4c94-92d1-0f961dae7f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaadf6d-1aa2-4c74-be9f-62875cdae7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e375c6-194a-4c5e-a333-38eccdc54e66",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad9d886-fb94-4ff6-8345-14f4ae70e0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b99bc53-1f15-4d6d-bc98-13363bbba087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b4a152-2bce-40a1-bea4-cff6f3bf334f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ae18fa-dff5-41a2-9da7-fa55afe2c0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4b793-884d-4d33-959e-adae4de12f3b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa22f83-c39b-4e94-b989-1876608495dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc81588-93fa-4b6e-9fce-9ccc5f9b86cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e97036-f4a6-4c49-8a33-9ccb32c3dd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3348c7b-fd66-40ba-b75f-8c92df113ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813ed7d8-adfc-4eb8-8f15-2a0ffdaacd52",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97ca42f-155f-4608-ba79-879ef9df697c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845de4ba-3d45-4d2d-99f2-c254b8499f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b0b817-f944-410a-b80a-6f335ffbcea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70ab378-2cde-4f7c-aea2-6b8755cf86db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f48fe09-6e1f-41c3-bd0c-375943b41415",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec25a8e-9ee5-4ee1-a3cb-bdba8ba9af41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e5c173-6c8a-4c8a-b415-43c2337155c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb177563-212c-43d6-8d78-5096cee3b2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5363d063-b41c-4743-bb33-a66aa01a515c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0eeeea-3f55-47ae-99bd-b4cd2f9d4f9d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecb9da8-4cc2-4784-bca4-395ca237e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8bac12d-e5d2-4288-88d9-67d50931e36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeecde7-6dce-4c27-95f1-482be57babc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d847ff63-7e2d-462a-b6b1-5b38c75694a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2210ec48-59f6-44b9-bd5c-f3ad61da8b10",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fdb9c6-cbaa-4d8c-a461-4b168a8e7737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22872749-ec5d-4bce-8c09-386eafed836a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a250b381-82f9-4355-9b9a-02213ae6c5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b2334b-201d-4299-8828-0cfa9fa344d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec29c14-6418-4a1c-a4ee-6af7cf60e58d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fb1801-bc83-433e-9f9a-32689986ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002edc64-a425-4261-8b7f-60b0c31e7e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed91b2-327a-4621-9b88-059efb9f141f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01596fe7-bdd8-484d-80c2-cece593de28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3e0484-fd92-43c6-90f5-bdf802307c74",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61401e62-08e6-4d03-ace9-98ffb1a22f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "606131f8-82e3-45a6-9552-6b22e412c1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35376e19-894a-4b5a-966a-edad86ada0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d741b244-d034-49be-8ac0-9394fd05be88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f985339-e3cb-42ca-8487-93df1a1c9c87",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa124ad1-76ea-46d5-8a9c-afdf00770e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2435563e-50a7-470a-a0c2-d2a0f7294e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4025e041-f173-4aef-b6c3-17b0bb95b924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee13d5a-ac11-4b6b-85ac-5ddea59e0ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffee73bf-47e6-4712-9df3-a9bc74eed33e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3195233e-a85d-4a0a-8429-170c633f71bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "537ff431-fec4-4f04-8745-40fe9cba94f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6156b333-d67f-4666-9c90-ab18746235a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72dc5e8-65c5-4f1a-81a9-87941ffad959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353cce70-a4a8-4db4-a3a6-fda159baeee8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d145ee-ba7e-4364-9bd8-0dad24f02c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75390935-ba23-497a-be59-4639ea7ca599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e90706-7c59-42cc-8c83-5f5c38a61d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2405d92-a0cb-4646-b624-e03089eba18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77de2345-496f-4ad8-84f0-4691e06b0b3c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed4e94d-e298-4b4f-9ca3-64dd012f4558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7814ad7a-7776-41ad-88e9-265274ff7d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0116f228-4a78-4f48-b562-56d743f8e6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12d6508-d88d-4a53-8f43-312f234516f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e93604-2208-4c75-b322-9a82f887133f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ddb72-670f-4ccb-ae64-3291393f4708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197b4e1a-eabf-464a-bd16-361ce66a8738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb0b02b-4442-471d-81c0-4b41e5916021",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53a5b36-8e3e-4da4-a76d-01561fe4ee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cdfcc5-b35b-4c31-87ab-afb28003508b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad539fa-f8a7-42bb-a2f7-c5e37b80f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e44894-3b86-4aab-804b-dc36292f6f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5e2840-7f46-4aa1-805d-5179729c70a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30699c7e-482b-4169-bbd7-2aaccb3ba2ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fa86a99-b62b-4fc3-bee4-0283ddf3886f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87aa0878-026d-4523-a116-8707db082c1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e0b7323-0528-45c6-a7fd-6ca547bdce54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d55ce99-aecb-4574-8708-f98b674d7e7b"
                    }
                  }
                ]
              },
              {
                "id": "492ab1ad-14a6-4c24-8374-07bedd076d2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f9312f3-16e9-4ca2-a6f9-8abfd83a7153",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c5030d-697d-49ef-bef0-a6069c3f41fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "41ab507e-6efa-4a8e-9f5f-ca7eaf510089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccde1ccb-7b96-4db0-95b2-3d12a845f7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6747c62-4a45-4280-a500-78041940b14d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e4db79-745b-4e5b-9319-6fb06789ff9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d99e489a-1302-4e6d-9b57-fc789c729939"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "460092be-f9a8-48ce-8542-92e3e01759f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "160ccb6f-8069-43ac-b86b-2b568865de4f"
                    }
                  }
                ]
              },
              {
                "id": "724e9e76-b9f2-4ab3-b0b2-2b6548e3cf50",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f75668a9-691f-470c-be6f-8313205f25ed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f97758b-173e-4bbd-9f48-9c9afc5ec870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5e06989c-b614-48f6-9578-94bcb1f387c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b8200a-f6ec-4929-b9c8-786863e933cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0ec21b-e25b-41ed-a0bd-8282bc28ea3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b72bc00d-d4cc-4f08-a1a5-c5cc8e28206e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1eaa8380-ae20-4155-ac38-d15de603e5ba",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f7a3f6b-361a-4d39-8c4a-7207a0c28518",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b818d823-3489-444c-a2a0-72dfde2efd39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c787f81b-90d3-4e70-95dd-5903249666f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "361d0cc8-a69c-4158-a7f4-d001fcbf9b7d"
                    }
                  }
                ]
              },
              {
                "id": "73ee8cb3-9504-4e5b-bba8-96b8c6d82d8e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "118d1600-f0a0-44d6-b751-b4201b223ec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ccc596f4-8e45-4ee1-8a77-cbaa14e2cd7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fdf7c2d-258c-4815-9480-70261135da36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb8070a8-89d8-42cc-940f-b8a33c2362d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ba3883-a5f7-4246-bcc7-297f950eba12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e3e119d6-8fe2-4a7c-ab58-22b866e467e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dc898c4-4d15-4484-ab30-17259d03319b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "956b007e-b6c6-4652-ac78-4e4a199f73cc"
            }
          }
        ]
      },
      {
        "id": "80293982-5f6f-44a7-90e1-7b811d432571",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1afe149e-c897-4841-ad50-b19d50b8ad73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "224d3170-507a-4e05-ae6b-d359d0378a5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52762677-a84e-4fdf-804d-0ba3a6c3942a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743d968-028e-432b-b9b0-ac25a0cf779f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ecb67f80-2711-4624-8920-74efde530473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0f76cf-a31e-492e-8c2e-ded728622d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96db518b-9738-4405-982e-885c17970921"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552d3bb7-dcdc-4cc0-8039-f9f51198790f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7cec833-6da3-473f-9c5a-876c2735cd1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0b56477-b891-4d32-ad9a-2335590ed45e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bb5de64-5a27-47da-ada6-242594e06768"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b1bbd93-e65b-43f4-8802-fbd809415dbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "12e7aa51-0cc4-43e1-8154-941bdaf2199e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09617b19-f17f-4f51-b370-8631e3b1c175",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c48ed092-dc52-465a-bf2b-618f173aae9d"
            }
          }
        ]
      },
      {
        "id": "e2b3d32a-5bbe-40c9-8cb1-bca83f834dde",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e80034b5-d604-47d3-ad2e-300c1d0ec56c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4375687-48ef-4af2-a7e3-5ee55af5130d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a34ec864-4634-4abe-b763-c2fb1e1c2e8e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f3522-2873-4c5f-a22b-5d0a29f82029",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ebfd670-dd81-4f52-8267-9c964633d47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75bfddd-4458-415c-8ac2-3031ee21791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fd5e73a-b7ef-480b-957f-d90dc071049a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb9b45a7-2ec2-46ee-b472-719b1f7ca92f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7641acec-b6e6-4933-acf3-b3d275b77c10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83c89b9c-e031-4fbd-9a2c-379c21bac1c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2fc5d80-1e3c-4246-9a81-1fc7fd8ae229"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "183deb2e-9403-4d1d-a0ce-7f9fe63b7aeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "114e1557-418e-43f4-bbec-bbc4836bc2fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1aaca6bd-efad-4e92-a3b0-8a67b5b566bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38174dad-369d-469d-9530-ecf5de9959e8"
            }
          }
        ]
      },
      {
        "id": "db24d81a-3c47-4f04-88d0-18e23f694fdd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "215f2728-24f6-4e05-b021-139680af22a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99fca52f-52b1-4c24-9d76-16b60bcd2a21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0f4d055-6627-4b76-aef0-95dd3a2b6f20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c62e72b-c023-40b4-b804-3ff0224d9702",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd6b55da-0682-45ee-8df4-36bca7bc316c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817e6e7d-1942-4848-9f33-829856d327f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53ea6911-2951-4037-871c-0f39879f3df1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef69f645-ae24-447c-a05d-d11b9e0cc0d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a777ef1-060b-4843-b875-387582e764c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d487e3be-6f14-44fe-a1de-ffe24b68ae22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff02d78e-18b6-479d-b702-fcb7a3382370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "882f3eaa-ef75-4923-91b9-4ffbab96c26f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9bac09a-8f5a-439c-a43f-db2070ab5923"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcf63b50-a192-4910-bbc9-d1d77144800c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "570378ec-1377-4f13-878c-e75339d9794e"
            }
          }
        ]
      },
      {
        "id": "fa27fcea-d176-4c37-b5cc-569697b2ff6f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f916443-cc20-4090-b422-e8ae0f461cdd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5923ad6d-f7d7-49eb-9411-e6111695c45f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5f866f47-9f0e-464d-8f69-977619d3e0d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd13f4fb-2c96-46a6-9c37-2ebec3982d35",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14b4f239-ac0b-409a-a6ca-6911bd7b5569",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 153.97192982456136,
      "responseMin": 6,
      "responseMax": 3057,
      "responseSd": 351.4751957779567,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705710960522,
      "completed": 1705711013836
    },
    "executions": [
      {
        "id": "babee1aa-f897-46fd-b068-eb691f434e10",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "65dd34d4-2f3e-4f94-9a6c-0b72dfe15be1",
          "httpRequestId": "028fc9b2-6f3f-4129-9662-12b366b4646c"
        },
        "item": {
          "id": "babee1aa-f897-46fd-b068-eb691f434e10",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a23e685-0878-4785-90a1-308d7168bd0d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "7f77fc88-ab41-4f35-a6c6-e4d2c9919a96",
        "cursor": {
          "ref": "09361aba-0121-45a7-9c2e-b16c4ddf8123",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9a5540a2-a63d-47c3-8c59-53e4b9afc281"
        },
        "item": {
          "id": "7f77fc88-ab41-4f35-a6c6-e4d2c9919a96",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c06b23d3-919e-41ae-8f42-f9fba30c3d9b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e78a3823-f1b9-4de1-84a4-4db7ac685fe5",
        "cursor": {
          "ref": "aca9c71b-dbb6-404c-8718-3a808947a41d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "15ed6d16-149e-4550-921d-d99a9a73dfbe"
        },
        "item": {
          "id": "e78a3823-f1b9-4de1-84a4-4db7ac685fe5",
          "name": "did_json"
        },
        "response": {
          "id": "4986f8cb-9a0c-486b-b8a3-23e237d3239e",
          "status": "OK",
          "code": 200,
          "responseTime": 1179,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a17fe2-c7c1-49cd-852f-9b29acde378d",
        "cursor": {
          "ref": "1106b262-a102-4dcb-9a86-b811eeff1282",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c598f0eb-e6a1-4c9e-9de2-de483e79bac3"
        },
        "item": {
          "id": "b4a17fe2-c7c1-49cd-852f-9b29acde378d",
          "name": "did:invalid"
        },
        "response": {
          "id": "358acb9b-6cbf-4791-af96-876b78ad7a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a17fe2-c7c1-49cd-852f-9b29acde378d",
        "cursor": {
          "ref": "1106b262-a102-4dcb-9a86-b811eeff1282",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c598f0eb-e6a1-4c9e-9de2-de483e79bac3"
        },
        "item": {
          "id": "b4a17fe2-c7c1-49cd-852f-9b29acde378d",
          "name": "did:invalid"
        },
        "response": {
          "id": "358acb9b-6cbf-4791-af96-876b78ad7a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e815cb5-1a65-47bc-9b2e-e3f388d37750",
        "cursor": {
          "ref": "896db3ff-9ab2-4531-b99b-a885c97e4013",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f5ad8a4e-739c-4f65-af2c-9af9826a3820"
        },
        "item": {
          "id": "0e815cb5-1a65-47bc-9b2e-e3f388d37750",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "042e9a00-6069-41e1-8e0a-63b61ae9fc93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 295,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274d470f-1eed-491e-bc11-2fadc6443b2a",
        "cursor": {
          "ref": "4b644f0e-2800-4297-a296-bc0327171834",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6b7ae391-f449-4ae9-a0d7-3ae19b5fc160"
        },
        "item": {
          "id": "274d470f-1eed-491e-bc11-2fadc6443b2a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b1fd2ac3-5ea4-4446-bf09-2addfa731274",
          "status": "Not Found",
          "code": 404,
          "responseTime": 92,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b6da4b-40e4-42d2-962f-f4e8f7652ddd",
        "cursor": {
          "ref": "e9b2e4fa-12e4-4dec-aca9-fd1bf759b1ff",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5281a5b2-30df-413a-a070-220b7e304c36"
        },
        "item": {
          "id": "e9b6da4b-40e4-42d2-962f-f4e8f7652ddd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a79ce208-45a9-4eab-9eb3-b977befb9874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250e7f99-52d2-4566-898e-030d6c9d6ad9",
        "cursor": {
          "ref": "d1281d67-d6d6-4aed-9cb2-09004323f228",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ef7c2b3c-ff7d-4dd3-a720-9716ebc9afac"
        },
        "item": {
          "id": "250e7f99-52d2-4566-898e-030d6c9d6ad9",
          "name": "identifiers"
        },
        "response": {
          "id": "27f757cd-1433-4045-ae9a-1c6bdc32ddbb",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d97561f-dfb1-49b4-a943-f854ac808cc8",
        "cursor": {
          "ref": "5d496f89-96f0-486e-8153-39d09fd1e8fd",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "718be4b3-f3ab-42cc-b28e-119382510324"
        },
        "item": {
          "id": "1d97561f-dfb1-49b4-a943-f854ac808cc8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "037de031-5bbe-49a8-9b4f-d21ff732c29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6dacb7-e117-4af8-a37e-51ae595d0d52",
        "cursor": {
          "ref": "8bbe782d-fb12-4b60-9558-30b107513d4a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "04cce817-d562-46ef-bccf-9bfe9e926e64"
        },
        "item": {
          "id": "fd6dacb7-e117-4af8-a37e-51ae595d0d52",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b9e49ee5-2600-4361-b8ae-0f9e32566c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46555140-820e-4049-9bb0-50ab75591476",
        "cursor": {
          "ref": "ce1e13bb-ce78-4dbe-ace4-f88899db6591",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1bbe57ba-6df2-4046-be00-d11ee79572ad"
        },
        "item": {
          "id": "46555140-820e-4049-9bb0-50ab75591476",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "26020ba8-1573-45ca-809c-7edf6ff24561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcd7963-72dd-4e56-8273-b6e3cb5e2fb2",
        "cursor": {
          "ref": "f7ff9e70-9572-4b2b-836d-b5bb4cc32644",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d4ba9944-e4b2-4271-8dc4-f73873272da7"
        },
        "item": {
          "id": "8fcd7963-72dd-4e56-8273-b6e3cb5e2fb2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a794a59e-4e76-453a-800a-e3a16c75d5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa80039-621f-4436-af2b-71ebd106b313",
        "cursor": {
          "ref": "71dc2ba5-7b01-4e2b-b19d-d61f1e1d0b8d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "63fb3c97-a49a-4d04-9774-a324f814b30a"
        },
        "item": {
          "id": "1aa80039-621f-4436-af2b-71ebd106b313",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1bc155cd-e583-49db-8544-c71bfb3cf9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cd4f85-55a7-4a72-9a5d-0bb046e38806",
        "cursor": {
          "ref": "e142b97a-ba96-481d-9f4f-eb164c3de4fb",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b8bd6548-cb84-48ba-bcc6-2ba5c4d83c14"
        },
        "item": {
          "id": "e9cd4f85-55a7-4a72-9a5d-0bb046e38806",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "de9967af-d4bc-4a78-a4ce-f53d3947f8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731d995f-6151-4856-af94-e71c2f819066",
        "cursor": {
          "ref": "20198c8f-d53c-4f77-bed0-93c1d0d22b69",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d254e1a0-2ae4-4fe8-b917-b8dc337708c9"
        },
        "item": {
          "id": "731d995f-6151-4856-af94-e71c2f819066",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7a0e3b88-63c0-4809-8971-ef4e7833779f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6baa4d2-7839-4f06-8de3-5400f051f4f2",
        "cursor": {
          "ref": "8f111896-962e-45ef-9a83-9d25a44459b6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9c9b43ce-0060-45bd-bfc8-ed72e423d49b"
        },
        "item": {
          "id": "c6baa4d2-7839-4f06-8de3-5400f051f4f2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6ab2ce93-bdbb-4fd6-9e1f-f0d332d11dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13331058-9e83-4e94-b341-611a26b2087f",
        "cursor": {
          "ref": "ee451c6d-50be-4bf5-b62b-e6f90d6842e2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7e37f04e-c8e4-4fa3-8baa-437617a696b1"
        },
        "item": {
          "id": "13331058-9e83-4e94-b341-611a26b2087f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2c28f8e4-dd1b-4813-a000-9134b72b1830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1737987-209a-4fa0-9337-22a0e2c8e0cb",
        "cursor": {
          "ref": "cb716741-9b5a-4978-a361-564982a018f3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9aab398a-ea61-4097-a902-d8440b1bb124"
        },
        "item": {
          "id": "c1737987-209a-4fa0-9337-22a0e2c8e0cb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5073dde8-ad44-4a5b-ac68-3233703120b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac0c501-d251-4379-9aa5-91a18fbc91b3",
        "cursor": {
          "ref": "12035834-5ab5-47f5-95e7-a9dc9d87579d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "41cdfba5-61ee-4acc-b427-959f251fcc43"
        },
        "item": {
          "id": "8ac0c501-d251-4379-9aa5-91a18fbc91b3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "26e56bc0-738d-4f47-9b6d-ecdc0a05f0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e868f3c-c20d-498c-b4c7-a5291fe37699",
        "cursor": {
          "ref": "912cf131-2153-4f84-a715-908bea836aa4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "70a77480-2871-49b4-85c3-17eb6d6730d9"
        },
        "item": {
          "id": "6e868f3c-c20d-498c-b4c7-a5291fe37699",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "664cfd0f-048d-43f6-89b2-304e8241954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666eb05e-d77e-42cd-841d-507bdb93bf47",
        "cursor": {
          "ref": "479c7678-6e32-4d36-96b2-3c361c4053c2",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "33241ed9-0351-4104-8d49-8b653f1eb9a0"
        },
        "item": {
          "id": "666eb05e-d77e-42cd-841d-507bdb93bf47",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ada3aa14-ac5b-42b3-aa08-7775d879241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f3ffd1-cbb8-40cf-a387-e18890a5f6df",
        "cursor": {
          "ref": "10ebc039-1a94-46d0-bae4-f0bc2979d11c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "38ac0f7e-2233-4d96-bad8-7ef679410721"
        },
        "item": {
          "id": "b6f3ffd1-cbb8-40cf-a387-e18890a5f6df",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0c9e9fe5-e0ea-4080-ab10-8e6ecbeaf861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0375bc-d06e-413a-b684-f61c5ac2b1ec",
        "cursor": {
          "ref": "d19f2790-9b1e-4d58-a4a7-cea73293b362",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6d1ce8e0-4da4-4080-a60f-70150293812c"
        },
        "item": {
          "id": "2f0375bc-d06e-413a-b684-f61c5ac2b1ec",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eaadd1e7-f31f-443a-89dd-01acd76c6a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a080a1b-bea6-493a-9adb-e40972421098",
        "cursor": {
          "ref": "ac5b399b-8c91-43f4-afea-b297b5ee04e9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "275ff136-07e0-466d-aba1-52e8901cbb33"
        },
        "item": {
          "id": "6a080a1b-bea6-493a-9adb-e40972421098",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a1bfa906-96b3-4465-b0da-5b66698b3762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a35c58e-e2fc-4706-b3a3-806d0b56e3b1",
        "cursor": {
          "ref": "074d2401-309b-4145-bd03-0f90890ae983",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "669deee1-4734-4774-aff2-89f3000e4d73"
        },
        "item": {
          "id": "6a35c58e-e2fc-4706-b3a3-806d0b56e3b1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6412d7fc-308c-489f-b0f9-c25e2be0b55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f3fd0f-7b5c-4fd4-8d5a-cd280480e09a",
        "cursor": {
          "ref": "11f8d374-2605-43d6-a17a-a227ef9f1463",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3409f822-5577-4214-8507-808ec69560fe"
        },
        "item": {
          "id": "f1f3fd0f-7b5c-4fd4-8d5a-cd280480e09a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dda9d1d4-7828-426f-b1d6-c41bce72f89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6728762-36c7-449f-9dbe-3ace6bed68c6",
        "cursor": {
          "ref": "4fa5748a-dfb3-4ee6-8ff6-cef3de527dcd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "786ef3da-cd5c-4040-be98-ccc18274c8ca"
        },
        "item": {
          "id": "b6728762-36c7-449f-9dbe-3ace6bed68c6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "531ae331-4f1e-4b45-8d02-fa5b94e420b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16120f8b-1c6a-4e20-a473-0e48fc439f99",
        "cursor": {
          "ref": "2837375c-7600-4a42-a84d-74e062812ad8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7de520ff-ee18-462f-8d29-faecfb5b2654"
        },
        "item": {
          "id": "16120f8b-1c6a-4e20-a473-0e48fc439f99",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8ffcf444-7a3f-4654-bbe6-cd566608d637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca66a70-9ae8-43c6-baea-30d89524c36a",
        "cursor": {
          "ref": "ca099f01-aa5d-4510-b3d3-042d517269e4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "76e833a3-5d44-459d-9eb4-313e3a616498"
        },
        "item": {
          "id": "7ca66a70-9ae8-43c6-baea-30d89524c36a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dad0e0fc-c4f0-4c19-a929-e0e2574c40c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d2c200-a63c-474e-9ce0-37ee097bc559",
        "cursor": {
          "ref": "4c523cdf-0ea1-4484-8a5b-99b7cf9af94a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "66ac7026-4c5a-4053-a741-2ad9b7ea3692"
        },
        "item": {
          "id": "36d2c200-a63c-474e-9ce0-37ee097bc559",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b0d09690-6faf-483b-9f3f-d4d57ea6c51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f418c-0864-464e-b20a-41a57374cd63",
        "cursor": {
          "ref": "954b0bae-ed4c-4081-93b3-f067d568a714",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "81565ed9-ed6e-4366-84bd-c33683125b3a"
        },
        "item": {
          "id": "a73f418c-0864-464e-b20a-41a57374cd63",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36532291-5c2a-47ba-aa6c-f14394572703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574b3fc-f436-4ada-aa1d-f7a496d3311d",
        "cursor": {
          "ref": "afb0de24-55b9-43b9-ae8e-4f53dcede69c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "71aa99f7-d236-45f6-8dbd-e80eac10d30c"
        },
        "item": {
          "id": "7574b3fc-f436-4ada-aa1d-f7a496d3311d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3421acb6-b1d8-4b61-9a92-fc84338e9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315a785e-935f-41d4-bbf1-f36c9fa672d5",
        "cursor": {
          "ref": "94c171cc-2fe3-4742-ba16-af3752c8e9e9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c588072e-f1bf-4adb-8e7f-17af377c5337"
        },
        "item": {
          "id": "315a785e-935f-41d4-bbf1-f36c9fa672d5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5ccc6752-d276-4628-beb2-97333e6581aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59584517-030e-41a7-bd59-a701633e1010",
        "cursor": {
          "ref": "1752b07d-72c2-489d-b0a3-37b124485bfc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c803665a-3909-481d-92d0-1c44876f4fac"
        },
        "item": {
          "id": "59584517-030e-41a7-bd59-a701633e1010",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "46355cc2-63df-4a01-8cfd-c8201c1dc0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f6aaac-6340-4ae1-804d-1c534b008752",
        "cursor": {
          "ref": "445b5d64-e601-4f51-9565-9a7ccbfc350d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e5c98602-e23f-474e-941e-96792fc8315f"
        },
        "item": {
          "id": "98f6aaac-6340-4ae1-804d-1c534b008752",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6af7fdf-5961-4c49-b51e-f794b0ec6b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac5dcc-95fd-4e66-818c-1fe247a19c2f",
        "cursor": {
          "ref": "b08c2e9b-b312-43a8-a761-312bec7aabe2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1f5e4689-3f6a-42cb-a1f1-d56d758c2b03"
        },
        "item": {
          "id": "5bac5dcc-95fd-4e66-818c-1fe247a19c2f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f4d24f9b-15b5-4100-b05e-06af902ded75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec88838-09e6-4ce1-9309-b99a159466e7",
        "cursor": {
          "ref": "d3a9d9c6-a3ea-4e14-b841-a0f296f28b2f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f3115dfb-dd3d-44a1-9d3f-4849ad583d79"
        },
        "item": {
          "id": "aec88838-09e6-4ce1-9309-b99a159466e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cecf54a5-433a-40c0-a1a6-1d61cebac37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3be713-882a-4621-ad2a-599cc0ac9b1b",
        "cursor": {
          "ref": "e80baa00-102e-4f89-a3f1-ebb044a2152b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30680e78-0ba1-4a3f-a32e-903580091e33"
        },
        "item": {
          "id": "cc3be713-882a-4621-ad2a-599cc0ac9b1b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3b319250-87b0-44f7-b8b3-2d083b00f87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeaea8e-c384-4e29-aa6b-2a7e08d52e4f",
        "cursor": {
          "ref": "826afa1b-9a27-48f9-8ebf-e9e08685ac69",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "45ff0be5-93d9-4fd4-ae27-20677b1b2742"
        },
        "item": {
          "id": "faeaea8e-c384-4e29-aa6b-2a7e08d52e4f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c8d39149-24cb-4f5b-be2c-90876bf6d329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f2bd8d-e752-4aa3-9ca5-3dbb7305cc7d",
        "cursor": {
          "ref": "4aa802e6-a10b-4b5f-bef7-9fb68de1017c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2e9d74b2-e392-4333-8648-be2099e76b71"
        },
        "item": {
          "id": "74f2bd8d-e752-4aa3-9ca5-3dbb7305cc7d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "69976253-406b-4e0f-8a02-c7acdf36e57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66a517b-3724-4e7d-bff6-90020fd25b7f",
        "cursor": {
          "ref": "b2b8f967-7272-4bdc-9f30-30120bbb7f8d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "282363f4-b5ba-4bb0-b0bd-c110e709d4a7"
        },
        "item": {
          "id": "b66a517b-3724-4e7d-bff6-90020fd25b7f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a96e6211-5ca9-4527-b08c-b33d38e20746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda3da53-6d96-4343-a308-851d5712a8d2",
        "cursor": {
          "ref": "cd903b3f-6886-42a4-9bb8-aa4e1ac836da",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "12d8bbe4-65f3-4973-b2da-7d2830c67b05"
        },
        "item": {
          "id": "fda3da53-6d96-4343-a308-851d5712a8d2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c470de4d-f318-4a8d-90a8-cc23e2b4d47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e87e5f7-d703-4bc8-ac46-9b096df70e81",
        "cursor": {
          "ref": "ed7818a9-9a89-4cce-b819-9428be62c3e7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0a4ffef4-a5d4-41ea-9307-29dff4605f9c"
        },
        "item": {
          "id": "5e87e5f7-d703-4bc8-ac46-9b096df70e81",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "225cbc19-871d-47da-ad0b-b7f3ba6a7f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab9bdba-9437-4f0f-9dc5-fae0284aa215",
        "cursor": {
          "ref": "812c5193-6381-4242-a901-cc7bcc0d4960",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9fdadf72-0b2e-4c63-b8e0-b3528377f3d2"
        },
        "item": {
          "id": "1ab9bdba-9437-4f0f-9dc5-fae0284aa215",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f454289a-e0cf-4929-b776-44039dfa6f6f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 375,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921d49ba-2adb-43cc-949f-7819a281f5b6",
        "cursor": {
          "ref": "b6e0c6a4-3bf8-454d-abae-d59991fe2829",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8dc093a6-5cbb-402e-973b-2bf48c2f9f22"
        },
        "item": {
          "id": "921d49ba-2adb-43cc-949f-7819a281f5b6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "64061c3e-fb97-47cb-9543-70ccd9b0e7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e068a9-ea0f-4a6d-b118-a95065a16f74",
        "cursor": {
          "ref": "6dde1143-5542-4939-90a7-1356896e5750",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7f00177b-45ed-46eb-8b9a-3132339636a3"
        },
        "item": {
          "id": "01e068a9-ea0f-4a6d-b118-a95065a16f74",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "87b5d1dc-849f-4132-b3b7-b75db26ca22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d08d5e-a07f-42d4-b4bf-491e523d362f",
        "cursor": {
          "ref": "3361400b-d620-4ff3-baaa-7725852973ba",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "343e51c7-178a-4060-ae4e-826ab9d23296"
        },
        "item": {
          "id": "89d08d5e-a07f-42d4-b4bf-491e523d362f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "02fcd287-2355-49d6-9f98-d73ef4de8e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae6305c-6002-48d4-913a-63ce80118bd4",
        "cursor": {
          "ref": "d782d7d4-87d0-45af-9032-e83395c73a21",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f7d19330-e9fd-49ee-92fd-3396b9d1d512"
        },
        "item": {
          "id": "3ae6305c-6002-48d4-913a-63ce80118bd4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "527aacec-df39-4029-b1f8-747173664e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bbbbd9-9c1f-4732-9ac7-1fc118cb4a32",
        "cursor": {
          "ref": "46383fcf-512a-4d50-a712-b0426908a02a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0e9bd7a-9310-482b-9693-98a2ecd6c41e"
        },
        "item": {
          "id": "61bbbbd9-9c1f-4732-9ac7-1fc118cb4a32",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "43abda59-f7c4-4cd9-a425-b6f0a0c838ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeff6bd-2284-41c7-ae28-d45e154090bb",
        "cursor": {
          "ref": "2eeec669-62c7-419c-85d4-32450c001392",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "052730a2-cf58-48a7-95b6-65a1caac781e"
        },
        "item": {
          "id": "9aeff6bd-2284-41c7-ae28-d45e154090bb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cde10eba-42ae-4a0c-a1b6-3f721ebeb615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9c174c-23b9-4069-8463-c07955a975ff",
        "cursor": {
          "ref": "4caca0c7-cf70-44d0-8d70-8f3c1df50c6f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a337a176-e830-4a12-9fb6-70ed76395704"
        },
        "item": {
          "id": "4d9c174c-23b9-4069-8463-c07955a975ff",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b517e289-53b2-4494-bbed-eb857511ef4c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 368,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5926f3fc-709b-44f8-9298-ab2574af4297",
        "cursor": {
          "ref": "c5e654d7-b008-4a52-9368-4920dd12e724",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "69157b95-51a9-4f94-9f6b-012d6e969359"
        },
        "item": {
          "id": "5926f3fc-709b-44f8-9298-ab2574af4297",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8731196e-62e1-4695-acee-0d0bd23219e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e6c3d5-18b1-41e4-a6c4-2fc3347c4e86",
        "cursor": {
          "ref": "30048e7c-9231-49db-a1bd-9def6a3c3618",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6a0fa543-b700-4e95-83b2-acbdf45f8cb4"
        },
        "item": {
          "id": "d7e6c3d5-18b1-41e4-a6c4-2fc3347c4e86",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b0424ad1-3317-4007-9e68-96f716fec6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b3ea65-5361-4719-9b3f-10784c40a62f",
        "cursor": {
          "ref": "fd16fec7-e686-447f-8739-f81e334f5fab",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "70deb5d8-2643-4aca-b7d2-3b563f05a721"
        },
        "item": {
          "id": "10b3ea65-5361-4719-9b3f-10784c40a62f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d7babe9e-2c9d-4a9e-a601-70e26c543213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06addcff-7ba0-48cf-9841-4ab2049c4b20",
        "cursor": {
          "ref": "f19fa04f-abb9-419c-af36-92dbcb20eb6f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d57178b-dc47-41d0-975e-b09783ebdc67"
        },
        "item": {
          "id": "06addcff-7ba0-48cf-9841-4ab2049c4b20",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "061ec126-845b-4370-bb8e-95c9a2f2de6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d01cf3-6617-4a8c-ac2a-3a94857b227e",
        "cursor": {
          "ref": "80d55a2e-e092-48dc-a41b-815df0bd8454",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1252daf1-333d-405d-b40a-b71c7fcd7aa9"
        },
        "item": {
          "id": "00d01cf3-6617-4a8c-ac2a-3a94857b227e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "716e3632-cb8f-4066-a9cd-587022d703ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1c2663-1787-4bfb-b433-c3c46cc24871",
        "cursor": {
          "ref": "624fcada-0273-4306-bb2d-7c162b9399a5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3578becd-2e84-4c36-a7ac-20b822683922"
        },
        "item": {
          "id": "1b1c2663-1787-4bfb-b433-c3c46cc24871",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "06add170-6d5b-495c-8ba4-d5e0d3c8a9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42fe78f-975e-4286-bca0-ad7043b61189",
        "cursor": {
          "ref": "4d3d0e35-cce2-46ca-9725-75f449f1aa8e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3843b20c-027b-4c1a-9daf-b05ea830a844"
        },
        "item": {
          "id": "f42fe78f-975e-4286-bca0-ad7043b61189",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fc90ccf5-8d8e-4f61-8970-034e083e38f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06efbd60-1781-4956-aa03-ab52c3e08cb1",
        "cursor": {
          "ref": "9c2928b3-1ce7-40ae-9d7b-236c02c3fe05",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3effa80e-d7d1-4aff-828d-48d4ba9c676d"
        },
        "item": {
          "id": "06efbd60-1781-4956-aa03-ab52c3e08cb1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "737e310b-a93d-4578-a36c-f3fed6d98bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b64b2b4-cf6c-4065-957f-b07b2ee0ec98",
        "cursor": {
          "ref": "1b143814-5de1-4754-b8bc-7d798a5bdb1a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0da83507-7a7e-471e-9aa3-ac7503b29837"
        },
        "item": {
          "id": "1b64b2b4-cf6c-4065-957f-b07b2ee0ec98",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ef1cbba3-bcb7-4543-86d3-89820d45a8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9642a51b-fa27-4192-a6b9-daccd4cb6584",
        "cursor": {
          "ref": "393888fd-f6ca-4141-bd29-8a246d8746b2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4f275fe5-dcde-4538-b5c0-cedaf1c97717"
        },
        "item": {
          "id": "9642a51b-fa27-4192-a6b9-daccd4cb6584",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "510db913-92a3-4afe-bcaa-b19047c18d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c4366-ceba-4d6a-8e71-aa197486abc2",
        "cursor": {
          "ref": "f0d90cfc-64e8-4d51-9cc9-20a2ab965bac",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "de25aabd-2c75-4fa5-af70-cefc33426190"
        },
        "item": {
          "id": "fc8c4366-ceba-4d6a-8e71-aa197486abc2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a39b8b18-bb3c-41a3-ae21-c8b4e10c98db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac3138-feb0-49af-98bc-b615d683855e",
        "cursor": {
          "ref": "7f20dd6d-deb8-4004-845b-5904d2122f5a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "990da500-86f2-4e36-b8ff-e9d26b1e177c"
        },
        "item": {
          "id": "ecac3138-feb0-49af-98bc-b615d683855e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "01f7ad81-a3d0-4ccb-90b3-c56e8fd88498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f725f67-97df-4e87-a3c0-e12a7961baf0",
        "cursor": {
          "ref": "a80060a5-0269-4399-82f6-cd25aaf4b36e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "14a95dba-b5f1-4c40-b3c0-818684594b62"
        },
        "item": {
          "id": "8f725f67-97df-4e87-a3c0-e12a7961baf0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1661bce1-5d3a-4e65-9fc8-ba086ba223b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d15215-d81a-4ae0-84e5-9ef99e616b49",
        "cursor": {
          "ref": "328d3763-ffc6-4a92-a5b9-bc08a2211a54",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "10fd653d-f181-4e7a-8b8f-61273e34bc83"
        },
        "item": {
          "id": "a6d15215-d81a-4ae0-84e5-9ef99e616b49",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "54413dd7-95a6-4dad-8716-a828f2d90c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9789485-a9eb-448a-8725-a6f5f182754a",
        "cursor": {
          "ref": "954f8e09-9e9c-4fb8-add8-d8c991d13059",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7adb5e7c-50d7-4e2e-b9a9-daf598511c90"
        },
        "item": {
          "id": "f9789485-a9eb-448a-8725-a6f5f182754a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "15b6a725-faec-4e5f-922b-ca75dc68cc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded1c682-471c-4a35-a5a7-f2f93bb3090f",
        "cursor": {
          "ref": "ffc6160c-4b50-40e4-997a-76a4ddf520fc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "afad4ffa-60d6-4c45-a08d-09aaa5d4b22e"
        },
        "item": {
          "id": "ded1c682-471c-4a35-a5a7-f2f93bb3090f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "058a30f9-370b-4e77-a6db-47bc009c2276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd584b5-9c38-4b0e-85bc-3d93eb14511d",
        "cursor": {
          "ref": "3d9833f9-5355-4efa-8c67-cdc354ee11ad",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ddce04b2-9c6b-4528-ad5b-b3768c5f42cd"
        },
        "item": {
          "id": "1fd584b5-9c38-4b0e-85bc-3d93eb14511d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ffd69e27-23b4-42a4-b8df-4e2a14b5633b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e395b4fa-8d1d-4baf-920c-b8298b63ba6b",
        "cursor": {
          "ref": "84dc5e72-8f18-4cf7-99c8-213db01fc7f9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1263f698-fd8c-49d9-b602-b8568965e534"
        },
        "item": {
          "id": "e395b4fa-8d1d-4baf-920c-b8298b63ba6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9057781-74c3-4e2d-b954-2c8127ddfd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d6d820-9de2-4731-a8eb-8edb2a9979cc",
        "cursor": {
          "ref": "fccfb8f1-3e39-4ae2-98dc-1fc024bc4f72",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3808140b-034e-48ff-98dc-2595d1d8fba2"
        },
        "item": {
          "id": "53d6d820-9de2-4731-a8eb-8edb2a9979cc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "feca047e-f896-4688-bea2-2567dba2963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc29b06e-4405-4c63-bbcd-925cd2396a31",
        "cursor": {
          "ref": "1f76a3dc-53a8-48e5-b5ba-691f9ef8bb58",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8a197b48-e01f-46b8-b1b2-12b475374bfa"
        },
        "item": {
          "id": "fc29b06e-4405-4c63-bbcd-925cd2396a31",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bf52ef65-c0b1-4ca4-9237-f66b47aa5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a95cdd-b492-472b-b64a-4a5e0688e8f9",
        "cursor": {
          "ref": "db487e75-788b-4256-8477-63ac5de7ed84",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2a4e9b2a-a477-482c-9e87-e974302671a7"
        },
        "item": {
          "id": "11a95cdd-b492-472b-b64a-4a5e0688e8f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "61937241-5c99-43c0-8e10-17965b9828fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a043c010-26f1-4bba-97b1-6f75154553ab",
        "cursor": {
          "ref": "186aeec8-d016-4ecb-8fce-ba2f586677ee",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b6fd1a73-d8bd-4a9a-9531-47e95751872d"
        },
        "item": {
          "id": "a043c010-26f1-4bba-97b1-6f75154553ab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4a94d083-8cb6-4e8e-86d6-0a8c7cccaa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dfcaa9-8b8b-40d8-be34-f98f8fab1bfe",
        "cursor": {
          "ref": "89f2d3d9-a185-4983-9c3b-6d83450a4729",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a57c4cfe-4aec-4fc8-8eb4-9f1bdcb2852e"
        },
        "item": {
          "id": "93dfcaa9-8b8b-40d8-be34-f98f8fab1bfe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d8e77888-fc9c-4828-a259-dabe9bacddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591dab4c-0b70-4fc4-b71d-4ce8ca1997a1",
        "cursor": {
          "ref": "026a5b32-c5bc-4494-8f4d-43ea96607276",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f02fe12c-6ea8-41f6-8dc7-098f429adcec"
        },
        "item": {
          "id": "591dab4c-0b70-4fc4-b71d-4ce8ca1997a1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8742a580-3da2-4ba3-a610-0d7c0db663cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fb1d30-7cc4-4406-aea5-128b324f401a",
        "cursor": {
          "ref": "5b856268-1ac0-4da9-8202-95a9a69c447c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1b72f7a5-843d-4055-b259-79b4dd821683"
        },
        "item": {
          "id": "71fb1d30-7cc4-4406-aea5-128b324f401a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5397d359-f171-46ee-a90e-12b76cf224cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b5e880-f48c-4e44-92f1-ce73c7925b12",
        "cursor": {
          "ref": "93ee128a-2006-4fdd-a343-1b3dd1888b68",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "178f39f5-d9da-4933-b2fb-ea2e03eb291e"
        },
        "item": {
          "id": "f8b5e880-f48c-4e44-92f1-ce73c7925b12",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0e22afa6-5eae-4388-a983-8927a2738ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f0fce-2ed8-4615-982a-f9711c7d093a",
        "cursor": {
          "ref": "adfb4fb3-9627-4288-b362-59d878106156",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3ce5794e-64bd-439a-af07-20f86e8a2acb"
        },
        "item": {
          "id": "465f0fce-2ed8-4615-982a-f9711c7d093a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "095bbc2e-d21a-4dac-8d16-a7ecd123ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87738ce-4485-44f7-978f-1174385d838a",
        "cursor": {
          "ref": "a44bac51-892d-4036-9d89-2e3ca63268dc",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "796b6024-a3ee-47cc-8fbf-7f4a96503ceb"
        },
        "item": {
          "id": "e87738ce-4485-44f7-978f-1174385d838a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b162fd94-668c-40e2-995b-ef74d76fc5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59929903-38f6-4571-b4d5-dc0dab0deb1b",
        "cursor": {
          "ref": "ae069d02-caa8-4b8e-ac7b-6522de2c4967",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2f3003b1-e6a7-489a-b044-3905eea3487d"
        },
        "item": {
          "id": "59929903-38f6-4571-b4d5-dc0dab0deb1b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88a16a23-a2a4-49ce-8b26-3220d14ea73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1fa8a6-4dda-41b3-b3a0-59139e7160d1",
        "cursor": {
          "ref": "81abce91-7036-4859-a791-4afec579db58",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1d8790ef-273d-476f-a69a-ee6e0517e443"
        },
        "item": {
          "id": "eb1fa8a6-4dda-41b3-b3a0-59139e7160d1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "16b781f1-4d42-4adc-ba87-c28f1f9130e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dba0ad8-25ca-4206-ad3e-825bffd5e659",
        "cursor": {
          "ref": "d9615e19-ff61-48cf-b40e-d1cef499d184",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7d9d3096-c2b8-40fb-aade-bfdc167f9fd1"
        },
        "item": {
          "id": "9dba0ad8-25ca-4206-ad3e-825bffd5e659",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6ff26046-100b-4dc2-822d-8d76d0b4c43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a55f994-f600-4ccc-937f-3eb1780a1c32",
        "cursor": {
          "ref": "cab2ca62-1300-4436-b0eb-1e1c9a5a4c4a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "decec31d-b0f3-412c-9855-40c65d0051bf"
        },
        "item": {
          "id": "9a55f994-f600-4ccc-937f-3eb1780a1c32",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "67c6f461-614f-4864-beb2-a958e989fbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0a9e61-baba-4755-b849-ef88dd4aa3c1",
        "cursor": {
          "ref": "599b4a03-9567-4a7c-a143-a44c4dd3561a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "428c54f9-f530-447f-9c50-4eda2f245393"
        },
        "item": {
          "id": "fe0a9e61-baba-4755-b849-ef88dd4aa3c1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "03a4185b-3535-411d-ab64-78282972c5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b31796e-a8fa-4c42-af7e-af211ff8fc8c",
        "cursor": {
          "ref": "e5f90d69-c7c5-48e2-89c1-0c8d1538f4bf",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5d2c9477-4101-4f4c-af76-f9b695561bcc"
        },
        "item": {
          "id": "8b31796e-a8fa-4c42-af7e-af211ff8fc8c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0372fd99-3034-4356-8d37-4f10e4eb1293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3326e4-567d-4a1c-9418-bcf12bf886a9",
        "cursor": {
          "ref": "f0d365ed-f568-4420-80ff-a6f2faa306c1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c3a22428-b7bc-4cc5-8b20-715b5c167f27"
        },
        "item": {
          "id": "1d3326e4-567d-4a1c-9418-bcf12bf886a9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "51499814-b3cc-4535-ae14-bd3b6121c115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4b5725-8082-4140-a96f-f24e8c085b76",
        "cursor": {
          "ref": "e04b778f-7c1e-4d47-87bc-d51b12a4f58f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9948f8b9-f97f-42b9-b20e-8065c325fcec"
        },
        "item": {
          "id": "9a4b5725-8082-4140-a96f-f24e8c085b76",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "07598532-3f87-46be-a800-99fdb7cdf70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a073dc9c-7507-413f-91d6-106118515887",
        "cursor": {
          "ref": "ad9fdba8-1091-4926-a8c0-5fda0fb20b13",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "df05d4ad-356e-4a21-9fba-fb4bbd6a1d46"
        },
        "item": {
          "id": "a073dc9c-7507-413f-91d6-106118515887",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44d36176-784c-4068-8ec3-de15b972aab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d8c6c5-296b-42f9-8d35-7e67e7f5c6b7",
        "cursor": {
          "ref": "3c0b3fb4-47fa-4826-a261-2c03f2b08855",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68ea0172-71cd-44cd-a418-dcd87f8c77c7"
        },
        "item": {
          "id": "56d8c6c5-296b-42f9-8d35-7e67e7f5c6b7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b607f9f4-34c4-4f12-a231-2040396d9689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8382f0-7058-4a15-8a0e-808e6a6601e0",
        "cursor": {
          "ref": "f866a3b6-0ef3-4cb1-b624-d9eb686db214",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2e6bb457-e995-4e5d-bc4a-90ee277b22aa"
        },
        "item": {
          "id": "6d8382f0-7058-4a15-8a0e-808e6a6601e0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f1c28e1a-85fa-4a72-afd8-6ae2107c41f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6d92d6-0af4-4b78-a5bb-16ee781a3d44",
        "cursor": {
          "ref": "b1ef85a4-fa99-4b09-bbcb-9b5f5577d2c2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "23e299b5-a11a-4b27-af10-b1e28fe7961c"
        },
        "item": {
          "id": "3b6d92d6-0af4-4b78-a5bb-16ee781a3d44",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3ab61ef5-f3ba-4ab6-b0a3-85df2672d5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf190734-d7fc-4317-9339-91274fae6477",
        "cursor": {
          "ref": "4b605d8b-ae50-4f7d-8e55-0b8adddd0359",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e106c73-1e80-4979-8b60-5a299a449b3f"
        },
        "item": {
          "id": "cf190734-d7fc-4317-9339-91274fae6477",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e0657464-a68f-4ba2-b890-a08da9919253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ceb3f1-50ad-4c78-8a5b-bbf90d710e83",
        "cursor": {
          "ref": "3401f840-dd29-4caf-b3e1-8ba4f1d0f45c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e39f963f-c0fd-4e4b-8d15-c9745aae2c0b"
        },
        "item": {
          "id": "21ceb3f1-50ad-4c78-8a5b-bbf90d710e83",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "419c28d6-e1bb-4c92-b0d6-e2527b74f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14061356-d128-42d8-99c3-89dba117a409",
        "cursor": {
          "ref": "ac9e8cfd-574b-4ed1-868c-dd2aafa52937",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "de72e601-d02a-40a0-af34-3728bbe6a9ad"
        },
        "item": {
          "id": "14061356-d128-42d8-99c3-89dba117a409",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1427c316-e755-4b34-8983-bb6a32f04870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c9ae02-69e1-4639-931d-337cf1e8debf",
        "cursor": {
          "ref": "f4d33f72-afca-4a14-b127-d54ef5a9b413",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0ab2c566-eae3-436d-ab5a-3567c18c6e7f"
        },
        "item": {
          "id": "c4c9ae02-69e1-4639-931d-337cf1e8debf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "005df21a-efdc-4ec2-a6c8-88fe72a4fb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9051133c-bf03-48a1-9812-8b855d30df55",
        "cursor": {
          "ref": "d6b6ff50-26b7-4be1-870a-566522e2ac6e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d872fc24-1913-4e4c-96f5-b5a430decb1f"
        },
        "item": {
          "id": "9051133c-bf03-48a1-9812-8b855d30df55",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "150db134-4aab-41a7-923b-310aa257924f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3f8752-d9c3-4181-862c-f413be80ce3b",
        "cursor": {
          "ref": "2df94ed1-7038-4f3f-8f5a-41c4751501d4",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3cf6f8bb-e983-43de-81d0-d4c73a56a200"
        },
        "item": {
          "id": "df3f8752-d9c3-4181-862c-f413be80ce3b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6a002798-a995-4059-b449-b0ba98ce44db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fad7409-cbeb-4c63-8893-74cf88a2cc6d",
        "cursor": {
          "ref": "84e0d254-a4c7-4fe2-94a0-841f324d245f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8600d887-99a9-4373-9214-574ba770ced5"
        },
        "item": {
          "id": "9fad7409-cbeb-4c63-8893-74cf88a2cc6d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bdb0c9c5-0ec9-481a-8b22-633b39b7b1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743d68e2-b1e0-48ae-9e4d-0bb93d00b102",
        "cursor": {
          "ref": "3b63210d-c101-402a-88c5-5ef43bea26c7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "80f375ee-ce6b-414d-ac17-5f7fceb71836"
        },
        "item": {
          "id": "743d68e2-b1e0-48ae-9e4d-0bb93d00b102",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "83c1b631-25f0-43a4-a5e2-be142a747e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f008d15-32ce-465e-b921-2c3c1ffb4a52",
        "cursor": {
          "ref": "46161512-c21d-4ab2-98c2-89a368d17bf0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f92bbf8e-b083-4748-b09a-2bd6bb240cb3"
        },
        "item": {
          "id": "1f008d15-32ce-465e-b921-2c3c1ffb4a52",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dd3c671b-35dd-4ab3-a729-79d7b7146559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab351d0-da40-480d-b1cc-7b4ae34467e7",
        "cursor": {
          "ref": "954ad441-da2b-43f4-bb5d-59eb55bcd9b5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7e22f57c-ab49-4a95-b602-90bab1848860"
        },
        "item": {
          "id": "3ab351d0-da40-480d-b1cc-7b4ae34467e7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b02135ed-1c8e-4d51-b7b8-b0294f1b3e40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae9e0eb-2718-4806-9e8a-61ef50a41852",
        "cursor": {
          "ref": "7259cb66-ac61-4909-b956-2191925f6db1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3667a3f8-3617-4566-8a22-b1ec41a4b0a9"
        },
        "item": {
          "id": "2ae9e0eb-2718-4806-9e8a-61ef50a41852",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f86ad69b-a12c-40bc-9e27-fa95c1607db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7bd8197c-9317-4028-9959-0909f772f2ce",
        "cursor": {
          "ref": "7ad9fcaa-98b5-45ef-a342-7e334f5a8c32",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a64eac90-82d7-41ad-9aaa-bccb80d6f090"
        },
        "item": {
          "id": "7bd8197c-9317-4028-9959-0909f772f2ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "15f71409-0d24-46ee-83ce-09e31647b407",
          "status": "Created",
          "code": 201,
          "responseTime": 3057,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94e5070-a936-4eeb-8234-9f01c77ade65",
        "cursor": {
          "ref": "9036858c-d694-440f-9e27-cf5f796317fe",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3bad132a-dbe0-420b-a6f4-51e69d63f6ce"
        },
        "item": {
          "id": "a94e5070-a936-4eeb-8234-9f01c77ade65",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "362a1edb-b24a-4597-9b47-fe0e71c00885",
          "status": "Created",
          "code": 201,
          "responseTime": 2179,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a83439-050c-4878-8923-5e07594dd793",
        "cursor": {
          "ref": "3118e52d-8c75-48db-92f8-03ab0876adda",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a32a1c17-5d6e-4743-9c91-7547d5b18da5"
        },
        "item": {
          "id": "d4a83439-050c-4878-8923-5e07594dd793",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "da18eb88-46ca-4bd7-95bc-5c2f3aa5b6f3",
          "status": "Created",
          "code": 201,
          "responseTime": 2948,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f55ec4-84c5-455c-a5ad-662a29d468d3",
        "cursor": {
          "ref": "f4fd0972-5722-47a7-98a5-52ea66cb5e12",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4eb4f210-2dc7-4dcb-b825-050ba46b0529"
        },
        "item": {
          "id": "96f55ec4-84c5-455c-a5ad-662a29d468d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a637791a-c65e-4a12-b5cd-6187e8339eab",
          "status": "Created",
          "code": 201,
          "responseTime": 2183,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38de1336-b132-4f4e-90b7-b56203b2c961",
        "cursor": {
          "ref": "e080a0cb-e6c2-4543-8504-2999b618198b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74cc7e91-96fa-4033-8791-5767a35f7c4e"
        },
        "item": {
          "id": "38de1336-b132-4f4e-90b7-b56203b2c961",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2fb35762-4310-4dd8-8ecf-f60e3acb28c9",
          "status": "Created",
          "code": 201,
          "responseTime": 2170,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18d277d-4ce8-44fd-b42e-7367792b749e",
        "cursor": {
          "ref": "a3d57bbb-09ec-461f-96cb-3d1cc8b5d6d5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "015ccf72-6a59-4807-a3cf-a9d305ebe507"
        },
        "item": {
          "id": "e18d277d-4ce8-44fd-b42e-7367792b749e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f448de8e-0079-4440-ab7c-0854c0113235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "68c71aed-a917-4247-b188-5714f9cd32fe",
        "cursor": {
          "ref": "5b1667d1-0509-40e5-bd40-cac48427e094",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fb910342-64c2-4a8d-8d32-521cfac50fb2"
        },
        "item": {
          "id": "68c71aed-a917-4247-b188-5714f9cd32fe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "134302fc-d3b2-437e-a1db-d5ee8c7e7b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcdce01-bbc4-4c59-b8db-74f725a87c63",
        "cursor": {
          "ref": "b26995c0-0e31-42d8-adde-2d86d2a2b123",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9dd6f6e4-2212-44aa-9af0-4c720c6fa572"
        },
        "item": {
          "id": "0dcdce01-bbc4-4c59-b8db-74f725a87c63",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "77437109-f01f-4d52-a115-9e53e9e432a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af62a954-d125-414e-bb49-e041bf12f9c2",
        "cursor": {
          "ref": "66eed2a2-2523-4f88-b061-a6de3405cf1d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "142ebc53-ef82-435d-9e37-07068587a3ca"
        },
        "item": {
          "id": "af62a954-d125-414e-bb49-e041bf12f9c2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e10b7314-c785-4ded-9c24-6bd079b7aa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091dff4a-13b3-4fec-ad67-f9680c872915",
        "cursor": {
          "ref": "a974d458-b59a-4965-95c9-ab1d8e55ad0f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0e49ff4d-31fd-47f4-95af-53f7cbfc06c1"
        },
        "item": {
          "id": "091dff4a-13b3-4fec-ad67-f9680c872915",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb33519d-063c-4739-a3e1-c4c7bf846a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd467fd6-9c59-4474-a042-2a034f54f04d",
        "cursor": {
          "ref": "843eca98-6acc-4100-bf8f-36e74a22fdc8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41413392-b510-43de-83a0-67e9f834f313"
        },
        "item": {
          "id": "bd467fd6-9c59-4474-a042-2a034f54f04d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ffe48c94-72dc-4021-a27c-c06af6365058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c7d809-11e4-4ce8-a8bb-fda9fff30ac8",
        "cursor": {
          "ref": "452c3280-8ed5-4d2b-a6b0-38a7975b17c7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fb7ad3ab-a4cc-481a-a6c2-d352badb58b1"
        },
        "item": {
          "id": "88c7d809-11e4-4ce8-a8bb-fda9fff30ac8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0e7ad669-f29c-4852-9947-bdf29ffad4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483f5c48-ae72-4cc5-8b86-0ce075296f48",
        "cursor": {
          "ref": "a8a7e3b9-d6c2-4c1a-abba-43365ab4b807",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8bf4e546-857e-431b-abbb-e5d77ac2ba74"
        },
        "item": {
          "id": "483f5c48-ae72-4cc5-8b86-0ce075296f48",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff67cefa-f0d1-40dc-9be6-7ecc3ce3b0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e152530-59c9-4dcd-b8ae-c947497a87b2",
        "cursor": {
          "ref": "f99d766d-1188-4843-9071-3d31ee61751b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a5f842e4-1c3d-4d4f-916c-cf53789c3877"
        },
        "item": {
          "id": "1e152530-59c9-4dcd-b8ae-c947497a87b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3c3645d7-51d9-4f2f-b76c-3ef529ce9d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e93e89b-7072-4f0b-a1e9-b82c2dd1ed7b",
        "cursor": {
          "ref": "7c5083a1-7025-401d-a595-bdbdc9da46f3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "73ab2b95-e2ba-42e7-96d8-ac5621f839b1"
        },
        "item": {
          "id": "6e93e89b-7072-4f0b-a1e9-b82c2dd1ed7b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d973b0d-df94-4b0d-a368-00d201913d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bf7428-af03-405e-a197-711eb20880f1",
        "cursor": {
          "ref": "90270e9e-96c1-429c-bb65-ff2cd77562be",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "30f6caf9-1a02-4886-b6c8-5a3d0075a002"
        },
        "item": {
          "id": "25bf7428-af03-405e-a197-711eb20880f1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dafef5f7-661f-45f3-a0da-5d38fb1f6f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d804fa28-1789-4266-8865-ffdbb6355b5c",
        "cursor": {
          "ref": "df9b1b59-5f87-441f-8db7-e8af39689d76",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "17ab2c99-712a-49d3-9ae2-06109506f923"
        },
        "item": {
          "id": "d804fa28-1789-4266-8865-ffdbb6355b5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "24b0af65-3747-433c-92f8-7927b6eb2cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fc3684-81d4-4fa2-9043-8b0f26c01a01",
        "cursor": {
          "ref": "09c6d9f0-4275-4221-9861-9c3f2e64e6b0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "769a7b1e-d7ec-4896-a1d2-c9ff08d5ecae"
        },
        "item": {
          "id": "a0fc3684-81d4-4fa2-9043-8b0f26c01a01",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eca3133d-af75-405b-ada4-84cba8623da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907c4ab0-782e-4a77-8808-45d4d41b2245",
        "cursor": {
          "ref": "3aa2d919-0b28-4e68-8d97-7e4240ba2b94",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "68f7b553-3783-45e0-af8c-29051d8c74cd"
        },
        "item": {
          "id": "907c4ab0-782e-4a77-8808-45d4d41b2245",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5f050194-a971-4966-af66-916981ad3ff7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 158,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056c8543-6469-4e37-add2-f9d20a84e074",
        "cursor": {
          "ref": "579ccf4b-d372-481e-b805-00f0787f9e25",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "23ef2109-5fef-480c-a1e5-4a7a1bafe7fd"
        },
        "item": {
          "id": "056c8543-6469-4e37-add2-f9d20a84e074",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ec40668-6dba-458a-8079-d2f6f8a5768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac859d49-3ee1-4ed7-b6c6-617abe9d303a",
        "cursor": {
          "ref": "2c1c487e-6949-4fe0-8cb4-f3f060883843",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8133164b-d732-44f6-b3c1-75bcb9573a6d"
        },
        "item": {
          "id": "ac859d49-3ee1-4ed7-b6c6-617abe9d303a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fd5f830e-a514-4c9f-8a0a-d19c28d1b926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42141e2-4bd2-4f79-a3bc-7055b408f8a8",
        "cursor": {
          "ref": "a2daedda-ee44-457b-9b69-d9b2fc134936",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ec7272a8-4216-47da-80a7-88cf7d9fba64"
        },
        "item": {
          "id": "e42141e2-4bd2-4f79-a3bc-7055b408f8a8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aaf5a4c1-12cc-4dc3-8d8e-f0e507e5d660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278bf226-49a9-4ee8-b0fa-4c2b5d90d621",
        "cursor": {
          "ref": "8e8cd698-76b1-4d12-aaa3-45c164d98370",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa032870-1ed6-4a67-a0e3-993fe2af7168"
        },
        "item": {
          "id": "278bf226-49a9-4ee8-b0fa-4c2b5d90d621",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2e398f52-d9f1-414a-9817-8f89e86f7506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bb6ea8-3dff-4309-960e-6455856eb76e",
        "cursor": {
          "ref": "d747d796-a539-42e4-bb73-d5f0fecaceba",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "71664fa6-29d9-4114-aab2-1f8f589994ec"
        },
        "item": {
          "id": "27bb6ea8-3dff-4309-960e-6455856eb76e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe538239-e483-4dcc-bbcf-9517f703a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd80f49-22bc-45c9-8a53-caac95a66480",
        "cursor": {
          "ref": "2511859b-0ee3-47fe-8f57-67c53e3e7297",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f720632b-4845-4f30-9cc1-5c255efe86b5"
        },
        "item": {
          "id": "9cd80f49-22bc-45c9-8a53-caac95a66480",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9682fb3d-7c1b-45e3-9ec5-85268d11d1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac2f4cc-1daa-491f-8d1c-085d7768961f",
        "cursor": {
          "ref": "00f26a1d-0d90-43b0-9c67-1b87d99f3a3e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "46a67194-0836-4500-b7e6-f3f5af0e4934"
        },
        "item": {
          "id": "4ac2f4cc-1daa-491f-8d1c-085d7768961f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d2b1e9fe-c3e5-4df9-bd0f-bb8204ce4be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63aabe1-3a70-4719-81ce-cdaf11ce0718",
        "cursor": {
          "ref": "fdcd4438-eea2-44d8-ae45-121f9842ea3e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5aeb13c6-ec46-42ff-8aff-c1a068b0a156"
        },
        "item": {
          "id": "d63aabe1-3a70-4719-81ce-cdaf11ce0718",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18aa3bd6-566b-4ecd-b4f8-2f394a4e70d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05924824-706c-41cc-bfa6-4902b2b37b8c",
        "cursor": {
          "ref": "78836ad5-a329-45a3-a078-45d0f2fc3f5e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c89735c9-b4c2-421f-8362-bddeb2d04ee5"
        },
        "item": {
          "id": "05924824-706c-41cc-bfa6-4902b2b37b8c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45e38bed-2def-4bad-a7c9-b6040b955b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4fa9e8-4bce-4d05-981e-f476474a3d13",
        "cursor": {
          "ref": "44d852ac-7b14-47a4-8d33-3d17d78a2fc0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cf429c28-37fc-4059-9348-f88c3699b33a"
        },
        "item": {
          "id": "bb4fa9e8-4bce-4d05-981e-f476474a3d13",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2acf38d4-f384-4538-8143-0554626e43a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7917190c-3da1-43de-abb2-e533529fabfd",
        "cursor": {
          "ref": "7a5c18a1-ce45-43e9-aa8e-7d70d3f8689b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a59fa7cb-dca7-478c-a762-3b74006629e2"
        },
        "item": {
          "id": "7917190c-3da1-43de-abb2-e533529fabfd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d2fbad13-417e-422c-88ac-40d4c2e64773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd33651c-da45-4e63-bee2-c333c8de32d7",
        "cursor": {
          "ref": "919c845e-35ec-4ecc-8a61-52160b027935",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "28ceb146-95ff-48a7-b318-38aa42ab7360"
        },
        "item": {
          "id": "cd33651c-da45-4e63-bee2-c333c8de32d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a7d2493-def8-4898-8501-d6d8d727caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ff67c9-b3bb-4caa-be6a-60272ee53b55",
        "cursor": {
          "ref": "8e2a71fb-6cb0-4912-9036-f4e08034302c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b99e6f8e-a072-4605-90f8-59b9ebee030a"
        },
        "item": {
          "id": "45ff67c9-b3bb-4caa-be6a-60272ee53b55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "386e5baf-37c4-4c2e-b477-b5ada70124b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35d5d57-caf2-4473-9936-ae1947cd810f",
        "cursor": {
          "ref": "ff7b9b8b-0372-45f7-823e-c59fac1ad0af",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d854ceaa-dfbf-460a-9c45-53f2482c5698"
        },
        "item": {
          "id": "c35d5d57-caf2-4473-9936-ae1947cd810f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "000a8ba9-2fbd-4077-b08d-ec3a5c114dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16a5497-4786-4663-a1d7-276c60e4f7a7",
        "cursor": {
          "ref": "ec88ab7b-4065-4ae4-b0a6-ae5beb7c3022",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c92439fe-b8fd-49b2-86e1-3a64dbf56fc8"
        },
        "item": {
          "id": "d16a5497-4786-4663-a1d7-276c60e4f7a7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d660b963-83c1-46cc-9abd-371b506f25d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c3ae4d-4549-4c72-a301-44dcf48c0971",
        "cursor": {
          "ref": "17a33e7a-77ae-4219-9fd9-97d9f1322ffe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0be57675-7fca-4775-a960-9e24c2eb56cb"
        },
        "item": {
          "id": "39c3ae4d-4549-4c72-a301-44dcf48c0971",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7ef448b8-2efa-49a7-b2ac-67f0b2f8159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e388f80b-784d-480c-be65-f89f5035f6d0",
        "cursor": {
          "ref": "428d2a01-e687-4f2c-bac2-1e9e4dec57f6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a490fd5e-b8c0-48e1-ba12-d04bc8a71e2e"
        },
        "item": {
          "id": "e388f80b-784d-480c-be65-f89f5035f6d0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9db442ef-2ea2-47df-a55e-cece3783ddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0004cb-7977-4889-aa27-1a274306dc8b",
        "cursor": {
          "ref": "debf3d84-d4a5-49f4-80f7-e99fd3dddf67",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "92f669a9-e9e2-43ec-b095-d17e0e62bd75"
        },
        "item": {
          "id": "5d0004cb-7977-4889-aa27-1a274306dc8b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1529cc34-1010-4b28-b41d-0833fa1695d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b731e792-219f-47ef-9f78-6998b5df6803",
        "cursor": {
          "ref": "4f2195e0-570a-40eb-9d77-171bce531f55",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "218e3752-2fbd-4e6d-b73f-b37dd4fc7aff"
        },
        "item": {
          "id": "b731e792-219f-47ef-9f78-6998b5df6803",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4958c266-0f68-4005-bcb7-ab4282e83b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cca5923-6231-4d25-b61e-c24466445050",
        "cursor": {
          "ref": "7f31c264-7a82-4b76-bc1a-47904741c30a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3abd57d1-8ddd-4b1f-945a-0078f0b1a595"
        },
        "item": {
          "id": "2cca5923-6231-4d25-b61e-c24466445050",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9865dcab-b9e8-4528-887d-ee0bc829dcae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c8158-d348-48ab-ade3-7f244e522ea7",
        "cursor": {
          "ref": "d9e76988-496b-4c24-bf0b-ab83fc0bf234",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b1503965-ce02-40e6-885b-57a58d69d7c9"
        },
        "item": {
          "id": "e02c8158-d348-48ab-ade3-7f244e522ea7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ab34db4b-a6ba-42f5-b1f5-ff81dbc1b5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eda5b7-0e90-495a-a3cd-84a335b39abe",
        "cursor": {
          "ref": "5b533b24-4367-4ea2-9313-87013937343f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7ef80523-9fd0-4bda-b916-20a78fd594c2"
        },
        "item": {
          "id": "28eda5b7-0e90-495a-a3cd-84a335b39abe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "052dadce-42b0-4bd0-862a-953dbe3b2ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa92a1d8-0593-4581-a352-a0913a0b4f74",
        "cursor": {
          "ref": "e2a7ba91-87b8-46cc-bca8-6ca68c5f17e4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d29462a0-cf82-4ddf-b78c-eeae8209b277"
        },
        "item": {
          "id": "fa92a1d8-0593-4581-a352-a0913a0b4f74",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18c28896-6e70-44e2-9b74-5ebc0fb045ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d976d30-5518-4fac-a139-f66180f5c142",
        "cursor": {
          "ref": "81ff8b92-565e-452f-aa8f-6e4c06d8174c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b6f52fcb-c876-4123-88cd-ef606dd38810"
        },
        "item": {
          "id": "6d976d30-5518-4fac-a139-f66180f5c142",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb6c2f09-d915-48a3-9190-25163d8b6fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b49c655-e2d2-45a4-a8a2-a26c987e02e3",
        "cursor": {
          "ref": "1ff6dd44-09b2-4ced-a126-48e8e9cd3c5b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "286cf5d3-f666-4c76-9a18-ecba53399cf1"
        },
        "item": {
          "id": "8b49c655-e2d2-45a4-a8a2-a26c987e02e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6eaf908b-8158-44c9-86c7-2ebb1f8fe4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2671ba33-4923-4841-b8f0-a23f9f1c9053",
        "cursor": {
          "ref": "b67fe717-1575-4a5e-89fd-4c96b6641982",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cfc09c34-a70b-47f2-8e0d-9c56ae341792"
        },
        "item": {
          "id": "2671ba33-4923-4841-b8f0-a23f9f1c9053",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1753f783-ff77-43d0-b626-f0d5ef917b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c82d04-cf17-4b5d-94d8-ee31d956b820",
        "cursor": {
          "ref": "a3d01a39-1ff5-4aaf-b237-48f0c7929176",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c1736e52-b6e8-4aa4-8585-4a51ae890486"
        },
        "item": {
          "id": "50c82d04-cf17-4b5d-94d8-ee31d956b820",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26db3750-a901-405e-80f3-5e03c35f0a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a7ca8f-e8b4-4039-ad40-3fdb2266e4ae",
        "cursor": {
          "ref": "cf8f8c52-7799-40aa-af9d-9927b0d3b40f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6febac9c-a044-481f-9464-ceb1bfd75cc3"
        },
        "item": {
          "id": "46a7ca8f-e8b4-4039-ad40-3fdb2266e4ae",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c4564ae1-1513-42df-9b5f-dbabeebc899c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0710912d-aae8-4a47-9eb7-b8943f48178b",
        "cursor": {
          "ref": "2f453a97-9667-4ef7-baa8-bf273f92cb99",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "32a19a77-7a3e-4589-a248-eec324e9a341"
        },
        "item": {
          "id": "0710912d-aae8-4a47-9eb7-b8943f48178b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17962a4f-c8c7-4e3f-8cf9-6c43eca5fd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4acc33-c4fe-4cb0-892f-975fed912385",
        "cursor": {
          "ref": "d9a3ee35-75fa-42c6-8c7b-6e3ea8ad85ae",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ba7312bc-bf7d-4f42-be2f-374500d534b4"
        },
        "item": {
          "id": "7b4acc33-c4fe-4cb0-892f-975fed912385",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14fab79d-646c-4bc8-88ed-1548967616b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa03fa44-673c-41df-b8bd-37f742029c33",
        "cursor": {
          "ref": "69ef05ee-7215-4b25-9afe-3f4f0562a054",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2fb9a25f-5d2f-4426-b6ba-5ab390bdb120"
        },
        "item": {
          "id": "aa03fa44-673c-41df-b8bd-37f742029c33",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fef01db4-22a4-4e45-9b38-8e51dc759741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bd3df0-cd9e-4d65-9edf-fb08c61406ff",
        "cursor": {
          "ref": "f6ffa567-5f00-4e6b-ad68-c378971cc0bf",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "65c1148d-35db-464b-9390-26cf0d71b204"
        },
        "item": {
          "id": "14bd3df0-cd9e-4d65-9edf-fb08c61406ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3d7b5bf3-6441-4b10-8758-af7698ab23eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af01073f-6ebf-4d6a-8d08-ab3c539a0c76",
        "cursor": {
          "ref": "6d3e853c-43d5-407c-b80e-6baec9b1d01f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c80040f6-e33e-468e-93c8-5ce77c9f5bec"
        },
        "item": {
          "id": "af01073f-6ebf-4d6a-8d08-ab3c539a0c76",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8f9ad5c6-6a9b-4193-a9e0-7820f8ed8e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09f5e69-1134-45bb-9fe9-59ed6f9502fd",
        "cursor": {
          "ref": "63e60e6b-0a90-42b1-b0b6-f55e234ead66",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ab7fe278-7106-4b41-b1ce-f6492373399e"
        },
        "item": {
          "id": "e09f5e69-1134-45bb-9fe9-59ed6f9502fd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43c5a07b-4175-4860-ba36-e3f7b5d90d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3244d1-0a22-4af9-be5f-5c1ec25c0075",
        "cursor": {
          "ref": "4a27ca52-5505-49f1-8315-e5774bb47f6b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8a2af3cf-5bc4-4039-b519-e954ede8ab24"
        },
        "item": {
          "id": "cd3244d1-0a22-4af9-be5f-5c1ec25c0075",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ced230f3-948d-4be6-82f9-d00767acc58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74a8f9b-2b78-45df-9292-2127df57cd29",
        "cursor": {
          "ref": "ae7ee4c0-a25d-40d4-93c9-41bbc4814f10",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c1ab470f-a953-4c58-8e88-5fee5157cec6"
        },
        "item": {
          "id": "a74a8f9b-2b78-45df-9292-2127df57cd29",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "daae1b99-8879-4948-b8df-464ae2e9a690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af062e26-e515-47f6-80ec-c999aed259bf",
        "cursor": {
          "ref": "955ecf8d-6bc2-47f2-bafc-f0fad9f7e65f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9658ab69-3c4f-48db-ab32-7b651b68b006"
        },
        "item": {
          "id": "af062e26-e515-47f6-80ec-c999aed259bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ec48e2b-26f5-405d-b9ec-1e9009ece41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844d614d-3483-4811-ba17-f1671cf6d8cb",
        "cursor": {
          "ref": "b6300d0c-9449-4196-b078-6c52a8b1e152",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "07a65d69-1886-4fe3-8b07-5c52b23856c3"
        },
        "item": {
          "id": "844d614d-3483-4811-ba17-f1671cf6d8cb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d5b3c20-ca30-4fc9-b910-68c38d4a7f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8f86e5-495b-4a29-8824-c7be0a05c547",
        "cursor": {
          "ref": "f8d1db55-7090-4f76-bd5e-042c040fa246",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c4db423-911f-429e-b997-17aa408c09d6"
        },
        "item": {
          "id": "3a8f86e5-495b-4a29-8824-c7be0a05c547",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3262670d-1504-4050-bcb2-1ed6b2f21d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e210d12-db6e-4053-9c9a-b1028cf4e4c6",
        "cursor": {
          "ref": "94b674af-e3a0-487a-97d4-82b0e5709a60",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b0cbf5b7-a3de-4436-85fc-608a43af44b4"
        },
        "item": {
          "id": "5e210d12-db6e-4053-9c9a-b1028cf4e4c6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f304f0f5-d593-40cf-9e2a-8a79c9280dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb84a025-df81-4dfd-aabb-b0079b3c8dbb",
        "cursor": {
          "ref": "c440ba9d-f2bf-4ba8-abf6-a5a37f93adc6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f92ca04a-517d-4402-89e9-f7e04138915c"
        },
        "item": {
          "id": "eb84a025-df81-4dfd-aabb-b0079b3c8dbb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e503b3ad-8cc2-4983-a1f4-2027a37fb33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96325566-ae55-4c85-b2bf-bd693d1c1c16",
        "cursor": {
          "ref": "d6030fd0-27a2-4b9f-b3d3-9b67fdb066c9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "90def58f-1b0f-4454-a819-aa0e4222b841"
        },
        "item": {
          "id": "96325566-ae55-4c85-b2bf-bd693d1c1c16",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bfd8d7dd-6184-4b30-a5ec-de2940b62e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d95e56-6378-40db-a149-1bd510a11658",
        "cursor": {
          "ref": "068b94d3-8d95-495d-adff-29b658b70d6a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4f0aafed-4009-458f-98f6-9141b9363c88"
        },
        "item": {
          "id": "f5d95e56-6378-40db-a149-1bd510a11658",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "568b33ad-cec6-4b15-9d8f-720a434cca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563c7bce-5230-42fe-8b09-a82ab8f143c6",
        "cursor": {
          "ref": "3d40329c-962f-40f9-a2be-72974fb65cfa",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f6b8f53f-877b-4332-897b-bd3ff23194f5"
        },
        "item": {
          "id": "563c7bce-5230-42fe-8b09-a82ab8f143c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "73338560-c719-4b0d-9507-13c30cf8cfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65085a9e-42c8-4966-b9a5-ca0a4354819e",
        "cursor": {
          "ref": "80785fd9-be69-4952-b7b5-8ac9b9224db0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "35f7473e-d0a1-4c48-847e-5be0ad6fa0b2"
        },
        "item": {
          "id": "65085a9e-42c8-4966-b9a5-ca0a4354819e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0516f9e8-71d0-4dc9-b67a-4944c7754081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960dc6de-f5f3-4564-99f1-eee938ab4ee6",
        "cursor": {
          "ref": "fca36bf8-688c-43aa-8eaf-fdd22d5ecd61",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1989a6c4-5c67-4073-9737-5c7ec51fdbfc"
        },
        "item": {
          "id": "960dc6de-f5f3-4564-99f1-eee938ab4ee6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "32e23e2c-8ea1-43a3-8cdf-d2f30afadbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763ffb16-b9cb-43f7-83d5-9498c21df53c",
        "cursor": {
          "ref": "25abd1d9-659e-4d3a-933d-955672ce078c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76a179d5-b648-4ff0-ad6a-b8c2b1ba7ca8"
        },
        "item": {
          "id": "763ffb16-b9cb-43f7-83d5-9498c21df53c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9c4cedbb-8a64-45a9-b336-e7d5fe263c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56e16b-779d-4d5e-a39e-95a11bf01c6f",
        "cursor": {
          "ref": "ab7e2390-29c3-4384-9488-591d44c1032e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8b1de20d-5601-4cdf-a5ad-9029afefea6d"
        },
        "item": {
          "id": "0f56e16b-779d-4d5e-a39e-95a11bf01c6f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "85a0e8de-853c-4ffd-a7ba-aab115c7a81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf42561-9f77-4308-bee8-deb39aef8e85",
        "cursor": {
          "ref": "d1323fbb-1d5d-4ef4-84ce-1e629c3dd9b4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b0600e78-d120-45c9-91b9-7b40b0423de7"
        },
        "item": {
          "id": "1cf42561-9f77-4308-bee8-deb39aef8e85",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ff3b327-9001-47dc-9da4-2eccf7f33312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5ef966-c5ab-4f9d-897c-6eb3694b9d97",
        "cursor": {
          "ref": "d27b32f0-f1e9-4110-8b65-9b8dfdf8c62f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fa8ec99e-81b7-406f-bfdb-b6ce2aba787f"
        },
        "item": {
          "id": "8c5ef966-c5ab-4f9d-897c-6eb3694b9d97",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b65a69b7-bd80-4101-96ef-7d94a93a105e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1afae-49bf-401f-8077-1a18a9eb86d8",
        "cursor": {
          "ref": "3ad3710b-2653-4cc4-afc2-6803eb226385",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a655638d-85fa-4670-bd53-953e02c54224"
        },
        "item": {
          "id": "8ba1afae-49bf-401f-8077-1a18a9eb86d8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bc910efb-5602-4106-ae4d-479b1f00ee89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce01ed41-7846-4865-bbbc-33075efba2c5",
        "cursor": {
          "ref": "4fd84007-28b3-4900-afa4-9d0df34828ae",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dbfce0d6-e3f4-486a-832a-de892ac80f6a"
        },
        "item": {
          "id": "ce01ed41-7846-4865-bbbc-33075efba2c5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "816e1c79-3c36-4506-8c5c-f546428cdab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ff4c2b-c6ab-47f7-8131-deba5d3e4b42",
        "cursor": {
          "ref": "89cf1a72-7f11-4d90-a783-5ca654230fc8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "639f0ccf-bbaf-43a9-9d6c-4efb69a103ab"
        },
        "item": {
          "id": "e5ff4c2b-c6ab-47f7-8131-deba5d3e4b42",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "83c6ec65-76e3-4cac-a0a3-90de7e23bb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb3d886-5fa4-460e-b749-cfe264fa5e17",
        "cursor": {
          "ref": "695c40e5-5105-4f9f-bdfe-7ce5efc2414b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2113e088-1ba3-4cfc-8c78-92e7f40cd60b"
        },
        "item": {
          "id": "abb3d886-5fa4-460e-b749-cfe264fa5e17",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3e887151-397b-4c9a-abbf-2a4dc9f1bbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc76636-81ad-425a-bba9-9ebbbf00ab65",
        "cursor": {
          "ref": "170ef912-d789-453a-9a9a-940de5d36cda",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "95eef3cc-d26e-4ada-8266-06c90bc77479"
        },
        "item": {
          "id": "edc76636-81ad-425a-bba9-9ebbbf00ab65",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d769ed3a-2923-4075-b325-0cfdd0e02b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f889a5e5-fe4c-4eb1-9541-3a7f560afc57",
        "cursor": {
          "ref": "65f88be6-7dd8-4567-994d-3ddd7766f602",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2513943-1f16-41f1-aa68-8f2acaf69654"
        },
        "item": {
          "id": "f889a5e5-fe4c-4eb1-9541-3a7f560afc57",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f92eaeff-353b-4fe8-b108-d9ce6bb2922b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ed56e3-35e3-4a48-add6-dca87f7737f9",
        "cursor": {
          "ref": "8dab4a9b-d322-493c-ac4a-8198a14c9123",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a3d758e1-bd36-41ec-bbb6-6fbde25e5969"
        },
        "item": {
          "id": "66ed56e3-35e3-4a48-add6-dca87f7737f9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "17220d8a-a26e-4bf6-b79d-3852419bcf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9b1879-ef29-4e7b-96fe-f569b909e077",
        "cursor": {
          "ref": "643830fa-4ffe-4261-a665-a465abeda09e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "70d5c929-56e9-4bd5-bd3c-74eb729771a1"
        },
        "item": {
          "id": "5d9b1879-ef29-4e7b-96fe-f569b909e077",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9cc18582-81d5-4032-af24-97db0681ab31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f6d3cc-db1b-40c6-8ba4-e1abfe8717b0",
        "cursor": {
          "ref": "d2906a0c-711b-40a7-ab77-d76464ef4d2d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "49cd8c26-760e-48be-ac4e-1e6ea3babebc"
        },
        "item": {
          "id": "a4f6d3cc-db1b-40c6-8ba4-e1abfe8717b0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e5a7d617-3571-4d51-ae8d-51352e8a66b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa3fb5-722f-41a3-b2b4-08b47934e45d",
        "cursor": {
          "ref": "24962f5b-14fc-44bb-ac48-1d1bea10e719",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "31ed1514-6c61-4ae5-bc8b-0af029f99c69"
        },
        "item": {
          "id": "bbfa3fb5-722f-41a3-b2b4-08b47934e45d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "afda22c8-be5c-4c4f-8003-86b14027f786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09fea4f-1aa6-4a2a-8034-6ef310cb90f9",
        "cursor": {
          "ref": "f48002fc-fb9f-4dc8-90d0-f25a51b317a0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "db7ac392-5d84-4b03-8f45-b7400161f67b"
        },
        "item": {
          "id": "b09fea4f-1aa6-4a2a-8034-6ef310cb90f9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a1ea90b6-1bae-4443-94bd-4aa1f8c88023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b32d954-4f0b-44a7-bacf-caf341384a6c",
        "cursor": {
          "ref": "e40d3877-64d6-4ef4-aca6-08a63fdd8695",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c327024-c8a9-4136-9c75-e0af79fcb387"
        },
        "item": {
          "id": "8b32d954-4f0b-44a7-bacf-caf341384a6c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f91fd1e-6aad-470c-9c54-50a1d8b146d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f9cb2-1ffc-4df0-b09b-4358e3a80b55",
        "cursor": {
          "ref": "b1375bbc-4d38-4edb-abaf-f96f21bb75ff",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "abd22233-c732-49f3-ba4f-2c3195bc8ab8"
        },
        "item": {
          "id": "5f0f9cb2-1ffc-4df0-b09b-4358e3a80b55",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4554f0c4-b817-4f0a-b898-f0a05be0eae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226adb48-ca2f-4afe-ba3f-d6735f226797",
        "cursor": {
          "ref": "1a4f2313-d424-43e2-a55c-5a9b59af3cb6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8714c4e7-eafa-40e0-a04f-4b5c112b1859"
        },
        "item": {
          "id": "226adb48-ca2f-4afe-ba3f-d6735f226797",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c4d61508-db8a-4939-bf93-12bae70fd78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494990b1-41c5-4351-965b-7ac74a7633c4",
        "cursor": {
          "ref": "959534ae-6315-426f-8cb5-f4eee063e37a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "32ee0914-4926-48cc-b41a-ea65588ef026"
        },
        "item": {
          "id": "494990b1-41c5-4351-965b-7ac74a7633c4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0eb782ba-6a2b-44f5-908c-41c525673846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c11813b-b790-41f2-9764-20d54c1a044c",
        "cursor": {
          "ref": "8c290ada-3d5e-4fa1-b3df-9e0fd345ec52",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35230f91-2eaf-47e1-b259-6573ca8a541c"
        },
        "item": {
          "id": "8c11813b-b790-41f2-9764-20d54c1a044c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56ec79a5-8e4b-4b27-8a79-5cd3b11253bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2719f4-48a4-479f-91a7-9d8c3c64ac6b",
        "cursor": {
          "ref": "a5c79aa0-19d2-445f-93fb-5b98bb3b2b4e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c60ac798-3e82-4e4d-91b9-b7ef8038a34c"
        },
        "item": {
          "id": "5d2719f4-48a4-479f-91a7-9d8c3c64ac6b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "25379777-29eb-48f6-862c-0c4f15faa7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397826cf-8361-45dd-a8e5-26dae853f7e8",
        "cursor": {
          "ref": "b3fddedc-a66d-4221-a7d2-df35f17b7df8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "793bbc45-8b95-4659-9967-d429209ca3de"
        },
        "item": {
          "id": "397826cf-8361-45dd-a8e5-26dae853f7e8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "182ed459-46fe-402c-9d08-9777d391c91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1f2173-7bde-4542-add1-15e25bb56ad3",
        "cursor": {
          "ref": "80df4fff-1e71-463d-92b5-e11c6068a36f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1001adcd-474e-4043-9fe1-59bacb555b0f"
        },
        "item": {
          "id": "9e1f2173-7bde-4542-add1-15e25bb56ad3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "76df4450-a6b9-46c3-b6de-4a538b51db2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70feb96f-6ec9-4979-9ea2-6481598a3db1",
        "cursor": {
          "ref": "e6f4a758-be57-4eac-99c6-7d4583b297ac",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6a0a3f3a-fe0d-4617-a589-4d55ae5b0157"
        },
        "item": {
          "id": "70feb96f-6ec9-4979-9ea2-6481598a3db1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "011507c2-5242-4560-a54d-656dd5071549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c70bf1d-50b3-4dce-8899-0813acefbe35",
        "cursor": {
          "ref": "85571843-fc87-4e9e-9d48-bb39d656254c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "83028ca6-e4bf-4d6d-abf4-c9b929187c98"
        },
        "item": {
          "id": "6c70bf1d-50b3-4dce-8899-0813acefbe35",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c691fb8c-3552-42b2-82f3-88b4533c79ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24c2630-063e-4bb7-ac2b-4a482df033ab",
        "cursor": {
          "ref": "de10837c-c988-477c-9e8d-32ecfb4c12fe",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1731bb89-22e2-43de-9dfd-179187655cb3"
        },
        "item": {
          "id": "c24c2630-063e-4bb7-ac2b-4a482df033ab",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bce5ee23-8bb1-4eef-aec0-64fcb393e2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bb3ae0-014f-4f1d-85ea-6a0dc0fe54fc",
        "cursor": {
          "ref": "ca0f6040-644a-4124-8313-0650d44cc88e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "92892bac-8ecf-48be-aba2-7f29fd03bcf5"
        },
        "item": {
          "id": "c3bb3ae0-014f-4f1d-85ea-6a0dc0fe54fc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "79639911-3cda-4b32-942c-f78fc25ebab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9df34fa-13dd-4d4f-b0c3-dccf42e4bad7",
        "cursor": {
          "ref": "b66af38f-035b-4c0e-8004-c91773dd552f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a994609a-ca45-4149-90ca-649d005a0e54"
        },
        "item": {
          "id": "e9df34fa-13dd-4d4f-b0c3-dccf42e4bad7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "43e7affb-2ba3-43a6-9a65-b5ea7d6eb621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001a9eb4-f70b-4c94-8608-51eca149a8f9",
        "cursor": {
          "ref": "992128eb-acf7-454b-a184-f3511a69c928",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "26163c54-328d-435f-bd9e-0f015ceb60af"
        },
        "item": {
          "id": "001a9eb4-f70b-4c94-8608-51eca149a8f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cb457a14-5104-4e53-8cbb-6d5e7d1d4245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3397df8b-9c98-4d14-85a7-24e4d2a96c82",
        "cursor": {
          "ref": "aa1501a3-b08a-42c3-a4ca-658c556bf480",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c5612293-f89a-4a73-9a28-d30aef4cde29"
        },
        "item": {
          "id": "3397df8b-9c98-4d14-85a7-24e4d2a96c82",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c505f8f-42fe-49d6-996b-2b7f01e42c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7718fa1e-2ac8-4e1b-88a2-7529e4fc4f74",
        "cursor": {
          "ref": "2f0d6ff3-23b2-45c1-b872-a845c546f206",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "29a0cdc3-c013-490a-b116-fe2ebae54b97"
        },
        "item": {
          "id": "7718fa1e-2ac8-4e1b-88a2-7529e4fc4f74",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "56309be3-f3f1-498c-8640-cad240f4d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e71faa-8033-4952-9a34-6ce1854ca41b",
        "cursor": {
          "ref": "1515ab62-5d2d-4605-b6b6-9b19e09a99b1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e19af54b-ffcd-45b8-b2d1-84d729bf8d2b"
        },
        "item": {
          "id": "45e71faa-8033-4952-9a34-6ce1854ca41b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "663da0a0-4173-454e-b68a-5b1a6ea0baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b4ac3-ec49-4346-b5ac-8eb40247c87a",
        "cursor": {
          "ref": "db247732-4cf7-418b-b6ca-63f43b7a159b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bdd48c67-0714-496d-84ec-2d133b87a2a1"
        },
        "item": {
          "id": "1e3b4ac3-ec49-4346-b5ac-8eb40247c87a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d34d660-92f1-4dd0-aa35-ae04016def78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8428c06-84c7-46bd-a91c-eb00db988d0d",
        "cursor": {
          "ref": "8af93390-8a69-4ca2-88af-34930f1674cb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3933c429-55e9-4dd0-a167-cb027ab31e33"
        },
        "item": {
          "id": "b8428c06-84c7-46bd-a91c-eb00db988d0d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ce1a4816-1787-497c-be32-6a60a7dbaf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cd5e4d-6b3c-456c-b4ec-463d86293043",
        "cursor": {
          "ref": "c30afa59-9641-4006-bb80-682c2f6cc4a1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bbe51eb7-afa5-4037-93fc-79e53285d2a6"
        },
        "item": {
          "id": "58cd5e4d-6b3c-456c-b4ec-463d86293043",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "68200a0d-afdd-481b-a17c-dd6441e3176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86749686-c759-49b4-b494-8d0990517055",
        "cursor": {
          "ref": "2440aa4e-a4f4-4ece-bcda-95301fe53660",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4298ff66-4b86-4e60-84b2-e7d0b2fcc6bd"
        },
        "item": {
          "id": "86749686-c759-49b4-b494-8d0990517055",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "452ad460-df13-4bff-88df-9ddedad642d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569d2162-1876-41a0-8f63-c339b34f1a92",
        "cursor": {
          "ref": "51b09448-00ce-4c6b-b24c-24a234c4cdad",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6874bd96-ff23-4ab2-87e6-eb60bae1281a"
        },
        "item": {
          "id": "569d2162-1876-41a0-8f63-c339b34f1a92",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "15a616aa-226d-4f2e-bda4-139cd404b9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccf5be3-a835-45d4-866a-4148a9565bd4",
        "cursor": {
          "ref": "75c97e90-309f-4839-873f-757ddae1e90d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a9c626a7-4ffb-4eed-8ef5-43096154e260"
        },
        "item": {
          "id": "dccf5be3-a835-45d4-866a-4148a9565bd4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "11a914b9-c05b-416d-8629-0e1a4b1ea5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af52b8c-5923-40f3-8bbe-bdf942e3ec6a",
        "cursor": {
          "ref": "76d600bd-876d-47c6-884c-9ae2de9c2db1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "775f0001-e71d-4d9c-8a4e-2dbe57df4bfa"
        },
        "item": {
          "id": "3af52b8c-5923-40f3-8bbe-bdf942e3ec6a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1259a630-85a2-4272-8030-cae4b93a82c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7477e16-5d7d-4ca4-a56a-b87eed15fc6f",
        "cursor": {
          "ref": "2e6185b7-fa39-4b43-94aa-8370d73eb23d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7e3c5178-13e4-4afb-b2d5-65233228dcf9"
        },
        "item": {
          "id": "d7477e16-5d7d-4ca4-a56a-b87eed15fc6f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc2cdc17-fa12-407f-90f1-214eff049451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449fd638-8d46-488f-9624-793f2c785f54",
        "cursor": {
          "ref": "19a3c3e6-815a-4a86-9d86-887263e9fb99",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8b173445-9746-4233-b621-d8fc2a9fa686"
        },
        "item": {
          "id": "449fd638-8d46-488f-9624-793f2c785f54",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c4346238-e755-476b-9e2f-0dddc1dca331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce87e85-c2f1-4304-a4d4-1e8e4532831d",
        "cursor": {
          "ref": "c6582214-ee05-48dc-a9b1-8375066ab6c2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "308eafb9-cd10-4c4e-8b05-5a0df42bad77"
        },
        "item": {
          "id": "3ce87e85-c2f1-4304-a4d4-1e8e4532831d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "895b55ed-4110-4580-b566-5f146d9c6490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e35309a-38b6-46e1-b4bf-ea0a2daab390",
        "cursor": {
          "ref": "d933fccc-e102-48c1-8d17-bfde9207460f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7ee31733-9fe1-4b7e-8322-b74436dd695c"
        },
        "item": {
          "id": "5e35309a-38b6-46e1-b4bf-ea0a2daab390",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "21412182-dd8f-4e2d-90b1-8a60c94793e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30489f4f-475a-47da-b8c4-699430917abd",
        "cursor": {
          "ref": "4db89a0a-bc3c-4fe5-9cee-a5175ff5a703",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c469fad1-fde5-43df-9a26-c8bdd9eef743"
        },
        "item": {
          "id": "30489f4f-475a-47da-b8c4-699430917abd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "12506cb2-61ed-4e90-82bb-8737deb59364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0dce5b-dc41-4f50-babe-b8e2aea53264",
        "cursor": {
          "ref": "c8b18f03-3131-45aa-95c3-2378ca15ba7e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "aa6fea89-7d8c-4d7d-93ea-4991dba06be9"
        },
        "item": {
          "id": "2a0dce5b-dc41-4f50-babe-b8e2aea53264",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0eb4d9bb-4a35-4fe5-a90d-cb7320d5a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ebdcd7-fb49-4b7b-9e1b-583231c240c3",
        "cursor": {
          "ref": "6d22a6ec-a314-465a-bdc5-caf8c1a1b2e7",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "08e564ad-7c9e-473a-a877-8bb65006f488"
        },
        "item": {
          "id": "44ebdcd7-fb49-4b7b-9e1b-583231c240c3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e9e33edc-aa93-427d-9787-9e2828423d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a3d95-fc33-41f0-ac6a-a74c0268ac9b",
        "cursor": {
          "ref": "602b1bfa-6717-4b28-a15a-a5b41c024bba",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "500ba447-4e08-4cfe-832d-65177a710195"
        },
        "item": {
          "id": "c80a3d95-fc33-41f0-ac6a-a74c0268ac9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c448f99e-81dd-46cc-829f-099367db4d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafee140-7d79-4f81-b6e6-377dff905a67",
        "cursor": {
          "ref": "4515113d-2736-4a64-9441-78f2c65ee115",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "440a3a44-99d0-49c1-9d04-d0c55c09cc2a"
        },
        "item": {
          "id": "fafee140-7d79-4f81-b6e6-377dff905a67",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a11a4c7c-42b3-4f3f-af01-383339c2ba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a4f34c-f9dc-4b64-9d2b-609446399f75",
        "cursor": {
          "ref": "141bc296-db2f-4217-af2a-ad2e0d88f5cc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a0c1d681-2a0d-43d7-adbd-61a11931f42f"
        },
        "item": {
          "id": "e4a4f34c-f9dc-4b64-9d2b-609446399f75",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d0a2724-f83e-4ef1-8cb8-8143d4e980bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f234e3-4a7c-4f39-bfae-ac3be552b618",
        "cursor": {
          "ref": "e09169c9-900a-49d8-b1c1-5a43ef6797c4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2ec79fdf-55f7-458f-95c9-17e7b206290f"
        },
        "item": {
          "id": "24f234e3-4a7c-4f39-bfae-ac3be552b618",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bdbbd818-c536-4884-956f-00cf9925857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7c79a3-e727-477a-83ad-9fc0296d6e1f",
        "cursor": {
          "ref": "31953d0d-798e-4c1f-b5a0-e06fd96773c1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "368b09d0-a952-442c-a7f9-a8c28c2c998e"
        },
        "item": {
          "id": "2a7c79a3-e727-477a-83ad-9fc0296d6e1f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "70647488-fc44-4c56-b74f-5706a5e582ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3466280-86eb-49fc-8f38-59cdd9d52fd4",
        "cursor": {
          "ref": "60a7f770-6bbc-4f18-9f2f-576d2c82c889",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f8522896-80b7-4cbf-b52f-0bf5bc43f33d"
        },
        "item": {
          "id": "e3466280-86eb-49fc-8f38-59cdd9d52fd4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "abaa4932-9b6b-4eee-85c3-0bd81ba95d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74795d6c-e996-415e-b22e-1dbd252c50ef",
        "cursor": {
          "ref": "57604c57-a74e-4316-b940-0812ff13f771",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bd89dc36-7fae-406c-b784-3c3225d710bd"
        },
        "item": {
          "id": "74795d6c-e996-415e-b22e-1dbd252c50ef",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "43fe2e0f-a28b-4973-8f99-1e97900fda4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b449a42-7b9a-4d4a-bd04-7881360e1853",
        "cursor": {
          "ref": "8df799f7-5818-4def-8626-fad266a7b391",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9272af23-8a6c-4d66-b65b-eb0174f19387"
        },
        "item": {
          "id": "6b449a42-7b9a-4d4a-bd04-7881360e1853",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "921af1cf-338f-4737-b18a-6fbed3c7cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912a35ec-6e8d-4844-8655-1b19d370ed02",
        "cursor": {
          "ref": "5edbea13-5e23-4bf8-9fc4-c2bd3e55e2a0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5abb3372-8ab5-4dc2-92b5-10dfde7263f9"
        },
        "item": {
          "id": "912a35ec-6e8d-4844-8655-1b19d370ed02",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1463f9b3-3231-410e-aa09-4b20bdd92eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d66cf9-bfec-404c-95f6-953ba54973f8",
        "cursor": {
          "ref": "bc975339-ff6d-4332-91f2-7f2d5a82c327",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3dd7db89-20ff-44f0-9548-0c32bc2a466f"
        },
        "item": {
          "id": "b3d66cf9-bfec-404c-95f6-953ba54973f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b96061b7-7101-4776-b41e-9ed152c7c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2422d84a-b221-4114-8b55-2d9abf472d6b",
        "cursor": {
          "ref": "6722fbb4-b684-454a-82cc-8504d8a861a1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dc4644ff-612b-4463-a8e9-0835f4a6b1a2"
        },
        "item": {
          "id": "2422d84a-b221-4114-8b55-2d9abf472d6b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8baeea38-318f-49c9-8a07-520b84522864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c56064-3284-460e-871a-cbdad5a65b4b",
        "cursor": {
          "ref": "3313b47a-faf5-4dd6-b26d-557433c16e31",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8529e75d-4cf9-4d17-a08f-cf68ae3eb059"
        },
        "item": {
          "id": "10c56064-3284-460e-871a-cbdad5a65b4b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6286d36f-75eb-4283-9c44-b21014f9bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9925158-c938-43a1-b5a0-9ac0838ce88c",
        "cursor": {
          "ref": "aef63c66-8543-4d09-939e-096d7f1f6fff",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f2db9414-6d32-42a3-babb-5fea76119b9e"
        },
        "item": {
          "id": "c9925158-c938-43a1-b5a0-9ac0838ce88c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a6474616-d047-4177-961d-b8e8032ed20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4626efb6-a084-4b4f-87ab-93bd051453e4",
        "cursor": {
          "ref": "b0f15ff8-71a8-4a51-8907-d15139c4aea4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a695166a-8d39-4b08-92db-5bb375ec5a3f"
        },
        "item": {
          "id": "4626efb6-a084-4b4f-87ab-93bd051453e4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9958f80f-5fd8-45cd-8a58-0e6439583f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb076fa-73a6-49cd-94b3-d4e5bcb9821e",
        "cursor": {
          "ref": "5ef4ae10-4a44-443e-a4a0-a7fb38e819de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b6462cef-b6b7-4098-88c5-7f04efcdd5ad"
        },
        "item": {
          "id": "feb076fa-73a6-49cd-94b3-d4e5bcb9821e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ce549de3-47fb-4adf-8ab2-9bbb3aee5e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c788564a-1c92-46e8-a248-fef512f574f1",
        "cursor": {
          "ref": "57a60a15-e829-415d-af0b-66d6608d0e6f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fca09abf-06d7-4872-b33e-084f26fa2bac"
        },
        "item": {
          "id": "c788564a-1c92-46e8-a248-fef512f574f1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3cf9ebcd-3620-47d3-91b7-ea0483c148b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b974e7-9f0a-4bda-93af-b5d86e4874ac",
        "cursor": {
          "ref": "47fe5ff4-5c14-4aa3-816d-b76ee885dae6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "af3ad926-2798-469f-b806-e5200c59829b"
        },
        "item": {
          "id": "52b974e7-9f0a-4bda-93af-b5d86e4874ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8a8d9c20-7d9d-4ba1-a8b6-bcda66638d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8683c844-8774-468c-bc51-238b4741fc30",
        "cursor": {
          "ref": "c8bbab75-5cd5-4e1c-9a2b-6a825e876d07",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3bc8e127-f097-4343-9b7e-a82dd510fc0a"
        },
        "item": {
          "id": "8683c844-8774-468c-bc51-238b4741fc30",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bf7fc97d-3409-456f-a3e9-2c91c137c880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad760bf-1352-4d2b-9684-5c55028a4f12",
        "cursor": {
          "ref": "021d249f-d838-496f-8d58-ef911c06a8d1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "38515ddf-eefe-4929-844c-883e17802810"
        },
        "item": {
          "id": "fad760bf-1352-4d2b-9684-5c55028a4f12",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d1c07811-af83-47a9-b0d4-36053eef3338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762c15f5-94a1-4db6-a8ab-d6589e378314",
        "cursor": {
          "ref": "1af4c76e-74e1-4342-a565-6b236e9e4bf5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cddd7ded-f2c7-4b39-9467-10ead3bbcea6"
        },
        "item": {
          "id": "762c15f5-94a1-4db6-a8ab-d6589e378314",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "41149d53-12c6-42d8-9a83-de299a71bae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b029aa0f-cc9b-49b7-bea2-893e70b7f615",
        "cursor": {
          "ref": "8fa51b6c-8c44-4f79-b758-96ff5d153a13",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e33ac5ac-0841-45e9-86ae-36a69a4de880"
        },
        "item": {
          "id": "b029aa0f-cc9b-49b7-bea2-893e70b7f615",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "01148055-32df-4655-9cb7-b65a783a5a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59639e2-d5ee-4531-9c92-ec834195b37b",
        "cursor": {
          "ref": "5afdcf03-2f31-4ee9-b372-0c041071f43c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4f652322-efb9-4058-aa01-d10008a84c94"
        },
        "item": {
          "id": "c59639e2-d5ee-4531-9c92-ec834195b37b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "204b257e-dd62-4cc4-b7fb-fcbfb6c7476c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c1d3f0-d222-449c-8abe-cc00c25ba091",
        "cursor": {
          "ref": "a309c5dd-76e6-4e64-96a5-b8300e904be2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "26ab1895-1eb1-4f76-b701-eeffb0ee1d9b"
        },
        "item": {
          "id": "09c1d3f0-d222-449c-8abe-cc00c25ba091",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d26b9e80-3821-4c5e-98e7-39f54447b476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65d44a5-0ad0-4329-8860-439a470a8419",
        "cursor": {
          "ref": "af0f1b99-8000-48bf-8608-6ea460c6cf59",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1012d123-e305-4388-923b-f12ccebb17eb"
        },
        "item": {
          "id": "d65d44a5-0ad0-4329-8860-439a470a8419",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8e31ff95-9d34-4d29-8b9a-38bb9d7e5273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca477e44-7164-4852-9c5d-4473f8c1b993",
        "cursor": {
          "ref": "c03a8c38-bb00-4c9e-9ebb-8179d279fa4a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "642ece7d-681c-42d2-bba4-ece51948e535"
        },
        "item": {
          "id": "ca477e44-7164-4852-9c5d-4473f8c1b993",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e3d629bd-924a-48eb-8177-76f3112bc033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54afa3fb-8a4c-4d95-94dc-ea7e8dbcac65",
        "cursor": {
          "ref": "bf0f11f7-efc9-4770-a1b4-93cbbc3fd690",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "66c67e0d-45eb-46eb-af28-19f35b85d663"
        },
        "item": {
          "id": "54afa3fb-8a4c-4d95-94dc-ea7e8dbcac65",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "df6dcd7b-8b7c-4197-ae8b-0c55c72656d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da01290d-f302-435a-bbbe-2a9d9057497a",
        "cursor": {
          "ref": "952485fa-c9b5-436d-81cf-b9621c7e117f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "afa551b5-218b-4403-bebb-8a1e3e01e48e"
        },
        "item": {
          "id": "da01290d-f302-435a-bbbe-2a9d9057497a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "25ac506d-a7be-42a5-ab42-720bcbc6531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e9315d-3b2e-4082-92f0-41d19a482429",
        "cursor": {
          "ref": "a9a722a6-d636-46db-abe4-72bd653ea000",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e074b37f-e339-4489-8540-1b406d8ff369"
        },
        "item": {
          "id": "95e9315d-3b2e-4082-92f0-41d19a482429",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a22985c9-e571-4bfb-af18-6d9a69cedff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9907c31e-1ac5-4c7f-b46a-75b99497c6ef",
        "cursor": {
          "ref": "4a0830e2-3ba2-4c7b-9f10-f14decae6136",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6db005d9-ec19-424d-8338-d9be3b3a179d"
        },
        "item": {
          "id": "9907c31e-1ac5-4c7f-b46a-75b99497c6ef",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c19b24eb-58de-4f90-bacf-9ef50db1ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a3eb9-b81f-4b4e-9af7-bbdd10deae01",
        "cursor": {
          "ref": "81c35b48-7b97-4bf4-8a11-e84856fa30ac",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "69ccf2e0-8823-404f-a004-d6c81cb73b75"
        },
        "item": {
          "id": "5d6a3eb9-b81f-4b4e-9af7-bbdd10deae01",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7006cdfb-ce65-40c0-8c65-6cfa698c8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466675bf-9e2e-4803-b00c-a2ef0bf25d76",
        "cursor": {
          "ref": "a20da472-d74d-4bd5-b410-5513278d5c52",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "09320b28-0c82-4691-94dd-1ad5be9a63fe"
        },
        "item": {
          "id": "466675bf-9e2e-4803-b00c-a2ef0bf25d76",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fd1b1f10-6030-4538-a40a-cb7730eacc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0129d00-8769-48af-8aba-f595d939da9d",
        "cursor": {
          "ref": "305f931d-af22-4c46-9497-1e1ae483d14f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a6f72415-18e6-441f-862b-ab3d18bf7431"
        },
        "item": {
          "id": "e0129d00-8769-48af-8aba-f595d939da9d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "451af76a-be28-4e69-a069-1346f9e1df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb96e46d-a03f-4540-808d-cdc68f5b638b",
        "cursor": {
          "ref": "b7806cff-b784-4b88-8823-cc995aab297a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a8169cab-75aa-4493-965d-4c1567aea906"
        },
        "item": {
          "id": "bb96e46d-a03f-4540-808d-cdc68f5b638b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab84fcad-4a8c-45a8-8d77-cf18955b8f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdcad0a-fa81-475b-acbf-7e44d6a5dc73",
        "cursor": {
          "ref": "6d10317d-7a17-4377-b02d-810db82f6b6a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e43ae8da-f0c1-4f69-86c0-9facc0566e25"
        },
        "item": {
          "id": "dbdcad0a-fa81-475b-acbf-7e44d6a5dc73",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "99645629-5651-4b8c-b75a-02f34bffe14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578899a6-3f97-4b45-b217-89b61e8fe4d5",
        "cursor": {
          "ref": "32385233-fdd4-4c61-9b43-b0b6131fabc8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dabbcf8-2662-4383-94ee-9646eeb028a9"
        },
        "item": {
          "id": "578899a6-3f97-4b45-b217-89b61e8fe4d5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "53996a4c-2ffd-4154-a5ec-429be7ef43d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42311508-f717-4db0-852e-552927cc4221",
        "cursor": {
          "ref": "2515287d-aef8-443a-8369-852b32efe3ee",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a7900802-25ac-4d07-b6d6-84608f25a1f1"
        },
        "item": {
          "id": "42311508-f717-4db0-852e-552927cc4221",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "05417dbb-f714-4f13-9c5e-0f1d55816a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d484c586-6071-4272-9007-d422a2b80720",
        "cursor": {
          "ref": "123c6eac-61df-4b71-9bce-bdec79a88042",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9e901282-eb9c-4025-a4bc-8ff6ea8c28be"
        },
        "item": {
          "id": "d484c586-6071-4272-9007-d422a2b80720",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7dc4f814-2753-4e4f-b2df-3ac7b8710413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0a4fd7-3975-4121-a4a4-1b3b9cd4dc58",
        "cursor": {
          "ref": "b831ace4-69d7-49a3-a05a-bdc633be08ec",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6dbb53d7-5a0f-4239-a8ed-3aeec58063d3"
        },
        "item": {
          "id": "ca0a4fd7-3975-4121-a4a4-1b3b9cd4dc58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ba019807-b41f-4c9a-9f46-b3faff6e8bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c652f04e-9bc8-49f4-b80f-683dcb69d904",
        "cursor": {
          "ref": "fff5dfc0-56a3-496f-9ac6-febb60a7df73",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1368979b-c808-4b8f-980a-9c16c41105af"
        },
        "item": {
          "id": "c652f04e-9bc8-49f4-b80f-683dcb69d904",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7e154837-e3fe-4cc0-b5bd-23163b722622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6d1ea7-00b6-4b8a-adae-b076966e1e08",
        "cursor": {
          "ref": "ad0334dd-26a4-4e86-af5d-38584c54f698",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "00176deb-9ddc-46d9-9817-b5328f661de8"
        },
        "item": {
          "id": "2d6d1ea7-00b6-4b8a-adae-b076966e1e08",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dce9c095-2243-43b7-8835-2089ff513520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4b4416-8b24-4b64-b418-65f82e4ab769",
        "cursor": {
          "ref": "556a1c9f-e46b-407e-9c01-cd34050bed0e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "42aeb3cd-1560-43e9-999f-f271cf05ada4"
        },
        "item": {
          "id": "3b4b4416-8b24-4b64-b418-65f82e4ab769",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5294ec30-b54e-432b-9598-e6cc236bb85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21050780-662f-4e32-852f-f421f7fb2772",
        "cursor": {
          "ref": "10545e75-1a54-4d48-8db5-d05670163995",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "20ffad0c-67f0-4d52-b5a4-b6adf68c2511"
        },
        "item": {
          "id": "21050780-662f-4e32-852f-f421f7fb2772",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d4440d68-6a57-4a36-887b-704b679e4a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467280c9-299c-4cb4-9e3a-0b2d28dc2de9",
        "cursor": {
          "ref": "d9fee877-3e37-4b14-a89d-9b95589ff700",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "08511621-2435-40e0-8c07-aa540682b31a"
        },
        "item": {
          "id": "467280c9-299c-4cb4-9e3a-0b2d28dc2de9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "400894f7-3d66-42cd-9fc9-02dda3dbd575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b1cec-086d-4d6b-a46f-c9242e0a3acb",
        "cursor": {
          "ref": "1902cc44-b926-4f0a-8f98-7f6a03a88dab",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "047cabbe-1e28-42a3-8c59-18d244cf0ce3"
        },
        "item": {
          "id": "ce3b1cec-086d-4d6b-a46f-c9242e0a3acb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b6e0d762-45f3-465e-862e-475ca2da0e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847556a0-3186-449d-bba5-5b07594bfee7",
        "cursor": {
          "ref": "f391e3a3-29d3-4728-8af1-5bfc94b59286",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bf94ce4d-e6c9-4bfb-93ac-2b8622c696b8"
        },
        "item": {
          "id": "847556a0-3186-449d-bba5-5b07594bfee7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "92e9ec5c-e8cb-408b-8136-9cb63e3c9e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dacdae-5578-4c57-ae0b-32f028bc7d4c",
        "cursor": {
          "ref": "4c8e39f4-270f-4899-b5fb-41acef35c59a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9917bafe-a966-4605-950f-c5aa37cf1543"
        },
        "item": {
          "id": "c8dacdae-5578-4c57-ae0b-32f028bc7d4c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1c8c9497-fe29-431b-a358-4103f934d89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3f5f1d-78d6-4ca8-a37b-0d1db7faebd7",
        "cursor": {
          "ref": "76a5635e-a219-4f95-b4d6-a4bcdad6fb7b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "43a95811-877f-4705-bedc-ad6b14847cae"
        },
        "item": {
          "id": "fc3f5f1d-78d6-4ca8-a37b-0d1db7faebd7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d5dc495a-d529-417f-b80a-de683bd7c2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4233a4-8d11-46f7-a0cd-7998f9484aa9",
        "cursor": {
          "ref": "60034408-0b41-431a-8b95-a5d1e11621fc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4895455d-58a6-42a6-a82b-47f0bf690c34"
        },
        "item": {
          "id": "0c4233a4-8d11-46f7-a0cd-7998f9484aa9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "df4ba410-4cb0-4e2c-aac6-7edc34302d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b3e345-6042-4cf5-b5f0-1d935fe3a2de",
        "cursor": {
          "ref": "d6d52c5f-2ed9-4b09-b877-95a7a83e3d74",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d26b7528-906a-4ed8-baa3-756ba3f31e23"
        },
        "item": {
          "id": "f1b3e345-6042-4cf5-b5f0-1d935fe3a2de",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f92cce2f-0296-4761-87f8-3dba30431cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e375c6-194a-4c5e-a333-38eccdc54e66",
        "cursor": {
          "ref": "a16b727a-d4bf-49d7-829c-2a07e3a37e83",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5a5a53bb-cb25-410f-bfb2-90f66c1d5c1a"
        },
        "item": {
          "id": "57e375c6-194a-4c5e-a333-38eccdc54e66",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ec637175-5d6b-4a3d-b8b8-297c1cf60bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4b793-884d-4d33-959e-adae4de12f3b",
        "cursor": {
          "ref": "54eb3fe5-c47c-47e3-aa08-af51705b258a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a7c35292-124b-432b-a7a7-790def1b42c2"
        },
        "item": {
          "id": "0fe4b793-884d-4d33-959e-adae4de12f3b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "17aef3e2-e5f0-4d67-b5d7-c3be825f2c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813ed7d8-adfc-4eb8-8f15-2a0ffdaacd52",
        "cursor": {
          "ref": "838629e5-4074-4f7b-8581-41ff11e2e959",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "49681b36-9c34-4b87-81a2-5b231f9bec28"
        },
        "item": {
          "id": "813ed7d8-adfc-4eb8-8f15-2a0ffdaacd52",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "60fbfbb0-b21b-4088-b761-ffc969c9fae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f48fe09-6e1f-41c3-bd0c-375943b41415",
        "cursor": {
          "ref": "a058ae07-2826-4be8-8414-09f04671a38d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "48f73b63-12fa-4f83-925c-bb25c148fcab"
        },
        "item": {
          "id": "4f48fe09-6e1f-41c3-bd0c-375943b41415",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3261d43f-a62e-489a-a249-a3d732c0d94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0eeeea-3f55-47ae-99bd-b4cd2f9d4f9d",
        "cursor": {
          "ref": "990e1f0d-b6e5-4816-a610-d1be88f75ec9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b0fc3c6b-21b0-4aef-9938-b6d8f6cd8a86"
        },
        "item": {
          "id": "df0eeeea-3f55-47ae-99bd-b4cd2f9d4f9d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cfd89ceb-7d37-4a80-8a3b-01ef43f008d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2210ec48-59f6-44b9-bd5c-f3ad61da8b10",
        "cursor": {
          "ref": "48500b7a-d630-4293-871e-b1b39e7a8a3e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "031e6fab-58cd-4aa6-b15a-1631c55f7943"
        },
        "item": {
          "id": "2210ec48-59f6-44b9-bd5c-f3ad61da8b10",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "28731bbc-9df4-4bc5-ae25-b0e28e30f878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec29c14-6418-4a1c-a4ee-6af7cf60e58d",
        "cursor": {
          "ref": "149b0c58-1aff-4936-9cbf-e829081202e9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "783ee402-6bab-45ab-a379-abb2b387a6ab"
        },
        "item": {
          "id": "1ec29c14-6418-4a1c-a4ee-6af7cf60e58d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "086781e1-9eb0-46b4-8069-6823a1dd44aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3e0484-fd92-43c6-90f5-bdf802307c74",
        "cursor": {
          "ref": "536b2ee3-ed71-4852-84f7-c7e55af85458",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "23a5a6b0-c6c5-4283-90b8-5d19055331fc"
        },
        "item": {
          "id": "ad3e0484-fd92-43c6-90f5-bdf802307c74",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be7f0382-e64c-4ec2-bc82-895f496d3116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f985339-e3cb-42ca-8487-93df1a1c9c87",
        "cursor": {
          "ref": "ebf5e0df-d916-455b-aa2d-35539775f0c9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9ec5f356-507e-480f-8540-0ebf7cda9802"
        },
        "item": {
          "id": "2f985339-e3cb-42ca-8487-93df1a1c9c87",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "09f5e882-6f1c-4722-a8ed-d35d88f9e6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffee73bf-47e6-4712-9df3-a9bc74eed33e",
        "cursor": {
          "ref": "1722498f-a1d6-42dd-b7d7-802354d7b189",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "12fdcdef-d299-4417-ab31-edf95c146a5a"
        },
        "item": {
          "id": "ffee73bf-47e6-4712-9df3-a9bc74eed33e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9a25c9c7-29f2-4de3-a0b5-99027ec2270f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353cce70-a4a8-4db4-a3a6-fda159baeee8",
        "cursor": {
          "ref": "8e932b9c-7515-4d7e-be0a-884a9f371d91",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "da749e80-95c9-47a8-8c47-b867999a32e8"
        },
        "item": {
          "id": "353cce70-a4a8-4db4-a3a6-fda159baeee8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0bcd0b07-4d69-49be-bd53-09218adf59e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77de2345-496f-4ad8-84f0-4691e06b0b3c",
        "cursor": {
          "ref": "e1afead1-18c4-4915-a364-df8a4277a9c9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9b7287c3-3eaa-4b6d-b5e6-6128128a855b"
        },
        "item": {
          "id": "77de2345-496f-4ad8-84f0-4691e06b0b3c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "079d6644-b4d5-43cd-9dbc-5708f06e4a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e93604-2208-4c75-b322-9a82f887133f",
        "cursor": {
          "ref": "21d4c87b-a64f-43d0-a7ea-308d1d0d775d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "22a36d5d-c07b-4d9f-bd8a-60bf58c068be"
        },
        "item": {
          "id": "08e93604-2208-4c75-b322-9a82f887133f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "930e7427-2968-48ed-8033-5dc7c67afc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cdfcc5-b35b-4c31-87ab-afb28003508b",
        "cursor": {
          "ref": "c7f58709-3631-4d89-afef-668d4c3c4c4f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "49061445-3399-446e-945a-ab3914c48ae7"
        },
        "item": {
          "id": "c8cdfcc5-b35b-4c31-87ab-afb28003508b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a2e40d18-d3dc-4e74-b253-5fcff7c43c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9312f3-16e9-4ca2-a6f9-8abfd83a7153",
        "cursor": {
          "ref": "9714e85d-b2c2-4171-aa1e-5bbac94b890b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "338588e9-cfbc-4525-a4bb-2ac72634b71c"
        },
        "item": {
          "id": "1f9312f3-16e9-4ca2-a6f9-8abfd83a7153",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "50e95a4f-9f08-4232-afd5-7e8fdce1522f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75668a9-691f-470c-be6f-8313205f25ed",
        "cursor": {
          "ref": "d7b97b5b-df7b-416a-82cf-2d039c51dc77",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6834f095-7f1b-4f39-a59c-999fba2f39ad"
        },
        "item": {
          "id": "f75668a9-691f-470c-be6f-8313205f25ed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "828c8f8d-2574-4b78-b2cf-61ba6ee24bbe",
          "status": "OK",
          "code": 200,
          "responseTime": 154,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaa8380-ae20-4155-ac38-d15de603e5ba",
        "cursor": {
          "ref": "64bbf40a-140f-4d90-98c4-a8f3418e11d2",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "abd6f58a-6386-4419-b9f4-0ceea0732f2b"
        },
        "item": {
          "id": "1eaa8380-ae20-4155-ac38-d15de603e5ba",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7408b78f-7aad-4d4a-8b95-2e96615e8552",
          "status": "OK",
          "code": 200,
          "responseTime": 1466,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ee8cb3-9504-4e5b-bba8-96b8c6d82d8e",
        "cursor": {
          "ref": "ac88d813-4484-4d64-80fc-62682221ddf1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e257227a-13d2-4e06-9f6c-c6317b77de42"
        },
        "item": {
          "id": "73ee8cb3-9504-4e5b-bba8-96b8c6d82d8e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f39ad9ca-aac9-4132-a0c8-64112d7cf3ac",
          "status": "OK",
          "code": 200,
          "responseTime": 1535,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52762677-a84e-4fdf-804d-0ba3a6c3942a",
        "cursor": {
          "ref": "a9722fda-8c77-4426-897f-8027c8b8b6ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6a79666e-5640-47d5-ba16-4233ab80e3ca"
        },
        "item": {
          "id": "52762677-a84e-4fdf-804d-0ba3a6c3942a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e195d06-d08b-4ce5-b727-8c7c25ba5288",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52762677-a84e-4fdf-804d-0ba3a6c3942a",
        "cursor": {
          "ref": "a9722fda-8c77-4426-897f-8027c8b8b6ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6a79666e-5640-47d5-ba16-4233ab80e3ca"
        },
        "item": {
          "id": "52762677-a84e-4fdf-804d-0ba3a6c3942a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e195d06-d08b-4ce5-b727-8c7c25ba5288",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34ec864-4634-4abe-b763-c2fb1e1c2e8e",
        "cursor": {
          "ref": "f972e465-e51e-474b-9dd2-dbf4d8ef0c44",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5bbcaf5d-8fdd-46f6-9b67-f22274302690"
        },
        "item": {
          "id": "a34ec864-4634-4abe-b763-c2fb1e1c2e8e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "105c5741-cfa8-4aa3-8bb9-6e8014a49809",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f4d055-6627-4b76-aef0-95dd3a2b6f20",
        "cursor": {
          "ref": "2362a67e-fb5c-4382-a083-2508eca601da",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "394ecf49-923b-4dd8-940e-5a7cd26795cb"
        },
        "item": {
          "id": "f0f4d055-6627-4b76-aef0-95dd3a2b6f20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a3bc85f0-e138-46a9-8813-a3b51d54e399",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}