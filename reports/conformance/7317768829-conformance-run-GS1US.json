{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a58bb574-1c15-4032-a635-bbab13f6f654",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6da17cf0-56c7-4bf1-b225-13783391ee91",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c095e368-262d-4b5c-b64a-7ef6dd5b5bd5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e0a23c14-fbde-4347-a71d-6e30841cd9cb"
                }
              }
            ]
          },
          {
            "id": "d27e5a39-e6d3-4ba6-9bf7-092bf13900b5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28000587-84f3-4729-b7a4-bf1ac2dd43d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "24cddb04-2966-4d06-9e00-f5a3fcda3bc4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0733a2bd-cd06-4b59-9434-a382176b9a00",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1abc8a0-a75e-407e-a6a4-c24bc4c1cb8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7afdcae2-6e34-437e-a853-1244b338006c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73a449a1-8fa4-403e-aca5-107468fafcde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f7365bf-8c68-49aa-b845-5d2a5c365694"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32c92f6e-27b2-4796-9ad7-f78c9949ecb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2ea2e11-7cd0-4a3a-ab69-80948f20c387"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63455c74-565f-4603-b51b-edacac93255e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09aa800c-8ae8-4ab0-9a11-bafdd49c6076"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2a0210a-b811-4e36-b2cd-00bb08f0e8e2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "17ef216e-9050-4a4b-bb78-3bfd35d5f72d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e48d3b48-9c50-4961-bebb-03ebb1647d0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f327a09e-d084-4d2f-8a8f-fa649b3e3b1f"
            }
          }
        ]
      },
      {
        "id": "8c669cd7-87af-4761-b0c2-5bf2ebdb55ca",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "58a17b30-6b00-4ce5-bc88-a0f4906643f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dfd7929-1507-462b-8faa-9ace6aab11ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4432545-994c-4480-98e4-3330ac199d6e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec66a389-df6f-49a4-9e75-d0aa34979db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "538c692c-b609-4d86-8895-46723f2ff610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfcf539-7242-4f60-b25e-fb92dd88e4f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b226bdc-6478-4aab-81be-ad0a2e902ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af56044d-89e8-41e1-9928-661a80299deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b479c6-c391-41eb-9517-9c1417d8b42e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b7c21b-ee75-4856-a50e-7b557712c50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e8dd25-92a4-4f48-ab61-c6209d2cf2d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1a06380-0c3e-4319-9e5c-92a3c1168496",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "def301c1-aaf4-42cc-88db-846fc665b02b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa01131-5768-45be-85c3-592a720d3f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "374fcfe5-4f5f-4063-bcd6-ef178d6da10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d00b8ec-ab6e-4501-a2bf-24da7c949c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bddf0e3-8ca6-438c-843e-6bc9a4a80bc0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3f1b0df0-270e-4068-a37b-64f198e41839",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4382b11c-433c-4d03-b5f5-27414edf9444",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97c09d3b-9715-4efd-bc73-3c950869901c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de4d87b0-bd25-491c-bb2b-1b88fedca81c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "758a5982-98c4-4c4d-a6f6-5582940727f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "23d670ff-0d42-4fa1-b6c3-a2e014f54c69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "680a1873-4545-48c9-bbe9-a9132a17f1f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9dd60ab-e4ce-49a0-8711-7d32fada0ddc"
            }
          }
        ]
      },
      {
        "id": "0efc4ac1-f0ec-4920-a29e-fb30d5fe4baf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a5e90ba0-5e28-4783-8929-16d9e0cdb9f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5632305b-a3b5-4c6d-86ac-25fa390ee5f0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d7808e64-9907-43f7-a53a-895016470908",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a3c254-8700-479f-bd31-bc16513bff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0512b07-bb65-4ee5-8221-14b03a37df2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779c8f6e-a6cf-49c9-a60d-ff3f98cbcd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c940cf29-41c1-4347-b0d0-018cb3aef45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a163b9-86f3-4ae4-be52-32e8f526be91",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ff36ef-7769-4b14-8c34-ddaa84ee2adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fafdcd-f19f-4916-b1d2-911179a685d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceef43e7-0eb4-4b01-80b0-77df6a87e636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ccb1aa2-5ee5-4dd4-bdcb-cf9a8d4613ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ebf384-bb90-4cc7-b129-e833409f10f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8de48e0-ebef-4f55-9bab-6d7d926d1294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a13429-a0e4-434e-a324-d2deac640f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67727d6-f8d2-4448-8e34-8812eef5fcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a552d5a-73fe-4f3e-96b1-a111a64a8896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0c3695-e2b1-418f-b220-699b603f1a15",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36884384-6c02-431b-bb8a-c5d93ac058ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709cbe1c-f819-4ddc-bb80-0b2e60477b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066bf094-fc11-4d07-961b-92d3be6530c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6aeaafc-6223-4640-9a8f-54b0f66c95a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7d77ee-9ec3-41e2-aa76-e3fd20e76533",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcbfc8b-72cd-4b64-82f3-dfe961eab90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb180d03-2705-4bfd-a3c2-7f10bb2bf67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59cf4fb-117d-4e0c-8c43-4d68d2b4ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd8ab72-a2ae-4bd5-bc3e-66d9fca4eb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd319c-4f6a-49fd-9adb-4f31b61af2b7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c233515-764b-4c11-a0fd-756f6058f298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde67907-ffe8-46ab-a603-2835d541a523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f574071-0825-4e33-b928-2b70fb53158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94b57f99-dc5f-4858-ac5e-10d531040071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ab4419-8284-42b2-89e4-007d8b230c90",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810b0783-26b7-46e8-bd2d-d05f7c3f5cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd6ec2f-c17c-4f6e-b7bc-960eab2f6053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c13515-cdd5-4147-a6c2-4d160b5589ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2294884a-1d3c-4a47-9aa8-e6306acfec6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1f7d8a-6aec-4670-a3ed-2e73849f0182",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e963e314-df12-4850-bed6-bab5cd206e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca84aa9a-a467-4150-b69c-9a37d8126ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32edc7ac-e218-427a-ab9a-bb329b50298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "441a75a8-5c45-4785-9ff9-7496b9a1664e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfadf5d-8379-47e8-869c-e2b2a22efbcb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc26a1-0a3a-444a-85b1-475cb5f9e894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6558c031-db41-4f17-9eef-8b7a5dd0f0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b9e1e1-c487-4ee6-82f5-e4a15eb2a058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1055acc-1885-4685-a667-f0c8c73dfb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e051a6a6-6e50-48ca-ae82-6c98f0b085ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794c708e-c0df-46a5-88a6-0fb7a2a8f5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037bfef0-46c7-4faa-9c1e-ffd58a504cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af5d37f-f599-4802-8fae-826320d9b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc700440-24bb-4edf-97da-1dc922c3dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ea6816-b997-400e-8aa8-adc95998c10b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59238823-e5d6-4ed2-84ab-a90e449144d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8380bcd3-d651-48c9-9abc-08f9460055d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9b399d-84ee-44bf-a8b6-6cf13919609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "896567bf-1a4a-469d-953d-3826657bf993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1dd3bd-2f2d-443e-b4e0-c98a93784c07",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23e7ba0-5bee-4b49-8e11-842991d3d7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb8bc15-0e8a-41c3-8259-95ed7478773d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5505eff7-f5fb-4b0d-9a29-3df9e319da9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46a3fdf5-5636-49b5-8003-81b0a9c4871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d78371-5b7f-4d05-9a1b-786ebcf7827a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6040c54c-6cdd-4476-a9dd-125d6e950568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00781759-ebc4-4569-8b6d-be5772fe22fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e8cc4-c7cc-4b46-a844-3c39a0822231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abcd693e-93d2-4102-8530-0cf44bde2b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4287c9fe-34ee-495a-a375-01ed0111c6f9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a2ef70-8e3c-46e0-8c25-acb824629ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc51254-670b-4631-90e0-6e78d6e5e0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d92c5e-465c-49fb-bb7a-95a945d5b8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df58127a-ab0f-4c1f-a3de-b3e36d74c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bc1214-a8d6-4053-9d25-46d8b101cf6a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a438dc94-7982-47a7-8581-b7a8ffdd54b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a98252f-e5db-4b18-aa74-986d41f25d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b01db22-3946-4404-b2d7-f05e8a7f2729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b4b425-ddc4-4875-a446-eefba405fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d4a0e8-b4fd-4f5c-956b-7d9e7c827d6f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3ba7d4-ee8e-4f52-ab4e-bb32a1300919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112041c1-4b45-4fda-bd07-1f4c9a725c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2cb7cf-966f-4935-9a77-07ba2a00a2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b44cf879-f33d-47f6-b393-9c087b42e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cda7ebc-cd3b-4842-bdc8-e99531ed4d65",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25a07f0-b650-4725-bdc1-8d08a1463085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324b0346-d0af-48b4-981c-c9d479d59cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8cf99c-08f4-452a-aff6-cf3a03c359a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a97b001-8531-4fb1-82fa-ee66e82fe7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4062c38a-6af1-4ee5-823a-a538bd8e308a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aceb0d3-69a3-47ad-b609-93175e8deda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f689696c-c9e0-4845-ac9c-48e813215bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5456c25e-88ff-4a6a-81dd-46a8470acbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a933153d-1680-458e-bac2-bd43280b06ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe82b4-8bf7-43d0-b5b2-d91af610352a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05963785-9b36-45b9-868e-0c4ed906c179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce88c3a-8d97-499d-b0fd-7773b37c2bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8aa5cd-9b8f-411a-a3dc-a142c39a4e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c866037d-cae6-419b-bea0-e28549899782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f802e57-e94b-4e2a-8b37-c23c29fcaa67",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24160555-b18e-43c2-84d0-92a655bc769a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fef844f-187c-4c5b-ac33-5f0578e6bc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d7b7e3-8125-41cf-ac64-bc559170bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c76d9a-d6f6-48c9-bea4-3b7128d45c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfceb9e2-1cc7-49c2-ac68-9072dd419879",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc304c1f-fdff-4f7d-bb77-297f355394e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3444b422-dc3f-497c-809b-996dbdf75958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4e1909-8ac1-4e81-8e06-c5348c8a9aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7d41e3-3d30-4633-ba00-1653c8fa83ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10493fd2-4569-43ce-b926-96658edff458",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0084be-6794-4d49-bdb1-0510c7ead606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8296a6d-b973-46da-b4ac-a9f37a8f3921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c59ef26-e8fd-4649-a35c-9d9cbe392342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b3029b-38aa-4296-b220-014a36606f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b10cdeb-54aa-4f98-be72-30cad7da825c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f81f4c7-658e-40cd-8fbb-42563d3daa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799e04c4-f2f6-426f-a5df-ad280737758d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f08aa77-fadd-45d7-9275-8117ee356321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eae86ae6-64cf-46cc-a72f-fad74aeab357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafe3f90-a38e-49ad-99a2-45a62ba9d51f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cbfbbe-c0e8-4f03-a857-49a8503057b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e6df37-6d9f-43ad-afdf-2a8a76d24fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810bf23e-2604-467e-956f-41b7e2ebccf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7feee76b-2e3a-4e3c-9d28-962b018c06af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bccedf-d7ee-4e58-82c4-9442f059cd0e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a61ec-36b8-4b58-8f27-3c91c0f2acea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0202e1-464c-4340-9e99-61b121073290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d84b5e-6818-4c7f-a3f3-25e8ba341fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9784e564-d3ba-4b90-bd67-0a29c9b5bc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf28340-e9f3-4212-90bd-ddc69ddca958",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ab4e6e-f142-498d-acd2-42ec0ec3be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d1d224-45e8-46cd-bfdb-89f871f7e339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0129f284-b688-41a0-9814-8c31abe3bf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "143b2246-bc2c-4d73-be47-b8afe07e2e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf7721a-3361-4c73-b4c1-cd91704c885a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ce79e0-e95e-46a6-a072-286de010e885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888914b7-a3c2-42d0-9013-42de678f414b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07cc11b-7f2e-4e12-9375-bfda1d1088da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9eba6a4-20e5-4f9a-8475-104057989c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4db6e9-4d48-4ac3-a8a0-811242cfd5ed",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877cead8-6f55-40c4-a64b-9f616586a371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086d31fe-883b-448b-9fe1-686c541b65f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d513378-c955-4a85-9a48-aaf032dcc4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a81f142-cea9-48d3-8fd4-0070ff1ce3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e9858a-2d49-40cc-b7c9-26ec1ccc57cf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba3d78c-9ea6-4ce6-a392-eb3563b5f1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd6214-6e3a-410e-8c9c-b2b77d4d570c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4644725-78ca-4c29-8239-8652b018070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e539dfb8-2567-4eed-b979-8916df23667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ea22cc-4447-43b6-80f7-9eb0ae92d3dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8486a12a-49bd-4399-8942-b8f4d24574fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847b20b7-54fb-43af-b296-4bd0ab04865e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a107a80-f0b5-460e-aa7a-9eab8e06a0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8471f57b-3404-4107-83e3-d15d2b56ec0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4603fe62-df1c-48f6-b213-f899bb959acf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb8cfc1-5f60-4588-944b-30e8f76350db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d138858-d742-4f95-8578-f0ee4b575eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23de2710-74c6-47ca-ba36-a864b27a4c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba09bb0-727e-4b1f-8dfe-d7736cfd44fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e232d9c1-695a-49a2-b97c-9a42d4e0061e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ed337d-ee41-4939-a358-63d025124b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d27d52-b73d-4217-848a-6f68c923120a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befa7cff-4935-481c-afbb-0dbb422e6253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd85878-405c-4e08-9e91-0c2084dc824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f2f30f-25f2-4c4c-ac55-bad4552cf359",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43ec15-23ad-4810-bfc2-15ed1f8d48ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c37151-390a-4d8a-82bd-4c52860ebf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dab4d9-339e-4eb7-94f1-c85494870e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db17c32e-0581-401e-bbe7-16fe13b4372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40c4886-f79f-4aa0-8ce4-62571d31370a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e45f046-23d9-4332-907e-dc1c5eb29b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdf8023-128d-4970-8fcd-8a7ad5d837df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a451dd-1a92-49cd-8244-4feab549ae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "899346fa-e280-41fe-bf54-31a886e6d1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ef9bf1-4ce3-4afb-98ad-cf5bde1d26b6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc18bbf9-660d-465f-8f27-67b1715afd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b342aa3e-1196-433a-a50e-3ce52d3f5cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd8a21e-e95c-4250-a2aa-767b911275a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cf545844-ddb3-4fad-8be3-c050fcff4c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad28ef79-d6d2-41dd-95a3-5898a65d424c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889087ea-1ce6-4288-bf7a-9255e3b070ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1999a2d1-db41-4cc9-9b7b-ae4ff97834d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9418686-7c52-449e-a29f-525fa3aefb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c736d19d-0690-432e-bc4b-71bbd046764b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a772587-4ea9-47dc-b35a-f5400032aa39",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cb31a1-7172-45d0-8891-1ac29ede92af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25fb435-9e98-4204-806d-49cd56fe7227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f318b6b0-c9ab-471e-adf4-a7fc8a75d448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bd390e-388c-4aaa-adaa-ab2daf329eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aea7587-d215-4557-a549-f94f0c01eb99",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3852a39-4f0a-43c1-873f-a89a41da0d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a569ae5-60d1-42f4-8151-ba448c34259c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5838410-94f4-4ac5-9fe2-2068808273b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4500adcc-785b-4969-b907-8a384b9079a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef56db9-fdc1-43b5-805d-bb18b1f2d199",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2d353e-901d-4cb9-98a9-0cbf93bd2f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699dc36e-bd52-4628-a300-bb24864e9d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2911597b-9cf2-46a9-9728-f46974687d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad25759-730b-41a1-8b5c-59cd3a46d649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d8e3d6-20ca-4479-91ce-16d072b9ce5d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63652f1f-5029-4b51-a56a-951547d29c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eb44a8-a5e4-4f08-aa13-5b6ad23c8aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315727a4-5db5-43d6-bb87-51747a02dc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "322be5f3-d054-47aa-9b35-1832d87ca65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c77f5e-4052-466b-acdd-1786bb4f602e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59cc0a2-c684-4096-9a54-a0d052058106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd7f48b-13e0-48e9-a45e-3d012b18aca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f791682-c130-4d51-a9f6-3b1dc57a4cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aca4f3b5-2050-45c5-b1d6-ad13182f0e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9341b43d-5a99-45b9-be1c-5ab47a8232a6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ef37c4-04b2-44c6-943f-8c903cbc66db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902b06b3-a0e6-4041-b913-6fa21f2c08d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91fa3ed-7b32-4784-ae04-2e3f5ff8f3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f57d921f-39e2-4819-bcb6-05a57bdd30c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2173242c-0c00-42ba-ac10-6ccffa2058c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537cd0a0-4e51-4c6d-8787-21d2fcd6ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f66d09d-7ee8-441d-9018-28cbb99a8054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff49c825-8b4e-4580-8fd6-4ceb8d970dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "678f0018-e46b-41ab-bc1f-a6e0f66d6f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5158abe-f1f8-4d58-8857-10c8e95d1f64",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019ca1a0-c0fc-409d-9df1-d07c0a697df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a862930-a87d-4fcd-bbd1-ebbb6e7d52a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46309bc-4396-4093-b096-cd462b8486ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ff33d8-10b0-45c6-93eb-2597c291bc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad769bd0-0ae5-464b-a43c-0dca9e579ade",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82353be4-db7c-408c-9824-104e580c3d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c06596d-5e1b-4cdb-bf88-2e68df707ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feac0c46-e304-47cd-a9b4-897206bbb814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27482f1-9a6a-4016-be72-75a0309dd99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47951e25-b5b5-486c-a171-f4e08e24ffe8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a4523f-58b5-46da-a22f-3e952c329c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384b5a81-ac39-4db8-ad0c-43b053b439ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d57aa72-f777-489a-91d8-c36f7245b788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c098f3-15c0-4866-93df-5a838567d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44e4d7e-b353-45f2-b727-a1dab2848e53",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc390a6-16a2-40df-8658-a71feba75dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81819fc7-1f1b-4967-811d-42caeab4c217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46ed91d-4292-458b-90d0-62f508c49ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "685d2285-7f2d-4809-9b12-1de36f6c97c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c04ca9-fa62-4cee-8aee-74ebc433e357",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394917eb-72f9-4bbf-bfee-35245a946a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171cbf67-8795-4de7-a8b2-00fb65819520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ed74ef-80a8-48a7-a119-61405890ee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "077d79bc-e90f-4302-bd1d-eb9e7216ad38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31eae3c4-2f75-4fdd-8a98-9eaf99ec3076",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a014de-bff2-4785-9d50-52b5bbb58c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33b585e-8400-42ec-acc3-181fe3c4ead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aec4566-0ad7-426e-8a13-6909b8902f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75f6fe6-95a9-428a-9369-a1ff3c236d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79211cc0-9e31-48ff-8a38-5d91bef479d3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e258467f-c446-403f-85c1-dfad8210d9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82947d7f-41c2-4417-af97-392b5ef21f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f59f3e-7958-44c6-8157-42f3ad0b9f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0d19c2-e063-47e5-9d40-934dbaf42f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4518117f-6198-41e3-9bbf-4113b2153645",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5150802a-242d-4034-9b6d-3be45d695f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c94b08a-3057-4af3-ba90-7b31b065cb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcda9ce7-3d0b-437c-bee1-792b5f8c8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0650bbad-11c3-493a-91ad-2ac7a3f1048d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c5b3b2-fbe3-4985-a1bd-cadb9aae5861",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1926ff-08ec-48fd-b501-b783bf24f905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ebbefc-9ccb-46fe-8f6f-33bf827b1183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e47559-8d9f-4c6c-984c-fe1aed169cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f3dfcf-2674-4340-9007-6550f77952a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc03d561-9d27-41b2-b1a5-139a6b0cb0cb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bbef8f-e483-4340-89cc-61a25b3c2581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c59c73-191e-4dee-8f3b-c562ce7e0546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73f41e3-d3a9-41f1-8369-9044a880c63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "991012b8-a0f7-44d8-bc64-0d4b320de139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e5a253-a6da-41bd-8665-ed88df7912ad",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24262f66-3806-4188-a08e-6c77051db5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16713a2-a3dc-41c4-927a-a038456fb8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a83498-1b8f-4f17-9f2d-9ebac47db5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95513230-90ea-423c-a3e7-2f916f58adc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6787f3e-2beb-43d2-a72c-c84a3d7ab57f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caf9f79-61d9-445b-b45c-e524b74e00d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a53d21-686c-4035-9163-890f5e3ed0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf26165-1dbe-4bda-a4e8-b3a18f7f2ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1261093c-8834-423c-a38d-01d085e43c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a06a0a-6352-4337-9da1-435999d03e02",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c213b0bd-7a50-4938-ae55-f315ae645b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598c9877-99ab-4943-847b-cd902b1417c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8e8c2a-06a0-471f-a825-84098aa0fbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "45ec3b5c-eb91-4f80-af8b-f0327c119856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83238ae6-8cfd-472a-a37e-b9b37f9c3708",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70258f4-b162-4aae-ab71-a5aeb9a98881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d143c677-2afa-442a-8f93-eb6617053e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f946b007-3bb0-4ae5-888b-9710cb59806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5319ea-f488-4aaf-9bda-fb0a1d539d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5a8ced-ae62-4f36-bc62-3a503ce30b92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6599320a-c048-47c5-b3e4-c6f633fdac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691dd4e4-eb4b-48f0-b54b-80caba909e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8c72b-c07f-42ac-8642-cdf8b48bf692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54677fe2-dcb4-4bfa-acfb-fcebad74eec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3f0389-b0c3-45a6-836a-f6ed510b8ccb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ec4c9-bb07-4ae5-8f50-7b9fa805cbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bbcbc6-5fcf-4992-94a5-4970d3cef48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522b7944-15ca-4602-acca-c4aae4c78afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1a0738-4a35-4285-ac2d-eeab5c0e3da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3c988f-a8e4-4216-aad2-196cee96009c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87f6812-53a7-49ec-8f25-c300006c0ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa407a9d-9cae-44b6-8cc8-afc1267bfe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6d0b69-4607-4317-b969-9eb6bd49f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1cdbec-6684-440b-8e78-10678732fe4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d10cd82-6eea-452c-92fe-635c109a9b4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad21a101-930b-4842-8749-cbf7760aa496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bc7d6e-23eb-43ae-810e-30bdf7077c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2d3a95-3835-4898-90c2-fa18eb292b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d08f0cd-8ad0-49db-8a5f-e8f1081139d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c867196e-520b-4589-a4c7-8c187871762c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05692d6-4ac2-4ba6-8332-9a744bdd50f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d621151-6393-4bb7-91e9-ec6e86f374a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80433525-22e9-45fe-b853-0dda32ed4ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2ea69c-2eb9-47a9-83fc-919067d16ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4547f6d8-b3c5-4939-9b56-0d58b93d3595",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a63ac4e-942e-42a0-ac58-d8c343645098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4fcb53-98d2-4b39-abbe-e94a47038c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92d415c-ec43-4f48-8f14-6cdbde7f26f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7baf469d-36d8-47ea-9257-9b74c7306f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a444bd2-19a6-4c98-9d56-9d2a661347bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd6c7ea-0d6e-4182-897a-ae54ece9858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35b4323-18bd-457f-9f32-16a3a7ebb90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3857c0-9331-411d-906e-2fbdfae28f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1642313d-87cf-40db-9c63-1e5804249825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f283a93-0cd6-48ec-a706-8e448ae14fd9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8586e0-410d-47d1-a322-9721628578e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f036f3d0-d83b-40e6-a1b4-7b9710345a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff01460-10ac-4c42-b9cb-7a580cfb3e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "082cfc1c-f975-44b7-a31b-784a296bb2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c93e8d-a607-477b-8ce7-57d00aed3eca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a1894e-91b5-4b36-945d-daf67d1b1ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17735c7-dd93-4603-a0fc-03efe4720d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5f7c9d-8efd-489f-8c34-5b764ee17acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebcbd00-b972-4c9e-9dd0-115d64a8a887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c5330e-a0bb-448a-917b-ef4887b341d2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3851cd82-95c5-4862-a1c2-0c4deb0371c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ff5e07-c3cd-4742-a7c9-2ce27d7aa8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e9ff44-7cf1-4e47-91bf-9fc561d7a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0599e5-7b97-4844-b2bf-f9f3041c27f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f4572a-3957-4d45-85c6-2daa11788d42",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905678b3-763b-4e9c-a7c6-fdbfc2c2b4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a2e82f-bc98-4038-9c0d-1b692e46e9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d561d53-55d6-47d0-8b20-10ea736a8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01711d52-2e52-4ac0-a4bb-9b9ea88839da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0402591e-177b-4281-bdaf-4912ef8cc1ed",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0a9db4-7f27-404e-80fb-1f6a15f2cf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa090eb3-6faa-480e-927b-d584c5ded951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5df595d-2b62-41b6-8cde-1dd70f9c2de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d71abe-b135-47d1-8b22-298c4a64e0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73461525-1be4-442c-ba66-b6b577469ee9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92e3468-dc5a-48d9-b0ad-d188d37c9a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ddd01d-e67d-4541-833c-cb926e1e8980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312165d4-2ca5-47b7-8864-ca2a747fb977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a98875b-5233-42aa-b6ab-c59eafcc9c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d283b15c-28c4-41b7-b323-c46575dba6ce",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d4d5ed-fbcf-45fe-b746-ea8565603a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8675c1fe-1ec0-455a-b7e1-37d257f4e21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aa67b8-2d50-43f0-989b-5ccb7cc70c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6acde0f9-ed3f-4159-9bc6-cbb63d134d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08660c4f-26bc-4bed-9c66-ffdcec8258d4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4adcfe-285d-4c9e-b5d1-340a5944e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f564b8-7f7c-4a07-b912-6cc81f9a9564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f4c1f8-2e7f-4b91-b0a7-f6c89f3f2a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df81174c-65f8-44bb-95db-e5758325534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f40136-6e94-40c7-bdcc-d7c0f63bbdd7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcc6a72-0b8d-45d3-a511-da2a08b2a33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081d1ebc-6bb0-4457-a3a9-a3d484ec3378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e88f9f-f83d-428f-a3ad-6f248718e80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51872e56-4ca4-4eab-b333-cd14b486f1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d34c2a0-69d6-49c8-86d1-2bc345169b3a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6604de-c649-4205-bdfd-291f1c671e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7886f4c2-c125-4007-8dec-aa7e39f171b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552cc6f8-5c93-45fe-b35f-d50814dc1c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f866504e-493e-4987-a482-48086b694dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b34a701-9699-4404-aac9-c75a2d898b15",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154bbdb8-b043-4e2c-b923-9de38a4553ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be70bdca-8def-4bf5-b6b7-74451bda6f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa564f74-e561-422e-babc-df834dab2005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5976cc-88db-4fde-bdb3-dfe865b4b128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9a7bc2-e14d-4c7a-b8d6-bc235e878076",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9e2796-70e1-4bec-b03d-f6879fe13739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d3760e-1150-44a5-a30c-e4b536cd1fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7969b99e-17fd-4879-8e11-6fe9da7d2d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05b02fb-34c7-4b34-8b47-83e3620a1625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049eb90a-885c-4a29-aefb-5c4d7ef8b67e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3be604-5801-40cc-9b7c-6367e0dbb149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c2f0dc-b45d-4799-b29e-3a8af2e38421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd43662-ab88-46a1-a970-e1527e897314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c9fdb2-6a7f-45f1-82f0-987852af9d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f36e41-e12f-45a6-b6a3-6b553a6abc98",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555ba0b5-289e-4b13-8eb4-af4027236e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11becbee-0912-4717-8b1d-37f92f673b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131f745a-d911-47a5-86a5-964d6fde32ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef0555d-641e-4210-9afb-7f96ab506313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a627be54-4e1d-4255-b576-2d19488eaf09",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688068ee-e2d3-4595-b8c3-8e4b5cd2da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d495522-4f29-4b15-8152-2626ae967d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f4593d-6cfd-4f2a-96eb-d488212c5dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f69f7fc8-360f-4310-889c-a400872ba69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc11b78e-1ec7-411e-b54c-80bd2150d7d5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf7148d-1feb-4531-b0e3-16f7163123e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dcec9f-3155-4a6b-b969-3260336217f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcaf409-949a-4e71-8c77-438d760900f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89c2bcd3-346f-4d14-b6d6-2356873d08d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbd580c-6b33-44a6-be50-722f64b060bc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752b3514-d56c-4846-9737-aba88483b948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e48ee64-7588-45da-911f-3c973788a009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87475678-3301-412d-8a6a-87770dfb34e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1a5fdc-6b11-4980-9b64-7ad340c9d7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40c802d-8a7b-4c1b-bb82-19bf445ab587",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80493ac4-193d-4837-ad54-ee8c5099833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5d6ff8-8790-4629-8a09-8df79613cdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ec3a86-6d21-481f-9e80-9ae46f432a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ca486e-c962-4d71-b591-a40f443a4793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99059062-9610-4cf7-b47b-f741274143da",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3dcf32-ad53-4512-a1e9-11c04426d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e874ea9a-79f0-4992-bad5-45dba89797bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaf17f2-681e-40a3-b29f-d9965686a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3a64eb-2d87-4504-a368-4681424a53bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b64ae68-938f-48d2-9273-8681be726fb2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f17e8-17b5-4000-b76b-cb5df0673070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10244ba6-cb1f-42fc-9cb0-827926d02e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f2b11a-215c-4fab-9205-9dafe695049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab016e52-1a0c-4eed-96a1-23d4600065b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3c3732-bdca-4846-b143-0179c934d07f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c05f8d-29e7-4871-a5d3-1b13693a0bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922c11c7-b01d-44f7-bfb8-1220344606f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d9295d-e205-4717-9193-400559a9043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f067f66c-f0a4-43af-ab39-2b0b2f38b481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fd3829-d19f-4f09-8e60-7cc33db1a656",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531d0bc7-4c18-4bbd-adee-5121b4f26fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f405ccf-1255-4777-a822-d68eecf91f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07ce2db-b55a-4a3c-8af9-4dd0715b857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c31337-3afc-469a-8c25-fef64f4ced1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebaf833-1c91-41c7-8be9-4c494decf5df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e6aef5-62a9-4ac0-b3ad-1da075c9c0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacac06c-4329-4284-b439-cd1852891739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f841969-911f-4af6-99d2-b7676d07024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c09757-eda1-4c84-afd9-b3f2740199d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d416760-d0af-44c2-816c-17884bf10394",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f628e0-ee4d-48b1-ba0f-d59f41ba0a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5b0dee-92f8-48bb-9f97-6af6f1911d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e45d1-acc6-41d6-9463-f575f57e3acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c53dee8d-7b66-45e5-85e6-d6fdb3bc5965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1740317d-3a4f-48c0-a552-fe54e2819be8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0c9cce-8899-4374-8566-3f2388a4d3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3941753-43ab-4480-be19-eccf5e3e015a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad34c20-3660-4a65-b0d5-b7717b3998c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2985b1a9-2683-4a8d-8d31-c0ed8fb18fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ad0106-e944-4587-b454-0e6ee8741b78",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd60a39-99ed-4b08-b214-2c673ac59811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc1c863-d3a1-4855-870b-f6eca2546e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc13eae-689f-45cc-b129-457d5ac75bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a73af60f-3c6d-465d-a8bd-962d0dbc24fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892be986-dbb5-4f0c-ab72-4b679284c06a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d707799c-2805-4e73-9b0a-443b6ea36989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689da09c-81b2-4735-acc0-83943437dfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712f6352-2c15-4259-ad4b-3dc756aeb0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6da437e-0944-43e6-8fac-444329f4aee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11236822-f94f-4095-86ba-193b9d22fd66",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fa62b0-9196-4e94-aa5f-21ba4d1728a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d6098a3-81b5-4bd0-9eb3-a14a518115bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910c5faa-1b13-4e52-b9d9-b265d57a777c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b71b4445-8f2e-44f3-9581-2913901928a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62f5b12e-32f6-47e4-9f04-8793b3fc2386",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f1517d9-1898-41a5-9057-2ac483432883",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ad852b-6feb-4b82-beee-e52a308d741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d32feb2-e207-4f46-a236-510ab7cd1bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dea4232-0adf-46ea-b6e8-752d757f82d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dbcf200-6517-40ca-8129-00d4300312ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b99cb05-dcaa-4ede-92f3-ea89dd600a0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1177a287-75ea-4f66-82bd-0b71b592ac65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f9d180-c11f-4c47-9b1d-d3988903da0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f270a23e-ee02-4e17-888d-0224227ae92e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86dce76b-6652-4ad4-817f-a6e9760f261c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08667de5-11a3-40a3-851c-1904ea9e13c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ab867fe-9bfd-45b1-b27d-0cf62a646eb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee83a68c-fbbc-42ad-888f-003e73460637"
                }
              }
            ]
          },
          {
            "id": "e91c515d-def4-4c4a-b97a-e31bcc46e354",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c58f9310-2ce3-43af-a92a-15d9a29e99d1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3b93e0ca-485c-40ff-99d2-26e2efab064b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f488b35-1a60-4ceb-8166-bf4e57176071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6388ce73-1917-4c37-9701-811841a6c246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dba000-029a-4bf3-a61b-c9896e6bd1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b0e164-64a3-4d4d-9bc2-6f921a0ce18f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ed4e20c-4624-4d1d-ad3f-7590974b48bf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "329819ef-292a-4771-b738-2f6c905e4b7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b57116d7-24ec-4014-a297-fe764b9c5dee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "189dd744-a511-4392-b03a-ac1aa0905f75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4eadccb6-12ba-4742-afe2-242d0f4e1985"
                    }
                  }
                ]
              },
              {
                "id": "3d3be2c3-6d7a-4a81-be15-992c382b234a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5d9c128-3bf4-424d-a591-dd39f6f3e3ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bd8e766-d6f6-45c1-813d-edd63a5ffae3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61cdd106-1b70-4ab6-ae82-de1d97529706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3603e76e-391b-486f-98f6-e1d40af55691"
                    }
                  }
                ]
              },
              {
                "id": "1262c0c9-f316-498d-8dd2-6f89f91819ed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f5325de-1ace-4465-9d79-2bc94993bf5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a18c30c0-c894-4a6a-bf75-f2fa44052088"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feba979f-ccf5-43df-94a7-118574a507ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67b5534f-889f-49d3-b199-a61392ad807c"
                    }
                  }
                ]
              },
              {
                "id": "25038020-7e5b-42a9-ab81-442daea0530c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f2e784c-766e-47e3-b6ef-715e22c7f69e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "995ee3a2-48f0-4c75-9f1e-55cdfae3b29b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85a7608d-3b3e-456a-ba1c-b40ccd60bb4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cfe0d77d-6a1d-4c81-a148-f5aea52ba600"
                    }
                  }
                ]
              },
              {
                "id": "9c791a39-cb0a-40b4-b6a5-bf9fe63de607",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4a438a6-5e17-4bdd-8d8e-714b305c6c35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97226552-ccd7-4cd1-a96b-0ab97cf13b34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8722dcfd-de68-4ba7-ab6c-9f055a84db05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "460b0e56-fc95-47b3-a72f-2ad71f5a1ecf"
                    }
                  }
                ]
              },
              {
                "id": "0d769b9d-a482-4307-84e1-7a54fcd7c830",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f84f4ff-855f-438a-ad6b-85c0f336856b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e57c221-1da1-413c-a9c5-4807299f16cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71fc5cf1-57e4-43c1-a57b-2589e7d74a00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddda845b-fca7-4e09-b434-4b0a7ddf2633"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a275838-2592-4662-9b7d-3cd54354c381",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e38baea-ed6b-4e7b-a7d1-ed6aafeccd30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28a13416-545b-4525-9a70-5788fd8a9f26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7135001f-50d1-4418-b510-d6835293dd29"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fc87bc5-5ceb-44b4-a651-9fceebef5108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b18aa279-28a4-49c0-b09f-c3b1aedfded3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da32c775-f1eb-4eda-a5dd-737ad8da4cbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7514a285-6d53-4bd5-baa1-0306bc3fe2c9"
            }
          }
        ]
      },
      {
        "id": "453a8e0b-3c58-46ae-9f82-4206241aef1f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "15b5e11d-bdee-4490-92fb-f2e0bc4b2d7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd24e5d9-b383-4e7d-a7da-698cfc317c34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2e6f4ff-8a06-43a5-ba93-69b007fe4e03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f0eeac-2546-4a35-b906-deed33e40a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088235e1-d9c4-4811-8ad3-5c017d547035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d4a23e-59c1-4867-bd62-85b10b362725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc9b033-287a-4194-aaea-bd4194c5f1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d176904d-1a78-4adf-804e-52aa89937efc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6c5a2a-4c6c-423d-8e25-b77986148e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac57a6c-6408-4862-ad32-3dade8b2b7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ce7090-40dd-4f49-b198-818cce45589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a041c8c2-ab3a-4782-a932-224f10bc5615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d5553d-f485-4a39-8401-4df074de5c30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e665b1c4-04c6-4484-b57a-a4dbb23ec396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d5738c-85f8-4223-8050-2e3e60971929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38683a3-84a6-4d45-af80-369aadcaa839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9ee7f8-b9d0-4c42-9c76-acb3558afe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf30ae5-3eda-4ed2-8e8d-3108a039ce43",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1bb4ac-1e3d-4f4c-984b-fa00d5a3a299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c673f3-86b1-4a69-8338-1b41591f26ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4b0d1c-d9a7-4768-9db3-3203609e5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad14863-5a17-4d17-95b1-c68b57848a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d5fcc9-1171-4ab9-8ffc-0d120630bcf9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baecc402-9e95-4893-8662-1428e29ecd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21889e8-27eb-4102-adf3-04b813bbbd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6902e1-3690-4890-a978-5f84c96058a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06336fc-3c7b-4fb3-90f2-c863401918dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689f70f9-7f64-4d3b-ba61-26ddeaa0ee46",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8d6191-80b1-40a0-9571-f0a86c2722a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b783cce-dd2a-4f97-b785-2c31dcbce0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182bd3f7-d59a-4392-b2b2-3d3d0467099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be82f1b8-ec3c-413b-af8a-34763be5f679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb3b979-00ec-4539-b657-c48a40d9259b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442327cb-4e01-40e7-bcc2-4f3a9e31e3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbd45e5-7d7d-4ead-85c0-5ec14eb1dd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0950afa-aa4a-4ac5-b39b-7a246ce21194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdde1f15-8633-465e-a8e2-2a87e803bbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e5d501-05ad-4116-852f-39c27c3a936d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab67a16a-6876-49de-a3c3-d52d5f9d660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1004e08c-bcf2-4106-80a4-f6042efb2d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86447ba9-39f3-4f65-8aa0-0a1e0096b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0380b35d-513d-4786-aaa8-bbb55974d682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39199647-ff7f-4746-8189-9a92d785d431",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88224852-ed1b-4aea-9eec-07fa54efbc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab51cda-4994-4d58-ae3b-2e86b4912f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffada257-ad22-4013-8b67-ea2cbe0440f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a29a0e-2f9b-40e3-821d-c77017e0b775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0ae030-864f-4822-860d-38b1fabd993e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1d6fb7-329a-452e-9033-c532d6c990cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e436fad-4701-4ffa-a241-8a1d5d432986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f376597-a600-478e-bfb6-bd7131e530a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cb0e51-e81a-44ae-a136-3fd37585b1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d9cdc5-9ac2-4e91-b114-9650f120a09a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb0033d-08a5-4482-972b-1b885c6efe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aa17b9-452a-40f0-9646-d4c9ed04572b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bffff9-273a-4ecd-bdad-20d7574e045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3900378c-15d0-479f-812c-7737c3862321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32998cdd-f71b-4344-9306-b1a51b052c5d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a2c0e-a68f-457d-bc58-85cfece044c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011aeb95-0403-4a2c-9b06-09170cec6a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8db1fd-8df3-408f-9ebe-ae3cfbb2e603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57e6a461-997e-4dc3-9921-748e636c7546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c755f-df41-42da-ac2e-a75bca45017b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064f20a2-5aca-4013-bb68-947a08cd0594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cff451-774d-480f-bd2c-7d00e92c2aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990744cf-9dbe-401e-8900-b2a68ac46d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20079bbb-50d7-406c-a60d-0ab0903a5785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d617bacf-c97b-4764-abec-2954303be2b5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408b4a09-b53b-4cd5-80a7-aa902fe565b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd2289a-92a0-46e0-b1e1-55637c091b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823e6fa4-9909-4d5c-af06-b19f575feed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8c46f3-61b6-4e54-a7c7-6c62d66b620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ca1131-eb24-4848-9a4c-e3fbca3e6aa4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924cc2bc-61ea-487b-a78f-a1771a32b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42186e8-fc4e-4458-af1c-4fd30fc49118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d202c1-16e5-46b4-9a58-7efa9b57f065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea312a99-71e6-45b3-a71b-6091f55782d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d9d78b-73cd-454b-ae3a-c0047fbbbbe1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12ba389-6af9-4a23-ac97-d1917752dac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbdf1ba-32b5-4eb4-ba85-009b5d50791a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e280d8-030a-4b4f-a5fa-c7820e484a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "630d7ef0-364f-4528-ac81-26990d08577d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90cf8ef-692b-49ee-bca8-555e96f3b3ba",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92fd97f-941c-40b3-a7a8-6f91ca9f2e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38279bd-b08b-478c-9542-8b4aa26763b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17ef1dc-c880-45f4-8ca7-c59cee4b89a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba33fb6e-cba9-40da-88fb-08e5db14413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e091999-a991-4eae-8717-4c962bdca3a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088b1267-7a9e-4861-bf1e-2d38705269ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cde795-2bc6-4625-848d-6c1e8bffed72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71406fdc-a2c7-473b-88fa-028604dd8ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f10ffd3-e618-4a2f-bdd2-1dd74f8938af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef80711c-5a05-4e8d-a994-c06c1278bd71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d02eb29-e417-4711-853f-e49a08fbb894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffa45be-7703-4740-9407-c83d10936acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd68deb3-b1c6-460f-960c-50ab2343c6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de185017-4ade-4bcd-89d6-53d6670071bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd1f78b-1ac7-4e2f-b4ae-e47e36576676",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef95433-60c1-490f-91e5-91934a4729e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcc120a-8a22-4ba5-ae72-b214aef7f51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6897d457-f5ea-444d-8d39-912f11f712f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be67d653-ab26-4a4a-b594-aedaffde8611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a65f6-12ee-43c3-844c-d49c1989627b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199dc3b9-3252-4398-993e-6d053ffc81e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4261ea2-13b4-4ed9-86ac-6da5b4f1da27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5971b336-7eed-42df-b9c9-cc13840a052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18a55c8-ad6d-4c6e-92f2-bfd98ac5d945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e433c0b-c28b-4963-8cf4-a0130557994f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd473ee4-1422-4ddb-b9eb-e3576731f371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5696409-f461-43cb-8139-69ce955221b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2123c5-1c84-4100-91ba-5513d0eb9af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c52aaed-8d30-4ad2-b34b-50998b00effa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd4af07-2959-45ed-9218-3e2eb50dabf4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c2d30e-1c99-484a-8acd-fcacf478cfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492260b4-8f0b-43cd-a4db-61de366ed56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980ba8ff-2aca-48b3-8394-a54cb59f8e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6fd810-1715-47ac-8838-469536716b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780ae16a-96e5-41d8-bc04-34c4a890c36d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3aa7a8-b029-4f20-9af5-7c3ccb5d1c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a8fa55-b072-41e9-b236-e41567c33e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e028065-031b-4ab9-b05e-2f116b5c93ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3d7fd3-e8fa-4788-8da5-8fe67248882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ebe01d-d643-4b6b-9e01-39f82473cc67",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38a2e19-59af-41fd-866a-f897f0e46984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c039d7f9-2c96-487d-a5af-86a7bd571624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1020d52b-39b4-434d-93cb-89cb82f1f0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ef2c8f-1c3e-4183-bede-299a28540858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6b1f2-7492-4e65-8696-83fce68f0b0c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c4791a-5178-4bd4-b292-1da6bc89d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1a0320-5c62-4b48-bcc9-8be3503f4e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4f25a9-bc72-42bd-870c-c574216d3048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f2aee5-2704-4879-8d66-58d7c6e53663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65478caa-94a0-4b9c-8039-18f46cde5224",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9491e22b-fcd6-470f-bb71-3f867aca0989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a529cf5-a1ec-445b-a6c4-dd3e198d7404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770f971a-7d07-4210-ab1f-9094bc3e063a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed284c3d-1a56-4d5f-81e7-6e5e78884ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71565da1-1550-4535-885b-6b4743f485a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c277de-1e05-43d3-aaa2-236b238a0155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bfc28a-00e7-44ab-8aa6-408de37c081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab509b-4129-4809-b440-cdaf17741579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba1764d-b51d-47b6-9747-0be085eedcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb144309-537c-43af-bcc3-73de0fd2215f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd287e08-c61d-4f67-90b0-dfc7d4e1ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2de52a-69d2-43bd-9b85-2a530e59762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e715de-3aaa-4168-b4b8-6011717104f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "365de92f-4322-4f47-8a05-2181a4830984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fcd7ad-5bf1-42bd-a8a5-599a12449e66",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f500cb-63ff-45f1-a244-0421569b0b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5569148f-433d-419d-9b99-ade0b0c58ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d495f3ea-71d9-4f01-9d66-43d3afe37ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9532b5f6-5c90-4696-ac11-24afc4565d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a53c37-ce94-46f6-8d02-22651d2b185f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f835af8-9023-4525-9d8c-16e4e26598c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f745dd1b-6eaa-4029-bd9b-f63959a117a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d767b79-c6ff-435d-9a56-a6394614504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9f49ce-8845-4947-9364-57a5805be106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b754d-9444-4cd4-8ad5-82d74835fc26",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5e9c3-d2b7-433a-b273-001c7eeb60d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac04762-2b81-46e0-ae7a-d2c543bb478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d43e3b1-a8cb-4e9d-a65f-6b005789e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1993ab42-8fc4-420e-859a-6a096cf27a88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ca15f28-0378-41ab-acd7-f1d33d40da7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87fa01b2-5bb7-44a6-abbf-1cde7de580be",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0439b111-6d8a-4863-8035-546f383f035b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdbdaaa-fb92-4e03-a97e-9fe5bb5b45f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ba49a9-c233-49e4-a382-dd44cee1e75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "998ab5b5-3666-4890-8c32-18aa7a602bf9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e0e6d9c-8cbc-4b47-b309-8421aeac7b02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e68d0cc9-5969-4e26-ba4b-26a166b76293"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bb21559-fc24-42b2-90c5-8c276192da60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c16d906-4a7d-4234-ad14-82a1802200f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "debe7d56-5b2b-41cf-a5e8-6bbad12c2586",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51b53c7c-517c-4eb4-be6d-3deaee42e0a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b33a8634-7a14-4d5e-83ef-9981f2e65a0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b66c0db7-2bf0-4623-aea7-72ce7ee3bdf6"
            }
          }
        ]
      },
      {
        "id": "f63037a1-9a17-42f0-ad58-6e1b21615a20",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "12f58773-2a6a-4e99-ab7d-a3fa71adc182",
            "name": "Negative Testing",
            "item": [
              {
                "id": "298855af-4379-4679-99fe-1a3eb43ce65c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da66354c-561f-47f3-8b53-732126d282a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc98c46-9b01-4143-b4c4-97ee244cc21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3644e402-1a21-4366-9391-6a2beb96d5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ae9271-048f-4847-becf-3c67bc1ee174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d7a432-4c63-496e-941c-6f16c27eb476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c48cc11-80ee-488d-b71a-f1bad27cf6d8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb185f5-7164-4295-8adb-2e659f39b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2dee7a-ac9d-42f3-93f6-2540d7f3247c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e736089-0f90-4535-a975-f850356e195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87278f0-da34-4937-a9f1-f608f43083e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1209576-d5ea-4e0f-8f89-13f39161cc38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd70ab81-769b-4738-a627-0c8c8db19266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5df914-749f-4742-b178-1e7ab99c03e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adaf594-2055-4fe1-a5f8-9f28d976e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "143e5730-da34-407c-ae0e-ae3fd1fcd4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f220bdf-7df0-46fd-ac37-f91a7583fa8e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5f925b-26b1-44ea-a2e7-1c3e557fd4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16eab61e-af77-406a-90f1-6aaebe5b559b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0644f91e-f860-4357-ab5c-f40400dc7ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "289ff991-a2e3-48b9-8c1a-3805b97c8fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5c71ad-48f0-4ded-b5bc-c0d81899f0af",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67589683-2782-4c26-b57b-3ffd50f73cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd08b5b0-7630-4b45-8f8f-177c33c7a082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c986eaaa-216d-49c9-a43c-a0ced5142942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c2015b-1d74-445b-a7a8-33babed1596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de296016-cda0-4d0d-b493-47a883b0e9a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25274d35-e9a8-441e-8002-324219742892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a077ec5f-b3be-4a17-b46a-b3703a89ef32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e097f125-99c8-4b98-aff9-5b1cdce98939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f66163-ec33-4189-9ac9-8d61b01056f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b63016-ff65-470c-a7c9-d747ff4d0806",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d86526-f949-42ed-9c74-ee4a3f2464d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada4f6ca-de5a-48f7-80b8-8319418f0e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2c4eb8-7263-4851-b9a2-d751e677db7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df4c6b9-363a-4cfa-97f3-57d83e664e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8a57a3-1a61-4c86-b235-7cb92c8b8ea6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b8dfce-ba5d-4848-82e8-880817665635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2a3c37-ddea-4f8a-9a98-7f5574571529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006e89f9-0c14-49d9-8b38-ddd83bed124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "585925cf-70d3-4e1e-baf5-43e8590d5e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52006eba-a2e6-44d2-bb5c-25be55fb47a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c50b6d-6aed-4f4a-b5a5-103b169ca372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a510ef1c-d5e6-417a-b2af-341ebeb779cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70ba3f9-4a2d-4351-a743-5b9ad0ca09a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "549c8a19-6104-4cf1-81a0-72bfa7f00fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42956820-75f4-4e0f-bd57-732f110209b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d15559-d26c-4bfa-b400-3e4530735d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57be3b4a-82ea-4a2d-8940-86f939d72e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b6123a-d23a-4f6e-8eeb-b5f4857f3802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "223f6b0a-a30c-426c-bf6c-6f46ab84c2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4448cb2d-9621-4d59-baf1-754dc03d7311",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e70e435-f147-487e-be1a-45b29e6d04ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4480ac5-fddd-4923-b85a-f9067bbb653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c733ea-b692-41dc-97f8-b0833df4562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a030bf1d-dfd6-4f19-a2e4-72739d1baa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d27f2c-8716-43f9-8a58-0a947a905c2e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367508ac-6153-49e4-a086-8c93b1651a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce19a7f3-352f-40e8-97b9-96a4fc9d29bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357f9d6e-8d30-439c-8475-c3b4bb94a76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a50d116-1f1a-4948-8c2b-ac1759735a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafb38c2-1404-4b48-b205-cc8fc4e2870e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14730775-5be1-4b81-bce2-498b4b0457e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cf7b08-071e-4a69-91ba-2567f9ae254d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1679e743-3b1f-44e0-9bd1-c8519efd980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee2b4ea-0c74-4e6d-b22c-81a74cd2852d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2dccf2-ed4f-4f4c-9529-ef1cefc2d355",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649aec10-03ba-4d96-8ad8-4750a2d63d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130725fc-3adc-494d-a500-a8cabff16afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ee5370-ead0-43d3-82a3-c0c6fe3c5da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c214a7e-770e-4b28-9f5d-d303c34358ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a06b60b-dafa-4a45-8b2d-e623661b0ff5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83079712-9548-4705-8d35-820cc38a5f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d350cc-f1fb-4cf6-a99f-4d216b3f2fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a17aba-6dc4-4ba2-a0d7-1aa41c3ba7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a581b97c-650d-4f7c-98c2-1eed1078eac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072dfbf3-4bd7-4c9e-9f87-4dcd6d064f47",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51b2a2c-fe40-4f62-bffa-f41f70548c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84235c4b-4498-4ba2-b10c-18b23482315e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d73c52-0943-4cb1-8954-e5f3a9c245c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3b9203-37ce-41a8-8452-8ee029dab166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf228a68-4582-4107-8d50-890447db9ece",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339ed1d1-732b-479a-9652-5859be860856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bb8013-193f-46da-8f64-5e6f1ce3e20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb48ca3-77cc-4a8d-9b74-7c0dcfa7809b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c679dc-b9a1-4358-8d1e-0a51435ece7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005714c4-8e13-4b70-b9ea-3e6423681cf2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe13ef5-0f4d-4198-ac0b-bc08d46167c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466a42c5-6204-4198-a02e-b2db5e058c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1671da-c7ed-4dee-b3e1-2b93104dd77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ccd266-ca09-4e8a-aad3-99d5c238c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db505e7-db3a-45cd-a61d-948ea91d811e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7bcb6d-629d-44df-b8e8-ac95677e989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc06dd4-dd50-481a-963e-3ad6e45d42ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3032001-b6b7-4ba8-b852-7e203737ec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff88ba5d-8e11-420f-bad3-184dde08da46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c59413-85cf-482f-9028-f0a1cde0a8bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17978b1a-ae15-4f4d-9f98-2412a32645a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4bfb2a-09a2-4509-bd17-6e2c664c7d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5886daa-7ea0-4f80-9eac-ced43e7a8775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc705bf3-848d-4a9a-9e3b-f2df1df0b8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca96bf53-0e9c-4a11-bb98-b4747fba4502",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4d89e4-4594-4796-b435-5d52b147c0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329b5e2f-5d4a-483d-9857-7113cd950101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b220fa5c-a975-452a-be4c-f94240e96e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "110f8a9a-c08f-40ec-bba1-38c713228f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea17b947-e5e0-4b15-a51c-86fc237e110f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db733dca-ffe2-449c-9457-35405b72b36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1961848-c29f-4d31-8818-2986d1511461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f290218a-7209-4307-9db6-3bcc088404c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb21276-1d35-4ff2-b680-952342807147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520cfeed-c277-490a-adef-4ce144670bde",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70eefd-3d62-43ad-9935-e8eb58d012b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd1788c-9c79-4518-8142-1417c99fe5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1673c48a-fd56-4a89-883f-2fc41080a942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d4203d-b1d4-4016-9c93-0ba2d9ec3a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82be6e52-62a7-4d57-b656-90d5298aa07b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637ded59-3baf-4396-a65e-8f4f9f72c041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d3e314-7257-4461-a579-d0368d283c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6812821f-1f15-4a03-bc30-68a51d9aaf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "882ba3e6-52af-487b-94e9-b615d785aa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eb75f2-5b58-4288-abf5-42da0e119158",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2accaddd-b2c4-45ca-a905-c4a715cb7b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c68b268-0123-423b-8669-0493ebbc00fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cbd1d4-f3e0-48e5-a2d7-4964086b7389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bbc198-2505-4d16-909d-ef01269abcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24edc6dc-1dd4-4321-bae7-945354329067",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c7dcea-7f1e-49c5-86fb-d09ac371a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab7f150-c71b-44d5-a45b-de0510d94771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ba32cb-d006-4041-99eb-cb3bf56b841f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc58f46d-8c16-4ab7-82c0-67a85d03546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38146965-825a-4ab2-9bb0-35f0ebae3158",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7172528-ecd8-4cfa-a2c4-68af55081bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d3355c-a415-4e97-b61f-86d2a0e26215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756fd05d-9be8-4188-8559-0b951b8376bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292904a8-0eac-4ce6-8562-d0547d9aee5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2273922-355c-45a5-97fe-cfc2e4c44d7f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997902bf-4d5e-45b7-9bc1-2fc6360b6169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69118443-cf16-4414-9d8a-3904414cf737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6565d5-ad97-4ef6-b13a-2aebd158c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecf427f-1b22-4ab8-a00f-3e3ad1ab2f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f03286-7bf6-47e5-9f9a-cdd4627d6804",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9720744-a530-4263-9545-ced7db453f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30123ca-ed45-457d-9be4-1e2bbfcdc9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984eb439-5e95-4fbf-94c8-fee644011fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "decded93-88a8-4608-8403-008eaffbc8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da5e9ec-ede0-4144-9435-4b8b0d4ce2ab",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de0065e-d76e-4139-a8ce-7ba0ffe382cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cdd8e8-c999-4b89-862d-08db7cfdd551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deb0037-0a68-453d-aff3-f0ece5e537f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "470176bf-a0c6-4bb8-b907-f43a53d7ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74983b95-d069-481c-b066-8b3732184182",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfb3a30-9eeb-4ef8-b5a4-92a6eb9acb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fb40ec-340e-4c22-bded-639f91e91bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecfe03f-77f7-4201-8a84-9c459e5bb699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e157a5e-c9b3-48a7-8db1-e5c36598f224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e3128-6311-484c-b3c6-6594781c8590",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6a861-803b-48dc-ac8a-117d9e82e2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bf3f8c-34e7-42b5-b47c-14610f374fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d755f8a-16dc-4f31-bc55-e4d786a7082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a76161e-de24-4d95-b670-9c63079c4c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaf897e-72bd-47ad-a191-f294a8f5b8bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f62622-45d6-400d-a53a-64ce8be8912c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0269bd17-df42-4c7e-97cb-bd3602669f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b3cbba-62c1-4406-8aa3-db582fc99836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb64e5a4-4902-47f0-8f50-9a12da515cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb41be0a-8df6-40b9-a9cb-113d2d387e41",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da896502-1425-453b-ae9d-df8ca5de7812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9ab96f-8305-4bc0-a9b8-3037f753c174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c1b82-0b73-4122-8da5-822f0122d8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a48cd49-912e-425a-942e-dd6954e28701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27791833-0dcb-49a0-a2c4-06dd257c2cf4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28f9889-cc3f-4ff2-9ca6-5903ad2a60df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa243c84-a0ec-4770-a4a4-d11584f9347c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f20bc17-50ce-49fe-8324-1fe2088341dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1bbe37-4b77-46da-8863-116e03ccd413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a894b2a-8931-48d5-8c5a-9fde33c758f3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d202835d-2f60-4859-86d5-ac776c3a1e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f01c180-bce4-4084-a752-cb2188fb2bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d88ec8-3383-484a-bb7f-a9e98e27725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa76946-5984-4010-aaab-e0f07aff3f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f40b78d-a0eb-4048-9416-3cb4bbdf5d76",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9910d335-7c2b-48c3-8ad0-17c030210479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41b5973-6ded-430d-b03b-90a906fcb097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4fa663-dc91-470c-95c7-e90d74dd987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f348cd4f-5bb6-489c-89ee-a93c750c875e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "709e46a6-95b1-4ef8-9971-6a2d2192b3ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82b1b27b-846c-467b-81b2-685dfade2b22",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54fe97f-c518-44ec-8de1-5e1582f6adee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9705588d-7e98-4a46-8f98-9a4e72515ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a300cb51-ec9f-4537-843b-3f36a61253ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86706536-7672-4fcd-afd1-85ec9c90cce5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "173cb5ee-8296-4ef9-8e52-5180a9b0543d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eea9b19e-5037-492b-bb2a-045fa760face"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78604737-b25f-4813-abf9-defffb320b21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "815a43bc-61a9-4917-9a9b-e36afafd9455"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e7d425c-c082-484e-bd5d-755761ef4a75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dde1a157-3dd2-4fcf-a349-15040fd4d9b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05561dcf-e59d-42b2-bc9f-ea933248be34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb289193-78ca-4f0f-89fc-cc0d9c955155"
            }
          }
        ]
      },
      {
        "id": "25462f9a-7a1c-4683-a638-0ea3b4f68bfe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fcbc2406-3c03-44a6-adeb-4880d0ca1791",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86958196-f019-4b05-8e74-899182c5f64b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cef0fd91-686d-4736-8980-d92ffafaa320",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2e50a3-6a80-4fac-a215-844eabdd9010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af20871-cc00-4bf4-b25f-1a9cc28a4c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90aa395-2cc1-4849-9afe-1e7cfa118738",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd683caa-6a23-4b80-b33a-0cddd1efc1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e8262f-c570-4fd6-8bf4-7a90a8db3423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552a817-7857-46f7-9f39-99633e3a45b0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9210e663-14d8-43ad-9b30-f45b245abbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc37dd0-ee9b-4646-a14e-c6d783d33c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea017e45-05c7-4c4c-b320-9e21006b53f7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177f31d2-164e-4baf-9cc4-461fbdd6626b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49feb71-06ed-4b49-a7fa-335744b55392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8155acd0-df0e-48d8-837d-fdb33c21ab5b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de5e299-da89-4b6a-9103-4ad266b58e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45e951d-68de-4769-ac76-4bad31a57405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4492e375-5ceb-460d-a880-5939bfec4a51",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc385d97-745c-49d8-82ba-3cd463208452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bd7cf1-81b6-41f4-81fd-d03f14af0fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e253d-3ea0-4bdf-8703-6f4107375b1e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79567e6b-d70a-470e-b084-a029e3c65a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9080d6b-0efa-4888-8a02-c13e4839dc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f5e5c1-e3dc-4874-8ffa-0852c4a000be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2152c994-d0f6-4d07-bf87-87c8cc9aa13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7cd354-d824-46c2-b6e3-aefac1330032",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb92c1a5-e26f-45b2-9d6f-eb54b714b327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c20184-5a82-4000-b212-3c092b02d291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19286ef8-d92b-43f9-9833-e933358ac9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18c30b0-e318-4f76-860c-86d7389c5980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c49f43-b1ef-4d39-97d3-e406705eb07f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d355130c-d029-4d37-a83e-8edcc6136e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc226ca-20e3-4f95-a829-8b62773ebf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b2588c-26ca-488c-a570-d42926ec8d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4c624a-29b5-4425-b070-895d231054a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cbfc7b-047a-425e-bf12-2747a3ec9cfb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68edc483-7af5-4a82-8375-ca7d892e52dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a6c4a1-e347-4133-a99a-fed56679dbc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7882f2-0622-42a4-8322-ece07b5b4573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44db17b-40ed-4106-8c31-2b4357ef0e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d435e5e-ee26-4fa5-98f5-aad3d9225b00",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5e8fba-09ba-4884-a1c5-7c1df39e23f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bc4c3b-a0c2-48d2-9e3b-665d85d04478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b9a673-a393-44f4-aede-4560d0487d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfd1357-ab80-4542-8026-3b86567422df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b11eb1-aeac-4b54-a9f4-e5ab5c1f75f7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcac796-a685-48b4-b85b-e958bdb953f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2668781f-d0a3-400c-ab3a-af9528fc732f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49a2037-7472-4ba0-83e3-ca40487d2ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3907494-3af2-461b-8da7-3ec914d7fb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b090aae6-7e75-458a-8c91-673458c3061b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca50ec-09c6-4aa5-bfcc-4b7e1d5ef3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24163927-8ae2-4084-a295-c570146fb6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd706d72-bea2-4011-8fc6-d0aa8ca1c25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61f9f09-cabb-4cfb-9a84-32e64e7bc9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f20effe-1561-4be8-ad81-3e84a8e01738",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0633a244-361f-4e3e-b006-0b40af8a3acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009c388e-a7f9-4939-bc52-27524ada1a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44ece64-c182-45b7-9abd-7fc22a0e5f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafd9d01-1527-4bd8-b58a-87e6a98ae033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d5b58d-65eb-46a2-b695-694e9aa68301",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309851c5-1064-414c-8370-4827e0812660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3b17b4-f435-4498-9e1c-17f80e01a053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b63f38-8b60-4a4f-91ec-23e6f7323e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeec2ff-d351-47c5-9ce6-6eecbecf040d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410a9ae0-25f2-466a-9de2-894d2ab9b893",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365de689-cbad-4d5b-b14e-816842539489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f0349c-53bf-4888-872d-9743f6c0843d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16165ec-d5eb-4f86-9685-641547b025b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c8ea3e-700c-4d07-8e47-2b202f3424f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3b4d25-574c-4b48-ba94-d2b4bf95d20e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a4fe26-ed1c-4447-a04b-309c57b052c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2787eae-054c-4623-a809-2aa4b2bf5e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543ac66d-9d78-43c6-ba88-42d123310c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4679ea6d-f0a3-4828-afe7-fe0c9cc08750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357aa000-4a5d-4c13-8dd5-7664b4d0f223",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb29e1f0-598b-4c3f-bd8a-ac5d198e5cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54add95-1ea4-4c21-b29f-b9a777b6f601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f1e63e-2081-4beb-bcd2-ef41f88ea80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bff74c-319a-4a55-8bab-6d4d4b0c12ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de629277-b422-43b7-981d-9b19d8ba0230",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7e1244-07f4-46ec-b2c0-1b4cc76a5205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01883e4d-03ed-4a97-a607-e119bb27cde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408c8a2a-faa1-4b69-a047-a2b04a007878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb90eaa5-9682-431a-aea7-c3166f2faca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57d3040-bb73-4ee6-95d5-31d10a0b6a70",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68f3c21-9186-41e8-9ffc-48561257f600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff63de6-97e9-48a8-8be6-9771e37f7d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b8230c-2909-4af9-abb3-286273819441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f743b3-49aa-471c-b18b-f557cbe7e1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a52bee-c2e4-422b-b929-f4e1027b49af",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6250fe3a-e490-4ce2-8607-90005fc55458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8199c4b1-d6b3-4b42-a75c-4040ed1a122b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263557e2-3fb3-445e-a4ac-14184127ab6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b2a3a3-bb22-4810-93af-9ec34e5977dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b221864-0d45-49bb-b087-f6e41a43f51a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf7054b-2adf-4da9-8f20-4df5a1db9bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fcfe7d-e69a-46a4-b926-340bcefba302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83dd3cd-4f9f-4cbb-ad8f-8ba7563de9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3671fc8-8131-4a46-b0bc-954397076b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf1830b-5930-4294-8eff-a0c2135af111",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b87937b-963e-4264-bebe-33155c153a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdf4cac-4746-43c9-a78b-42aff2b33eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532afb28-a589-407f-a644-2087665ab99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e316d49d-c45e-487a-bbb4-e2238de11dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2eece8-48b6-4edb-94fd-71ac8ffe7f57",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bd5c6a-580e-4a50-8c30-6d560ca05af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8115945-e6fb-4a2d-be99-8667d74bb1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e059a43-f44c-464c-8ef1-0717ef6ebe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0257a5-5b59-4a83-8d79-46cfa8a87940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e67752-2ef0-4567-9de5-cfa4da9d4cb6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce890ff-89ef-4585-a271-d870717899ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd64cfb7-e337-497f-8075-dfcba296bc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6456a815-6797-42cd-9ded-160803645f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfde0ae-5996-4280-bd2f-f74d57d65d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba55862-67ed-45a6-a2ba-588f62a5e2bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc13dd0-7d48-453f-a136-82a36564da29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e3ca39-8ef7-4515-b41a-b3c7091ff251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b8d64-0275-47fb-8e9a-cb5276493a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de096593-783f-4a7e-8933-8f6a6e2cede8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8533df-e7ec-4ddf-98ee-e86a792a5b09",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c508b5a-b883-4bf5-81e3-9d70a41a1ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cafdadf-2e9b-4db9-8ea4-d046b296ff3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bb37fd-0a57-47ab-854e-c1070a5d6dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1dc2eb-533a-46cd-a489-dfa6b2ae767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dfd6c7-9eec-4320-9120-9e3b9f49185d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b6d3d6-4dcb-4fb6-b2b3-1cb0b3ea9364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8657a1fe-1e2b-487a-b7e4-7f09d62f8cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341f5a47-1d16-4135-a9bd-97815e44f1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e32080e-75c7-480b-9b0d-410f74db012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaf327f-209a-493b-9843-6ee658ddd9ca",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe62773-2272-426d-b702-805e80d41add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b0d303-487c-4d09-a8da-36fd478bbe40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c076949-4212-480a-b1ef-922e3d691e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29d8de4-bdf3-4bd3-ad34-673dbc5e3c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c70a4c-3930-4372-820a-daf8ebd36d3f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394dd420-8362-4aa6-9115-ad9c7448df37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277d0db7-875b-4491-b8fd-7375940df3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472608b4-fdc4-4119-8a54-3ee12c652a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912cd5a8-8068-4c20-9388-e02d5085202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9cab04-c981-480a-9f96-5352cd3c7827",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66585c57-e1a3-4157-85b3-11854024a7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e5cc4c-a148-45d2-8b90-a34bfc474b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f42eadc-69ca-45e5-8a81-e510d9bb243a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3da89d-af04-4ac8-9fd9-0230787a271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d11a8b-fe8e-451c-ae64-0d6071011d34",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa03eb2-44ed-4b5c-94b1-200c7df090e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cf2ae4-37ea-4f31-a768-0c26d91fd037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6b1778-58f7-4c70-b616-8ca1cf14f812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6fd136-63bb-4171-baba-d2823bfbf718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbe36eb-742d-44b4-83af-923f48025911",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90125997-f00e-40d8-98dc-0fbf9bab3d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463233c9-37e0-4565-bc2d-28851cd99b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff59ebd-9893-4e24-9567-b16929be2668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62570e54-f98d-4ec9-8886-ae02c1401852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae996e8-cbdc-48a4-8c27-3fc34dabc4ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c7fa07-ef82-402f-a5be-52f0acc87a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223c694b-41a1-4d44-b0db-006043a6e737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e52b4b-d30b-4ab0-bf1e-c92a3dba4125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0158f897-3963-43b8-9d9c-68c489a4036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02569bc-9bbb-491e-b720-bcd74ade39d7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869a90dd-1b22-4a5c-af49-c9c640085eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79604830-1430-446e-b923-8d0b519bfd5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8961057-9ad2-4a0f-9baa-b052c0c3a653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63dbcad-3f0f-4451-b318-3437a7aee034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e35ca6-5a57-4540-8c6f-d79407710d62",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19bce84-6af0-44ef-8595-23888d1c39bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcee93d-daae-41b6-aa8a-aad24b585aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060e7045-833d-4f39-9015-11789dfbb6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd074db-2c58-4300-a859-90a5dbe18006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91710edc-7579-46df-9fee-5d8c31fd12c4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6251d8-cb21-49f6-ab8e-c8b632e9ab58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c4ad9b-7b03-47b4-b253-8ee0fd804c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c9a298-c3e6-4bbd-b726-76ec33925136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6651aa3-e5a3-4375-a704-30ea760fe87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e25608a-57d0-45aa-b3b6-5ac439015a55",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7438e774-e1cd-4fb0-8784-86089e084e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b39b679-4505-4907-ae78-693f703befd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b732ba7-12ad-4775-9ff9-a0830b93a5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b5f9b1-d8cc-4596-9781-44596e8a0e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b33ade-f00d-4f9b-bb8c-54d679ce1fd4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38acdcb1-90ce-4c2c-ad01-673daaf2d309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c097be-faf2-4d42-b856-a62562686986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b983bc08-3cf6-4657-8148-208c91eb3866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a33d64-84bc-411d-b2a3-72dd080c6baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b75255b-00a9-425a-a1e1-302e03ecb41d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471a3fdd-eeba-45ff-b064-faa081ac80b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30c09be-21cf-479c-9582-73e3bc480b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188ed443-aa85-463d-af67-a202ef591bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c327e17e-7e84-4b9d-85b8-2d4c6b8e3874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e1c9bc-3551-4006-a4a4-35157093b254",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65d3d49-08d7-40e2-ac2e-044523cfb05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d78b5c-8385-43dc-8846-6ce8dc95768f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7237f010-e865-4952-bf77-23bcf6306548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa79574-b8f5-4682-b09a-abb488eef560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf672aa-5229-4f4e-b8eb-aa425b5a6fb8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da53bb6-8c7e-41e0-8d98-04c71475e8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939533ea-b2c1-44ba-8e82-78998ef01e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ad996c-f7e4-4a4d-aaf1-bdf6c6d9ef80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9f56da-5353-4d91-aacf-495df5e0e93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be086b45-b347-4c5d-8d0d-3e1d0853ab84",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7310c69f-50b5-4a84-bfbe-13184c364e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81aa190a-5140-4770-816e-befcb6db2bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8908f5cb-228b-4a5c-9372-f66a38d718f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7129ad-74a9-46ce-8cb4-1fb6b5bbe4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0565e287-5213-4fd2-a668-5b55d89f72e4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42cf9ee-922c-4627-8340-0ac9689ee21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1e7e5b-9860-40b7-86a7-686bcd7411e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f7583e-6b74-444b-bd73-861d2c60285d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839ee24d-74db-43d7-92fb-0b5b1da56db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0df8e1-72b6-49d2-872c-b2657eda1b44",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d465c6f0-6555-4b12-92d8-b099b738868e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2f56b9-7de7-4862-967a-5f311b7f714d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785b431b-6188-4f87-8108-f2ba454044a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1882d1-0f46-4016-adf3-14d888cb23f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d25da61-8f21-44d8-af6b-c95629edf7e3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8230a9-30d3-4b8b-80bd-523956789c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b839e06-d3bf-49a5-98d2-8942fa33ebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4cd27f-98b1-43b1-b891-a253b4d5be4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6430cef9-ac56-478f-9e7e-efa6b088cccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbfca66-7645-49e1-960c-50a0c6151bc6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379cf88a-8090-4474-8d67-4e59dd498bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf0f8ed-40af-44d7-b98a-30416065a207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e4ebb7-9657-4c65-be67-fce5424d1b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7638a54-3638-42c7-8efb-2a0684b82471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b599af-3fd5-4a4c-bbac-df738e095398",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f711df-6f96-4ec5-8c64-f6f74619db62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39051959-9702-4e27-818d-49dd2599ca80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad67b29-9126-467a-9cd7-3e63137d51bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923a255d-a090-46d2-bd98-b13a27aeca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b10468-3151-48bb-b7f9-56bda01efee9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61646cf9-a957-4722-a3cc-3e8248fe0a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869752a8-5074-491f-93ca-67e0c61b8ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf542d3-7816-4c97-8b86-bb4ca9b00d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27febae7-abb5-4ad6-a689-44f46a34fec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5140ed30-95d5-4426-aef8-967238fcaf26",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e02ef5-8ce2-461a-ab3d-f6dc1bcfe5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32708b5a-9579-46a9-847a-91fb80f3aa63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f10d5d-4e0a-4580-a3ef-fc40fc887995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4148ec8c-c667-4d26-80cf-1bdfd29e8a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5fb39-f65b-4b04-8c20-a776a5890bba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13e7f4d-195b-477c-aa74-d7783263380f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0379d936-d802-40d7-ae28-8758ba0b07cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190e466d-8833-446d-a3af-fb476007c579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9f92a8-64a4-4821-bc3b-de314b26a406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b54ac4-fe8f-416e-b56b-ab3d11848981",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470ba921-f0a5-49bc-b0ba-83c050fffa46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0151b9-efc2-4462-8b7d-61c526912d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694265a4-0340-4d50-86ea-f3d63e5475bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49c4d88-bf01-4def-8a76-caae29846214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e2d27a-992e-45d3-ac4b-daa7aac9d83e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb346521-e10d-4022-af59-45cbba4be63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973e6488-02db-4af5-ad1a-39928fda27d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f6f4c8-1e12-432f-8b41-0c361c3c82fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26722b2a-c34a-4265-b1ce-0ed102205eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e94faa-1f9e-49b0-a6b3-63b0fd26cfc1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e47766f-3661-4484-8b07-19c6ba5523f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c573b3d2-8fa4-4d34-84d8-02eb8a3eeb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28772516-8178-480f-87d2-8f2c2316a7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b9c780-4306-4e71-8c42-132e87811f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca203be-b519-4357-9c04-a98b9b7bf9f8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716ea670-55e6-4e4d-8c6e-386ec4996a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6061a5-179c-46d8-b8bc-b837bc47c2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960339b5-ac28-4da8-ad69-d32632e33ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b80bb30-02bf-4f1a-a5db-b51f0fce03db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfff5a8-4dad-45a0-936d-bc6165364f6a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52f93fb-e64c-4357-acaf-ba3af18bef1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ce6abb-a20e-457e-8c99-f993a8c768c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42777328-cd05-44d0-87ce-78471918d68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08cdf21-c828-47e6-b3da-8dc4bed790dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b33f0b-d6cd-4532-a6b1-d194984c8790",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cdf075-7801-4c11-85d9-c802e67063be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d4e649-4576-4680-b8bf-8d2e6fa4ead1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c320e77-67e9-4d44-ba53-f5d3398675d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4746c1-4471-48d6-88ba-ce74da20d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699d4dc5-11b1-4611-888f-81f99699d776",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea41ab7-40ab-47da-bbfe-94af9a46bddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616a33ce-dcfa-4ab3-a5f2-6a74aa69a6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bedde9-f700-4bd0-aacb-f9daf3a54d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b06071-b49b-4bf4-a27d-e6cc5e21e42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f0a84a-2071-42d7-8032-9dd6a46d6eed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc82d4eb-74e8-46c6-a0bc-6eeedf6e153f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b214e7-1ccf-4a84-9fa5-778263618e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6e3ef2-50e1-491f-9676-0c16b1a2ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa632a9-da67-4c33-8f65-066fb492a0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a385275-d3e1-4abe-a4c4-eac08263cb57",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2675f231-048f-46fd-8725-77349fbea797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760cd5e7-9a9c-478c-8607-aa3e1163a7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdd5d9-f935-4648-9732-95b6b085fae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13112432-6dda-445c-b597-746cfdbb1df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a4e3c9-457d-4ad5-b619-49a611d88745",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5f8e60-972f-4a54-883c-a29900d17e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac75e7b-4b3e-41dd-a030-c9eb4ae7eab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d559747-2084-49f7-a29e-a7931804886f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0083ab-b557-411d-9c80-8142b0476c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d64ea27-ab5b-4b48-afd6-178503560f7c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0e2c4-8e12-4bc2-ba06-4a07e7263dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1af88b6-1f25-470e-bf52-c379dbd7823d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482cc05d-a72d-4e6a-9e5a-d4d725300dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c23a10-b17b-48d3-948a-77d289857bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f10fa37-0bc3-49b4-92e4-9595a009e8a7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc3b9b6-17e0-4bae-b447-cde5617b6447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7179d079-a03a-4756-88a1-f847c9fe0fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0e4a4b-fd93-4a1d-b9f8-03b566a9538b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4021f14d-7feb-41e1-8c66-9071d93965e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848ea465-7f9c-4c84-8f51-e735360150fa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801c7ad2-c548-416c-9c49-7169fba9decb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd6981c-9b42-4876-9fcb-894b17945a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28383ca-6be9-4b20-946d-465f8afd0e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f241cf7b-ae42-48ce-b654-24275c4df61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a2a292-ab1e-4788-bb74-ad919240daf3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be0518-8057-4c8b-97f1-900107a936e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e576ac4-451d-48f8-9ba9-683c9c228572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50999e4-18f1-47fc-a41d-a6608169a683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da62877d-da4f-4fbf-b58c-3f8232b9af9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04c5098-cc33-4916-b5ef-31a3cda91510",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e739279f-3e4c-48b9-b1b3-792f3efe499c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6654a27-ec1e-4dea-830e-ecbadcd4194a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eecca00-553b-4659-9af4-a663cebd9544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b81acf-3300-44a4-8540-7a4f9c5d53fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d79c22-3e6d-4fa0-843e-a0726cc6e704",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfd30fd-61e6-4e6d-9255-62f92fe1f283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ba14c5-75a1-432e-ae68-804da7f9f599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d416e9c2-70d5-48dc-9732-23e64290308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9bdece-a788-4127-a937-367a4f5a413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c09bc1e-83e4-47ba-b709-c4a6fff7c947",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b0d6fc-09bb-4834-be65-c55d1bc274d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5aeb66-f00e-4ed8-837d-75570b7eb1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b33eae-3a0d-44c1-9e81-b3cf10db49c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850854d8-c22a-474d-9a01-8b9f430a2fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e5bd74-9a08-4816-ad59-1dd7b53ba068",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c7596d-1df6-4f0e-8efb-02df03a5366e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae57097-1bdc-4192-af50-ecb5e02d925a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f614825d-2d93-4708-a5e2-bf2f517952e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796fe45f-0174-40d4-8ed7-63bd19a8e322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59b3916-475e-4a8b-b3ae-c1faf23ecd37",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa48ad2-8fa4-45c5-999e-751f0f88907f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f20308-e5d6-41a5-8a4a-6e10f13d48f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8054ad-060a-4290-a83e-26ebdb8018b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe9a07e-4155-4c8f-834f-f9aafa6d52f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a313d00b-997c-438e-b0b3-11beaa0a89e3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b759d3-ad51-4970-9dfa-a6de4cac1f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea20b2d-d1ac-460c-8dca-504b64bd6ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f7865-46fb-4c0b-a9a4-e110e6a6e354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0eb4a3-d445-42ad-b670-3cc42a2bb27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412db192-3e79-4d78-8973-9d8b8f2c4ac9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc971a9-60ae-44b0-a5a2-155fb3d318c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102cc860-81f5-4e8a-b3af-c4bef217ace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd23feac-d9ef-4b7b-bc23-233a22575732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea96fe0-e840-48e5-9a19-4b09a35bfd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77030da-108b-420d-b441-9bcf09de99a6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c93fddf-57b1-44a5-9242-4bca3afcbe27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3255385a-3274-4e39-a6ef-198d58230ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ef5fbf-2610-4c30-b99d-553e6887b861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f94623-aaf4-4edc-b79d-b14fcb212e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c9b386-0bf6-4c36-a3ae-80540c76d64d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e411ca-4fa0-48e3-b91a-dad2d647e8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b310773-f031-4130-9817-7d87b79bfddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f573b56-a1ca-4fd7-b97e-f71b25b3d008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4bd982-3d86-4c91-879d-504fbd4eceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca063e91-45a7-4e87-95cd-569bd7bd6cb3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75a24d-90ed-49f0-95ee-49b6ba377933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e46ef4b-4bb3-47fe-b134-6c649befc485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb14f322-6905-4bbf-bc37-a92d4dbcbd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ea505d-5ce3-4b83-b28c-cbe40dc3da18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcac6401-e8d1-49f3-8a02-9e1e4ca3cdbe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a9a71b-a6f2-4de5-a890-66a87a83b6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8675395-1796-42ce-bcbc-3d2e4c750d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b028f6-5152-4b2d-813a-f2b03cdc1247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbe0b25-473a-4556-bfe7-2a4f8719f1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd2c0b9-e369-4c81-a963-a9e7624b96e3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0195fb4d-8ebd-4c58-aa28-0e281d98f133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cdc58a6-a70d-4551-98d4-87f59a4aeefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db9617b-3047-4b7a-a6cd-94fe87d31d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca59393a-6d59-4b1b-8cfd-baf04d77500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950af3da-c76d-4ee5-b2d3-426b2d82b65c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090e89d0-de1c-40e5-98e9-38177b92e870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f75f519-4801-47f8-b9ad-9756ebe1af0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e98a96-1cd8-4edb-9127-f734b103b039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6204250d-1515-4a6d-b51d-dca5d15bf909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1c85f7-5f2d-4dfd-8c8f-2929e686fe85",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eef3d6-80f7-4fb0-ba43-a402d66932ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c0f096-9afa-4012-9b13-9fed67f73e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b97a51-f1f6-4eed-9b61-374c53454f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb20efe2-2a68-4b38-ac90-369aa6877512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7009dab6-582d-4e78-84ab-df568a525945",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2291bffe-b4ca-4ab7-9e9f-909a3480743e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf864ee-249d-498c-ae17-4d6e89ddce12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fddda66-9450-44b3-ac01-1d76d37e7d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0379a5c-1e33-4817-9cb1-a456f0c2f412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d98e10-b6c9-4432-a4fc-4ddb364853ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bb7684-0abb-459a-aaa3-0aed11f43680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47604a37-be98-4693-8d43-8bbc9fed674c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb34275f-b9e7-476f-84e5-8e556477374b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d6f13a-9951-49d8-86e2-cf58ef21afab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663e43c8-3b18-4ba3-ac38-088815b5930d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2086a8-b7d1-4d4f-ae69-cb87c9027637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c68dca04-93d3-4447-964c-01d96f1acc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66908339-d649-4315-acde-90980e322995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46811ab7-b9ef-437d-9f85-b68bfe085983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c08089-1d26-4357-ab81-d95bccc375f3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ea6cf-7a4e-4e0b-8513-1eaa3c14cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48085d56-ddce-48b9-9fab-abc256e88977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84af689d-8c9e-4158-8948-7a51e8b7017e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106cdf59-15ad-4768-a791-d247f0693fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe5c088-7084-417e-8bb4-df343967758f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89483bb-e61a-4650-b8cd-48f3b55c7872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca82aca6-d102-4d7a-b6da-a8f9d851ba1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768d8fbb-31b7-4ff9-a5c6-33cbf898b530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637d6dcd-0ea8-4070-ac0b-428c71ad93b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35603ce6-7e7d-4378-8fed-349f5945c293",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057eb820-2d6f-43ed-b506-13259fb62046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677d6cfe-6bd9-4816-8106-da5699709fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5503b3cd-81d6-4a74-83f3-66808d073ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313b2d19-9abd-4644-902c-9ab725151e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cdf3b9-5058-4ef7-b002-c2ec946c38c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d7073e-8aa5-4f5f-bc01-79af42b63387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f851eba7-1946-47ec-ae45-62fff173581c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a10e2e-1e0c-4a30-a688-405a47034455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd4cb10-9fa5-4bfa-986e-da20ac20743b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c47bbd9-b99c-40a9-b7e6-be2b710a36a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37363f4-8598-4711-b6cc-c434b9d2505e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c469d729-419e-48ef-8c5e-0da4da439b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bb8770-7b7e-48b6-a6fd-46d013e98053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7b4790-5458-4df6-b241-ca105b363b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a6e1b7-b8e2-418f-b727-72a32ecfeef6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a460fc-df79-4f73-bf6b-8f108330beb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e2b39a-9686-4d7f-9369-c3978ddaa98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6915b4f-5925-4432-9932-aeb7ff6de8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4433b07-cf6c-4078-84c2-aaa3b1508e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef948552-76d8-4ee5-a99f-4921bfc24a2a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1a988b-19ea-47b6-b052-78f175abbe07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c533b6-300b-4463-82e5-dbfbcd90fe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78139ee-7470-4a30-b42c-2442231d7637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee4a43a-d12d-4c33-8413-45f7e848edca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5fd23c-271f-45bf-bc8b-f93c7faea1c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a506059a-8e4c-49a5-95d0-915097f7bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c5c10db-fa70-4378-83ff-42f09b82f6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425b86ea-a0bf-4441-973f-aa55e5c4965d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf69f95-17c9-40d1-a40a-ab022c9f1a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4da9c67-baa0-429e-b894-c73f205ba673",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90047118-ee52-4486-b6ac-faab9c1c734c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd122de-926c-4cfd-904d-eb6eb61f75ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba346f38-77d5-4db8-a189-cbac2ebec48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dae0852-0cbb-4b6c-b85a-91d3979ccdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8493371-0633-4fe6-a828-76c79d53f210",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb8ac6-d8b2-4600-ac26-b641108a8cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda64cef-a273-438a-826b-632c0e576f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c00c4f-4574-4168-945f-d2932eab29cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d29da3-2f1a-4452-b16d-3203ea04d37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0505c550-1df4-4f4a-bc0f-1e8758284133",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c680e3bc-21bb-4a0c-91b2-cddb54d9454c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f75f42e-fc20-4295-a3e4-3ce85cc7faff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c60378-4047-4b6f-a1a6-6e5307088ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a001b3e-af4b-43ff-baa2-c4d35ac48a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e129cd4-cd04-436f-b75f-6065cde736e0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94603c76-b135-471e-8797-f8fbedec2313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d5b76d-6c8d-45b1-8daa-94804dc9d04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561c8454-673c-4564-9f91-a94cf8005cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cd4d92-0bef-4cf9-bac7-6ecce91de2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149db423-ca62-45a0-84ee-a6606d1d9c9b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0b6f65-1dbb-481b-a428-0225ecbba7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9cb7a6-50a7-47ce-8f22-c0969ee1a742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a24709-e013-4a80-b6a5-ce69238931ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c83ea6-c505-4d3e-afab-7d787e10ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d53e6b6-1873-4c0a-966e-63aa549af2c2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae7d32e-ad2c-42d1-ac5b-a1ee6f80d83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d24c14d-caaa-45a6-bdd7-feca3c2a3e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c3f9c9-5b38-406c-b8b8-1061da9141ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa0346b-be7e-4d5e-a5ea-62d486eddc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa90177-1aa8-4456-be31-df8a923407b1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1700cedf-ab3e-4228-a294-cbd0c002e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98df278b-a978-49d6-8ffe-91f9335f9296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb5a0d2-9e23-4b59-b26a-846c0ad621c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49565c9-ddac-4f8d-b489-97d962130ccf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0efe75da-6023-4aae-a972-9a9a20fb3104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0167709a-38c5-499d-a68a-bf525aeef9cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d02618-eb24-4de2-8357-d813a9084abd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "670174c5-6fae-4732-887a-209fa4f7aeb3"
                    }
                  }
                ]
              },
              {
                "id": "6398c95e-555f-4f24-967c-ad6c088ab89e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92444812-b3db-47fd-8a2e-18f794a32b79",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71a24ba-57e3-43dd-b28d-dc2ce2f4dc75",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fbf26b61-16a4-4c41-8380-6180eb2aa347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b3bac1-a2fa-45ac-b4a7-374ed275b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9970396e-2ee0-4790-aea8-ae0cad7f3ea9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5403fe5d-f3ae-49e5-a552-73e97efafc83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95f7ac6e-7663-4f2d-8f3f-59889b4ef15e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc6e7b25-6490-4d38-ab2c-af96463117d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f66039e9-03e8-432d-8fab-15a18e785998"
                    }
                  }
                ]
              },
              {
                "id": "8d6a734f-c885-4a68-aa2c-a6e447542a8e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "45f04ead-eb06-44d0-8493-45243bec302d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b76afcf-c0a7-44c4-a869-5cff14ea3163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fd571a96-7373-4105-85bd-97f13cf4faeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1837203a-f00d-4d09-92b3-ddd7f4133e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d9672d-725e-48c2-a819-44d0ee645ba3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c648a056-fa0e-47b8-bc8a-f74f4021ec55",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06d5b65c-e0da-4eae-b00a-3410059433d3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0a8bea9-a2ec-4959-98cf-6ac7a21e4c6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f1d9d1e-c314-4cb2-a44f-e31f0b9012ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c311805-b8f1-4801-824a-2da2aaa28ecd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe30a7fa-f662-44a4-9259-b8d5313c95b9"
                    }
                  }
                ]
              },
              {
                "id": "3e40ddbb-ebe0-4cad-9ce5-c7f0271b4335",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35caaddb-6273-445a-a2df-d66837e9af29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfffe9b4-170d-4ea8-849e-a1a235b53410"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05b78751-9fb0-42db-ab25-28120ef064fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "541014a2-a586-4559-a3e7-15a001448c79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1e790e7-5713-478c-a96a-ad327f3a6880",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9a19de20-5fdc-4c4d-b091-2d082a559718"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "390c388c-cd29-4a52-9f00-1f5e06e7612d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4fca5bc-096f-416e-8e08-7238651463b5"
            }
          }
        ]
      },
      {
        "id": "d0c052db-1904-4886-8559-1e53a2a9154a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c57c1490-0eb0-4ad0-87d6-34c72a1d3c9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d55a8c96-0579-4279-99a5-5988f077c327",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5233ca98-b52e-4323-869b-68cac576750e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd3d44b-3fd1-41d7-95e0-30ebbe9c60ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cd1fc7c6-0f5b-4c7f-9ef7-c046945dea26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db910948-9357-432c-a1c6-b8b2e91d254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbbfbc0a-8109-4e4e-9228-285e5f1c1ee0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ceb8ca1c-63a7-435d-8fce-82a57f2bdd03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ffe6a4a-6978-45b9-9373-45c3be3322c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72f02cfa-c8c1-4803-8f8c-67286b0b7650",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10dffbd5-96b0-47cc-b883-590c4d51d813"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e47e143-77c2-411f-87c8-7f654416dd22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "78d0e3d7-6dfc-4dc4-959f-f6c106380bac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48be2875-ff69-4f69-aa3b-1b24dd9b4c1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e0f61a5-77f0-4550-b02f-ba6a6c87387f"
            }
          }
        ]
      },
      {
        "id": "9f21e2c0-0caf-4c17-82ef-de64df9c450c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b6e8b4b2-9f52-4c2b-84bd-89944e79c662",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8914e37b-0274-4341-90fd-9499f3960527",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f47d4a2-0b38-4ecc-99ad-361fa1d0bd49",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c6ec43-22e2-4b19-879e-7512b68278f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f46f2e83-ba87-455e-8e66-d702e7829860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8494b9-6252-4198-83b7-565247ddc634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1c7da06-1e87-4276-aa23-e2c409539294"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03421275-d825-41d4-bc62-c9dd83a76be3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e343aa77-d6b9-4484-9cd9-628f2463b482"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6230c1-b1b9-43be-baca-77a241b9d153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "365b637d-fefb-4832-a6e8-178fde81aabb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a308402-7e23-4b39-adca-bd9606fc8d51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b61c3d1-b86e-4304-8359-8257c2a9335e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37772011-df24-4b81-8f8f-65c16b84fc75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05f39690-bbb0-4085-a4a9-a573071076f5"
            }
          }
        ]
      },
      {
        "id": "fba28258-4211-4521-a761-2bc435a266c3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "91050b09-167d-49b3-8ff6-09f81ea069ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5426bc97-193f-4c3c-96cf-c012f1cec400",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eee7b957-6bfb-4ad8-9092-b7ded90098f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d19a28f-87c0-4f90-bfd4-c5237d87234e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "023dee24-557d-4f66-ba89-c6354b55cc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38da4cb-e73e-41ad-963a-17ecec156f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d34d656-26bc-452b-b04e-d1914a6b08d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5904b9ca-8177-41c8-8353-50415057d0dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7141ccc7-044e-46f7-be10-2d56a7b8ce6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9fdb7db-756b-444e-a7c6-ec5454eb7f10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61ab7d30-6376-488d-977e-2e2985525110"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f6693ee-3b29-47a0-9c0b-f0a168980a0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2768b660-053c-4895-b128-3f42c45dea56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dd78ab8-d9e0-4b9c-a59f-b87def72ff26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa3d8a29-7cba-41dd-80be-5ef18f2dce61"
            }
          }
        ]
      },
      {
        "id": "2610ae26-fc0e-44a3-a3aa-715b3f65744b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "501cdf54-0072-4dc2-9f7d-6607602743ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdadfef5-f037-4dd9-ba6e-d8010e1ed37a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "04c23171-3aad-4bff-9eba-e6c75018e128",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dacfdb8f-f8d1-4158-9d2a-afe1ad3b974c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27d94ef7-44cb-4fd8-9a09-adf5292d567c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 82.83859649122799,
      "responseMin": 9,
      "responseMax": 4028,
      "responseSd": 342.0752178259364,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703464573100,
      "completed": 1703464605888
    },
    "executions": [
      {
        "id": "6da17cf0-56c7-4bf1-b225-13783391ee91",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb3bdcd3-8f9e-4b9f-8821-312b139aaa6a",
          "httpRequestId": "8acea1ca-7177-4da8-8024-1994c7ba908f"
        },
        "item": {
          "id": "6da17cf0-56c7-4bf1-b225-13783391ee91",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "07d8c916-966b-4e76-8448-507b6c1362a4",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "d27e5a39-e6d3-4ba6-9bf7-092bf13900b5",
        "cursor": {
          "ref": "212a5da4-8dd3-48de-9d51-dcb3247fc499",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e294eba4-83bd-4997-b73e-a59115641c5d"
        },
        "item": {
          "id": "d27e5a39-e6d3-4ba6-9bf7-092bf13900b5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36b101ff-148f-4d8c-9653-534bce46e2e9",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "7afdcae2-6e34-437e-a853-1244b338006c",
        "cursor": {
          "ref": "35ca449d-dc86-413a-ad8d-6d25ce09fc02",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5cdf24f0-32fe-4654-9d67-9751f34f921d"
        },
        "item": {
          "id": "7afdcae2-6e34-437e-a853-1244b338006c",
          "name": "did_json"
        },
        "response": {
          "id": "c08f9004-9314-43a1-9689-3856d897096a",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4432545-994c-4480-98e4-3330ac199d6e",
        "cursor": {
          "ref": "e137499f-501e-4cb4-aa12-5a461a2072b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7337bf66-658b-4b1f-9995-ebb0bc236ca2"
        },
        "item": {
          "id": "e4432545-994c-4480-98e4-3330ac199d6e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e545e172-e9b8-4ac8-bb03-476d86ee0f73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 613,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4432545-994c-4480-98e4-3330ac199d6e",
        "cursor": {
          "ref": "e137499f-501e-4cb4-aa12-5a461a2072b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7337bf66-658b-4b1f-9995-ebb0bc236ca2"
        },
        "item": {
          "id": "e4432545-994c-4480-98e4-3330ac199d6e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e545e172-e9b8-4ac8-bb03-476d86ee0f73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 613,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfcf539-7242-4f60-b25e-fb92dd88e4f3",
        "cursor": {
          "ref": "4ba285ae-90d9-4e74-81dd-e15ad067a984",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ae89d797-9dba-4a2a-83b5-3dde938f352a"
        },
        "item": {
          "id": "dcfcf539-7242-4f60-b25e-fb92dd88e4f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5840d9c0-6dcc-41e8-b9cd-f0e5f54efebd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b479c6-c391-41eb-9517-9c1417d8b42e",
        "cursor": {
          "ref": "1e78d5a3-113d-416c-b749-ece62b7ad6f1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61140345-4cee-47d5-8912-f7700fca1af6"
        },
        "item": {
          "id": "05b479c6-c391-41eb-9517-9c1417d8b42e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "20efabb6-015c-4b5e-882e-c39e8c008a43",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def301c1-aaf4-42cc-88db-846fc665b02b",
        "cursor": {
          "ref": "44e838a6-c596-477a-af40-728272b96535",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "131b3f69-3aec-4461-8a5f-120dec11b68d"
        },
        "item": {
          "id": "def301c1-aaf4-42cc-88db-846fc665b02b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "db571ce0-74e3-490f-b7ea-5d92a7d138f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4382b11c-433c-4d03-b5f5-27414edf9444",
        "cursor": {
          "ref": "923f00e4-14ba-457f-88d4-079bff9b559a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b49816e-d1cb-4ffe-b85e-6ce7609201d8"
        },
        "item": {
          "id": "4382b11c-433c-4d03-b5f5-27414edf9444",
          "name": "identifiers"
        },
        "response": {
          "id": "9e0d949a-f996-4fa0-a056-e9ae3ccbf36a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7808e64-9907-43f7-a53a-895016470908",
        "cursor": {
          "ref": "daf39e69-c1f5-46e0-8a71-48577443c754",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68687542-bd44-4f97-b0b4-608d06d98f27"
        },
        "item": {
          "id": "d7808e64-9907-43f7-a53a-895016470908",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4cbac840-04f4-4770-8509-8221d9f50736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a163b9-86f3-4ae4-be52-32e8f526be91",
        "cursor": {
          "ref": "0b32f34e-ba13-416a-87e3-20c7e1206ec5",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "76aa16ec-9fbb-47e7-b895-2bb9d5f9a01d"
        },
        "item": {
          "id": "13a163b9-86f3-4ae4-be52-32e8f526be91",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e17578cd-774b-4e94-92e2-8868548475df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ebf384-bb90-4cc7-b129-e833409f10f6",
        "cursor": {
          "ref": "8d2c929d-f474-4b7d-8f51-f205918b5191",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fed772c5-ea40-405f-b1e9-7f633e061009"
        },
        "item": {
          "id": "f0ebf384-bb90-4cc7-b129-e833409f10f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2a870019-47a5-4cde-8fed-2daca94b99e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0c3695-e2b1-418f-b220-699b603f1a15",
        "cursor": {
          "ref": "0948b559-d60c-4190-9082-608b0ecc128f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "80650cf1-47fb-4a73-b0e4-898e291bd3d9"
        },
        "item": {
          "id": "5e0c3695-e2b1-418f-b220-699b603f1a15",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0aae7a62-06fe-412b-8e83-f4f38686f5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7d77ee-9ec3-41e2-aa76-e3fd20e76533",
        "cursor": {
          "ref": "cf09d91c-0a5f-4ca7-9bbe-a1c0d2e288c4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0ddc1d87-9644-4ad1-aa00-66f46f06bf89"
        },
        "item": {
          "id": "dd7d77ee-9ec3-41e2-aa76-e3fd20e76533",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7799c076-a2d0-4294-9246-1afacfbad500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd319c-4f6a-49fd-9adb-4f31b61af2b7",
        "cursor": {
          "ref": "1b40ede3-c13f-4755-ae84-e22d5e8d768e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a4d2f64-5232-4952-907e-7663e0e24257"
        },
        "item": {
          "id": "7bcd319c-4f6a-49fd-9adb-4f31b61af2b7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "45c0e09c-3cc0-4ae9-90a2-cdecbb56e318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ab4419-8284-42b2-89e4-007d8b230c90",
        "cursor": {
          "ref": "d4882bc5-ffc4-4a3b-bf10-8722c6d199ee",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f01d8cf9-4a37-43fe-adb0-2291a8aaab29"
        },
        "item": {
          "id": "12ab4419-8284-42b2-89e4-007d8b230c90",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "185d4760-1b3b-4bd5-b815-d73cdc4a4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1f7d8a-6aec-4670-a3ed-2e73849f0182",
        "cursor": {
          "ref": "32b79e69-e687-4f02-9c3e-8034f89f1acb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b68cf2b9-c4b5-4a44-9963-57f9dd0599f9"
        },
        "item": {
          "id": "cc1f7d8a-6aec-4670-a3ed-2e73849f0182",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "443e828c-ecc6-4748-aefd-74bdd9bce941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfadf5d-8379-47e8-869c-e2b2a22efbcb",
        "cursor": {
          "ref": "8687dc89-d0d4-4d49-9d37-72af8ecaa9ca",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8df38c58-d0fb-4435-b663-42c97d4887d7"
        },
        "item": {
          "id": "1bfadf5d-8379-47e8-869c-e2b2a22efbcb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0b3bd1f0-a4b3-4002-a6b2-159eb23db4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e051a6a6-6e50-48ca-ae82-6c98f0b085ef",
        "cursor": {
          "ref": "3492671d-6c27-4185-bae6-15fa08ad8f74",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c8f8357-dd4a-4090-b0ad-8fd84fc821cc"
        },
        "item": {
          "id": "e051a6a6-6e50-48ca-ae82-6c98f0b085ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1ce62fe-ca28-49c3-b019-3c254cb1fca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ea6816-b997-400e-8aa8-adc95998c10b",
        "cursor": {
          "ref": "e28fdfa1-0521-4ad3-b13a-33364e0d1901",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8c962994-629b-4de1-90b2-3b1df3e75d67"
        },
        "item": {
          "id": "89ea6816-b997-400e-8aa8-adc95998c10b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a842bb55-7a79-4a54-99a1-e3bc2690d5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1dd3bd-2f2d-443e-b4e0-c98a93784c07",
        "cursor": {
          "ref": "d0584407-564a-4480-9fee-aac6796c9f08",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "71dee9e4-6515-42e5-899c-1f27623988e8"
        },
        "item": {
          "id": "0f1dd3bd-2f2d-443e-b4e0-c98a93784c07",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8b20a9a8-394e-46d9-b5a9-b2f9c745075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d78371-5b7f-4d05-9a1b-786ebcf7827a",
        "cursor": {
          "ref": "4c81ad16-8aa7-45a9-93f8-4ecd0179551e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "023ba795-21da-4d6a-8ad4-6e55fb0ab825"
        },
        "item": {
          "id": "e9d78371-5b7f-4d05-9a1b-786ebcf7827a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "20ba764d-488c-4279-8463-9675af2918a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4287c9fe-34ee-495a-a375-01ed0111c6f9",
        "cursor": {
          "ref": "80de1771-1770-4fc3-b593-91c2762599ab",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a56ab598-0fed-470c-a5c1-618589f990b6"
        },
        "item": {
          "id": "4287c9fe-34ee-495a-a375-01ed0111c6f9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "54b8c1a1-0978-46d5-a9ec-5a8f0cd32a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bc1214-a8d6-4053-9d25-46d8b101cf6a",
        "cursor": {
          "ref": "90fcb062-bad1-44e9-83e9-8d89e54e9a6a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ae7d18c7-ec78-4f32-b71b-21d33a55e265"
        },
        "item": {
          "id": "32bc1214-a8d6-4053-9d25-46d8b101cf6a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "875c5450-7e7e-42ed-b83f-1aad253badae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d4a0e8-b4fd-4f5c-956b-7d9e7c827d6f",
        "cursor": {
          "ref": "a6865a50-193f-4675-a2ba-25d123e65f6e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "29ebd9b6-8d49-45df-b717-882a5212284d"
        },
        "item": {
          "id": "f5d4a0e8-b4fd-4f5c-956b-7d9e7c827d6f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5ebac7cd-d212-49f3-ab2e-7e9d7e406441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cda7ebc-cd3b-4842-bdc8-e99531ed4d65",
        "cursor": {
          "ref": "c87081eb-8fdb-4858-b523-76a003216b03",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "073c33cc-8811-4606-9b9f-252303764de4"
        },
        "item": {
          "id": "4cda7ebc-cd3b-4842-bdc8-e99531ed4d65",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "948415fd-2b28-4c5b-b2ec-ab5a37c38afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4062c38a-6af1-4ee5-823a-a538bd8e308a",
        "cursor": {
          "ref": "553f9b65-49d9-4c8a-b194-10965d25ed5b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a2dcc00-3bac-4f57-ad65-1340d095639f"
        },
        "item": {
          "id": "4062c38a-6af1-4ee5-823a-a538bd8e308a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b33e27ec-6fb6-434c-bfb5-4e392e207f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe82b4-8bf7-43d0-b5b2-d91af610352a",
        "cursor": {
          "ref": "7c978e89-f57a-4bfb-935d-bfc278657348",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "987d5c6d-958f-4ef9-9689-7f20f50db909"
        },
        "item": {
          "id": "4dfe82b4-8bf7-43d0-b5b2-d91af610352a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b7f2ec67-040a-4f74-8d24-0b6b3f9667f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f802e57-e94b-4e2a-8b37-c23c29fcaa67",
        "cursor": {
          "ref": "ea619697-46cd-4ea5-996d-b7079a61fcd9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f8b4f86a-1745-4d5e-86b9-27a08580f6b5"
        },
        "item": {
          "id": "1f802e57-e94b-4e2a-8b37-c23c29fcaa67",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ed3b5061-58e2-4ded-91b7-4745fdb7de1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfceb9e2-1cc7-49c2-ac68-9072dd419879",
        "cursor": {
          "ref": "dca8395c-c0bc-4922-81f8-5759abbc1599",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aee815f5-3639-403c-b1c8-205b5168cd22"
        },
        "item": {
          "id": "bfceb9e2-1cc7-49c2-ac68-9072dd419879",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "899e3ac5-083d-423e-9a73-5d1145ba31c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10493fd2-4569-43ce-b926-96658edff458",
        "cursor": {
          "ref": "9731a490-258d-4510-bf12-f282492e7c78",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2af119fa-be14-42b9-a13b-8e68310c8ffc"
        },
        "item": {
          "id": "10493fd2-4569-43ce-b926-96658edff458",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a1b57247-6185-4c8e-9c52-70b05d26d4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b10cdeb-54aa-4f98-be72-30cad7da825c",
        "cursor": {
          "ref": "35e78bf5-228d-4085-ac55-c25431cccb83",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e8d69d1c-a8ec-438d-81b6-a4b96664bd41"
        },
        "item": {
          "id": "2b10cdeb-54aa-4f98-be72-30cad7da825c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fba97f3b-1f6d-4371-9299-b395b061721d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe3f90-a38e-49ad-99a2-45a62ba9d51f",
        "cursor": {
          "ref": "a39aafa8-62c4-4ee5-a359-645655b29b3c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "106c7593-6a43-4e8c-ac5d-d0a996de8178"
        },
        "item": {
          "id": "aafe3f90-a38e-49ad-99a2-45a62ba9d51f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "47139c0c-cac1-40ae-b825-5e92a7ea5d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bccedf-d7ee-4e58-82c4-9442f059cd0e",
        "cursor": {
          "ref": "e88c2ea7-7099-40cf-9f69-46d98c12e448",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c8efdbcc-6ea1-4e8e-a9f5-9573bf38a21a"
        },
        "item": {
          "id": "d7bccedf-d7ee-4e58-82c4-9442f059cd0e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "73750d15-a0a2-4a51-b81d-a0d6a879a609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf28340-e9f3-4212-90bd-ddc69ddca958",
        "cursor": {
          "ref": "a8ce29bf-6748-431b-8c82-f2b140636411",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b0d94be7-847c-41c7-a381-6356b280b84b"
        },
        "item": {
          "id": "fbf28340-e9f3-4212-90bd-ddc69ddca958",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "32ca7411-422c-43f3-9b9d-21a8e3fbbe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf7721a-3361-4c73-b4c1-cd91704c885a",
        "cursor": {
          "ref": "b7ea93a3-bfa4-416f-b032-6099e9c82ebe",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "300cf620-c739-4da3-b5ad-3f7f05e14f4b"
        },
        "item": {
          "id": "1bf7721a-3361-4c73-b4c1-cd91704c885a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5cdfd153-6f69-46c8-9094-8e3aa0d28995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4db6e9-4d48-4ac3-a8a0-811242cfd5ed",
        "cursor": {
          "ref": "873c3405-e9a1-4c13-8b93-f0f00eb46c2e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c2c2c5af-7467-4571-9891-7fa25e54b519"
        },
        "item": {
          "id": "9b4db6e9-4d48-4ac3-a8a0-811242cfd5ed",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "683cb42d-6c43-470e-91cd-a1543e3c070a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e9858a-2d49-40cc-b7c9-26ec1ccc57cf",
        "cursor": {
          "ref": "a12d999a-f4d5-41a6-a9b7-fe54039a8e65",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4b650b8e-9f4a-44ad-b85d-c1be2d941577"
        },
        "item": {
          "id": "f9e9858a-2d49-40cc-b7c9-26ec1ccc57cf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1535f281-e998-496e-a29f-8fb76fccbfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ea22cc-4447-43b6-80f7-9eb0ae92d3dd",
        "cursor": {
          "ref": "914ce1a2-4039-4e4a-85a8-8ab6c9d9241d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d6a035b4-8d31-4dea-8bc2-6d8a6d660f65"
        },
        "item": {
          "id": "74ea22cc-4447-43b6-80f7-9eb0ae92d3dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eddf7a4a-93ba-4ead-98d6-78289155e1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4603fe62-df1c-48f6-b213-f899bb959acf",
        "cursor": {
          "ref": "cd6e7e9c-0e87-459b-8f19-5268166c5e60",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0377a925-61a7-42d9-b510-bfccf73a9eb8"
        },
        "item": {
          "id": "4603fe62-df1c-48f6-b213-f899bb959acf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "67fa0987-d46b-44dd-a7ee-d14a9a5dc352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e232d9c1-695a-49a2-b97c-9a42d4e0061e",
        "cursor": {
          "ref": "5c0018a6-7f22-418d-ac9c-ed8a66e40532",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "346d8ad2-c596-4cde-b6b3-b429ad8657ec"
        },
        "item": {
          "id": "e232d9c1-695a-49a2-b97c-9a42d4e0061e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "07d38f3f-94ae-49c2-b3a0-fe034e903fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f2f30f-25f2-4c4c-ac55-bad4552cf359",
        "cursor": {
          "ref": "d86328a4-584b-486e-8825-14df09824f57",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d7d66ed3-1893-4402-8eff-4bb7d41f1405"
        },
        "item": {
          "id": "92f2f30f-25f2-4c4c-ac55-bad4552cf359",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9f0136ab-f115-4c8f-be4e-e3a08e4fc295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40c4886-f79f-4aa0-8ce4-62571d31370a",
        "cursor": {
          "ref": "100b4095-33bc-4903-b714-bdc5069c17fa",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b05d8f2d-b9b3-495b-8341-d62644f53d6b"
        },
        "item": {
          "id": "a40c4886-f79f-4aa0-8ce4-62571d31370a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f8a7afbe-1fd9-4f3f-aadb-4d5121ebae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ef9bf1-4ce3-4afb-98ad-cf5bde1d26b6",
        "cursor": {
          "ref": "b991ac6b-db9b-47c2-aefd-54c15956880a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b9e2bf69-86fb-40b6-b6ec-46e67b7084a3"
        },
        "item": {
          "id": "a2ef9bf1-4ce3-4afb-98ad-cf5bde1d26b6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7bdc2bc1-5ef2-49c7-bf85-647846db36b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad28ef79-d6d2-41dd-95a3-5898a65d424c",
        "cursor": {
          "ref": "2440402e-76e0-4248-844e-54b08b7a277b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4572201b-5415-4ef2-80be-8f8ee1e68b9a"
        },
        "item": {
          "id": "ad28ef79-d6d2-41dd-95a3-5898a65d424c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "93525a2c-29a4-45a1-a4de-3737c445e5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a772587-4ea9-47dc-b35a-f5400032aa39",
        "cursor": {
          "ref": "9ae6bd11-0275-407e-bbe0-6a4a33335f3d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8597c93c-2995-411d-9caf-f6439443d3df"
        },
        "item": {
          "id": "0a772587-4ea9-47dc-b35a-f5400032aa39",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "697835c5-a39e-4ba5-8773-a7139913b326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aea7587-d215-4557-a549-f94f0c01eb99",
        "cursor": {
          "ref": "c4670cb6-5adb-4709-9eef-d66e7f55f0d6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b6f7f2b0-19da-4cd0-98e1-c004fb60d3d0"
        },
        "item": {
          "id": "7aea7587-d215-4557-a549-f94f0c01eb99",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "604e5ac9-ec37-4b1a-8e2e-41516adfa3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef56db9-fdc1-43b5-805d-bb18b1f2d199",
        "cursor": {
          "ref": "c8f9061c-2a33-405f-ba6b-23d3f5343fd1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "198c36c6-3ec1-4079-a6b2-cda4821e32e9"
        },
        "item": {
          "id": "8ef56db9-fdc1-43b5-805d-bb18b1f2d199",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "52e7661b-5899-4f0d-975f-052292a0967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d8e3d6-20ca-4479-91ce-16d072b9ce5d",
        "cursor": {
          "ref": "6667e176-e9e4-4b0f-96e9-88fa0f23646b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a490510b-d5bf-4579-8021-e846b5c435f3"
        },
        "item": {
          "id": "83d8e3d6-20ca-4479-91ce-16d072b9ce5d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f59b4509-46a9-4fa2-ba7f-f689dcde54a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c77f5e-4052-466b-acdd-1786bb4f602e",
        "cursor": {
          "ref": "bdff9e8a-63de-4c23-bcf9-67eec1579902",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ba67946b-6b1e-4d31-be0f-15161540bc95"
        },
        "item": {
          "id": "85c77f5e-4052-466b-acdd-1786bb4f602e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a6c51770-8278-497f-a4d2-b071825e6195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9341b43d-5a99-45b9-be1c-5ab47a8232a6",
        "cursor": {
          "ref": "d61e63e8-4835-4398-ada8-5bd2d8c733d4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e45186cd-ef82-48e7-95c4-f010206ec60a"
        },
        "item": {
          "id": "9341b43d-5a99-45b9-be1c-5ab47a8232a6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eabf0e6f-2291-43bf-a402-c5913d8eda3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2173242c-0c00-42ba-ac10-6ccffa2058c1",
        "cursor": {
          "ref": "d0cc583d-fa90-4de9-9b96-e707d344ab15",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "119fe25a-e8e8-42b7-aeba-51f1ccbd771b"
        },
        "item": {
          "id": "2173242c-0c00-42ba-ac10-6ccffa2058c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "226249b6-bee3-4abf-a7b2-a022b34482ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5158abe-f1f8-4d58-8857-10c8e95d1f64",
        "cursor": {
          "ref": "9965ab2c-38a3-464e-8647-644082fe245e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2c0bd6bd-0ef2-45e9-94c2-dc5f712dbcdd"
        },
        "item": {
          "id": "f5158abe-f1f8-4d58-8857-10c8e95d1f64",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5864f142-86f0-4193-b82a-87334a5d7073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad769bd0-0ae5-464b-a43c-0dca9e579ade",
        "cursor": {
          "ref": "e4274b72-7e98-418b-81c1-3f69425e19f0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "650ec992-494b-42f8-b4f3-1a0ae22f1f4b"
        },
        "item": {
          "id": "ad769bd0-0ae5-464b-a43c-0dca9e579ade",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50737500-49e6-4b3b-bf7b-7d8999881cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47951e25-b5b5-486c-a171-f4e08e24ffe8",
        "cursor": {
          "ref": "2f1b3ce1-3e3d-4b2a-bd2b-2594ed7db15a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7fe43f2c-b37f-4cba-b7e7-01ca392f5f24"
        },
        "item": {
          "id": "47951e25-b5b5-486c-a171-f4e08e24ffe8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5de80e44-a63e-4be7-a61e-be24bf5b94ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44e4d7e-b353-45f2-b727-a1dab2848e53",
        "cursor": {
          "ref": "eb11331e-e58c-45af-8004-e9e8180126c3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2d36d104-4aac-45c0-9f00-a4cb99148247"
        },
        "item": {
          "id": "b44e4d7e-b353-45f2-b727-a1dab2848e53",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9561530c-13b4-424d-8998-89a943c82464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c04ca9-fa62-4cee-8aee-74ebc433e357",
        "cursor": {
          "ref": "754ddc53-6db0-4308-8e97-a5b7db06f928",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6693a263-1248-409a-932e-812132f843d5"
        },
        "item": {
          "id": "83c04ca9-fa62-4cee-8aee-74ebc433e357",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "319f70ef-eb3a-410e-b6c8-6f6ecc26c96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31eae3c4-2f75-4fdd-8a98-9eaf99ec3076",
        "cursor": {
          "ref": "c5c543d7-8127-44ce-a7e3-b3c453adbb61",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "88186644-8eef-49cc-9b76-c183024d4d26"
        },
        "item": {
          "id": "31eae3c4-2f75-4fdd-8a98-9eaf99ec3076",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0208b4d4-340e-48a2-95dd-dd6d43cfe9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79211cc0-9e31-48ff-8a38-5d91bef479d3",
        "cursor": {
          "ref": "7b966aa5-b905-4d9d-a3dd-111ef49a497c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "142acca2-5b15-45b5-84cb-7e2cea1270ca"
        },
        "item": {
          "id": "79211cc0-9e31-48ff-8a38-5d91bef479d3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f2cb043-b241-42da-9464-3d90939f57b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4518117f-6198-41e3-9bbf-4113b2153645",
        "cursor": {
          "ref": "37ca8e89-4848-4d1f-bbbc-eccf29815f0f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8acd0ac2-a346-4c3b-b0ab-5481e3c3c4fe"
        },
        "item": {
          "id": "4518117f-6198-41e3-9bbf-4113b2153645",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "03ec593d-3444-403b-88e9-2a1d7b06e793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c5b3b2-fbe3-4985-a1bd-cadb9aae5861",
        "cursor": {
          "ref": "ab000a56-d8ab-4174-a997-5229edaf906b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "530dba41-9a55-4e4b-991f-d830988fe589"
        },
        "item": {
          "id": "a6c5b3b2-fbe3-4985-a1bd-cadb9aae5861",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8c65d1b6-cbea-40d5-9cd0-74eed09cca34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc03d561-9d27-41b2-b1a5-139a6b0cb0cb",
        "cursor": {
          "ref": "05daba80-7600-462a-a841-f48482ccfb59",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9085c44e-2d54-480f-9e26-b4f91e020b9d"
        },
        "item": {
          "id": "dc03d561-9d27-41b2-b1a5-139a6b0cb0cb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bd7dadcf-9880-421e-985c-ea36b33e796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e5a253-a6da-41bd-8665-ed88df7912ad",
        "cursor": {
          "ref": "8d269d27-eb50-439d-91a8-eea4ab84c09a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1779171a-13df-4fc0-aac6-08950204611a"
        },
        "item": {
          "id": "66e5a253-a6da-41bd-8665-ed88df7912ad",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ce72d3d8-e76c-435c-8cc5-4e8a79f1a209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6787f3e-2beb-43d2-a72c-c84a3d7ab57f",
        "cursor": {
          "ref": "7b1c44e1-8826-443a-8c42-f16adec587c0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1bedc648-eecd-43f3-9eee-a395252d2199"
        },
        "item": {
          "id": "a6787f3e-2beb-43d2-a72c-c84a3d7ab57f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "088f6440-5647-4762-aa2d-9d75dba2d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a06a0a-6352-4337-9da1-435999d03e02",
        "cursor": {
          "ref": "c9c4329f-f939-4238-95b6-a75c593be2c2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "93285bc1-5980-4bf2-a4c0-4102d4e34ef2"
        },
        "item": {
          "id": "04a06a0a-6352-4337-9da1-435999d03e02",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e9c28ca5-8895-43f5-8d05-a6ccf032017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83238ae6-8cfd-472a-a37e-b9b37f9c3708",
        "cursor": {
          "ref": "bddf93ff-cfbf-4db7-8679-eef3b3727535",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "00e075ee-af45-470a-9c76-06f774d80da8"
        },
        "item": {
          "id": "83238ae6-8cfd-472a-a37e-b9b37f9c3708",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2bbe81f2-f505-4461-b1fb-42a9c921ea04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5a8ced-ae62-4f36-bc62-3a503ce30b92",
        "cursor": {
          "ref": "717dbca5-38c9-422a-aefb-fbdbc2e46675",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6ff18fa1-0c1b-490a-bde5-6b31ab4b8679"
        },
        "item": {
          "id": "9e5a8ced-ae62-4f36-bc62-3a503ce30b92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "00ed96e5-9be9-40e3-a800-3b7dffd81bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3f0389-b0c3-45a6-836a-f6ed510b8ccb",
        "cursor": {
          "ref": "dda28a69-74f2-42e3-a43f-bc395366a339",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b88f93db-a555-4334-b7c0-573b70fc754b"
        },
        "item": {
          "id": "df3f0389-b0c3-45a6-836a-f6ed510b8ccb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2918668a-1e5c-4023-8fc3-012fa2f5ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3c988f-a8e4-4216-aad2-196cee96009c",
        "cursor": {
          "ref": "ca53dba4-a996-41e3-8af9-5667ecc853cd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "06ba926f-107c-47fb-ac57-05fa920da448"
        },
        "item": {
          "id": "ad3c988f-a8e4-4216-aad2-196cee96009c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4ef09712-ae99-4c08-8a18-be26ec1017fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d10cd82-6eea-452c-92fe-635c109a9b4a",
        "cursor": {
          "ref": "7e6febef-6e5c-418e-b1a0-8d22a20f4471",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "22394ad3-0e9e-4607-a054-6cc1ec4e8123"
        },
        "item": {
          "id": "1d10cd82-6eea-452c-92fe-635c109a9b4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "659697e4-a2bd-4c7a-ad60-960f1ae48a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c867196e-520b-4589-a4c7-8c187871762c",
        "cursor": {
          "ref": "d2af53c2-fb17-4147-a361-d55d57db314a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "29dfd240-43db-4d3b-bc37-8f313bab1f60"
        },
        "item": {
          "id": "c867196e-520b-4589-a4c7-8c187871762c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15212005-daad-4071-943c-8c5113bffcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4547f6d8-b3c5-4939-9b56-0d58b93d3595",
        "cursor": {
          "ref": "fe02534a-be9f-4d9c-8aab-66e72bf44726",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2dc8ba3e-7e00-4bef-817f-d033cc854b1e"
        },
        "item": {
          "id": "4547f6d8-b3c5-4939-9b56-0d58b93d3595",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ffc49e49-7b45-433a-b07d-a340c415ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a444bd2-19a6-4c98-9d56-9d2a661347bf",
        "cursor": {
          "ref": "726f0bb7-e2fb-4f28-9a65-7eeaa4338fb7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6f381b94-f179-40dc-b7c6-00d18c1642b6"
        },
        "item": {
          "id": "3a444bd2-19a6-4c98-9d56-9d2a661347bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "70fc2e05-3515-43fa-bd0a-9c2eb748693f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f283a93-0cd6-48ec-a706-8e448ae14fd9",
        "cursor": {
          "ref": "8db216ba-19a4-428b-8a8f-1879c4d3e4a5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "814a12ab-f9f4-40e7-aea9-5ceee0a60b6b"
        },
        "item": {
          "id": "2f283a93-0cd6-48ec-a706-8e448ae14fd9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "22ecdabe-56f3-4197-97b6-9bd4c2802baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c93e8d-a607-477b-8ce7-57d00aed3eca",
        "cursor": {
          "ref": "64ffe2c0-412a-47e4-8953-94dcae40f517",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5de0ddf4-f93d-4adc-acb6-9053a02a39b9"
        },
        "item": {
          "id": "08c93e8d-a607-477b-8ce7-57d00aed3eca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9ddcdce3-daba-4d01-b4b9-635c5ba2204d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c5330e-a0bb-448a-917b-ef4887b341d2",
        "cursor": {
          "ref": "2d335851-acc1-48a3-82ac-ca9a8abfbd42",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa094e52-045f-4a4b-856c-39ed89ad691b"
        },
        "item": {
          "id": "10c5330e-a0bb-448a-917b-ef4887b341d2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f8bee58e-2abb-4694-bd83-f6c5f6080e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f4572a-3957-4d45-85c6-2daa11788d42",
        "cursor": {
          "ref": "bb9a84f6-71c4-443d-a993-04bc4a627052",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "77e344f5-c3ad-41de-8302-1551b65b0b0b"
        },
        "item": {
          "id": "a6f4572a-3957-4d45-85c6-2daa11788d42",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2cb7a845-2608-4dfc-9426-624077034d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0402591e-177b-4281-bdaf-4912ef8cc1ed",
        "cursor": {
          "ref": "ecd42d50-2fce-420e-bcc2-98a0ac331959",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "27c3a14f-d770-4dd0-9b24-25596731a005"
        },
        "item": {
          "id": "0402591e-177b-4281-bdaf-4912ef8cc1ed",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "41be2b9b-7460-4aa6-8ee2-9e5381636f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73461525-1be4-442c-ba66-b6b577469ee9",
        "cursor": {
          "ref": "178f1051-31ae-444c-a63d-1d2eea662ab2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bf5af230-a03d-4614-84d7-34ec89529e19"
        },
        "item": {
          "id": "73461525-1be4-442c-ba66-b6b577469ee9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "56544ac2-f3e1-4634-91b7-6ae3039d74e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d283b15c-28c4-41b7-b323-c46575dba6ce",
        "cursor": {
          "ref": "d11f1089-2c29-4394-9c5f-d0b033fa6907",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a9b5296c-e6fd-444a-84b4-0434509ac592"
        },
        "item": {
          "id": "d283b15c-28c4-41b7-b323-c46575dba6ce",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0feb5f9f-4c83-43f0-bdbb-93aa45b1a37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08660c4f-26bc-4bed-9c66-ffdcec8258d4",
        "cursor": {
          "ref": "39b230c8-fc77-4c83-9d58-e0006e7c6d3e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6dd92bc6-8825-4b90-ab70-c4c1491881ef"
        },
        "item": {
          "id": "08660c4f-26bc-4bed-9c66-ffdcec8258d4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8faf6a15-de57-4303-a758-b0a0500ddba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f40136-6e94-40c7-bdcc-d7c0f63bbdd7",
        "cursor": {
          "ref": "eacb7e4e-b140-4064-b449-ad9602d4b367",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4f31fefb-c961-4e5a-a7f6-7bb9c3f6d9f7"
        },
        "item": {
          "id": "95f40136-6e94-40c7-bdcc-d7c0f63bbdd7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ff058e3f-dcd7-4769-bd0e-53469ec1cb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d34c2a0-69d6-49c8-86d1-2bc345169b3a",
        "cursor": {
          "ref": "3f7614f0-ee64-43d5-bdaa-3e706acb7dc2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7c27f8ed-586c-4093-9fff-79a7da3e5882"
        },
        "item": {
          "id": "2d34c2a0-69d6-49c8-86d1-2bc345169b3a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "22d13618-440c-4e32-ad2f-25fd3f49ec0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b34a701-9699-4404-aac9-c75a2d898b15",
        "cursor": {
          "ref": "eadeea1b-e100-4eba-aade-454bcabfb303",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "40287f45-03ab-4ab0-aaf6-c842ebec8696"
        },
        "item": {
          "id": "2b34a701-9699-4404-aac9-c75a2d898b15",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f421b046-38f1-429d-bf42-fb2f77f3fc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9a7bc2-e14d-4c7a-b8d6-bc235e878076",
        "cursor": {
          "ref": "fbd29a4d-9da9-4f17-a441-5131cdde1f28",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a2c58b54-bfd6-44c5-8cde-edced096d94f"
        },
        "item": {
          "id": "5d9a7bc2-e14d-4c7a-b8d6-bc235e878076",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ef9c41b-0169-48d7-9381-7a93728fb9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049eb90a-885c-4a29-aefb-5c4d7ef8b67e",
        "cursor": {
          "ref": "de2fce1a-12f0-43f4-994b-7910f77e19a8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f6fae94a-7e6e-40bb-a608-788d48aadb97"
        },
        "item": {
          "id": "049eb90a-885c-4a29-aefb-5c4d7ef8b67e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "28ee8dd8-75aa-4702-bc30-fd62db5e5c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f36e41-e12f-45a6-b6a3-6b553a6abc98",
        "cursor": {
          "ref": "b1ea2861-4384-464a-96ff-5b14d16f02f3",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2a687535-65b5-423f-bfd8-0c5aafc71cb9"
        },
        "item": {
          "id": "54f36e41-e12f-45a6-b6a3-6b553a6abc98",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "169554f0-74a6-4d26-9047-60df2da68264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a627be54-4e1d-4255-b576-2d19488eaf09",
        "cursor": {
          "ref": "630224c1-5b89-4c11-9659-f458da5728f4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c07cbdd6-281e-4b80-90a2-81f5b11591a2"
        },
        "item": {
          "id": "a627be54-4e1d-4255-b576-2d19488eaf09",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b65ddcdc-9a0f-46a6-8847-e8e689b7f912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc11b78e-1ec7-411e-b54c-80bd2150d7d5",
        "cursor": {
          "ref": "021aa07d-020e-4c91-8fd9-b8c9f001a87e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c2b5226e-23a1-41b0-9311-364e0d981837"
        },
        "item": {
          "id": "dc11b78e-1ec7-411e-b54c-80bd2150d7d5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "357ce4bc-604b-43d5-9c13-f272da0ed594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbd580c-6b33-44a6-be50-722f64b060bc",
        "cursor": {
          "ref": "91634269-f2bb-4fd3-ac1a-8e3511359685",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d6dbba9a-20f8-4300-b4e2-d03bc76231ec"
        },
        "item": {
          "id": "0dbd580c-6b33-44a6-be50-722f64b060bc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "989f5345-e126-4f38-9b4b-9857edb60fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40c802d-8a7b-4c1b-bb82-19bf445ab587",
        "cursor": {
          "ref": "329cb19a-b3cd-4879-92ca-a32a17a164fc",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c4e78344-7eb3-43cf-b8bf-6e0a1e4a098e"
        },
        "item": {
          "id": "f40c802d-8a7b-4c1b-bb82-19bf445ab587",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "297b1b20-6fcf-455d-a3d5-24ccc7fb251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99059062-9610-4cf7-b47b-f741274143da",
        "cursor": {
          "ref": "c511338e-700e-4a98-a12e-0f79b7aab16d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e29732c7-da03-4b54-a3a5-895fcc7cdd8f"
        },
        "item": {
          "id": "99059062-9610-4cf7-b47b-f741274143da",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f93c0790-f973-4c0a-bd6a-a9fa6ba9b200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b64ae68-938f-48d2-9273-8681be726fb2",
        "cursor": {
          "ref": "a53fe712-c455-436e-8b8f-4316aeef1dec",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f70d8ae5-73df-4fe3-8f3c-69e7d2791658"
        },
        "item": {
          "id": "9b64ae68-938f-48d2-9273-8681be726fb2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a9c21fe3-6241-45b1-bf16-64b5f7937d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3c3732-bdca-4846-b143-0179c934d07f",
        "cursor": {
          "ref": "0e1ff901-6dc0-48d1-9d84-6a74c4a00f21",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cd30b9aa-7828-425f-af08-6eb5ca318332"
        },
        "item": {
          "id": "df3c3732-bdca-4846-b143-0179c934d07f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6047ea97-c98d-4105-857b-9c4eee2d74ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fd3829-d19f-4f09-8e60-7cc33db1a656",
        "cursor": {
          "ref": "efd19aa0-54e7-48fb-881f-a601668205d8",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c475540c-7e71-4237-acee-3b1f11f28e5a"
        },
        "item": {
          "id": "71fd3829-d19f-4f09-8e60-7cc33db1a656",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "76c8a047-35c0-4d3d-a50c-534415ead2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebaf833-1c91-41c7-8be9-4c494decf5df",
        "cursor": {
          "ref": "dacd534c-22d3-48f9-a2fe-38755ae6c4ad",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a33fb2a-50d1-408a-a266-2e75df60c707"
        },
        "item": {
          "id": "cebaf833-1c91-41c7-8be9-4c494decf5df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d054bdb3-e36a-41c3-b118-ed147cd88ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d416760-d0af-44c2-816c-17884bf10394",
        "cursor": {
          "ref": "cd727b99-c0c9-4a6a-a47a-32cde01374b9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "931e2593-d007-4272-8069-e52d86456e27"
        },
        "item": {
          "id": "5d416760-d0af-44c2-816c-17884bf10394",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ee5f4238-a031-42c0-84da-e124e62f79eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1740317d-3a4f-48c0-a552-fe54e2819be8",
        "cursor": {
          "ref": "0bf50063-e9dc-47e2-bea9-f49681bfd982",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78f5c55f-5cf0-4530-bf3c-a1edae031f03"
        },
        "item": {
          "id": "1740317d-3a4f-48c0-a552-fe54e2819be8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6b778498-94e6-4834-b1f6-d380b19bf4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ad0106-e944-4587-b454-0e6ee8741b78",
        "cursor": {
          "ref": "d9171f3e-5cd9-48c9-b234-0d3fb54444ff",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "53804263-834f-4dd1-8d44-0b88d7b67159"
        },
        "item": {
          "id": "c0ad0106-e944-4587-b454-0e6ee8741b78",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "46b01e5a-8e20-4c44-b7c2-15201dc16732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892be986-dbb5-4f0c-ab72-4b679284c06a",
        "cursor": {
          "ref": "8ed4ef66-0904-411f-a806-95cf8f6597d8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d0027939-106c-4ffa-ab3f-476af519c365"
        },
        "item": {
          "id": "892be986-dbb5-4f0c-ab72-4b679284c06a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f469c1e6-d27f-482e-a186-7f54fb2d2919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11236822-f94f-4095-86ba-193b9d22fd66",
        "cursor": {
          "ref": "d9bf8fe5-9114-4477-aa6c-96c834eb35ce",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ed514ed9-2c00-486f-b430-7e5c7975b754"
        },
        "item": {
          "id": "11236822-f94f-4095-86ba-193b9d22fd66",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a0be14c6-d569-499f-876f-bf67c02a39f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1517d9-1898-41a5-9057-2ac483432883",
        "cursor": {
          "ref": "a13128cf-cf95-4e26-9c0a-cfba93bfa821",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e916571b-3ec9-4f9e-8945-045f8774b086"
        },
        "item": {
          "id": "1f1517d9-1898-41a5-9057-2ac483432883",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8d2bf852-6cd7-42a7-9066-114f7035556a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b93e0ca-485c-40ff-99d2-26e2efab064b",
        "cursor": {
          "ref": "7f635cae-98b5-416d-81f1-901a473cffaf",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a0732b6c-9d60-4aae-85f0-11525853f98b"
        },
        "item": {
          "id": "3b93e0ca-485c-40ff-99d2-26e2efab064b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "59498717-15a0-42b7-af09-95e796cf0060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2ed4e20c-4624-4d1d-ad3f-7590974b48bf",
        "cursor": {
          "ref": "5416a9a7-a319-4e12-957f-d3ac6f540865",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8d590f18-d820-4ce0-9881-28772bb6520d"
        },
        "item": {
          "id": "2ed4e20c-4624-4d1d-ad3f-7590974b48bf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6c403461-765b-4a8e-b62a-99d0846eafbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3d3be2c3-6d7a-4a81-be15-992c382b234a",
        "cursor": {
          "ref": "18731a75-11ea-4baa-867b-3aa852a1b751",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dbe060af-4d09-4e33-915e-24e8165ccab9"
        },
        "item": {
          "id": "3d3be2c3-6d7a-4a81-be15-992c382b234a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9ec84806-034b-483a-9ca5-2b758d657672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1262c0c9-f316-498d-8dd2-6f89f91819ed",
        "cursor": {
          "ref": "ab2a495b-3910-49c7-8478-64b4397ed816",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3310754-5165-45bd-817b-f675f124d357"
        },
        "item": {
          "id": "1262c0c9-f316-498d-8dd2-6f89f91819ed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "763c0197-f25d-42d6-a67d-76bf583ed6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "25038020-7e5b-42a9-ab81-442daea0530c",
        "cursor": {
          "ref": "05edeb40-64d7-429b-99f0-1c590608dabb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7197a1fb-be7f-4e98-b94c-4d9824365ab5"
        },
        "item": {
          "id": "25038020-7e5b-42a9-ab81-442daea0530c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fee44eeb-db0e-4e2f-bb96-6a43db30e161",
          "status": "Created",
          "code": 201,
          "responseTime": 4028,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c791a39-cb0a-40b4-b6a5-bf9fe63de607",
        "cursor": {
          "ref": "ee4dc632-6a8a-485c-9100-eeae0052c367",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1c3bb2e9-c217-4573-86d2-71dc1fbb8843"
        },
        "item": {
          "id": "9c791a39-cb0a-40b4-b6a5-bf9fe63de607",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "59303049-3756-4153-bdd8-e1d0a8a16a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0d769b9d-a482-4307-84e1-7a54fcd7c830",
        "cursor": {
          "ref": "22df4aea-e289-4e9d-a224-a82bc8f92c2f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "444bdff9-eb47-40b3-91b5-b1cd33c8ad89"
        },
        "item": {
          "id": "0d769b9d-a482-4307-84e1-7a54fcd7c830",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6a85d0d1-9d59-4543-a77e-1af470743059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a2e6f4ff-8a06-43a5-ba93-69b007fe4e03",
        "cursor": {
          "ref": "e40e0ab0-9c5c-4dea-b852-0eb8e26ca8de",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "468e1c72-6c46-4559-893a-3dd08356f594"
        },
        "item": {
          "id": "a2e6f4ff-8a06-43a5-ba93-69b007fe4e03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "746bb0c9-1940-4e46-b961-ea5cb170cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d176904d-1a78-4adf-804e-52aa89937efc",
        "cursor": {
          "ref": "f2c718b6-e917-4f75-9e6f-9797d5c0bc92",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80548288-9638-42ef-b8fc-2ab47d459b68"
        },
        "item": {
          "id": "d176904d-1a78-4adf-804e-52aa89937efc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "50df0180-0d86-4911-beb6-dc86e893e40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d5553d-f485-4a39-8401-4df074de5c30",
        "cursor": {
          "ref": "98a8bd7e-2ba6-4109-936b-64264620ba30",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b097e834-a438-46b8-b041-2742d9917ee3"
        },
        "item": {
          "id": "e5d5553d-f485-4a39-8401-4df074de5c30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c367e10a-33dc-4694-b6bc-7fda9f4d6d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf30ae5-3eda-4ed2-8e8d-3108a039ce43",
        "cursor": {
          "ref": "c700b47c-a2dc-427b-9761-551d75a33f5b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b8799f3e-64b4-436b-b6d8-56a791a14cfe"
        },
        "item": {
          "id": "5cf30ae5-3eda-4ed2-8e8d-3108a039ce43",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9ba9a94e-a9b2-4394-8ce1-a6484225a48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d5fcc9-1171-4ab9-8ffc-0d120630bcf9",
        "cursor": {
          "ref": "85de6db5-b3ae-4824-a896-1b34b9b59fba",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4d8e11b5-055a-41f2-a31a-b1719dc72f1d"
        },
        "item": {
          "id": "35d5fcc9-1171-4ab9-8ffc-0d120630bcf9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fdfa0f84-b133-4297-9ee8-e38ee6f50f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689f70f9-7f64-4d3b-ba61-26ddeaa0ee46",
        "cursor": {
          "ref": "72f59b1c-5526-4efa-92f8-e6649fc09567",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "79556f92-d9db-413a-a43e-82d1fc22440c"
        },
        "item": {
          "id": "689f70f9-7f64-4d3b-ba61-26ddeaa0ee46",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dbc70cf6-22e7-4f5c-b2ed-53a14024bf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb3b979-00ec-4539-b657-c48a40d9259b",
        "cursor": {
          "ref": "8e812859-e307-4821-919d-48f6356b9600",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bdb44765-897b-4755-9f4b-5d9bc93d401f"
        },
        "item": {
          "id": "4fb3b979-00ec-4539-b657-c48a40d9259b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0acad2d3-bd7a-41a3-94cf-f9914445d1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e5d501-05ad-4116-852f-39c27c3a936d",
        "cursor": {
          "ref": "f79d6284-7498-4c34-b564-584a8130d43f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2c324809-b523-444b-8aa1-6be58857a848"
        },
        "item": {
          "id": "16e5d501-05ad-4116-852f-39c27c3a936d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a8d38f16-45d5-4be5-9622-e70040f68f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39199647-ff7f-4746-8189-9a92d785d431",
        "cursor": {
          "ref": "290e1ca1-9a1b-4d67-a812-356c52ba33bb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2cfd9fd4-09d7-436d-bdbc-b38b24594ade"
        },
        "item": {
          "id": "39199647-ff7f-4746-8189-9a92d785d431",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d82e4c14-ea3e-4aec-a634-7a6ba0909e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0ae030-864f-4822-860d-38b1fabd993e",
        "cursor": {
          "ref": "a20948db-7fba-4625-ae81-c88998daeb7d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ba0cf02c-444b-4e3d-874a-2ace3ee18db2"
        },
        "item": {
          "id": "dd0ae030-864f-4822-860d-38b1fabd993e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1dec1f2c-3338-499a-89a0-349458b69d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d9cdc5-9ac2-4e91-b114-9650f120a09a",
        "cursor": {
          "ref": "1e0d830d-5d2c-4ade-a62f-910643dae920",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "39c48083-14b7-41f5-be3c-fdceb1c18d87"
        },
        "item": {
          "id": "07d9cdc5-9ac2-4e91-b114-9650f120a09a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3426a5b8-ecaa-4698-a561-f71e7190458c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32998cdd-f71b-4344-9306-b1a51b052c5d",
        "cursor": {
          "ref": "ef855868-4624-4ada-a8ba-2b2ecb5c2555",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6579f8e0-ad34-4111-8441-7a062429563e"
        },
        "item": {
          "id": "32998cdd-f71b-4344-9306-b1a51b052c5d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "37cc6d35-cf81-40f6-a0ae-1b89b02fd9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c755f-df41-42da-ac2e-a75bca45017b",
        "cursor": {
          "ref": "b89c2bd1-533b-4be5-a470-7a63d7999fd7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "602027e4-3463-4a59-a3bb-b1daa44cb278"
        },
        "item": {
          "id": "606c755f-df41-42da-ac2e-a75bca45017b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d926398-60c9-470c-ae15-a6700fcd3990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d617bacf-c97b-4764-abec-2954303be2b5",
        "cursor": {
          "ref": "e00e0770-cece-4580-b26b-2286071f540e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "77c4d8a2-5533-4405-8edf-f56fe8e7a8d1"
        },
        "item": {
          "id": "d617bacf-c97b-4764-abec-2954303be2b5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fdcbf827-90ce-4c12-bff5-e21e478bf48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ca1131-eb24-4848-9a4c-e3fbca3e6aa4",
        "cursor": {
          "ref": "cacf53c6-ccf8-49dd-b0b8-ecf1bce522f7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "20d02666-7b7f-45a9-ac3d-cc7049d65f26"
        },
        "item": {
          "id": "21ca1131-eb24-4848-9a4c-e3fbca3e6aa4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52f15048-9881-4edf-91b5-83b0bc1ade41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d9d78b-73cd-454b-ae3a-c0047fbbbbe1",
        "cursor": {
          "ref": "2628dee6-cfa0-454d-885f-e2f37d3428e2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "80ca61bf-3959-40a5-bda6-567261195f45"
        },
        "item": {
          "id": "99d9d78b-73cd-454b-ae3a-c0047fbbbbe1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8da3ee77-1231-46ba-b8de-626fd042f3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90cf8ef-692b-49ee-bca8-555e96f3b3ba",
        "cursor": {
          "ref": "862811cf-4aa3-4eb7-ab00-97b406bffe06",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "34e0a32c-92e1-41f3-9cea-cfa9c399d57f"
        },
        "item": {
          "id": "e90cf8ef-692b-49ee-bca8-555e96f3b3ba",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a58359e7-7e32-470c-a8fd-c97d9cc646d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e091999-a991-4eae-8717-4c962bdca3a0",
        "cursor": {
          "ref": "b75679b3-29eb-45cb-8321-f13933fabb0a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e2b70bc9-2cf6-44a7-980a-dc740d8883ad"
        },
        "item": {
          "id": "3e091999-a991-4eae-8717-4c962bdca3a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d624685-bb8f-410d-8c8c-469e259fddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef80711c-5a05-4e8d-a994-c06c1278bd71",
        "cursor": {
          "ref": "13e09997-3fb6-45fc-9c5c-bc4df458d2f3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bb179d0b-0a71-4608-8424-2e56f4ff6485"
        },
        "item": {
          "id": "ef80711c-5a05-4e8d-a994-c06c1278bd71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "69807893-4af2-410c-be4c-5ff512abb198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd1f78b-1ac7-4e2f-b4ae-e47e36576676",
        "cursor": {
          "ref": "0069234c-e29f-4b38-a729-3a2e6759ba4e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d40b8d9-d514-4575-a0d3-bf22eb93cca4"
        },
        "item": {
          "id": "5fd1f78b-1ac7-4e2f-b4ae-e47e36576676",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "00a56a22-60d7-49c5-855e-88aea32bc21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a65f6-12ee-43c3-844c-d49c1989627b",
        "cursor": {
          "ref": "d6540180-0d84-48e9-bd1e-e6fb0ed5c70a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "337208a4-400b-440f-ab4e-003a4ad0ca5a"
        },
        "item": {
          "id": "c00a65f6-12ee-43c3-844c-d49c1989627b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "145404e9-9224-46e7-860a-18e5c11eb205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e433c0b-c28b-4963-8cf4-a0130557994f",
        "cursor": {
          "ref": "92ec0ce7-7569-4e26-970f-b58bed7a1a3f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2d15c7c9-be8e-4330-b75b-e935bc6c4624"
        },
        "item": {
          "id": "6e433c0b-c28b-4963-8cf4-a0130557994f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9dafbe09-edb5-4231-a4e5-9049efdef5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd4af07-2959-45ed-9218-3e2eb50dabf4",
        "cursor": {
          "ref": "9e20fe43-258b-493c-9bba-42d779a96bf5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "53813460-b45b-40b9-9c7d-7d11933ed45b"
        },
        "item": {
          "id": "bcd4af07-2959-45ed-9218-3e2eb50dabf4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e8c46bd4-24ac-4003-b0af-4deeea6f2d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780ae16a-96e5-41d8-bc04-34c4a890c36d",
        "cursor": {
          "ref": "7928f903-9071-4e1a-9ddf-a844cb02f0c4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bbb38ae3-cb8a-4254-b79e-62dd1fe00941"
        },
        "item": {
          "id": "780ae16a-96e5-41d8-bc04-34c4a890c36d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b42c22c3-9be1-4653-b1bd-74abdae8f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ebe01d-d643-4b6b-9e01-39f82473cc67",
        "cursor": {
          "ref": "341536c3-19fb-4167-8c36-ee0bfcc8059e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7abd840e-1b59-498b-af5c-1b8a0d103b6b"
        },
        "item": {
          "id": "d5ebe01d-d643-4b6b-9e01-39f82473cc67",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "715765d0-e109-4207-8de0-a7951cf69ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6b1f2-7492-4e65-8696-83fce68f0b0c",
        "cursor": {
          "ref": "3319f9be-f25f-44cd-9e44-02b2c85bdbd7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "56d926d4-86c3-467d-883e-e471f781dc70"
        },
        "item": {
          "id": "02b6b1f2-7492-4e65-8696-83fce68f0b0c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dd91ddc0-119a-473f-a577-19bb5b8bc5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65478caa-94a0-4b9c-8039-18f46cde5224",
        "cursor": {
          "ref": "fdd9ec46-b22f-4bc9-b71d-d79f1f9cec08",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fe89aa13-280c-491d-96a4-19f554c5d480"
        },
        "item": {
          "id": "65478caa-94a0-4b9c-8039-18f46cde5224",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f49208bf-4357-4996-801f-94ebe68ed91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71565da1-1550-4535-885b-6b4743f485a0",
        "cursor": {
          "ref": "7a71df49-8b23-4755-af0c-33649bcc3596",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1f69b412-f41a-46d6-bf15-82ebcf4839d3"
        },
        "item": {
          "id": "71565da1-1550-4535-885b-6b4743f485a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0c123f2-11e5-4b49-aa28-008075e11183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb144309-537c-43af-bcc3-73de0fd2215f",
        "cursor": {
          "ref": "7a28300a-7eec-4e89-9464-14d03a40d3c4",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9232171e-3b4e-41dc-9633-bb00bd18abf0"
        },
        "item": {
          "id": "fb144309-537c-43af-bcc3-73de0fd2215f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "079b4903-203a-4da9-92dd-57d6062aed89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fcd7ad-5bf1-42bd-a8a5-599a12449e66",
        "cursor": {
          "ref": "ce2aa7e4-51a6-4392-bbc6-009b3adb1e30",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3388c531-f0bc-4c0e-a758-4c12156627eb"
        },
        "item": {
          "id": "e2fcd7ad-5bf1-42bd-a8a5-599a12449e66",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ef0f8821-0a5b-407f-980b-ba8aeda82d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a53c37-ce94-46f6-8d02-22651d2b185f",
        "cursor": {
          "ref": "39ae068e-cd46-401b-bb7e-eb914c6e2ec4",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "69fcdbbf-ed5b-4ade-b982-971a51162e7c"
        },
        "item": {
          "id": "85a53c37-ce94-46f6-8d02-22651d2b185f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b994d2bb-4413-4a9e-a9d4-46cd246fd006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b754d-9444-4cd4-8ad5-82d74835fc26",
        "cursor": {
          "ref": "24c1eb61-0617-424e-9833-1fccb8b711d3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4b653c13-b051-4618-893f-42fefeca533f"
        },
        "item": {
          "id": "736b754d-9444-4cd4-8ad5-82d74835fc26",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6e372529-5581-4814-bc61-614423996567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fa01b2-5bb7-44a6-abbf-1cde7de580be",
        "cursor": {
          "ref": "2c7771d6-2c3f-46ec-a868-dfb54187aa70",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "387b5e34-c71e-49be-80d1-8556be526f8a"
        },
        "item": {
          "id": "87fa01b2-5bb7-44a6-abbf-1cde7de580be",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "922f3174-9bd9-49a6-8166-2f554344f5d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da66354c-561f-47f3-8b53-732126d282a7",
        "cursor": {
          "ref": "09453694-d281-47b8-9814-96dd81a59ec1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "202584a2-855d-4c50-b374-36ec1e41e31a"
        },
        "item": {
          "id": "da66354c-561f-47f3-8b53-732126d282a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e227bb7-08b7-414f-aafc-2335f3990659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c48cc11-80ee-488d-b71a-f1bad27cf6d8",
        "cursor": {
          "ref": "c62009e3-b408-4a96-b730-ba9cf22afbea",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7c35233-2b12-4435-8884-4e9e839608bc"
        },
        "item": {
          "id": "1c48cc11-80ee-488d-b71a-f1bad27cf6d8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1c2c7042-88d1-469e-baf6-c6bd482a7e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1209576-d5ea-4e0f-8f89-13f39161cc38",
        "cursor": {
          "ref": "409c4b2f-3cdc-40fb-b8ef-e06a97693ca9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "775ca8ea-b943-4621-ba88-ac635dd5fbd2"
        },
        "item": {
          "id": "f1209576-d5ea-4e0f-8f89-13f39161cc38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7ee06ac9-8623-4ebc-9086-a1413018e15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f220bdf-7df0-46fd-ac37-f91a7583fa8e",
        "cursor": {
          "ref": "5fbc9aa5-290b-4916-9e1c-761bda29b757",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "385e16ed-74b7-4f09-b517-a47ce58d9b36"
        },
        "item": {
          "id": "9f220bdf-7df0-46fd-ac37-f91a7583fa8e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b9f1727-93f7-407d-8620-bff5ded504bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5c71ad-48f0-4ded-b5bc-c0d81899f0af",
        "cursor": {
          "ref": "e98adc8a-2d02-4805-a8e1-86f53a3cb805",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6c6f3bb7-ccad-42f2-8327-e689019f3476"
        },
        "item": {
          "id": "7b5c71ad-48f0-4ded-b5bc-c0d81899f0af",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3c2d8a0a-d770-4cc3-93b0-f95a72317557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de296016-cda0-4d0d-b493-47a883b0e9a2",
        "cursor": {
          "ref": "e888bf3f-334c-4f29-a4ac-5301a0f9b122",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "442d7226-7799-4a18-8880-d3be29a600cc"
        },
        "item": {
          "id": "de296016-cda0-4d0d-b493-47a883b0e9a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f55a9104-de5d-44d1-aae8-49a8deff1f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b63016-ff65-470c-a7c9-d747ff4d0806",
        "cursor": {
          "ref": "3900dd8d-d980-44cd-a61c-0b24cfff7654",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "87b26c31-4104-4bdf-b5e7-33ee60bde9f7"
        },
        "item": {
          "id": "02b63016-ff65-470c-a7c9-d747ff4d0806",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1cb55bd6-2957-443e-887c-0f94cf4db597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8a57a3-1a61-4c86-b235-7cb92c8b8ea6",
        "cursor": {
          "ref": "6f18bf0b-2beb-4fe8-b501-b408b02338b2",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e7765acc-477a-4840-8a65-18639fb4f577"
        },
        "item": {
          "id": "2e8a57a3-1a61-4c86-b235-7cb92c8b8ea6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57537e3d-b7ad-4ac0-9cfb-6a60b1be7470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52006eba-a2e6-44d2-bb5c-25be55fb47a9",
        "cursor": {
          "ref": "0fb6b668-cd42-4d1a-8e23-5122279cfeac",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "28b85fbe-1ee4-4633-a553-f31de1ef8eba"
        },
        "item": {
          "id": "52006eba-a2e6-44d2-bb5c-25be55fb47a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "31ce11fd-84f4-424d-b67e-2d48bf8d740a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42956820-75f4-4e0f-bd57-732f110209b4",
        "cursor": {
          "ref": "9f6f475f-846b-464c-9535-18a71a32c19f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "79b3fd1a-f929-4e01-aa41-5ba59e2bcad8"
        },
        "item": {
          "id": "42956820-75f4-4e0f-bd57-732f110209b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "550a2005-a762-417d-a89a-a8ff746f9601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4448cb2d-9621-4d59-baf1-754dc03d7311",
        "cursor": {
          "ref": "4cb96b47-fe74-429f-888e-2f3ceca79747",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fbf6ac7f-6d7a-4ce2-b248-b7086bd47ca6"
        },
        "item": {
          "id": "4448cb2d-9621-4d59-baf1-754dc03d7311",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c9d0ef10-401a-4e91-b37f-2ec7f1e965ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d27f2c-8716-43f9-8a58-0a947a905c2e",
        "cursor": {
          "ref": "f36b375f-6333-44ac-aff9-3288123242b7",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "106fb708-6164-4bee-a5dd-932ad94fb006"
        },
        "item": {
          "id": "28d27f2c-8716-43f9-8a58-0a947a905c2e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49dfc786-4025-4628-a128-17bb8a00fddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafb38c2-1404-4b48-b205-cc8fc4e2870e",
        "cursor": {
          "ref": "4e813aeb-124e-4233-91ab-af7097e3545c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "14b38553-5251-4a7a-8ef8-f114cdc85266"
        },
        "item": {
          "id": "dafb38c2-1404-4b48-b205-cc8fc4e2870e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5f67c814-5b9a-4ed8-95bb-50c7a7b23b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2dccf2-ed4f-4f4c-9529-ef1cefc2d355",
        "cursor": {
          "ref": "82c9d543-232e-4849-b2a5-f23f4040919a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7ff3e011-7e88-45de-a460-9611228a8a4c"
        },
        "item": {
          "id": "ba2dccf2-ed4f-4f4c-9529-ef1cefc2d355",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d9990e35-9ba5-48b5-81bd-b3de7016b407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a06b60b-dafa-4a45-8b2d-e623661b0ff5",
        "cursor": {
          "ref": "6d146f35-4a02-40ea-ac0c-5f53a910e872",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ebd326f1-6232-40ec-b6a5-9194669f79c5"
        },
        "item": {
          "id": "1a06b60b-dafa-4a45-8b2d-e623661b0ff5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ec4156b8-524a-4d8a-8748-6ae364dbd085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072dfbf3-4bd7-4c9e-9f87-4dcd6d064f47",
        "cursor": {
          "ref": "b60795ea-e6af-4077-abeb-0768c2e4138b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "afc4e4b4-56d7-41f8-808b-53b37f8af7cb"
        },
        "item": {
          "id": "072dfbf3-4bd7-4c9e-9f87-4dcd6d064f47",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "699a4c16-6dee-4241-9170-0d09d3066bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf228a68-4582-4107-8d50-890447db9ece",
        "cursor": {
          "ref": "8c632e73-d40f-48b8-93e7-03df560eb59e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b8779e98-2db4-40f4-82e9-d9588074e146"
        },
        "item": {
          "id": "cf228a68-4582-4107-8d50-890447db9ece",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c8473b8c-3d27-4a4a-9d92-cc2d964e54e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005714c4-8e13-4b70-b9ea-3e6423681cf2",
        "cursor": {
          "ref": "fd29d01d-def8-415d-9a6e-108d28611452",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d0387e8b-1980-4812-84e0-abaf65811994"
        },
        "item": {
          "id": "005714c4-8e13-4b70-b9ea-3e6423681cf2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5c835bbc-6e50-4da0-a843-f83886a1ed4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db505e7-db3a-45cd-a61d-948ea91d811e",
        "cursor": {
          "ref": "1f453407-3ae3-4d96-af7f-50e0b1bf934d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1e70cede-a875-4d17-bb83-46d9d73e6793"
        },
        "item": {
          "id": "7db505e7-db3a-45cd-a61d-948ea91d811e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "92d9694c-fbd4-4bc2-a958-53bcb4ef6981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c59413-85cf-482f-9028-f0a1cde0a8bc",
        "cursor": {
          "ref": "17d49cfd-0e8e-4a09-8c21-41018abda0a7",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4ae68435-dee9-4b11-88c9-4d3f40dadb49"
        },
        "item": {
          "id": "17c59413-85cf-482f-9028-f0a1cde0a8bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "17c5ba9b-a03d-4a9e-b079-6a298409e452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca96bf53-0e9c-4a11-bb98-b4747fba4502",
        "cursor": {
          "ref": "1b11cb87-435e-4923-bedb-e2964f45a097",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c7f28dbc-da28-4f62-8ea5-a802f8acbd4b"
        },
        "item": {
          "id": "ca96bf53-0e9c-4a11-bb98-b4747fba4502",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b744c749-4116-4de6-a6b2-a86e35c7d9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea17b947-e5e0-4b15-a51c-86fc237e110f",
        "cursor": {
          "ref": "20492369-a375-437e-8f39-68c5e1ccdbae",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3cc8352e-4a57-4189-a94c-340c68e0ed6c"
        },
        "item": {
          "id": "ea17b947-e5e0-4b15-a51c-86fc237e110f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0dd4a56e-850a-44bd-aa18-faa09a1060e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520cfeed-c277-490a-adef-4ce144670bde",
        "cursor": {
          "ref": "d0b9f7d1-b5aa-434f-8b03-2dfcfd59985a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c0e01333-63cd-4d34-88f8-e92c4e6cfd64"
        },
        "item": {
          "id": "520cfeed-c277-490a-adef-4ce144670bde",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "58549956-9644-4a82-b552-7abc8506d485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82be6e52-62a7-4d57-b656-90d5298aa07b",
        "cursor": {
          "ref": "408d9f8d-ffdf-468a-b25b-45d44c859eff",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "72f01f84-2ee7-4bee-8fcb-d39c9f9a5e56"
        },
        "item": {
          "id": "82be6e52-62a7-4d57-b656-90d5298aa07b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1278086b-32e8-4ecf-9d9f-5c88f114bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eb75f2-5b58-4288-abf5-42da0e119158",
        "cursor": {
          "ref": "043b53d2-a05b-4f22-9e04-aed53a13426f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d6f90330-e0c5-4dc5-b05a-c43d8dc019fb"
        },
        "item": {
          "id": "14eb75f2-5b58-4288-abf5-42da0e119158",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f1f8db4e-4e35-4fc2-bb45-33426a54dc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24edc6dc-1dd4-4321-bae7-945354329067",
        "cursor": {
          "ref": "8005c51b-8497-472d-a01f-1273dee4b488",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "703d3535-76ac-4509-a4d0-336f6dd60ef5"
        },
        "item": {
          "id": "24edc6dc-1dd4-4321-bae7-945354329067",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0a4dc15c-b1a3-40fb-a2c1-3eca5b40f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38146965-825a-4ab2-9bb0-35f0ebae3158",
        "cursor": {
          "ref": "c27276b7-6b20-42ae-a999-48518f0bde33",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a3b60c1f-e18d-40c5-8e74-1d693e12db1d"
        },
        "item": {
          "id": "38146965-825a-4ab2-9bb0-35f0ebae3158",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6deb25c4-106a-494e-9076-681abadd2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2273922-355c-45a5-97fe-cfc2e4c44d7f",
        "cursor": {
          "ref": "c1df51b4-b53b-464b-a5ac-99b90e63acdd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2a603c97-9f59-4239-9cec-845f0a000f36"
        },
        "item": {
          "id": "a2273922-355c-45a5-97fe-cfc2e4c44d7f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6427c312-1827-4a54-bedf-b9731cea677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f03286-7bf6-47e5-9f9a-cdd4627d6804",
        "cursor": {
          "ref": "872dc40a-21cd-4054-87ba-3438c7e8dea4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "43b115fe-af27-4aa9-a8f8-776804da50eb"
        },
        "item": {
          "id": "c4f03286-7bf6-47e5-9f9a-cdd4627d6804",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12194389-155b-4e22-8d0b-802dc23f0c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da5e9ec-ede0-4144-9435-4b8b0d4ce2ab",
        "cursor": {
          "ref": "4b1545b0-a28a-448d-b2b4-173bb9f53fe1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2f80a83e-bbb8-4104-820b-97e626cb16b3"
        },
        "item": {
          "id": "5da5e9ec-ede0-4144-9435-4b8b0d4ce2ab",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "95f6ea04-d760-48d3-898b-9ccc120a3b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74983b95-d069-481c-b066-8b3732184182",
        "cursor": {
          "ref": "73f2bbab-6935-4ab5-b2a5-a6ea955185f9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fca2355b-5017-42c8-a230-30230363d76e"
        },
        "item": {
          "id": "74983b95-d069-481c-b066-8b3732184182",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e33054a9-c135-44fc-afe1-4cb15e636723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e3128-6311-484c-b3c6-6594781c8590",
        "cursor": {
          "ref": "441ae834-ea55-451d-96bd-a17dffa53577",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f2d94690-eff9-4968-aab6-6890b2fe87bf"
        },
        "item": {
          "id": "bc4e3128-6311-484c-b3c6-6594781c8590",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "01344aa8-c0f9-4afc-a34f-c91778bd3bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaf897e-72bd-47ad-a191-f294a8f5b8bd",
        "cursor": {
          "ref": "c68d61b4-39bd-46d0-804c-49defde6eaa5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5b12e808-a680-45be-927d-6a05ef117a57"
        },
        "item": {
          "id": "ddaf897e-72bd-47ad-a191-f294a8f5b8bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bc254b0b-964d-4f5f-950f-9eef8d9c072a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb41be0a-8df6-40b9-a9cb-113d2d387e41",
        "cursor": {
          "ref": "283199db-ddb7-4b90-80cf-03195edb29cf",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "21ce930a-c14e-4f31-b01a-9c085a082c3c"
        },
        "item": {
          "id": "cb41be0a-8df6-40b9-a9cb-113d2d387e41",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5f1ac1e8-8f2c-45d7-a0dc-6819613d9d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27791833-0dcb-49a0-a2c4-06dd257c2cf4",
        "cursor": {
          "ref": "caa8e697-8bc2-45e4-9938-68a327d62c26",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9b644d23-a92a-4cb6-9aa1-fb590e698297"
        },
        "item": {
          "id": "27791833-0dcb-49a0-a2c4-06dd257c2cf4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1359e954-e3bb-4c9f-929f-5d4335eacb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a894b2a-8931-48d5-8c5a-9fde33c758f3",
        "cursor": {
          "ref": "f50fbf8f-82e7-4f78-b5e1-837d3d41e588",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e0fd262d-8136-409a-a8b4-db66e5a062aa"
        },
        "item": {
          "id": "1a894b2a-8931-48d5-8c5a-9fde33c758f3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ba0f0679-18f5-4c85-aa00-a71ca60cba3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f40b78d-a0eb-4048-9416-3cb4bbdf5d76",
        "cursor": {
          "ref": "6fdd470b-0e78-41ac-aa0f-b848dd53773d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2cee08c5-3927-4cec-a542-d8435f9a6af7"
        },
        "item": {
          "id": "5f40b78d-a0eb-4048-9416-3cb4bbdf5d76",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "12f678b2-d9fa-457b-9b5a-ace32476c7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b1b27b-846c-467b-81b2-685dfade2b22",
        "cursor": {
          "ref": "160c27c6-aba8-4d52-8d1e-21c5f297a1ea",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e6035148-051a-4a7a-885d-261bc0d5899c"
        },
        "item": {
          "id": "82b1b27b-846c-467b-81b2-685dfade2b22",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "44bdd8ee-bed8-4073-b6f6-d1c6be5731ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef0fd91-686d-4736-8980-d92ffafaa320",
        "cursor": {
          "ref": "c3fd353c-33d3-4094-aa69-742ba905cfb6",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "378275ec-1b75-416e-bc46-1688103a9b55"
        },
        "item": {
          "id": "cef0fd91-686d-4736-8980-d92ffafaa320",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "25836b29-1120-4515-a061-04d04c1b4e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90aa395-2cc1-4849-9afe-1e7cfa118738",
        "cursor": {
          "ref": "958bee37-5488-462b-b23c-141f92956217",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6377f3e1-59d6-48c8-8c62-b158daf42c32"
        },
        "item": {
          "id": "b90aa395-2cc1-4849-9afe-1e7cfa118738",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2d4a9b7b-ae13-40d2-8b5a-3bc4dd721a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552a817-7857-46f7-9f39-99633e3a45b0",
        "cursor": {
          "ref": "4142611f-9944-419d-a200-44e5623d6875",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7e9cf11f-f945-48c1-b92d-d739a83862a4"
        },
        "item": {
          "id": "7552a817-7857-46f7-9f39-99633e3a45b0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2223aee8-9d1f-44a5-a432-3033318db379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea017e45-05c7-4c4c-b320-9e21006b53f7",
        "cursor": {
          "ref": "ee4fbee6-76b5-4201-8adb-142d6ee76dcc",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aeb44b50-bd91-4719-8a07-a8f651c5a8ef"
        },
        "item": {
          "id": "ea017e45-05c7-4c4c-b320-9e21006b53f7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f12b9ac6-d241-44b4-aac5-bbb7e71069f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8155acd0-df0e-48d8-837d-fdb33c21ab5b",
        "cursor": {
          "ref": "3fc64e23-0485-4c3c-8b0c-a120f50408e7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "83edbf90-9196-4c88-beb5-27bb67ff5d66"
        },
        "item": {
          "id": "8155acd0-df0e-48d8-837d-fdb33c21ab5b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9d2442f2-a3a6-4d3f-b979-3416458f0ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4492e375-5ceb-460d-a880-5939bfec4a51",
        "cursor": {
          "ref": "ab0c3925-1a44-4d04-8e03-a89c7a7fa94e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6e1779bc-cd08-4885-8af2-c8edd445bb91"
        },
        "item": {
          "id": "4492e375-5ceb-460d-a880-5939bfec4a51",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1f82c502-67d9-4f9c-b414-2ffc2bde1d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e253d-3ea0-4bdf-8703-6f4107375b1e",
        "cursor": {
          "ref": "17861b31-53a7-445a-91b8-21c2e171959c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b2bb083b-e52b-407c-924d-d1e7f1107aa1"
        },
        "item": {
          "id": "ad2e253d-3ea0-4bdf-8703-6f4107375b1e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "89b57362-2016-4875-874b-60ca0f7e7eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7cd354-d824-46c2-b6e3-aefac1330032",
        "cursor": {
          "ref": "c6d2fdfb-1f59-4f93-adbe-13b321bd68c6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9fd28a09-53fc-4f4e-8562-66688c3bf957"
        },
        "item": {
          "id": "2c7cd354-d824-46c2-b6e3-aefac1330032",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "29b5b3f8-bcfc-4705-848f-e44d13730bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c49f43-b1ef-4d39-97d3-e406705eb07f",
        "cursor": {
          "ref": "9106f958-0274-4256-9572-b74598baa274",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cf22e691-1d9a-4cde-af72-f98ae4e77ba1"
        },
        "item": {
          "id": "29c49f43-b1ef-4d39-97d3-e406705eb07f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2d21fe9c-95ac-4839-8f5b-087fff441afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cbfc7b-047a-425e-bf12-2747a3ec9cfb",
        "cursor": {
          "ref": "0cddd266-a962-4fcb-a0e3-4fc5c438c571",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f2342020-2a61-4b72-833c-54ffd388403e"
        },
        "item": {
          "id": "90cbfc7b-047a-425e-bf12-2747a3ec9cfb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f069ebb6-8b18-4dda-bc15-6ac156d17119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d435e5e-ee26-4fa5-98f5-aad3d9225b00",
        "cursor": {
          "ref": "b02574c8-c5b3-4b11-8698-145e7dd49ce2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "06beea91-1148-4951-a149-72d7d4352c5d"
        },
        "item": {
          "id": "2d435e5e-ee26-4fa5-98f5-aad3d9225b00",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "574856b2-2aed-4dea-aa09-5d9acb54f17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b11eb1-aeac-4b54-a9f4-e5ab5c1f75f7",
        "cursor": {
          "ref": "9ebc4f4d-893d-4362-8bf9-b086d6fb5a1b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "44462e05-5dfe-4433-9e59-0deb2670bd04"
        },
        "item": {
          "id": "55b11eb1-aeac-4b54-a9f4-e5ab5c1f75f7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "55b3137d-10f8-4b7c-b376-db3f8af52d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b090aae6-7e75-458a-8c91-673458c3061b",
        "cursor": {
          "ref": "7eb488cf-e8ed-4457-8537-7350bdd0bcaa",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "73675086-e3e6-41f6-8641-d58c40cc2ea6"
        },
        "item": {
          "id": "b090aae6-7e75-458a-8c91-673458c3061b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9c05af05-e44a-4dd3-92d7-869d8a940caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f20effe-1561-4be8-ad81-3e84a8e01738",
        "cursor": {
          "ref": "fce10b5b-9702-4474-bbff-e72e95b6a926",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "99117491-499a-4be6-972d-042076c6a31e"
        },
        "item": {
          "id": "3f20effe-1561-4be8-ad81-3e84a8e01738",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "03b18c30-129c-4021-99e1-538a69a6a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d5b58d-65eb-46a2-b695-694e9aa68301",
        "cursor": {
          "ref": "7da23623-f098-4e46-9dcf-711fb050ab23",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d28c96e3-ca65-4552-ae1a-5c726daf5815"
        },
        "item": {
          "id": "b2d5b58d-65eb-46a2-b695-694e9aa68301",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bc161f72-a9be-4d1a-985e-7977fe804fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410a9ae0-25f2-466a-9de2-894d2ab9b893",
        "cursor": {
          "ref": "8bbaf3cc-a3b6-4a1f-9203-a8d899b17c35",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "951c5444-7ce1-4c3d-ac0b-693c5f3cba32"
        },
        "item": {
          "id": "410a9ae0-25f2-466a-9de2-894d2ab9b893",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c263967c-d15e-4ffc-90f3-a398575f00f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3b4d25-574c-4b48-ba94-d2b4bf95d20e",
        "cursor": {
          "ref": "89292b6b-ae4d-4468-8298-1ca4d585774d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "32ab8f4e-ceae-4d81-8f6f-64e93c274cdc"
        },
        "item": {
          "id": "6a3b4d25-574c-4b48-ba94-d2b4bf95d20e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bd547d89-2b24-4533-8d7c-f9cf38f6518c",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "357aa000-4a5d-4c13-8dd5-7664b4d0f223",
        "cursor": {
          "ref": "8315bd51-a455-4121-9e41-35a8a096bb14",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "95073dd1-b16e-43fd-8a6f-28ea06457867"
        },
        "item": {
          "id": "357aa000-4a5d-4c13-8dd5-7664b4d0f223",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "42afec57-6f72-434f-907d-5bf62c13598e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de629277-b422-43b7-981d-9b19d8ba0230",
        "cursor": {
          "ref": "e8f88c25-6d57-4389-9d5f-eb6ba8b81766",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1de7489b-7702-4d92-b2b8-6e62256e9c69"
        },
        "item": {
          "id": "de629277-b422-43b7-981d-9b19d8ba0230",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9191e317-9a62-462f-9867-1105594c4bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57d3040-bb73-4ee6-95d5-31d10a0b6a70",
        "cursor": {
          "ref": "00ffe869-c54d-4c3b-8349-afb5d720bacb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ffe18af3-a695-4a2a-9673-2b08d8d1996c"
        },
        "item": {
          "id": "e57d3040-bb73-4ee6-95d5-31d10a0b6a70",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "13463771-81ab-453f-8a08-eefda735a285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a52bee-c2e4-422b-b929-f4e1027b49af",
        "cursor": {
          "ref": "2dc53e38-7340-4daf-95a9-a4dd06e8b1a3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "81fdcb2d-060a-43d2-b7a5-bb972937c463"
        },
        "item": {
          "id": "10a52bee-c2e4-422b-b929-f4e1027b49af",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "33f79e4a-cfd1-485c-a830-2d86edbcede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b221864-0d45-49bb-b087-f6e41a43f51a",
        "cursor": {
          "ref": "1098161d-3f9f-44f3-a645-1062f838c4f4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cb488773-2e82-4d68-b23a-31e439010055"
        },
        "item": {
          "id": "4b221864-0d45-49bb-b087-f6e41a43f51a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7362f4ef-2ac7-4069-9ea7-b5d7df8d5a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf1830b-5930-4294-8eff-a0c2135af111",
        "cursor": {
          "ref": "a7affac8-c5ec-419b-96e3-afd78980925b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2820871e-e1c4-4dec-91a1-4b6add2b227d"
        },
        "item": {
          "id": "2cf1830b-5930-4294-8eff-a0c2135af111",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8bcb1ac2-352a-4c07-aeab-295988a68eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2eece8-48b6-4edb-94fd-71ac8ffe7f57",
        "cursor": {
          "ref": "5250e988-809f-48b3-b14b-375cb9ab0855",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d6252f48-0ece-4553-9867-6f9de49b4e25"
        },
        "item": {
          "id": "ed2eece8-48b6-4edb-94fd-71ac8ffe7f57",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3f2e2589-e104-4c7c-a4fd-2333a13ee296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e67752-2ef0-4567-9de5-cfa4da9d4cb6",
        "cursor": {
          "ref": "952fe55a-6823-4a7d-bc43-604dff9bedd0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5870d847-31f8-4445-bfca-71ba87a1f245"
        },
        "item": {
          "id": "81e67752-2ef0-4567-9de5-cfa4da9d4cb6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b908276f-584e-4bf6-9c22-d541c173dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba55862-67ed-45a6-a2ba-588f62a5e2bc",
        "cursor": {
          "ref": "548c7949-2736-4dd8-b129-e3fab0fdf36f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f3b9105-0e55-4d07-a4bf-50831c99d585"
        },
        "item": {
          "id": "4ba55862-67ed-45a6-a2ba-588f62a5e2bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "920953bf-cd88-447a-97eb-dc6237bc2874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8533df-e7ec-4ddf-98ee-e86a792a5b09",
        "cursor": {
          "ref": "2b1a67f1-c4fd-448b-961d-c44081f99b97",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b379827-13d7-469e-a2b1-9b5af9491cb4"
        },
        "item": {
          "id": "6b8533df-e7ec-4ddf-98ee-e86a792a5b09",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cccc2b2a-5207-4149-b80b-47759dfb9519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dfd6c7-9eec-4320-9120-9e3b9f49185d",
        "cursor": {
          "ref": "7923b357-9004-4dc6-90ed-d85e499011f7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7ec552af-8ac7-436d-90a6-4ae3c5c5c511"
        },
        "item": {
          "id": "66dfd6c7-9eec-4320-9120-9e3b9f49185d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a39b14e4-54d9-48a9-83df-8c602000c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaf327f-209a-493b-9843-6ee658ddd9ca",
        "cursor": {
          "ref": "99cf109c-3ca4-4341-8873-f0ab97d24c42",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1339883-e849-49a2-90e1-208d07ffe745"
        },
        "item": {
          "id": "edaf327f-209a-493b-9843-6ee658ddd9ca",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c4e8b319-eb73-4b56-8a62-5865b68bd67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c70a4c-3930-4372-820a-daf8ebd36d3f",
        "cursor": {
          "ref": "beaa1d93-20a0-4a63-8b6a-414a557e8068",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c876c33f-cc00-40fe-a0a6-4876798aa5f8"
        },
        "item": {
          "id": "a6c70a4c-3930-4372-820a-daf8ebd36d3f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c276a1e-a6d5-48f1-8ac7-05c07739fd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9cab04-c981-480a-9f96-5352cd3c7827",
        "cursor": {
          "ref": "9369e0a4-85f5-4d09-8cad-d5a522222780",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "196ab05b-fce6-4dc5-9e69-bc1faa6b259a"
        },
        "item": {
          "id": "0e9cab04-c981-480a-9f96-5352cd3c7827",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "96eaceeb-ca4a-4576-9702-be5023178137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d11a8b-fe8e-451c-ae64-0d6071011d34",
        "cursor": {
          "ref": "bffeb2cb-a9dc-4e41-9576-a01e95e24fe3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5888f860-1b07-420d-9511-b84094137fa2"
        },
        "item": {
          "id": "09d11a8b-fe8e-451c-ae64-0d6071011d34",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "708ecd47-bd8f-404d-b58f-10af1eefc450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbe36eb-742d-44b4-83af-923f48025911",
        "cursor": {
          "ref": "7985520d-51b2-4ace-be1f-d5f1538a10ee",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f445f4b8-7b26-4f87-85f7-e04f994be7b5"
        },
        "item": {
          "id": "ebbe36eb-742d-44b4-83af-923f48025911",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4c1314c6-3f3c-4478-ac0d-807022c63fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae996e8-cbdc-48a4-8c27-3fc34dabc4ac",
        "cursor": {
          "ref": "345300c5-37bc-4a94-a6c7-85c3c4e9b1d2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "376371f6-8f32-486b-a4ad-771562d888b1"
        },
        "item": {
          "id": "fae996e8-cbdc-48a4-8c27-3fc34dabc4ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce0308cf-8ffc-43ee-86d1-a31db95094a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02569bc-9bbb-491e-b720-bcd74ade39d7",
        "cursor": {
          "ref": "103d575c-7938-4483-b64e-14755a686d95",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "be8c5360-fe5c-4da7-941f-d635ada3b2b8"
        },
        "item": {
          "id": "e02569bc-9bbb-491e-b720-bcd74ade39d7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e50f00f8-46e6-4723-a371-7ba45ce570d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e35ca6-5a57-4540-8c6f-d79407710d62",
        "cursor": {
          "ref": "610930c9-1755-4181-8c3c-b94ef0ae120b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "455a6332-f236-4e0a-a41b-774d5528ba4b"
        },
        "item": {
          "id": "55e35ca6-5a57-4540-8c6f-d79407710d62",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "373de38e-06ea-4e3c-a109-ec7d1b303a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91710edc-7579-46df-9fee-5d8c31fd12c4",
        "cursor": {
          "ref": "8fc5a294-a8c7-4965-8a51-dec29bfa5299",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ca7f3efb-015b-408f-ba88-81359bda3cb9"
        },
        "item": {
          "id": "91710edc-7579-46df-9fee-5d8c31fd12c4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ff8487ef-4155-40e4-b961-ce8ad2416c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e25608a-57d0-45aa-b3b6-5ac439015a55",
        "cursor": {
          "ref": "4b438e61-72b1-44c7-817f-a3dfd08f8e06",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f504058f-edb9-48e0-9d71-474fe973ca9f"
        },
        "item": {
          "id": "4e25608a-57d0-45aa-b3b6-5ac439015a55",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5602bf1e-d049-4c08-8c85-fd013a5c405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b33ade-f00d-4f9b-bb8c-54d679ce1fd4",
        "cursor": {
          "ref": "8ebe2b86-ce8f-4a9e-a805-b9e6fafc8312",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "95235ab9-4605-4066-b726-8ee11f7481da"
        },
        "item": {
          "id": "e9b33ade-f00d-4f9b-bb8c-54d679ce1fd4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cb79251b-8202-4f22-9ede-edd8e1496b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b75255b-00a9-425a-a1e1-302e03ecb41d",
        "cursor": {
          "ref": "d7cb44ff-6b04-46cb-96f0-11f0c0a05a01",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fefe15c0-c6d7-45be-817b-055c241bd24b"
        },
        "item": {
          "id": "3b75255b-00a9-425a-a1e1-302e03ecb41d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c3bf7843-a0fd-423a-88eb-07020ed248eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e1c9bc-3551-4006-a4a4-35157093b254",
        "cursor": {
          "ref": "1f8e0933-afc5-45a9-bd89-311b12e16ad2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a9499f4e-18dc-4d7e-869b-66d4806c15a3"
        },
        "item": {
          "id": "07e1c9bc-3551-4006-a4a4-35157093b254",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb259b2e-fb16-4cdc-886f-fbb9a8f2b247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf672aa-5229-4f4e-b8eb-aa425b5a6fb8",
        "cursor": {
          "ref": "c78cb434-4ea1-4fca-ab17-8656440114ac",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "088da8da-3ec5-40fc-8619-c93f60cf93b5"
        },
        "item": {
          "id": "ccf672aa-5229-4f4e-b8eb-aa425b5a6fb8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "48c2b09e-2ddf-451d-a38a-dd69a3a4211b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be086b45-b347-4c5d-8d0d-3e1d0853ab84",
        "cursor": {
          "ref": "c770ad73-e2a3-44f5-ab6d-d9582755c717",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "96f22237-2d2e-4dfa-b397-d04e8f810d90"
        },
        "item": {
          "id": "be086b45-b347-4c5d-8d0d-3e1d0853ab84",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b5592c7a-70d0-40e7-a098-4f5133ca97dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0565e287-5213-4fd2-a668-5b55d89f72e4",
        "cursor": {
          "ref": "e87ea8ae-5ea8-465b-b524-82fb67fbb9a7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20e12eed-7488-4abf-a4bb-ac3a1c987213"
        },
        "item": {
          "id": "0565e287-5213-4fd2-a668-5b55d89f72e4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "41c4e03f-c480-4dc7-9cb1-2860b673af69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0df8e1-72b6-49d2-872c-b2657eda1b44",
        "cursor": {
          "ref": "beb2c293-b545-4091-ae41-ebd017c33c22",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6ec69a8d-bf14-42fe-a6f8-8786147a63f2"
        },
        "item": {
          "id": "cf0df8e1-72b6-49d2-872c-b2657eda1b44",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "22d5047e-4972-412d-8696-5d75aa14eaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d25da61-8f21-44d8-af6b-c95629edf7e3",
        "cursor": {
          "ref": "4721043c-08b8-4030-8f7a-d30c9c7426f5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "27b83ca9-53f2-48a0-9044-5f7b54bd1bef"
        },
        "item": {
          "id": "1d25da61-8f21-44d8-af6b-c95629edf7e3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e80744d9-ac67-4c60-a247-59c1e47968bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbfca66-7645-49e1-960c-50a0c6151bc6",
        "cursor": {
          "ref": "526cb5b7-2085-44a6-b65b-7ba50457af0e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "10300758-bc20-4bf8-bfde-cd9da9d9c395"
        },
        "item": {
          "id": "3fbfca66-7645-49e1-960c-50a0c6151bc6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2ccafc8e-19c1-4af5-ad40-3146d21109ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b599af-3fd5-4a4c-bbac-df738e095398",
        "cursor": {
          "ref": "6c8074b0-7c9a-4fc3-bb50-c853300460f9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "27dea94d-00d0-4e50-8dcd-c36879ceda4d"
        },
        "item": {
          "id": "c8b599af-3fd5-4a4c-bbac-df738e095398",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "178218e6-eb63-4e68-9c7a-c1c5e9cc8fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b10468-3151-48bb-b7f9-56bda01efee9",
        "cursor": {
          "ref": "250d607c-722e-48ce-bdd6-d148d9de5fe5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "57c58f41-9e94-4ee7-a9c6-97b9c24852cd"
        },
        "item": {
          "id": "13b10468-3151-48bb-b7f9-56bda01efee9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eec7509d-2498-47b4-b944-2bf543df0d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5140ed30-95d5-4426-aef8-967238fcaf26",
        "cursor": {
          "ref": "96c1b90c-3131-410f-a2f3-8678887ec788",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90676363-d417-47c8-acbe-62709e09a5d4"
        },
        "item": {
          "id": "5140ed30-95d5-4426-aef8-967238fcaf26",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b33d68e-4729-497d-a89b-ba86dbb68815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5fb39-f65b-4b04-8c20-a776a5890bba",
        "cursor": {
          "ref": "3d17e55c-c67f-41f0-a15b-c7ba70d8c0a0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dffd2dd0-e007-4deb-ad0d-4244a9987ab1"
        },
        "item": {
          "id": "8eb5fb39-f65b-4b04-8c20-a776a5890bba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "61fc59cb-bcfa-494a-a9d0-84415a30086d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b54ac4-fe8f-416e-b56b-ab3d11848981",
        "cursor": {
          "ref": "4a2d0ba4-7d6c-4900-ae3d-e021303fc75c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b984a47c-aeb9-4705-ba6b-a28da9f657fa"
        },
        "item": {
          "id": "99b54ac4-fe8f-416e-b56b-ab3d11848981",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ba1ac76b-4fe0-4975-b3fb-f3aa3911afeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e2d27a-992e-45d3-ac4b-daa7aac9d83e",
        "cursor": {
          "ref": "61898d72-c658-4da2-ba6b-764f705167b9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dfbb8207-d82c-443b-92d1-797a311167a8"
        },
        "item": {
          "id": "35e2d27a-992e-45d3-ac4b-daa7aac9d83e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f9b75f90-e5e8-47f8-b2cd-17b708472376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e94faa-1f9e-49b0-a6b3-63b0fd26cfc1",
        "cursor": {
          "ref": "c3fd9b37-98a3-4e4f-ac89-0467a26fc058",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "33b63e38-7c04-43f0-b483-b7084dff478f"
        },
        "item": {
          "id": "41e94faa-1f9e-49b0-a6b3-63b0fd26cfc1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "00b72747-8a45-45f2-8c86-065fec3c46d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca203be-b519-4357-9c04-a98b9b7bf9f8",
        "cursor": {
          "ref": "5d8bb247-6454-4cc0-ac47-e6607b15f04e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f64da575-9c02-45be-ada9-54589e7813fb"
        },
        "item": {
          "id": "1ca203be-b519-4357-9c04-a98b9b7bf9f8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "96cdaa54-40f8-4f10-a353-8b70ae8b7f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfff5a8-4dad-45a0-936d-bc6165364f6a",
        "cursor": {
          "ref": "f0a037ea-b651-4676-9e48-e94cc602dfd8",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aaa373d4-a3a5-4e1a-acdb-c0513347c4e1"
        },
        "item": {
          "id": "1bfff5a8-4dad-45a0-936d-bc6165364f6a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "846e7945-4dbc-4c96-9dec-1cd05b889b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b33f0b-d6cd-4532-a6b1-d194984c8790",
        "cursor": {
          "ref": "9e36f7c9-17bc-4c69-90c7-e343116374a0",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "52b9ee73-b539-4476-81dd-106d2e049bc8"
        },
        "item": {
          "id": "c2b33f0b-d6cd-4532-a6b1-d194984c8790",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "95df4c26-4af6-4ae5-acec-a5a08ebaf548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699d4dc5-11b1-4611-888f-81f99699d776",
        "cursor": {
          "ref": "527a1ce8-2a78-459a-a86c-b3878e24c171",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8c818956-8d23-4fde-9340-aa4048330c34"
        },
        "item": {
          "id": "699d4dc5-11b1-4611-888f-81f99699d776",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "acf6156d-c1e9-4b54-8dc5-0c4a7073f3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f0a84a-2071-42d7-8032-9dd6a46d6eed",
        "cursor": {
          "ref": "4b05fecd-1f01-4e48-80a0-4394279d9c4f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8ef220d4-277c-48a0-8b11-350c65e3e761"
        },
        "item": {
          "id": "d7f0a84a-2071-42d7-8032-9dd6a46d6eed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c37eb463-5de5-4d6a-baad-485eda6bc996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a385275-d3e1-4abe-a4c4-eac08263cb57",
        "cursor": {
          "ref": "b46537e7-b251-460e-ab91-204974f00bf8",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0703d708-f8ee-42ed-86b5-4bc39409b20d"
        },
        "item": {
          "id": "0a385275-d3e1-4abe-a4c4-eac08263cb57",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "51c408e5-2376-4ccb-a0f8-c71a1d3a2828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a4e3c9-457d-4ad5-b619-49a611d88745",
        "cursor": {
          "ref": "b496b784-a389-4abb-9abd-d307ce0718b1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f800faaa-a830-4b4f-af0a-0e88ede453fc"
        },
        "item": {
          "id": "42a4e3c9-457d-4ad5-b619-49a611d88745",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9f2b288-7bb7-4288-9053-6905abca8089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d64ea27-ab5b-4b48-afd6-178503560f7c",
        "cursor": {
          "ref": "6516798c-337b-4efc-a212-a40780aa8fe7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0cc7d460-9418-4da6-83ba-6bc1a341dd46"
        },
        "item": {
          "id": "7d64ea27-ab5b-4b48-afd6-178503560f7c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "91926a69-125a-4655-a1c1-3933073b4ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f10fa37-0bc3-49b4-92e4-9595a009e8a7",
        "cursor": {
          "ref": "6b6e644b-db19-4d98-a5fb-0067cf80a1c7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bc876534-bbfb-4ce3-9df8-b97a79dfbe8c"
        },
        "item": {
          "id": "0f10fa37-0bc3-49b4-92e4-9595a009e8a7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6dbe243-e4de-4547-bd18-1e154f683a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848ea465-7f9c-4c84-8f51-e735360150fa",
        "cursor": {
          "ref": "c8e54f69-4c88-4da9-90e4-2064818eeaed",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e74c20a1-8056-491c-ab9d-50b500f77f7d"
        },
        "item": {
          "id": "848ea465-7f9c-4c84-8f51-e735360150fa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "803d55bc-c118-430b-ab55-0e9f27de0e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a2a292-ab1e-4788-bb74-ad919240daf3",
        "cursor": {
          "ref": "a90a5c1e-21fb-40bc-883b-89d15a0a49e1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d306d00d-ff42-4ef4-a879-b16130eee3ca"
        },
        "item": {
          "id": "38a2a292-ab1e-4788-bb74-ad919240daf3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "452d5c40-2d0c-450e-9b19-cedc93470cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04c5098-cc33-4916-b5ef-31a3cda91510",
        "cursor": {
          "ref": "b2864140-bc6a-4acd-8738-2904a85bf616",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "256c2049-ce8e-40cf-a2a5-352bb1a0fb35"
        },
        "item": {
          "id": "e04c5098-cc33-4916-b5ef-31a3cda91510",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "34303842-d371-4336-b1e8-daa5fc222d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d79c22-3e6d-4fa0-843e-a0726cc6e704",
        "cursor": {
          "ref": "9622e403-d8d2-4cf8-a1e1-f3b53abb5f90",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fd7f1819-e101-4893-854a-b47453cc5ac6"
        },
        "item": {
          "id": "b1d79c22-3e6d-4fa0-843e-a0726cc6e704",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "48b466aa-83f8-462d-98b2-2ee00cca6bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c09bc1e-83e4-47ba-b709-c4a6fff7c947",
        "cursor": {
          "ref": "fd0fa50f-1056-4fc0-a7e3-2b920025b157",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a8860c3a-f963-4f8d-88f8-5f957d661813"
        },
        "item": {
          "id": "0c09bc1e-83e4-47ba-b709-c4a6fff7c947",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b06aa4b7-a566-4025-a076-082194b38f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e5bd74-9a08-4816-ad59-1dd7b53ba068",
        "cursor": {
          "ref": "c408f51e-dea1-4149-85e7-a693083d1631",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7024ecd3-7c08-4cd7-8a0a-b61ea32ee66e"
        },
        "item": {
          "id": "f0e5bd74-9a08-4816-ad59-1dd7b53ba068",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d3a344fe-6803-4ab5-a25d-46e1cf8e4da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59b3916-475e-4a8b-b3ae-c1faf23ecd37",
        "cursor": {
          "ref": "10cd6053-2203-4c40-9165-abaa091b90c4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "82a22f22-fbee-4a52-a842-82ad80bc4d7d"
        },
        "item": {
          "id": "d59b3916-475e-4a8b-b3ae-c1faf23ecd37",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf999605-496e-42a2-92ab-158908f60e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a313d00b-997c-438e-b0b3-11beaa0a89e3",
        "cursor": {
          "ref": "89c7ea53-c122-476b-8a69-cdc76a27a188",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9256eacc-45c3-4715-81c9-93a2133b27b9"
        },
        "item": {
          "id": "a313d00b-997c-438e-b0b3-11beaa0a89e3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bdd05f7b-c3a4-4fa9-8ef2-132493ae0d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412db192-3e79-4d78-8973-9d8b8f2c4ac9",
        "cursor": {
          "ref": "31166d6f-5c1b-4b4c-8a99-16c0702139ba",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "194d6112-32b3-4c69-8083-62158df9a886"
        },
        "item": {
          "id": "412db192-3e79-4d78-8973-9d8b8f2c4ac9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c2f2090-2e45-4e56-8099-64a8502e9507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77030da-108b-420d-b441-9bcf09de99a6",
        "cursor": {
          "ref": "069aec6c-e6ce-46cf-920c-65e09eb3b985",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "78611aac-b99a-4d29-8f55-194d25cbe6d0"
        },
        "item": {
          "id": "f77030da-108b-420d-b441-9bcf09de99a6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4ee67d14-8122-451a-aa56-bb429a3816be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c9b386-0bf6-4c36-a3ae-80540c76d64d",
        "cursor": {
          "ref": "d1b0b9dc-ac04-4763-84a3-8e66906550c3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "64b2d2c5-c4fa-440d-8276-93307f9fdcef"
        },
        "item": {
          "id": "68c9b386-0bf6-4c36-a3ae-80540c76d64d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c39d5581-cc0d-40fd-b174-55d0cb9a4608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca063e91-45a7-4e87-95cd-569bd7bd6cb3",
        "cursor": {
          "ref": "f97ce7d2-1e5f-41c2-9a74-3066e702250f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6098e7d9-d058-4d74-af69-80510bfc2447"
        },
        "item": {
          "id": "ca063e91-45a7-4e87-95cd-569bd7bd6cb3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "565db91c-b414-40ae-8ecc-aebe3b76eb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcac6401-e8d1-49f3-8a02-9e1e4ca3cdbe",
        "cursor": {
          "ref": "a1483e71-1757-4895-a759-fd3709d027ae",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1b2a5052-665a-41ae-8331-1d343b3c959a"
        },
        "item": {
          "id": "dcac6401-e8d1-49f3-8a02-9e1e4ca3cdbe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a548b9c4-7594-43e0-9664-346f8b0a4fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd2c0b9-e369-4c81-a963-a9e7624b96e3",
        "cursor": {
          "ref": "50e7616a-a3c1-4fbf-b7d9-2f58ec470063",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "eb25779d-8975-4245-a17d-f8749c007952"
        },
        "item": {
          "id": "5cd2c0b9-e369-4c81-a963-a9e7624b96e3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eeb169d7-c570-4d2c-b877-444bf7ac9600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950af3da-c76d-4ee5-b2d3-426b2d82b65c",
        "cursor": {
          "ref": "2e3b44b5-01d7-4689-9634-9d73e55902ef",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "25ab0da4-26e0-4f0f-9e6e-2d5e3a50bfa8"
        },
        "item": {
          "id": "950af3da-c76d-4ee5-b2d3-426b2d82b65c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "62c56f39-a788-4784-b052-5892c32b3378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1c85f7-5f2d-4dfd-8c8f-2929e686fe85",
        "cursor": {
          "ref": "bdb8baca-7521-4611-9253-6c6035e8539a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "30042850-a383-4ef6-9984-23d89cf2e4e2"
        },
        "item": {
          "id": "3e1c85f7-5f2d-4dfd-8c8f-2929e686fe85",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0d98f73f-166d-4b8f-b820-622f422a0fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7009dab6-582d-4e78-84ab-df568a525945",
        "cursor": {
          "ref": "9abff42e-3bb4-4fd5-a062-83da080e2e2c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b3e2cdc3-fc51-4a08-b922-4fd764375fcf"
        },
        "item": {
          "id": "7009dab6-582d-4e78-84ab-df568a525945",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "28bdf849-95d6-4232-af3f-27badc7fcf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d98e10-b6c9-4432-a4fc-4ddb364853ba",
        "cursor": {
          "ref": "d19792d8-0739-406b-bc7c-1c8d51bf75ff",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f3aa52b1-c2d4-4c7d-814f-84887c31649c"
        },
        "item": {
          "id": "81d98e10-b6c9-4432-a4fc-4ddb364853ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0560d77f-4919-4086-a88a-ce648b9e3092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663e43c8-3b18-4ba3-ac38-088815b5930d",
        "cursor": {
          "ref": "6d24c88f-2a6d-45ee-ae75-1c6987415176",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2887daae-b09d-4a93-8dd0-9d10fa92341b"
        },
        "item": {
          "id": "663e43c8-3b18-4ba3-ac38-088815b5930d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0751586d-7e9e-4a31-97ab-eb7de484c7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c08089-1d26-4357-ab81-d95bccc375f3",
        "cursor": {
          "ref": "91582d2c-8e5b-41f5-ae3f-f21914bade48",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "92b07f96-8ab9-477a-89e3-6b3411afe4be"
        },
        "item": {
          "id": "66c08089-1d26-4357-ab81-d95bccc375f3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "549fcc9d-6c0a-4921-9318-ef91878f3fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe5c088-7084-417e-8bb4-df343967758f",
        "cursor": {
          "ref": "4db29051-29b9-4a07-b11a-87276f5dcae2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1a9c6f35-a866-40d8-973d-7ccd256661ca"
        },
        "item": {
          "id": "2fe5c088-7084-417e-8bb4-df343967758f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8b9962bf-58af-4618-a6d8-d40bf2ebd59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35603ce6-7e7d-4378-8fed-349f5945c293",
        "cursor": {
          "ref": "5fb0a197-4a34-4c3e-a342-700c4d1ef6f6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "66e20d35-e198-4c41-bbb9-5d46872af8e7"
        },
        "item": {
          "id": "35603ce6-7e7d-4378-8fed-349f5945c293",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e378a15a-2ad0-42b3-b2a5-d2d71f8e86a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cdf3b9-5058-4ef7-b002-c2ec946c38c3",
        "cursor": {
          "ref": "6107505c-79a2-42c4-a7e7-67918ad7329d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b1921fd8-e881-4650-bf79-1b98bb91f89b"
        },
        "item": {
          "id": "11cdf3b9-5058-4ef7-b002-c2ec946c38c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9d99ffea-2e89-440b-aac6-4869138bc79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c47bbd9-b99c-40a9-b7e6-be2b710a36a3",
        "cursor": {
          "ref": "5a3eefe5-4a63-43c1-848e-abe78d834bde",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5128d706-395d-480a-8d7e-8d52b7d7176c"
        },
        "item": {
          "id": "8c47bbd9-b99c-40a9-b7e6-be2b710a36a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d90a9e94-6865-4c77-96ea-6d5f36d6fca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a6e1b7-b8e2-418f-b727-72a32ecfeef6",
        "cursor": {
          "ref": "945cec19-1c1b-4ab8-bfe8-9dd0afb58c8f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d9cffd40-471e-42f4-806f-a5cf2dd4328f"
        },
        "item": {
          "id": "c0a6e1b7-b8e2-418f-b727-72a32ecfeef6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b24b5790-4c4d-4181-9505-c11546cf479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef948552-76d8-4ee5-a99f-4921bfc24a2a",
        "cursor": {
          "ref": "61f6034d-bcbb-43db-b937-11a2103b305b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4a464445-0425-4fab-b7fa-759620b2c234"
        },
        "item": {
          "id": "ef948552-76d8-4ee5-a99f-4921bfc24a2a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "657fd6f6-35bb-4252-84c6-52d919122c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5fd23c-271f-45bf-bc8b-f93c7faea1c0",
        "cursor": {
          "ref": "116a2760-46dc-4ac9-af0f-3416fb35cbd1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "50c3273f-aef1-407d-9c03-248f987ea1cc"
        },
        "item": {
          "id": "7a5fd23c-271f-45bf-bc8b-f93c7faea1c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8f3f9085-6eb9-4173-b59e-92f8d48a08a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4da9c67-baa0-429e-b894-c73f205ba673",
        "cursor": {
          "ref": "375f7356-ceb3-4ee7-a573-441fc075add3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d93b3e4b-f4da-4828-94ae-477d9890597e"
        },
        "item": {
          "id": "d4da9c67-baa0-429e-b894-c73f205ba673",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2c3815e6-9301-4623-b054-9900042d1a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8493371-0633-4fe6-a828-76c79d53f210",
        "cursor": {
          "ref": "9fe40b67-129f-4c84-b451-231d1584e78d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d5a49768-6f98-468d-a60a-47fb36e284a1"
        },
        "item": {
          "id": "c8493371-0633-4fe6-a828-76c79d53f210",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a4a387ae-c806-483d-a066-b6fcea9ec4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0505c550-1df4-4f4a-bc0f-1e8758284133",
        "cursor": {
          "ref": "78c012ae-e8a5-49e6-b8b0-8121b183ddf3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "59f3af23-708b-4ed1-8400-9dc8761ffeb8"
        },
        "item": {
          "id": "0505c550-1df4-4f4a-bc0f-1e8758284133",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bfb135de-c3cd-44ae-9f7c-267c10694d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e129cd4-cd04-436f-b75f-6065cde736e0",
        "cursor": {
          "ref": "aa9a5b0d-4007-4741-82d5-f7fa1b351304",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f07d6c55-fa18-48d5-865c-5709fb2e0cbf"
        },
        "item": {
          "id": "1e129cd4-cd04-436f-b75f-6065cde736e0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "62184377-d3f9-450b-96a2-7201594ff19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149db423-ca62-45a0-84ee-a6606d1d9c9b",
        "cursor": {
          "ref": "34497cf9-d8cc-4bbe-a19f-daca325443a3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a5b321c7-330c-4c4a-8747-580ff88fd99b"
        },
        "item": {
          "id": "149db423-ca62-45a0-84ee-a6606d1d9c9b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6607ff4d-1dba-4cc1-8f52-e1c97f457b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d53e6b6-1873-4c0a-966e-63aa549af2c2",
        "cursor": {
          "ref": "ee00c4c6-f1b3-4cfd-ab31-8e4d7b78198e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "59b976d5-7655-4dcc-95fd-fe5342d703cc"
        },
        "item": {
          "id": "5d53e6b6-1873-4c0a-966e-63aa549af2c2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5f47ff89-ab6a-49d4-a239-0fd238475bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa90177-1aa8-4456-be31-df8a923407b1",
        "cursor": {
          "ref": "af57b531-c35f-4074-9816-0f601245b4ef",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a4695f73-5c4c-48ee-a65e-d61d5dd0a7c9"
        },
        "item": {
          "id": "aaa90177-1aa8-4456-be31-df8a923407b1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ec2d7ed3-6177-47fa-ae6c-649aaa1aad2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92444812-b3db-47fd-8a2e-18f794a32b79",
        "cursor": {
          "ref": "2ebfbab2-9ce4-4ee3-a697-b2cf975c7fdc",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f318082d-737a-44a5-aa49-b5742c729e99"
        },
        "item": {
          "id": "92444812-b3db-47fd-8a2e-18f794a32b79",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3e98638d-5905-478d-8551-eecb64a1378b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f04ead-eb06-44d0-8493-45243bec302d",
        "cursor": {
          "ref": "959dec78-57e0-480b-9cf4-7098c9fa9c4b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6eaf8fa9-56b8-4a6e-85ff-a8c9fc782eb0"
        },
        "item": {
          "id": "45f04ead-eb06-44d0-8493-45243bec302d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63e5a7d2-5cd6-4b60-901e-6ac5bc13b5c1",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d5b65c-e0da-4eae-b00a-3410059433d3",
        "cursor": {
          "ref": "a2457343-29ae-41ec-b055-895363d41d3b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fa358965-bbdf-4166-b952-59a3ddc4574c"
        },
        "item": {
          "id": "06d5b65c-e0da-4eae-b00a-3410059433d3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1588488e-c359-4f62-ba75-d3462dbb3fd3",
          "status": "OK",
          "code": 200,
          "responseTime": 3182,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e40ddbb-ebe0-4cad-9ce5-c7f0271b4335",
        "cursor": {
          "ref": "11c2d694-febd-48ff-96c2-b5fe1d8a7294",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f84f4597-35b9-406d-8d76-be59cada933f"
        },
        "item": {
          "id": "3e40ddbb-ebe0-4cad-9ce5-c7f0271b4335",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1fd77bde-839a-4ebc-aeb0-e56841721846",
          "status": "OK",
          "code": 200,
          "responseTime": 2477,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5233ca98-b52e-4323-869b-68cac576750e",
        "cursor": {
          "ref": "dabbf4b0-0f96-4c09-8bce-a11138d2783f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b14d73eb-8176-4857-9049-03896fa5b7d8"
        },
        "item": {
          "id": "5233ca98-b52e-4323-869b-68cac576750e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54aa06aa-3e47-4c86-b513-12feb7c1582e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5233ca98-b52e-4323-869b-68cac576750e",
        "cursor": {
          "ref": "dabbf4b0-0f96-4c09-8bce-a11138d2783f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b14d73eb-8176-4857-9049-03896fa5b7d8"
        },
        "item": {
          "id": "5233ca98-b52e-4323-869b-68cac576750e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54aa06aa-3e47-4c86-b513-12feb7c1582e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f47d4a2-0b38-4ecc-99ad-361fa1d0bd49",
        "cursor": {
          "ref": "8707bc44-bfb3-44b4-b1ac-bab04a6e90ac",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "604abdb9-ffa3-4d84-88e3-47e7ee1fa938"
        },
        "item": {
          "id": "9f47d4a2-0b38-4ecc-99ad-361fa1d0bd49",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "887bc45b-afba-40ed-827b-392af6d5c896",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee7b957-6bfb-4ad8-9092-b7ded90098f3",
        "cursor": {
          "ref": "8e5280b3-c4e1-434f-92ac-71eb0b52455c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "13f14e67-c96a-46ce-8a3c-82928d531b12"
        },
        "item": {
          "id": "eee7b957-6bfb-4ad8-9092-b7ded90098f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5f39d583-515c-4107-8054-a088c508cd63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}