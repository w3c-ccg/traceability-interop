{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f8ec6c54-a6c1-466b-894d-eb11b00086f8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45011014-5033-4964-832e-e499167f6b96",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3239766b-fcd4-48c0-bdbc-0a24fe4bf291",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9dfd273e-b0b7-4656-9630-757cff9baeff"
                }
              }
            ]
          },
          {
            "id": "1d241244-f657-43c3-abdc-4c56f60af80e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47ad82ee-0aa3-4fb8-9b84-0426558cc77d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d0a46e9-b011-4c3d-8636-d718d37d4eda"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8c6a9d14-3a3e-4b3d-b1e2-8a18d8993abc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c2c608fd-6762-49bf-a1ed-24dda17bbdcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28512e0f-c280-4089-aaf0-31fd80f75024",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a7965da-9069-4848-9e76-8a54e14c68ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "554b598f-bc1c-45c7-9eea-d50074b823a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2d87670-9d84-4870-95f9-dd42f45e57ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "041a9a78-36ac-4da4-b671-27d2d364b6a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abbdf78d-d57e-4cfa-ab92-755c9c56d257",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8d039e8-0fff-4646-b89f-eb182d9036ed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84a0c0a3-92fe-4230-b90c-26c8dece6a32",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dd6ca061-8cb9-448b-8840-aec9178c2fcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acf19af1-aa71-4fe6-9233-696dc4cf0ac5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71906282-0484-4ea3-8d62-8a6429fbdfd8"
            }
          }
        ]
      },
      {
        "id": "f769d44e-8c5e-4958-9002-fb2539f9f157",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "19633177-dbad-4358-bcde-5f827f95e6ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9b99ff1-ed21-4867-9cdc-5c3a591dee26",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32bbe37a-f68e-4052-8839-02b16b0ff2e6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f676f63d-15c5-4db3-b0f5-acf56e16d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97e0529f-0ffe-4130-afdb-49aa0f31288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de7b0aa-8efc-4eb2-8206-a75222f85d88",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ff7371-fe1b-4d71-8ff2-5f9b83eafd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af1c1db8-1984-4ede-b57f-3bf675e81135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e919da-2bc1-4fed-8dbb-551870683e1e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ef51f9-402a-4eb0-b269-b95e280a738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aecc305f-ca60-4d0b-ad03-078db250f3f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5454c409-023d-4621-a1e2-57052a0a24f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9b4de56-8551-4bb5-9505-6b9d040aeab7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f975b663-2194-429a-8e3e-2900e02ac307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4da884e-c43e-4eea-917c-aaf58a25617c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8e1808-01c3-4919-addc-a88166841b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57266b99-3480-437f-b321-d999151fcee2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8764a276-f0e8-46dd-baf8-2e498692e409",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2174d3e-921b-4a07-b952-422e1284faed",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e16923-7542-472d-860f-bc7fbc3cc606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "699123a1-dc49-492b-8199-a79a70fd17cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d34f8133-ce6c-4ea8-88af-096417cd9816",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2aecd8de-b148-44d1-a396-e8d3bc2d8f15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca4148f8-3e25-4dd4-a788-ab5ea06799b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78de6dec-10ab-4138-8319-b335ec0143a5"
            }
          }
        ]
      },
      {
        "id": "805efb11-4ce8-41b0-95fd-d8770213f92d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fbff31fd-a400-4119-affe-6dab86801de7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bfd561c-621f-4b5f-b5b4-8dbb568a6b7b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "af0021bc-7105-4ddc-9c86-a83035170d66",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ac1f3e-d369-4166-964f-8fe05033fb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38d347f-1165-4d3a-afc1-44b40aaa2408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bced90-4223-4545-919d-ff889df93da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a4cd6c8-5f37-4464-a0b6-8dde5c9b9e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12708965-649e-4dbc-873b-0a95a891f645",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0832d7b2-28c6-43b4-823e-5c22f9819788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f11ab1-692e-4a2b-aff1-d93b29630bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389929fd-782d-4df1-b759-4765be979b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "653c918f-d1c4-4894-80fa-41174924900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7018e4b4-463b-4d7a-a0fb-c8568b2f68ef",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec552f9b-57e6-45d9-809a-7d01b607f80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a61ebc-ebfe-4aca-8154-61fc080675b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db574574-a121-4011-8ca6-39b6a7f59ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05a2335e-a52e-40ae-ad41-aeb718e3f4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8263dd0-07c2-4033-93fd-4f0fc728784a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffd55da-b75b-42a1-9966-43ceaf02b0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21311f46-1cf8-46a8-ad3c-3c5beceee5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b0a49e-564d-4ef1-a279-3a6796ab7d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdb3457c-5fbc-4c5b-a08d-b632e19eb95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb991c04-78ea-4511-9366-a75a6318a5b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5912cb1-33f2-4fb9-9663-af8ca1731021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77030762-65e4-4ff9-b709-68afc119b59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3eabdb-ec17-4bc9-abd8-11eb7dcd400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "071b1880-4166-4df4-a5d1-fb702b75f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f411d-44b4-49fa-85d3-4cfef0f11c98",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896e30e2-7a6c-4c91-aac5-6e6b35aa4289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cecef72-fc76-4380-a122-f9d7c81e37db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc70daa8-d09a-49ee-a0c1-6154710e5966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "055ab5a9-1216-4780-9ff6-f1597f7a27da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8c68a6-7473-4034-aa02-cc71677a9036",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4420485-b84f-4410-9032-28e647da2f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d725a4de-3045-47b7-b805-95641a446030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69ba220-fd12-4a4e-8d0a-7d24922c3157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60613f86-30a7-40cf-875b-8cf5c4842b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29196a1b-70ca-4fde-b14b-810883aee69d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd0241f-d6a0-482a-b8ac-3833c0a3d5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b8e888-1cf0-4adc-ba56-118485f60c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f656b9c4-0f97-4f20-a1ab-0d1d832224a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31b48d0a-bc2f-4425-8843-d56565f379bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4287e2-0c36-4fe0-97d8-12da5c150919",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c075a3-988b-40bc-9463-630c5be1dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340bb4e1-5bfe-483f-ada5-94b55d621a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b8a8e1-6f2c-4a3f-9199-c0ca8ed4ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb3ed316-7324-4a03-9371-e347bc9d587f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f2ed4d-7f37-49f5-98f6-77daf515df3a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8671feff-6485-498b-a62a-083c01489ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e393f59-f97c-4d6a-a505-b9115f4caf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9596a85a-1f97-4085-ab2e-af46002670c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d6152d1-a78c-46a8-9414-a54589dc2ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e4fc5b-71ae-400f-88bf-827683f21e48",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacbfc16-66e6-4e12-8cc0-8a4709678a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158faca4-5748-4bc2-9bef-f9afd876baca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85954f61-95b7-4643-ac3b-99e05de215ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b2da4c9-cec2-4741-b020-d60a84301817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17616631-15b7-4c5b-af7f-feec8020d993",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9a60aa-e2c0-4623-9bb5-5dffe03836b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7e628e-dd93-4a1f-9d33-805ea26eee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456b22c2-cbf4-4ac6-8fcd-a6f543b37dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aff8c21-40fa-4910-8cdd-c05ea56fab61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a90a0-1764-42ea-afcc-70709e6b6aa9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6374414-15c9-4356-9704-29fc2510f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4879e8-6bfd-483f-80a4-fbbe45d2e210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02afd72-0e2b-4f1d-a263-1418d82bf1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e4c3e63-e907-4142-9f2a-e01de51c1fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f01cf9-aa60-4f2a-aeb6-fa996dac25b4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846d028b-1de8-49ee-aa74-ce68f38fd561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49375ecf-670d-4d67-972b-709c61f45740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81089a79-a866-4a4d-b21d-85a4c595eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "223e3e74-a971-4c71-a38f-167d78d03864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bf482f-f74a-4f35-b71c-1cbed1db58f2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c43f05-d481-4dca-90bd-f7f5aeb9d2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17732b0-6b75-4c9c-9df1-a3f475137c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aa7fcf-c4f9-4940-aa93-87bde13ae5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b242170-2393-4199-92b8-5be0854476a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a587cac3-791d-4587-9848-22cdd37d00af",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d9235e-ac91-4e8b-aa9e-233b6ce1a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184d006c-26a6-4635-8558-1219bbc55fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7a0b76-4514-4abf-a9c8-a069429f97f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c61838-6e02-43e5-8552-a2f3ecddf895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e295b7-dfb6-4f81-9483-f017587637c8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edc2ba2-50c2-4a30-a6ae-39fb3d61ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407aabb6-2806-45d3-b6f1-6a285dc9a817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eacafc-fdd3-4cc0-9c5f-282e1a3d5528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a290fa9-4f59-49d5-bbc5-2471051ad14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f84e6aa-7fe7-40a3-9b2b-a9b1e7433d6b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d3b307-bdfd-4fe6-87de-f8c308cc4d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd89d1ff-b150-4b1a-a3f2-1a1d4f47bb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b711e7d-ec34-47e9-847b-9be9a01eac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a314e7-3f25-4465-98e1-dd2d19294b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a667e30-4988-4d35-94e8-1a464367158f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b095bd2-e48b-45ed-96b1-662bfb5d8b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1692f04b-556b-48e0-84b0-d799539a1ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cc409c-63de-4f21-801b-cdb85dd2b4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c24944-8aca-4877-bf10-3a72b4c80aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111100fe-d0d2-489a-a97a-57df3afda93e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ddf744-b146-48da-8191-578315bcf6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae961af2-6f45-4fb2-b945-d9131baab610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53462b4f-3071-4b37-8514-dcedbb2f8acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3777f45a-eac0-4ca2-bce3-5092a3826092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b192d3d-367d-43f3-bb7e-4e85232ac681",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f3e3ef-3b83-452d-aa2b-b4b72fdafcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c35df0-2eb7-46bb-b3bd-ce61a5c56244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4ec4c-70bc-48dc-b732-081cc87ce240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4a8d3b-3334-48a8-99b4-5ac67dbb5a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c861a1d7-1ec2-4707-ba2a-02e537e34439",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9bfcad-9e83-49bd-81a9-0b6b7e446186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c451cd0d-473c-4b39-bb0f-d61885cf7e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c030bad-6e63-4a82-9299-187b1e37ff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f656a663-1443-4004-8231-26e9385e2367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ae5e8f-b4ae-4001-9853-50959d95f102",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6e9218-c058-486f-a710-bd10b270f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452f15ee-6e30-4c35-87de-91306c0b71f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73a164b-10be-439f-9059-c3759b22a6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abdfae3e-f1e7-4c57-921e-b870276d65b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276373bd-bbd1-4082-98ab-5fb57c0c43ab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fde7fa-0f38-4492-a667-dcd4214b1042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d0db6b-d5ee-442a-97fa-6a6422d81b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d08a7d-092f-467c-86af-83f9283af311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ec615f-2c35-40c6-b250-a19c81e2feff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1003363-a029-49e2-85ed-944405834822",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1178393-5a14-4f8f-b422-54eb8133ec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10af8ec-fcf7-47a5-b92e-eadc04fa0e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac4e645-75a3-4a4f-833c-29d9293c28d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c636bfbc-faa4-4bb7-a80a-0160e669aea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab2c6d3-7028-4cbb-9b48-32cf75a458cd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b21a9d-9a5b-4aa0-a2db-8dde1bff2716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebb653f-de64-48c8-9744-c85f29efe420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5a4335-2939-46ec-9fec-484151b3834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91117098-e88d-4daa-9963-4917df9ade72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314f73bb-b32b-4c54-8adf-e4b174baf612",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e36b6c-a96b-4231-a39d-45c80cda8a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd5cece-3f4c-43e3-aa14-b7c2938d4c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c59f18-456d-4e80-917c-be1c8d5b4c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "582e1252-b2de-4c09-905a-b666b2a20636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99431d0f-9ea6-47c9-8029-d12ddd6366c8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a166e2-5a74-47d8-9c28-bddeadea29d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128ca747-5848-477e-adc5-bf84323219c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760498c7-0ffc-472c-8eac-e4b2d1744737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49f646a-2183-479d-8a98-5c9832ba81d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606a9845-979a-4081-aa23-9490b0923c8b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ded395c-15c3-45c1-9057-d4b3be566638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca7c167-cbe2-45ba-be39-770b06a6c884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5b2c6d-ef00-4b82-ba83-2fc2fc2e35c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3163aea5-1a90-4eab-86e8-0ef2c61c5f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86911ba8-6b28-4380-aee4-e491dbdd6728",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1724a8ff-09c7-467d-acb1-9c2f919d74c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfde1db-524a-4f97-9728-ea703c839e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6ecc5f-e28e-4e69-ae0b-6cb5b3090cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a036d170-858a-4a0c-b079-3a29345fbe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ef0d8-7035-4959-93d7-4e45e3b23ba2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f58db8c-4d08-4084-a5e2-7fc8f4628927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d91756-81bc-4467-a142-31aefce3aadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5313c4d7-e3a0-4005-8706-12d67c27bc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9efc3916-4d54-419f-b25d-b46e9e9379d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a191c3-b712-4d90-be47-fcd2619d7a7b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efef9a10-9949-427e-9b23-58cc3b47c059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56251b3-4829-4e8a-8864-a999a214e828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6520575-db17-4f12-a607-3a0d4bafd981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5048c980-464c-4d9a-8c92-67fb046580b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586d781-f897-4054-8730-9d136220d7aa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712cf0d1-5513-43ce-8d56-4e0247e9c71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbb75de-a646-4e68-8e69-e81401633563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740950fe-f7de-43de-8ccd-ab3abf200c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66effa16-e8dc-4d1c-8a9c-fc238d183bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a590e-cc42-4e91-813c-27e4c49fdb5a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4711ff5-af66-45ad-8916-91bf02bbead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9874a2-83d9-4564-9ee1-084abf3f509b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f510340e-5b80-4c2b-a669-7db4a093f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5c27fb-ec70-4b3d-a4e9-38598012ad49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1088a75-4803-4f89-89ec-ae0686b250fc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9278aad4-2785-4472-8967-03ba12f331f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd4ea5e-bbfa-40b8-b58a-fed5ffbf12a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271f2dc3-8f64-417a-ab71-608c92390aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0d89d9eb-8de6-46d1-aed4-a4bfc135b1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7394ec65-3c8d-4478-a4af-30474ba89d8e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5166a7da-d438-467b-9dc5-2bb9db2231c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8300695-95fc-4a38-808b-816064d05d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf5a00d-f995-4964-9143-a5ad24aa8d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac94c6ad-94ff-472e-832b-5faad09e4f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e7f5e1-a3dd-45bc-a7e1-63fb8c3b8bfc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b39784-d8e1-42e5-bd54-dee6e0dc9d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7f2c56-012b-4461-bf77-1fab6a38c5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac7d0f2-e2aa-4db7-bb0f-7dbd587ab2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34f95d99-d96f-42ea-b5d9-0fec741e919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203f31c2-3648-42f7-8580-a206953577cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28baa78-7a76-4bd7-a9d3-b36b13fdb457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f00085e-e025-4dae-bc87-b2a52f8e3249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba9d120-112f-49e8-86df-54bb951cf64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8053db7f-70d9-4a1a-a07c-fb8dd96e52b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50231d50-b0bd-41a2-8a33-fce80ecdf31f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b7f70-b664-4e93-854c-5b09a6dd7ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01923a2e-8bc5-48a3-87e3-ff2c643561ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65fd805-45a5-4b82-a3d2-54028db849de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba68be3e-59de-4a1e-bfae-50b04dbca5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e165e3a5-2d62-4593-a5ed-a9ecb1159e4a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34699c2-d60e-47e1-ae75-825b3ce48bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c7e495-03da-4fe4-a7be-272b1d2a161e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c338a23-fb46-4429-b980-a4433db9230d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "867b8683-e5d8-4f40-87b1-498f9bd187b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a119d9f-1e5f-496b-a696-7aba9e1e46ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0863a7-5841-45fc-84a8-e93b1791003d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ee4e57-b3bf-49eb-9d52-aaebbf7d42a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e1aff3-25e2-4403-92e5-1a3e4b6c9fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9615bf7-e522-40e1-aeaa-5f1f5702e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d3782-58b3-4859-b43b-b2ee24042dc8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f155c7d-d720-4b7d-ab1c-5c2164f93b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ef2ec9-8ed1-447a-a3f0-c48d4abad7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4cae8e-6140-46e5-828b-71da34f75576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1e07a6f3-dca3-4a93-afc1-3e6835e8c6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d893d96f-5f79-4539-837c-d5099e7b9348",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2cd94a-68e4-4980-b7d9-110eb23bbc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fbf48e-35c6-4bd1-97b4-41058ed2968a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61df5dd5-4244-4eee-b813-1801e6b353cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0330728-b19e-4538-8cfa-8b35941934b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da25f43-2506-44e3-8037-362716f59fce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49660879-4837-4117-9e7c-5645fe882c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf15fcef-cc10-4388-be90-81473f206790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a6daae-2381-4d91-b454-aa8b2c338cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5406d6d9-0907-444e-90c1-72481245f53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5650e82f-0b9a-46eb-b374-a9fc369ad47a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb543fc-bd8e-4802-9e82-f036d15563a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c82a96-5dd1-4580-96e4-2fdf261d4453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed003a-1ebc-4dfb-b432-dfde7a1a5690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfbe29e-9f5f-474d-ae38-6ad3e339f8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af06009-c4c7-4bab-93e3-901ef8eb529d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd5c44c-ac70-438e-b461-ccd2769c3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c66576c-5682-4b5e-84e9-d15f6ec556fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522bea4a-308b-4ea1-9505-06bd5a5231ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d087af-15f6-421a-9b39-1928f950be0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bd8885-5cf5-4e7a-b54d-ae1153f67e1d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf0774f-2825-47bb-8ac1-9747cfdbade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446b4408-78f5-4ec2-b5db-8fc42aea5b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803efeae-d62a-404b-a5a7-e1c1241fa9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34da96de-6600-42b5-9a84-0d8a2ce5e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0079da1-2705-4ec6-88f0-eadb79b7d250",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c1d105-d4a9-42c8-b3ae-d44ee61e4b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759eb7c5-78e2-4a6e-89e0-2acddf952dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73ec5a0-1f13-46e8-b71c-d54ae40a0e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51498c64-82f0-4e88-9f49-9c8ca4374f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9999a5fe-8607-4019-884e-b08e70f34569",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138ddaed-b50a-4b10-94e3-eca266ae6dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4478f68e-a75e-42d8-a315-2456beccc39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302dc080-cdb2-4177-bafb-3aebd437b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf628f66-427b-48eb-a28b-6b1da6c338d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73da3ac8-d896-4b90-b21e-7db9d703058f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b7f8f3-0959-45e9-9638-b1ff878b0ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cd4c93-7d03-4abc-907f-191563705ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a7fa9c-01d5-4c2b-b02b-969da5c0dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8b58b9-9524-4a92-af79-4b0f5446ed5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e3a761-dfa2-401c-ad77-f2bf245716db",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e202162d-9dcf-4d19-9130-ab9ddb372c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67277853-abd2-44ba-8f9c-e1ef648d22c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b28a377-ba15-48cd-a412-71f43429660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3303e8-361b-4fc5-af82-46737758f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f0e853-1fba-49b0-9b55-96111ecf8f38",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2158b55a-642e-42d6-965e-4cec218fd1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1876bdf-7670-434c-87d0-43c8956022a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eaa87e-6b6d-421a-8ad6-e0f338308c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e394de-8247-41c1-bd03-35b8c51624ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6776df20-fa0f-482b-85fe-6c6a84cf94cb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfd8cdc-e0de-4428-9cdd-91c9ecfa89d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2097d4a4-3fbe-4e30-b043-947042617310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277b9c0b-1737-484d-b4a2-09e68b595055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c2bab8-cedc-4fb6-8985-0da8f3e10e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa920c-77ad-45a6-8c89-7a01136380df",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b8d781-ea48-467d-a10c-3586be9ec774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d1ee4a-ea85-47ef-9851-c2e6cb17b53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa6f29c-b208-44aa-b954-fdcf86f4573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a5d994-366b-4b18-a382-d0da2f0c983a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e084d3-61b9-4b4a-90dd-f59d52fae44d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248396dc-5484-4876-97be-55e8a777ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9d3e61-e70c-4c84-abd4-cd2caa85f9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921c9a9c-7739-4249-abfd-0a4057ff4b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fa86e5-6976-481b-9e26-94412db8a773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18ae122-8350-45b0-a9ad-22b1f796fdde",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9842c5b9-bdd2-473c-8e23-a7231894bae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f70680-998d-4363-8022-08c8be6d3774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09f848e-aacc-4163-889d-18677155e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8f6d36-1311-44d0-8b7d-7e0304d57b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447b47fa-563b-471d-8d17-8d0668401b2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6213353f-7c4e-4f49-b49f-9a86d523f377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676cc42d-13fd-48a6-96b4-e5d559af268c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cbc653-a242-4822-b9ed-de0299bd299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6f4d81-ae25-4dd8-bb1b-0c2a11aef451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baba1797-49dd-42f6-982e-9fefad40e211",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee74d58-436d-4d5f-a0f2-59c863ebb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b7883f-05dc-4b5c-b9f1-20aa1b92f04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4dd11d-ae76-4a91-981e-9264e69a965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43160e11-ea3b-49fd-9804-b21c16dfe0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1dd320-dd5f-4f93-a6ba-94cee5b15669",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ae4065-9a84-4910-adc8-9c2a8d4ca19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88178e82-bc7e-4c6a-996e-282ec6b768af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ad4f5f-e224-4399-9587-ddba713dc9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49fbe105-cb3a-4162-abf9-792399d50ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3029965-48b2-490c-901e-1d4ad0603a88",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceae6f1-9b37-45c5-be0b-ba15a9accba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aa12a8-063c-4215-b6a7-dcd710c3e985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca0b74f-2272-449a-98ec-1bbb6e8b1c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3392c5c-6a28-4d13-8cb1-422207a3ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5989d2-7e42-4be2-af88-fc34def9d903",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e2484b-3aa9-4863-8cc2-c8a442b8fce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d4e97b-aa1f-42b1-a9b7-9ed2b6d6a53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f962d7-c0a6-4908-9f12-c8aa1b3c0549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "868f188d-01ff-4d90-beb3-ad6b84c04177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4eda69-07e4-463a-bf6f-4d823dbdf6f9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1804881b-31aa-4295-a4c4-a8c83c826dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da051266-b9ea-4b51-8249-7b3e7b7dd424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fa68f5-717e-49c4-8915-88fc1176d339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e414a193-b7a1-4256-bdcf-1d839a5e3fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e2be8e-becb-4156-b284-4c9aaa885fa2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e7a66e-8509-43d0-a221-3dc3422e5e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a667f719-1cc5-4b80-98e5-f53534460401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d417474-f4b7-4f14-a6c6-eb721704bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e1e7f0-a237-441e-b1f2-297fe4248d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42da62df-c0ad-4d4e-9e2e-1f90c5725617",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6da9c4-d354-4b11-b573-92fb8c9d782c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a4927a-14e0-479d-bc65-1e888f237f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58bf0e0-e94c-469d-b389-cc586e5b2d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "711dc070-c1ec-48c6-a99d-7c3d5c814238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbfe25d-bffa-4664-945c-3fb04241571f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ceb14f9-4051-4685-b79e-e22809a45e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5e5226-b598-4155-83e4-d9bc48f4d50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcde90f-9847-49bc-b474-a320a192a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cc633b-f4c3-4c02-a8be-7fef41c031bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491479b0-791a-4b7c-88a2-75e62e3a5d73",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1419cedf-688d-4739-91e5-8bceae022323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9d6993-a583-48aa-9438-dc141ffe05a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce6dbf2-2f4c-4dd5-ac59-f4a92058623b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b150aaa-e7d4-4677-9441-f73fd0528831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb176825-3161-4c91-8b16-4fa46bf23f06",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10433427-179a-4afd-8763-c71cbf0a5a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942a2bd8-9974-40d5-8de9-20dcd91fcc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4a4112-0d92-4d26-b7a9-4f71ea795333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eced9fb5-31e4-428c-8be1-0e21528cb73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daa92e8-d2cf-4997-8731-fad30d0b5c54",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1c3294-2e3f-4e54-86f7-384721ee9169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d079a60-25bf-43f5-8ee1-75437322ab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9774250e-01b2-4f46-87bc-aa77470a846a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b384b3-84bd-4815-8777-aaa8ecfb00ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7478ffa3-2c2f-4dae-a278-99f532614025",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c578ab93-650b-40a0-a0c8-5b52e1761995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a00184-7d52-4dfe-a7fc-7302741ee12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8600d6b-f5e0-422e-bfd4-7d515cf34dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4986980-8eec-488e-b4f6-7c389756bc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5bb525-30a2-470a-bb60-16087eee1506",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a89adcd-f7f3-4e7d-ad46-954f99600664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2a3767-a99c-4a0a-8a3f-e53edd96daf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7223f8c0-d773-44cd-bfea-fb2dc60560b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "257d0c77-c793-45bd-8015-1b8e25cc6065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16441b0-a462-4a1a-a345-5ee0be5c5b8f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b3da28-3751-4769-8cb5-f2767e40cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f700068-c1e2-4e87-871f-bfb8e40f52ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ea4cc5-2a72-4b15-9c50-a5c8a863ea33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "305ff2c0-0ee9-48a5-959c-66e4f18f8a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a86ab6-6ee2-4de9-b01b-0f196a3e2cb7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7c5c0a-1d3f-496c-bba4-73229f2cd755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02ece2d-6642-4c7c-b989-8979e5176f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b441b1c6-ced5-47f2-8cfc-cab355e9c2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a74e6d-16fa-4d49-8052-c4df6d4328fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f6e470-57b9-46cc-8078-fe1f4ff20ad9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c025a7-ad85-43a6-ad7d-c5ac41de6c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffe62a6-7ea3-4e5f-803d-1afa9846c43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d1c83b-f9ad-45b9-ba32-167b8036eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9bf9ec-3b79-45fd-8452-b16e017d6c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64049a79-b1a1-47a9-ab73-8df459e37459",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f558da-8e18-4de6-8163-04189fb5863e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378c8bd3-27e4-4cd0-83cd-e6421b4356d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa9a89-8629-40b0-8113-64258bfa6eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6057f30-9c99-435b-bfc6-7dc117589529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8d3426-28e3-42f2-b09c-45512b8aac9b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3788223-21f8-499a-ba2f-945687f4536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81454430-9a6d-4d5f-a268-a9058ef5cab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f326cc4f-fba0-452f-81e5-a184dfefc4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b96af2b-84b7-4c87-a414-2176292b03f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf96257-ae70-4f50-af5b-fe268ef839e3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77de325a-3626-46c6-ab7f-003436002e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87627604-8563-4a1e-a69e-ecab5a613699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a434a7-569c-4d09-baea-d85c789fb83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0168e7-e6cd-4a7c-9305-55b6f7c30f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deac04be-4ba8-4ff3-98d2-d6cd7f66a98e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fb603f-a3fb-489b-9133-c5a8c9c81118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c688bf-f660-482c-9d4a-942d0e1b1db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35df829-40e4-4b29-86cd-da0d99793c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f3c78a-9b0d-4ded-b960-4bff43348739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bad462-e575-4a4e-a988-b47eb7722e00",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb255323-089f-4648-8a7a-6e7744b100b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261d6beb-86ce-4af4-9ac3-01fcd758d1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8b6536-c586-4ced-abd7-79ef02ed04e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce92a332-0679-4389-9728-20bef6abbf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1407502-5b82-4318-b366-003f8103482e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbed4cf-833c-48a7-8c17-afeeba5c4aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04947b2e-3d3c-44ed-9f9e-b8682e0121c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073ca228-5879-4644-8f70-0faadb0d69cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3871f56-d248-4da8-bf6f-be3fc7b1d0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c57c4c6-e880-4b69-b36e-5aad8589e8d7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ba6c5f-6d7d-4b0a-9039-75cb3d0a17e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d7cfe9-087b-49c2-8868-c1e51067456e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d53d45-6f98-42a1-ab98-566d494cd771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc7d27c-5176-4e76-85a4-b4f6c70b05c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcf8f3f-d962-4ce0-8c99-aa16dccf8759",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaaab96-addc-44f5-97a1-0e282f9a05d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0b8119-6a43-4ad8-a4cf-57c63ab7ec89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857da261-d673-4f1a-9bf1-efc5dfbbdf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd090a8a-5b5c-4791-a7ed-b48482c5573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a4b5c8-b3e7-4430-ade9-0393e8214e09",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cde24f1-14cf-45f8-ace5-c749e91420e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7698b343-3f60-4494-93b9-4b260a3fef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38405d7c-534e-46bc-9d5c-fae5a4f178e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7df774-7f5d-4cb1-881c-16965a26f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb75c0e-1917-4ff9-add4-7bb73376097d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9eca9e-f0d8-49f6-95aa-b8969b3e36e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f6cd54-ef67-4444-b15b-d3a561768a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1f0018-b066-420c-b5fe-5fb5aa6b1844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fba1ed-4027-47aa-98ab-873106f80c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17290079-92bf-4cc7-a4e4-3de7a89d9934",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b22d9fe-6f79-4915-bc06-06833fab7062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337a1d4d-42e7-49b7-bafd-7d3bd1897a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bea6250-98d3-46e6-9207-38a6ab54ddc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42302736-f8db-456a-aceb-0019edd65545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aee33e-74a2-42ad-8042-96ae0375fd5e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24875f76-8b79-4a8f-a04c-ecfefde70392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8658a7f8-da21-40b7-b0db-781147ad8d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c52c92-494f-4e35-a0dd-5419fee5b2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "942bc184-adc7-4319-a114-36ca4496fa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd5e39e-97f3-43c6-acba-d4f92fe0b3b8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374a147f-4e73-4f9f-a796-95d77b5a7500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8f17cd-c863-4943-9667-cb4d499fe7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24fd9d7-02f0-4219-8afd-d9a7466c7509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e7cd3e-c7be-420b-b1ad-8f8a7211a2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aeeae0-6b60-4a00-b9c5-2d5aaed6f171",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168a9c36-ae0c-4452-b753-f0b6c7c15162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea568c24-bf0e-4538-a062-b425b1a4ac28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c52030-3e3e-4d7c-9c99-d8ae586832e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "169d98c6-cb82-48ae-97e3-c98b2f5082cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9045509-8b23-4c2f-85d5-d79c0b7f851b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f647f4-3173-4714-851f-b21fe479ad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9215314c-e004-4980-8650-8bb4038d7f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c0d9d9-566b-45ed-b7e8-22208638a818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9741d780-f3ab-4c58-8cf1-eaa248621224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140fc0c5-af73-4462-a0ec-185e0d971f6b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c02f56b-f315-456e-8788-2f71d21b1eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b555c02-319d-4dcf-8983-cb899a92de4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75618cb6-d74f-4909-9263-0ca9682b0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09f42c53-3726-4661-9aff-e4e4a8b5ed49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa7bda0-4d92-4916-a2e0-97e0dec6151a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1a3bab-8e45-4000-8686-b131f96b405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041df795-3634-44d9-a14d-b3232926a173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1773d2-0cc6-4c6e-ab63-278470f8fa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "902fdfa8-acc8-4454-89f9-2b38603cb509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285df216-a9ac-48d4-824c-8115f00e3dbc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6179603e-3eb9-4cb6-857b-1c59297a0d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8363b988-467d-4d17-90e3-37db592d8258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2a9e1-4e32-4635-bee1-d15bdc43cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "28ac5a32-037e-4df7-b4af-1987df140201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8eb256c-c14e-4304-b88c-bba14b4c4720",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058fe431-f104-41d8-9db4-1e8f9452b250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d96daae-2c9f-4425-a710-912ffdb89ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045b0a7-ab3d-4d22-a4fd-88f5f05beeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c792299-2449-47a0-9807-6ab4c14d620c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6031dd08-bdcd-436a-9d54-146319f8bb87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f24b439e-2437-4255-80c5-88050de89fa2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bea4ebb-8d87-4ac0-9535-547fe953f461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3358d60e-5f46-4432-b5c8-e407c7f54acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bdb828-0627-4ebf-8648-44db386dba6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f5928e0-2df4-430e-bb72-99202706c0d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "818dc35e-1d97-4184-adae-7bbe68032ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f00d913f-55c2-4e84-9d8b-8d6b5bfb46c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "070c9af1-7b32-4cd3-a30b-c1d321771690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70272b87-51a8-4e9f-8f53-0283ff36ac50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4900454-9fb1-4fcc-ba74-e50457f5f6f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "620e7aa7-a277-4e48-90d5-15b25f8589fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf586ea9-8d1b-490f-870e-1af3202e8151",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20ced3a4-cdf6-44e4-9ed1-99236cb05ccb"
                }
              }
            ]
          },
          {
            "id": "4b57a3ae-aa79-4111-8829-e55dd191b074",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6d92978-3aaf-4980-8c31-79fa2c1387ec",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "be5d57cf-4853-4dc2-b115-efee28967786",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129e21dd-5b27-4a4a-a593-0ec5ebb4836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d6dd5dd9-b367-44aa-bb1d-737405acd7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d543aa-a86c-4030-86ec-d7c79ce9e101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db44444-e977-42d8-aa04-01cfae79894e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee812ae1-57c2-4873-a7b1-8e2a350eebe8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ed67e3-01ed-4434-a25a-76015441cb33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bf0a8be-2e89-4ac5-8505-2f1ea56ca137"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c935f290-4f24-40c2-b64a-88b923e505a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6bcff57-3ca9-4fc0-a8c8-a7c1f311f43b"
                    }
                  }
                ]
              },
              {
                "id": "40217193-f0c0-4b45-a59c-6a54f1b375f1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe5963f-3350-4b42-b5ba-d3d10f9eadba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2c5d4f4-aac5-4611-bceb-611feb8f7745"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03be1cb9-8c98-4b7a-9f09-a0cb07fd9c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b104a0b8-3d8a-4052-b5e7-4110a2f8265b"
                    }
                  }
                ]
              },
              {
                "id": "3246e0ef-0f36-4222-8bcf-21141c7b04a1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1b46803-4c53-496f-9ec3-d77d9c5de936",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b5b042e-703e-45bd-86ad-021e3e3de6c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82bbacc7-e6d2-49c5-a861-13e12b00d328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ec71bf7-347c-478d-b236-ee549d340ebc"
                    }
                  }
                ]
              },
              {
                "id": "ec38f9f1-ce28-4791-bf82-2c5c8a70a1a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9788d922-dffe-4a1a-a755-282ae1c4fabb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2343bd0b-6c98-4891-a208-971ff99f5d89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36dfc76a-32b8-4eb1-8532-dcbc55d72257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f6f3becd-d4a7-42ab-bccc-392b417c28c4"
                    }
                  }
                ]
              },
              {
                "id": "7aebf5b5-524a-426f-b1cf-5efa973462a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49423e31-b71b-4a07-bf99-9c103a821b0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3385f12a-3b00-4717-b97d-a7a1864d81eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70f7cff5-c3dc-41e4-ab9b-214010f82cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0eb7cdcf-9f9e-4fb9-95df-872264e33f04"
                    }
                  }
                ]
              },
              {
                "id": "9d5c7a43-41e2-4829-983f-cc45577aae68",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0df6f41-04f8-4ae5-b048-0e892adc4445",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4551852d-318d-4cb1-809e-7a49e34af307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bd53c8c-d240-4c5a-82b2-e4f5d165672d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b13f95cf-f6bd-43c9-8d72-5f1f24a24b50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "343aefd5-ceb0-432a-b1c5-76d1622c8a09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d6040ab-2154-4745-aeeb-1eadedb4b90c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34d7ab24-4092-42bf-90b9-d47740130433",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29aaefd7-947c-4f06-bf1a-f22b1d60a4b9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96de41a8-121e-48fb-93b3-fc85b1dee188",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "af94f1d5-aa9b-4ac6-a7d0-80d4c7c0a91e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4879d702-e537-49b2-b505-d912fe0b433c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e796d1b6-4666-483f-a561-d95d9b5d995d"
            }
          }
        ]
      },
      {
        "id": "c9243858-ba3f-43b9-8a41-ffafe1d513ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4da80e00-96f9-4f94-9337-252f99201e7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6a772d4-9115-443b-b9ee-acbff82d3034",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3857c374-f730-4b8a-a18d-b36d2fe0f18e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39870f6-7de9-4ea5-b8ae-54308cc1b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65876ff6-251f-4535-8618-7b8f0d7d1dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998e6547-6ae6-4ebe-b245-58c757166a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd693829-1b88-4416-8028-3ec6633d5ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f8eb8c-108e-48bf-9609-ecbd131817d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c1c043-98f3-4532-9f23-27f62222b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0899f244-f4d9-4a56-80db-102d82a4db81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7a2b37-0a6c-439a-b97a-c585e07dc3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e56b2e1-b0a1-434b-b1ea-2cbcb4ba21eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e51011-7d9b-48b3-b4bc-e5377a051db2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55669f99-b8c6-439d-8831-e8c4ba87bf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3da001-721a-462a-988c-1d3cb57d2f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b66efca-6aaa-49b5-9a60-baea06b1adaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38888baf-2354-4402-b834-2f906f0b9345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34ffca6-4c2d-4228-abb9-60d1ef9c3a7b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa87d35-2c67-418c-a7ea-b82475845f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba9f27f-e3a7-4c76-b06d-475b84bdd35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bff7f4-a34d-472c-b2b7-ba02933c4646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ebcc97-2775-4c54-8997-859f10d77c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b5d228-1f54-43e5-9ba8-f53788fc4695",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e487d-5aa3-4ee9-825f-94f325b1ec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4767d2-10f4-40e7-8dd4-89c7ffa68c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de3414e-6d6f-42b0-b848-7b5ecf2832e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "592a58dc-02de-494e-82ec-a01bc98906cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99c1864-63c6-4b8e-bea7-7939b5bb2f2f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1420cbc6-60e6-4e60-9643-fe1a825a58df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08f82b2-dfa4-4bbf-89fa-00790aabb757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ed4214-f3f4-412c-98e0-cea24315d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6914d77-b7a5-486a-9814-26c6f113ed7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f14ab3-75b6-4d0e-b83f-b1c35057719c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bcd626-d8d2-4eab-9bcb-712cb50ec6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642b3648-8b5a-40cd-9b43-7d1b1be1d389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bdd291-64b5-4669-af19-63047ee7920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d100679a-01b4-4a5f-bf4b-a43cd7fb1440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a269458-7c00-4c7a-ad6a-2160eb68db6a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778fd97a-901a-413e-8b2d-380aec9f6220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcfd6ec-c8b3-481d-99fc-ce832eb1d42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe1885a-0658-478f-a002-7e4634914f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6586728-08bb-4c8b-a601-93502e4fc8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9bba5a-3c70-4108-a761-d169ed07f894",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab6720-52c2-478e-bf15-5c0dacc73509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9ace6b-56b8-4f7b-9cb7-69f433145612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71c5cda-b001-4c4d-86ba-99dba1b0d6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a0618a-1173-479d-bcb6-6ad9ea26e8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd386450-1a45-466d-96b3-498e8d00823d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fcb0a8-bb15-45a4-a458-4e41b35df654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a6f7f5-fef7-4506-a0e1-66c2d9a03fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26aa9398-c887-4032-86b9-c9f243037c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53625159-a084-4d02-aea4-71732d2e1415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931de346-d684-410a-b0e2-5ac85977280f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3974fc27-6d80-49d6-8736-a4d2ef78ab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4795e5f6-fb91-4164-a8d8-0d44452853d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03ab27a-4718-4d2a-a7ea-1ed789d8d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "31028757-1c18-4a88-b7ff-4f5b2d21ce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27950725-fd4d-4551-a0b7-1e88a2ee4c87",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21575716-19bf-428c-9a4e-c2e77d3f3415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47f466c-62f4-4f9c-801a-268224de23ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b63bda-20d0-4550-b0f3-ca67b64d201e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff3270e-0e61-4641-8116-b801e544c4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351581ae-b6d7-4fb3-8991-a08030bb589e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d433df4-e81c-488a-b8b8-461b9ed4c59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66a6bbb-aa81-435c-8280-62e0b6890bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca3e5df-fd5f-4b76-986f-e81839d94265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2911af-1684-4e09-bab0-b56afac484de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17647b8-3c3a-43d9-8aa6-a4a4c399ae85",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e21de75-6bca-4810-8c49-a5e840b731bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77996112-c3c1-45e7-ae39-28e72f89150b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f3a915-a33d-4dee-b2b5-06609e35d025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "231baf22-8c34-4519-8392-f50194cedc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ddd985-ff85-4529-835a-5fedca96dfb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d82b8-fe66-4c02-ac73-715ca88c1114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441fd976-ebb8-4b05-8864-5ce597e536fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbd84e9-29f9-4a50-88ec-4fe7f36a354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "87553b32-5554-497e-8fe5-849ca4bb3d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dfde3a-9176-4fc1-9678-719d941ff77c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec7b988-7fa8-48b5-bcca-e424931e3a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2266a51c-846a-4966-990f-eb96e56bebd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137d2762-ce0a-4bac-85d3-b79aacf6195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "948c22f4-4fd9-4f6a-82f1-55ac5946810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef0c913-a9ff-4608-af0d-b2abd8857906",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf087cec-f49b-411e-91bd-5951b04987c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13d381c-f86a-4fbf-94a4-5d9aa49f02d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766401e9-26ad-4ecb-b311-7058e4f6df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d84516c-063b-41fe-8e34-7b1656657b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51b1050-e6e5-4611-b840-208b750820db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7dd872-adbe-45b3-9aff-670eaff9c4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05909b35-ee06-4950-8060-62135b27c399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b3d7b7-42cd-40c7-8098-6d213326f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b726ef4f-a6c0-4dc9-94a0-a03f7f683811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d945e7-d722-412c-aefd-56c93a9ecd35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603f1a5c-03f6-4189-97af-d285da57db60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe834d7-13e7-4528-ab74-acbb9e95d717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11330c2e-8f13-4468-adb8-267665f9a857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01dbf7d5-0c03-4926-908b-655b63893157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e056c3d-2459-4653-bf5c-cbc4e61a6c66",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0452c836-afd2-43d2-b671-b00a7d758421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7253e641-9732-4bdc-95e4-b309f81e0eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6e1e49-5243-4859-aa3a-43100f6df642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdeeef0a-b9cc-44e6-85af-38ac467dcf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9a073c-bfc5-4126-802e-41c40f8a1ef7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386c64d3-a296-49c6-ab8f-9cfde86a625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e8ac4f-f24b-45a4-959f-50471b8488d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced4344-1d0b-47ee-9f96-1ec7fdcba76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc5299f-9661-4c7d-ba90-d0db63c90936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f8a706-1d90-481a-896a-7602bbca4d81",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10108e4c-17da-4468-9890-0575ffde119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89311575-4750-45f7-a0dd-a2f9532fde77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d6779e-c79b-4f3b-926d-7e4022dbd306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "928ff3e6-9a69-4f32-b10b-553fb6f95c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50bd2c2-6fd2-4edc-b22f-76d0fe63a853",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3cfd2-2850-46a2-84b0-125bbda98615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37052ab-032d-4f18-9417-a8f9638fe40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b8311a-810f-4462-af80-134d576813e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e011f524-6c4b-4c81-afec-ccbd773a4a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8238d4ae-3101-494e-980b-29778279a266",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60dbea9-ef84-4be4-8878-0d3ba2021575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d68e59d-6da9-49b7-b891-5eba72c0063f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cdc7d0-b0b2-4caf-8d6d-bd21e24ed294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f037df6-4a78-418a-8a62-6fc55fe29482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982fd7fb-41b7-49e8-86b5-72d18f2a1ed5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf4a6f9-3d65-46f7-a965-b612850895c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a8473e-9af7-471b-84e3-061376320fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe17e3b-1cd8-4b64-b9e4-7f0b98ddc1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80633310-e5d3-44db-8250-918ad1286965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea04592f-a590-419e-b8a7-304a9dbbf109",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57439b2-7f20-4c09-8ba8-a2896da74fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d31b47-9c0d-469c-9aef-7520a99779de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ef83ee-f7ee-4e82-a51c-a38d0f9f6e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "319f10c5-53aa-40f2-b3d3-dae2f9e897e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff56d6c-4c15-4ef3-9e80-c51a68b2acbf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a98ec01-6c1e-46d7-8832-c9c69c915fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f045613f-a8ba-43ee-8933-a20a674e5f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a511cc7-5603-4fc6-83bd-2fe581ed00ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be10fac-bc02-42a8-87e6-3abc3013b208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8f3dec-1fbe-4582-a541-fac12f60513e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f897a381-edce-49e2-8f54-55c9329a5957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df54ca1e-ef11-4166-8f38-781cdf63b87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d62fc2-c660-4880-b450-caad31a34784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eafee53-2dbc-4fc6-a2f5-1c475b8aa819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9627b964-9891-47f6-ba2d-8e3109151c71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a33ad2-5c57-4de7-9a78-28d0ad48211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238aa4a6-5555-4d1f-acd0-7646f816004a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bb0712-9537-4697-95a3-1497e6ec8cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfb6e00-0084-4794-ad74-57795db28a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf8bbbf-6e89-449e-9dd2-647df5a51dd1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150a8bd9-c4ab-48de-bebf-af39c7478ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb8cb4c-9481-452d-824e-3cba68c3908e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2053fbdc-becf-49c7-a3c1-b73294d0d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "012acfc0-0880-4c4d-8831-c2e7dcc3f580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c477abe5-cd1e-4249-9c12-b27e0982ab9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a09884-6649-4fa1-9c39-a467755d301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1747c687-2b1e-4de6-809b-e96185a8ce09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc73b70c-d170-4f4f-a2dd-3db58c108e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d55b9fb0-367f-4b65-9ada-f2bd3bb7e1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8edf3f-f8dc-432e-83b3-68559d211c33",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f229340-9f99-4d9c-a407-a3b616d95e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ade330-56e1-4314-8769-4e5694257dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7161d9-b527-486d-98a7-0a7b64b0d209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0a6366-bdf8-4e66-97f1-024687a59dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de12f1d-569e-4a7a-a983-8c4a91a3ff25",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f19d6f-3a36-4d08-bc26-7fce7530df92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d9e3db-573b-4485-a860-a2d4c698b8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8666c0f4-0cfc-497b-be54-8d3895f7ce92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f54a44e-bb1c-464b-a1fd-ea4a610c5575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9581a-22fc-40df-9eec-9be650d1a744",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86886c78-2aa3-4941-889e-6ea06b3bc281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c183a00b-faf9-4d02-be5d-49e537276972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20c73ce-4e5f-46af-8362-61786a99f61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a15835e-94a8-418d-aa75-940e7de7e55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6598c3-450e-412d-9612-b06df57720f6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efec5074-59ca-4e86-80ff-793772645764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5353b5f9-ee07-41a5-8878-0e4f651ed44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08b85d8-c785-4d26-9a30-04bada54ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dba0e8-2fbc-4c8c-86fd-77fe7fdfe63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47621b4-d151-4614-8145-2808281501d5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46e23e8-4838-47ae-9354-11a6689d8576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150c255c-11f2-4998-82d8-50c061cb266b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76de26e3-d4b0-434a-ac1c-7b6b59ffc3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4a6037-f559-4ea2-967f-725ecf7b67a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484c9b75-ea22-4383-b420-4ca840a35a11",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f1dfae-6201-4afd-a4b5-e9236d4e85ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cee8333-bc28-4b1a-ac7d-fd3f29fc231a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162699b6-c4b6-4a75-8885-ba7badaa62e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "989c2f62-d687-418c-8dda-c1aab174acda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30d1ab17-f3e1-4ac4-a88f-41929aff55a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "813201d0-1adb-4e09-9f6a-e53d0a3fee59",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e690a-f496-416c-91e5-b86cfd19e0d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "958fdeb4-0312-4951-b634-8f6a20af4ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1e0cdb-fd91-4bb3-864a-f8a9f567e0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fda7ed8b-e3da-425e-ada1-03b956201975"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f8aa9e9-6a4e-42d8-a07b-ce1fa91b35ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b93425c-9a8f-49fd-8fe2-501c41014c3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b91e4d46-7ccb-4e2c-8eb7-e4b6d85f5ec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f4a7fa8-a2a5-4efb-bd06-d09babff4e77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8597764-82cb-465e-8d79-3b217e6b9809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1e1742d-bd7c-4dcd-8dce-0ede8a500472"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "812c5b7e-7e81-4147-a55d-0588627592cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96d9c827-e906-443e-97c5-7611081bdc7e"
            }
          }
        ]
      },
      {
        "id": "e82c5b57-1818-43aa-be11-6bb1c89fc972",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "28506b51-1e11-4d96-a461-2d076015913d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b38040f-36cf-4ab5-8420-e42602c7aae9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f3103731-12b0-46d6-92f2-c0231bed1f2b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283ed491-9e73-4eae-b88d-bb2358bbe966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8bce45-62c1-4bd3-820f-6ce72cf91f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6a4d7d-842b-4a73-9930-e706f3db440e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e223c235-a51a-43ca-9427-000c4b2289e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c96ffb-333c-44e8-8b1c-3d5f7741a671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63eb16f-d79e-4d23-ad84-40ff0d0cd7fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09740c71-4933-4a84-87f7-42076e34638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7f833c-986a-48d3-bc27-ebc95142d8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd763e11-55d9-446f-8ac8-3f61370cdb76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ccd998-3555-4f6b-8b4d-b0e283354154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d7f8a4-3c7d-40ff-b55c-d0de95476092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeb756a-3a24-4495-adb5-6e31084ee6f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b272a721-c33e-4435-8509-f118dd855ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b5b2ec-7ae2-4765-ad29-20a8ad6ba4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882c86f1-c42a-470b-a88f-580b3eb1b066",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b167ddf-f6a0-4613-8601-11ccfad36588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b626795a-bcb7-46ff-a6e2-dcbbf701b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34546f47-066d-4c51-a860-6888d8bb2938",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5621e2-cbae-486d-a921-b7cda8dc85ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d028d4-fa22-4980-bad1-13dfb5dd78a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7fd801-dfaf-4b36-8b8b-f4e1963c5b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb56a1b4-d007-4494-993d-5480435f8ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7913854b-cf47-45d2-9649-6b14eb2e4866",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582936a0-e006-4139-8132-3618228708d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b10caf-5e25-4b20-bcfa-773cbc06d1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57c9518-d32c-4171-8cdb-f2c06d448df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd59cb72-7b3c-4488-8b35-748bfcf9bdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbebe117-939c-48fe-b0c6-c65a64357743",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46bb309-415d-4745-89df-9d741b08f7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7caa813-d674-485d-a9ca-4028ef80c58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e25986-6b4c-40d6-b29a-ef8b47124cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c48a5b-d61a-411e-91e5-a55d52351a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4458b58d-3b82-4247-b1b7-92041516a5d2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2718839-d96a-4dd2-afc2-5351425749d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "082d0294-b976-432e-8a57-cbc3c19ef074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b917ae2-b352-4847-a7d7-80894c72909d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f609473-5210-413c-97bd-bc9c424573a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c408fe1d-9061-43bc-9871-627c026cc440",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a2c08b-a440-4b97-be57-9f57c7434f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53d6a6e-53b1-4912-98ba-cdd4d179b636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce24f71-addc-4e95-84d6-ec740d81e7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db1fd8e-dd33-4ead-bcd9-1286dec9d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b91c81a-36b7-485a-b3c0-5a2b33217d95",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0edbf8-bbb0-49ad-ad1d-bee3ed29405e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9497dd7-489c-441b-a149-162eea86fad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39970fbc-0d85-44ff-b30f-6ddab33a71a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fc01d2-a7d1-43b6-b86a-0ebbefff107e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6831e2-b336-4739-ab33-4ccdcc9ea30d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de366be8-f221-4c9c-a9c6-fba34d95e5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab530f2-771d-4809-aa31-2e4ca39e599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b77d90-4c75-487b-a794-eb34588d0332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bf4ae2-5704-4f86-bd48-10d7ecb45847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb948fff-3b6d-4e7b-9a45-c2a6d0aacef4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9d261d-4100-4bc2-a273-ed71d7a4e3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7f42d6-f790-4b51-a1cd-7d94f6fc12f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7dcbdd-a94a-4445-93a1-d4abd1cf108d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3870a7b-b80b-4f6b-b926-c5bff2484c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10fb8ce-bb46-4e05-b7ec-aa510d69535f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a1b57-ac99-43f1-8f87-8d464539eede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f68c01-ddc6-43bd-b404-6af3c09624aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320bc721-d38f-41ff-a43e-4f5a099bf57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbaf6a6-5ef2-4783-85f2-599d54a631b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2fd266-08d8-4195-b912-321a4d1b1b86",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589fab00-77e1-4ce3-b183-a1f8e7e893a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df16a79-02ef-4de7-93b2-e6fbe032f1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ef551c-f6a0-4689-ae33-b4dad0758593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047a21de-90f6-49d0-a98d-aa020d1d7e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53cd48d-2e37-4e0b-bda9-445e4b1e0875",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98fdc06-9fe0-48f0-a13a-faed546c26da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfd5627-df7d-47f2-8a4b-6a5b386eb885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193fb2ec-b848-4b86-be07-3a0eed208e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9516a811-58b0-4060-af6a-3fbceab1a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ca1365-abd6-4906-9538-e23a664829b9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d9e84-f3c6-4601-8d1f-ca2334e75348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59cdea8-eae4-4350-8ba7-0ac1275cf434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb622ec0-b7f2-43aa-abfe-3869e65e1a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fc28f3-363d-48a2-b3ba-af8e3d2a5fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0999080-ffe0-4498-9bfd-1432a78f0f3c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f43cfee-7d21-49ac-8ea5-0013b3c2ff51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48354f5b-186b-4132-a1fd-da1ac22d0af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1e044f-9c71-46b1-9c46-e41c0930a8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88454cba-e540-4845-a307-2304f2f99b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98159eb7-581c-4af9-b79f-1f7df1925ec5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1ca8fd-1f9c-4f17-832a-3a19c355aced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6dc08f-b9dc-458f-8bfc-b5c839a177af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad2fe17-e33d-4b18-8a5a-cbb6bb8a6042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b58dbf-e280-4f1b-a705-c49ccc370ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c138022-1c92-49f4-8106-0798f8ef3546",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8b53b5-b1d4-463f-8e05-5d2201566303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6be791-d237-43a0-8fd5-8058d06174c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145911fe-3177-46de-8715-8ec41dac4682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff0c6c5-4481-4801-84e0-f9991d17246e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7c11dd-ccc9-479d-af7f-10b7a0217372",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73de732-4efa-430d-bdbc-4c47fc7656fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d81cf95-dc1c-4822-bd8d-099a9b0e0eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ce7fa1-5ea5-4506-951f-f35b6d48a660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6786fd-cc6b-41c4-a032-2dfe0236af95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9053368-b5b4-4c2f-997d-e475ef1eb9c1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3285c9-cb47-4253-a11d-484b8c8d9cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caf6674-9e62-41d6-8905-64662b96f94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c99945-9412-4e8a-901d-ce6ce0ae9ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55f917e-7c8d-4e3e-a132-9341eaa15564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df8a7ce-0e16-4b71-a03b-6a666ab4accb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b11eed1-23f0-4717-8ed2-d96b42de125e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bd9452-190d-43a7-8ed6-7defa4d71a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb00456b-e90d-426d-8d16-9f9994346a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceddb86-cc42-4b62-a7a4-ab7541110173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb5b1a9-85a0-43fb-b861-27ff014fbf41",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59472f00-7523-4d4f-8428-0d2e3e4c7c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2259db0-d8b3-4708-a7c2-7ac21573b2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940f6626-3bff-4138-a9e5-7113c9438815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add0f073-b015-4994-8bea-a2829213e128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab41e7-3aa7-48ff-bd4d-47140bc218bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b720d29c-6388-4dbf-a8ab-aca66440c745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb8dd4c-d040-445e-89d9-e460f093dd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ca129e-ffc8-4e84-a02e-7856b14e8cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcb78b8-c06c-4cbb-9417-ab47eb85ff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47ef58a-8949-447f-9a78-0abc7c846a44",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10a8a4b-0e18-4a82-8a7f-014cd6304c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c949f31-2091-4ebe-ba80-c90ade5e4b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac1ff03-065d-4517-94e2-fe9dc641d1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13245a6-e57b-49ab-a9cc-950d98d32677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f47c06-4172-472a-86ad-2081e1c144df",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f633a18-a5e3-47cb-8514-5657b0807930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74193216-4bf6-4906-ae53-6622bf7b1ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37f6b0c-b86d-4cfd-a78c-eaa5d910a8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27e251d-62dd-484f-b472-613fe9b91c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d429c419-ae12-4d87-913b-318cf71139eb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34042b00-9f35-4ad7-864b-4e13d525fa00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04800da1-fe67-4097-8883-805dc60c250e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f716a7-f5d1-4dd8-91ae-a4f0f06c4a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bb190d-f70b-4996-a257-dd8f4bd39fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d82821a-9449-437a-a14d-f0331ec997c8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6a448e-da35-4379-831c-a27982da5a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c59570e-62b0-44f7-bd0a-23545f1ed81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43412a09-b9b1-4bf0-a61c-76d416572deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1482ba26-7788-4435-b975-d34d5adbbc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65c022b-efe4-4be7-a5f5-6c1acec5ac73",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be8baef-2cac-4b33-bcc3-4618a790f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62015528-e3b3-4d3e-b2b9-323bee5f9312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9457163b-3729-4363-b42b-30d8b5d043a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a898a10-e2cf-421e-a24b-3735ecf3ac81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938729ab-fdc4-4024-a5ee-1a7540ca3f71",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c73e67-9348-4f53-b71f-6a7598d8dea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d53783-835d-468f-b745-5669c9494421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0072af5a-7c52-46de-bd2a-372aa8748991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e651ecb2-3ced-4f67-b04c-532fe203c672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f50b20-347e-40ca-9fbc-5fb638236de7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b2a853-798e-4ea6-ab11-44d5ffbfc87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07a8e2f-2a33-4410-a2b2-661afec28436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42495fcf-b48d-4675-a430-55172ded99ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c63b8e7-e10b-4366-bafa-36adb8738b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46786b5b-c52c-4753-844d-654ac87a6beb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56acf15c-e400-4194-b038-e7cc00b5e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc660f69-df83-4646-9ec0-c07adb4871cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed76cb6-078b-4106-aaf8-4a39afebceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffce40a-e324-403a-9dda-2a858742d0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0238e0b2-55b7-4873-8507-2f59a07da6a7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5449910b-b73f-4681-bf15-5d9221a56326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e270b7-3557-494a-93a3-4b1d12c1f0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eeb466-dfca-41e1-8058-5278c159c312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4550d4bf-8599-4258-99ac-e530b6e33448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68bef87-6a62-4431-8a82-f4c8cd686480",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883765fc-df0b-4179-b2e1-1051f32f750a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129fa3db-33a8-44b8-ae20-93a3da7af420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa094a-3f13-4267-a91a-05c76860f1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a009d1-8114-4af1-b997-e1f9809638d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81163925-9bfe-4ed5-8a2a-7c11d3b68c9f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da7ba2d-d9dd-4a61-8f4a-34923dbb9688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88625924-383d-4ca3-b29a-342e1e2fa5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3249cf1e-79d9-4a85-8ae7-22b038abc3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9add11-cbf3-49d4-aec1-5c7187c12067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c71d78-56ed-41c3-88a9-505651fe1ea7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59cf0bf-6070-4601-9e58-5455f56b1552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd4fa8d-0312-4718-85da-f678aa87e603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6007280e-6168-46c4-8c7c-0881ca43863c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6529b176-fbc2-413e-96fc-1501179396c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f272931-1521-4cc5-bf2c-553897f2aac5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ebf0ea-5514-460c-acf8-f763e2c68e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d8baee-cd65-4d51-950b-32200561282b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694eb541-f851-438f-a749-a93322aa80cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded3bd9d-de04-4626-ae65-37d30415cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e80622-6240-421f-9f83-e1fcc833467b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b243d825-46ba-4151-94d2-08199003b431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4954aa-3b37-439d-9e90-341024c6748b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5b6cab-5048-4aeb-94b4-b32501527ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f970f3d6-3054-4d1c-8cb9-a947bbba5ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f20d40-a414-4501-bdbe-358ccb538741",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2f1ed8-d021-4771-99a5-25683ff7358c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bba9def-fd50-421a-ba01-2f0addea65fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9779c-b1d3-4822-a176-e301db27eb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6602c6-1db0-4750-9188-939587878fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052d50ee-ac74-4cbd-a39a-702249fd379d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95db48bc-3056-4125-89da-029b4d349489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3effa3-e77f-4c5f-98f4-ee783b718860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21ebb56-34f1-43da-96c7-7465821f3067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d648b687-bbdc-47d6-9ead-b7ec44303496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba8e038-391e-46c0-b933-7b045e955411",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46cb0f4-edf1-41e1-9034-96cf90b9f8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f1bb8b-9046-4bf2-b728-de3958e932ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fc082d-a1ee-4ad3-a9e2-764b66e6dee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827010ab-2355-4e03-b3ed-bf7938a9013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e632f45-07a0-4803-940b-e5cd94f9a1f0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced844f0-e2b9-445b-b4f9-dfe61c356ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba23189-8d23-4ef4-8f2e-3b06fda05a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1faaeb2-04b0-4cfa-a909-31275e2d7d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6713458-b744-447e-9853-86cca56658a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572d2f2b-a6dd-45c8-b21d-75c06d209e2f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6119b352-ae5a-42a9-b7ae-50fd19640b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bc8453-9de2-4418-91e6-aa8666854047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ced2bc-a683-4230-9bf1-b66b49f0bef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba417ae-6f59-477e-a3a0-74f673056128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5466baa-a986-4437-b039-2dcb891346f7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed38ab0f-51f9-4546-9a42-00f6ac18db31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b895c9f5-72fb-4097-84b7-3152771c3c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99145e9e-b12f-444e-a231-c07dabea818b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3984a74-40ff-436d-b369-331bb79bd0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fec52e7-4580-4bd5-adc2-9f3db1a4e9e5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7754af87-c799-42c6-a0d3-c95944843731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcc5a5c-8903-4012-a883-22947452b18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32527016-d416-4673-9154-3597f87966f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b23593-75ad-4c56-b3cb-6939d01a8b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b656663a-ea42-43e6-9d77-2d55bbc99d0c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958612fe-ac1a-4377-9fff-279e0bdfc776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2a245b-387e-42fe-a227-fece9f1ad27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd021bb-76ae-4fec-a70b-61acaa85850b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6ae2e6-d796-405a-b019-7cfede415005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6144035e-070f-4e7b-8965-c8bb398a42c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f01c0f-7c23-4c5f-a2fd-dd13062ea97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe3e276-d552-477f-98d0-cd2f10c24c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4ca9e4-dc8a-4636-a84a-22d73d187fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205642e5-7bfe-4637-abd8-50883eacbb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76a36a7-49d2-4004-94b2-d09c4fc2a01a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e46ef9-1189-4345-92b5-c8d627c2d7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47715f1e-a14c-4187-aacc-40e8a629648d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3888f200-118e-45bf-9d1c-071ae9e3b917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87309c41-8709-45aa-bdf7-06171e07b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce704a77-6c90-4fdb-aafd-55db960292f2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed44a9f-2032-4c10-a98c-459f327d73cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafd977a-266f-4aa3-9006-b01931a6c328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5ce22c-fe98-468a-a68f-8a7e20f0ff78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00414b4-4392-426b-9465-349521dff716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5a487-f1aa-4aa1-aa78-35f79fd7de40",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d62fb5-4ba9-4e1b-9e03-5eeb7be58df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f32c980-fc9d-4262-8bab-4d071697b8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a43983-b6dd-43a1-97d3-994fab6693e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42faa95-1033-4467-9a4e-56c19ce22be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4841383-b1bc-4f9d-8329-a54b992b848a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed4c4fb-e151-405b-8d47-62ca1d2f94cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31453d55-9a57-4ef9-b135-08cc242e3ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bed815-7e40-49bd-8583-2f462860a280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122b7e62-f084-42df-a0f8-12c8e6f358ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdee9045-6a0d-4503-b002-4d03b7efa1da",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130b895-614a-4efc-a95d-3fcbbe32eef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f6fb17-ee06-484c-b53f-03378bb97562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4fd9a6-acbb-431d-b188-8ba4d3e79323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acc7099-9580-427a-a941-c8275c537bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20de2726-9d63-4c02-875f-f15587fc8df4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00526df5-68eb-49f2-801d-eeb4451facfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481be639-8239-496c-9c92-c88876e0eb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b0633-bc7e-4986-8bbe-e6f663f9d73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47309ec-d81e-4609-9cdd-0d5bb006a952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61812e03-d025-4eae-8207-8e4591946f46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09dac3f-39da-4910-b654-c11d9c3aa9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f76586a-a73c-4b58-83f8-4059a13638d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b837e-2df6-4068-8ef6-e35e27601b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1766d656-b8b4-457e-838f-5dcb85eb80f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31938e92-f71e-4a08-9f83-20c7f5dea9c8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2541c3cf-2f7c-4fa5-9ee5-67b7300b9bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea048c1-2ecd-4379-94f2-f694276afe78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94130505-8b3d-4d94-9494-9c440ff5acbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37e3088-a8c1-42e4-abc8-d2aff117e7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657633f7-6bb8-4cdc-b49b-8027a5c6a7ab",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1fb11-2b84-4932-a828-4ab394c7a506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d85dc35-729f-4898-881e-dc581efb8db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd3320-5220-4d6b-b467-d0e8e83127ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5158ac5f-27f9-4f76-915d-acf87ecad8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9c61c-26db-4d5e-b772-104746f58389",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf87da-bb07-411b-9043-ac9ef60a3ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6f36c6-3986-423e-8b68-7d9a69fde813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89df9312-9397-4123-8cbf-928054313303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d59b8d-3fc5-4430-8816-e18ba71e0f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6cec1c-c759-4e28-b8b5-bfb33c9161fb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95e3df9-5736-4fc6-99e8-b9fa733636d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5de4ef-4585-4221-8512-0b48504422cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a42de5-5614-4e5f-ae93-b7904848372e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4817ce71-26f7-4593-8f60-a7c6c8fee7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028793d0-b6cb-4498-bd8a-ec7ac1582205",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d655edd8-6f75-480c-bc4c-cb42e537587c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca656d73-0377-44bc-9ed9-023806ec39ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099c0cf2-2f24-4cc7-afd5-b0ce1ad5c2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a8cd8c-70b4-40a8-83b7-c1bd67d01923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1bf58e-51e9-4134-8ab3-c8aafd493237",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d8ddaf-e58a-4dff-a64c-ce0ae6a7277f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0fd5f5-2edf-4a4b-a904-5c2d55a43ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca891822-9b80-44c1-822b-f006d74b0496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b0f894-4668-4256-a4c6-128e9839f8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eab052e-c8c4-4261-a1f6-147fa6641fd0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df48b1ac-e9c3-49e3-9167-fe58b02b7225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d69505-592c-41a1-9b39-a177f441656d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cbed82-a8d1-4c45-9ee0-bc1f2a7412f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe39a35-163e-4f21-a6f0-649480ce4fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be467fa-6694-4fdb-84f4-d4f7e05b448e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce15c9e2-30b5-4810-92b4-d3c85354410e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e9ee79-1923-46bc-9658-fde269325937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa06f23-28dd-4fe6-94cd-a14dd5f78272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cd0cfd-7ab8-4b25-9ef4-75d8025d3351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8100805c-0aee-481d-8cd7-0b08d4427768",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ef4f37-e286-4b7f-bcf0-22f54774dc61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b8e59ec-d8e7-4f13-b971-01fac9e24ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d7123d-8428-453a-8364-122003a4c922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b146c2-cd1b-422b-9f6d-60fb7b06fc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb67427-4d6a-413a-a390-7deede14e340",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5168866-3ad5-4382-824c-2e529f3fcc8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c250b93f-5067-4f92-ba44-f614e7f52b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779c74c7-a55c-46d9-a8b3-b02f0756c2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa249197-8f85-47dc-b8f9-ce2cb04d9bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b88d48d-bd4d-41b9-aaa1-ee3ab55e8045",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c731dba-1610-4c41-9093-2872e7b0a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d05cea-19da-46f4-953d-acbe9a8891c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63d6701-4b18-4fbe-ae84-49d9a5c1a2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1abeb2-e934-4b60-97f9-c99659a898a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e856b6-b66b-4a1f-99d5-34e8b96cfcc9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c8baac-6553-4f90-9800-2c7c87570a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ed5165-bbe5-4dce-82a7-7809797c3bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb48d5d-ac74-4b76-a7c5-f1242262b069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672ba45a-e179-49b3-b4a9-d0d15ba005af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9d8fa1-d0fd-47d0-96fa-8912fe507a88",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74a06b6-05d0-4ed7-b636-33021706ed6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d30ce36-abde-4f39-87bb-be9d8c29955a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfcfc59-ca5d-4cd4-b830-31651c9b8d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c267c863-7d69-4340-9716-bd07f4ec5746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6232a6-a0e5-4449-b2d6-6ee0943d3ac9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a1800-7624-4e41-9214-817ca1a2b57e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a811233b-5c61-4748-84b8-71bb39e92e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d830f70-b0ee-4be2-a236-3acfc9cc14bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45f0377-b6a5-4b49-8079-361127cd3e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2590202c-01b5-4aaf-a7fd-d05bed2e256a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4204caea-c72b-4295-9f26-78dadfa46382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf14ba1-d826-4722-8431-c53f24d81c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9659a839-0d12-4ddb-b336-cf62c9c1cf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2c70c2-766e-4a32-9dca-cd9a5d2d1018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8245e75-f84d-40bf-a83c-930fa4f36b1b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe91d5a-ea7b-4895-82cb-a5a9b1560455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674b66aa-ab18-4356-b81a-3d9e5fb0d52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc180c32-c707-412f-9a6d-4f2dd4a411ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd66d4c-a427-4414-af36-933a1a02aa30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8df028e-b940-4d97-aded-11782b7d52da",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9900e230-9243-4e13-a3ce-288e6b2c44b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57638c98-fda1-4a56-a422-f351f1f8d615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0bb4b8-f28e-4598-b7be-adbfc4add99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912ca28a-3499-43ab-b9fc-c19250b3bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b2acc-aaa8-4e40-95c7-db37a9e9fbc3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71721f08-cdbd-4825-b396-ed712a777cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c56b155-c7bd-4b1a-a7a8-5e343a03db5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe22bf1d-64b7-4431-9da4-4a24c52924cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a367d6-6398-46ca-9f28-d1bd42250556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab037047-642b-463c-9684-95b0633cd5a9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fef1ad9-2d4e-46da-83f1-b5cdeee29ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ad36d2-ef24-48e5-8f16-6034fbc53dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff56c83-d367-45b0-a466-581ece4d97fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d2cc53-5ce9-4f0b-9450-ed529d47002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce82655-c577-4c0b-9fc9-1725a25d195d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078021e2-f43c-4e6f-be7e-a1a8f4382897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84bb004-7151-42ef-a762-86984439f65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273eaba0-7c07-4ede-b0a6-35a369173093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678404e3-e9d2-45d9-9b66-54eddbc5555b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f345126e-0bce-4690-99e3-cbd71ac6c549",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538cdca6-16f6-447f-83f9-03ac353ab51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f13b8fc-f533-4a81-8bf5-8b0a99af99c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84a3242-0a01-4d86-911e-225738d74c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5897d1-40b6-426e-838c-a1b4aafe864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33491b6-8cb7-42e0-907c-b4473ef6c894",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b599006-efdf-46b2-800c-296094cd4646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f37372-9137-4e52-aea5-ca44888279d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34644f5-245a-426c-98ab-046246a760d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad97a4e-9678-4c79-a5d5-749428ea417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8308d216-4947-4fe0-9690-039da31a6d4b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76085d41-0b45-4d4d-9cae-da08ae140002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d140cd-c3e4-4e97-9dfb-2f16f0cbcb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60373015-167a-4072-b815-852d8ffe33f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9a8833-a38d-43c7-a242-3f30a8223b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6db8a3e-6ffc-4e41-a894-779ad8572225",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e539529-fb06-4a4b-b8d0-3a6830d04aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd89f9b-bb34-4905-b97c-8a832a5e1f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46641015-640c-43be-ae3b-33e69e953892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68364f3a-5242-4909-aed0-f941fdebb3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f8cc65-265d-40c1-a7f4-09f07749dd99",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7f096c-59d6-45b5-ba35-e98172d7b747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b21ae17-c85e-4b65-86ff-8c1c5f710079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa186b98-338e-4f19-b868-531ef53ffc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b0db25-ed3d-40aa-9e46-a819bc4eea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c79891-85fc-476e-90cf-0c9733a7fd16",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d98a51-4299-42c4-b987-598166e1988d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83b584a-8b05-43b0-a591-dc0403ea633d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e796ab0-731a-44ed-bec2-535331b2346f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f75096-a2a9-4b75-9475-e9df8c8f091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cb19e3-e315-4b3a-be1e-10a45d06c46e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ff0f32-5bca-4425-875a-838de337c01c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6434f40e-32e9-4935-b665-d7ed753f2949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d5460a-cb97-4708-a934-8930fa5d7b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0a1a26-277a-4597-b68b-d144140b74c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2d8e99-695f-4140-954d-3029a0ca736e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9bf350-201b-46a5-a7b0-0ac1793695a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf26fb65-12cc-4dd5-ae80-4694979c528b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d13d2ce-a224-4a99-a4ff-3c037f31d167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26bd159-3b70-49e2-b46c-6daa2de94d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a51ca76-04ed-4896-af58-b3a92266d2f4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd850e8-f14b-4229-95a8-d9d36bd2dc25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c265df-3ab5-47e1-bc40-0422a2798632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5754673-a92a-48d3-aefc-596b583c607c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2a3e8d-bbcf-43bc-8dbc-758e5e5fca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceda654-92bc-45c1-a6f7-c1bdce372d07",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9758347-a8b5-4a14-bbdb-240157952967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55824577-d8c3-4604-bc23-abbb6e212f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83829897-73ee-488a-8d97-2b0efcc7ab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814f4d10-010c-4261-83d5-dfdac4933fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b3eb0d-1fe5-4e83-b9f9-acaedf70f850",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a518b0-d9b0-46d9-a63f-d3c5809b5423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532171e8-f8e3-43b9-9478-6c5b7b169864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7badda3a-ce74-43c7-9fed-3689ca1f7dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa1e53c-a2c4-48ef-976e-3b649e4ddcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672b4283-e517-4a02-8aac-18c392e21e47",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11f481e-0013-4421-a641-9aeeaa5407e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e7b562-92fb-43f3-9032-a7118dc6c888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb37f04-43d6-4cd3-aa89-21d4f730e5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0047a650-a144-4abf-8103-fa7ca9c0e7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac8290b-b658-43c3-a471-503903876d16",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb681cc-861d-438b-982d-7e68691466d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afc9302-e611-4245-8aa9-1a3a5519457f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d62d8-380a-4349-882a-17fcfd5b3e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883bfa2f-c079-4f4b-9430-2bc639e01f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a0d0c9-b04f-4109-9c31-10ee4d9cd58f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6ecf99-92cd-479e-b5a6-759184db2280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e30f68-75db-4de5-b586-238858512008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182bf3ea-4326-4c1d-a64f-e8cdec180dc4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d490f61-f177-4f6c-8409-3192edb2f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4196f8-e1a6-406f-851b-f426810ddeac",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c53c31-cac0-4a35-9643-2e21dd627255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8f7f90-4af5-479b-905c-80aec9a0f3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b704c93a-f34c-436b-b4b5-c405c7688d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603fda90-414d-42c9-82a4-93b2a16cec88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f9d9c4-02bd-4b83-b23b-90435ef949f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a543743-7ade-4d7e-8376-5e183d82933d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf9cb02-afeb-4dca-b332-7645830ecae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf97969b-bbd4-4b7a-b6b2-119d7e6e215e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bf7f04-3556-4359-8b23-2e92683b9803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac098fc9-637b-4648-aa25-39cfb17a3a9e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a2abbd-a1f6-4ae5-ac74-69654e707dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237be6f0-bd93-4e80-951e-5d72583f0eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5111159e-cd38-4b37-9f15-33c98bd5e10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ded9942-6d99-44c6-a285-2ea9384d2754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfc9c42-9d55-4bf4-b305-d82dfdd37929",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1525dda5-ff6b-462b-9dda-25df3dbe1080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321c0ab6-f90f-4439-8047-693158b0f705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f35753-fab5-4715-884a-7fff7cfaa246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d159a6-eb0f-4b91-9ccb-a85994d8a2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369e398b-49c3-4f42-9cdb-e9c0296ceb30",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df16c68d-a129-45ea-9682-4debf134f769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fd8b8c-4cf6-414e-95b9-390746c7eb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eee1e1-687a-44ea-85b2-e2e7fa192913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24868d0-7a19-4cd1-9834-cbaa6b44be4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5da712b-10be-44d2-a011-6758d12799e8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3195ca1b-9f2f-41d8-aef9-b5ac9b191e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e7de6e-0608-4b93-8ff2-0322cc6ae3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d751f2-e76a-4d74-a172-3d49fe154cf1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b461c913-8a80-4675-a494-d8b981ceab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055b5e0f-a5eb-444c-93f6-b8487521d2a9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fc00ac-8fe7-4157-95bc-10b178539376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17d88eb-0948-4d79-80db-38e8695d9c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf59fe-e926-4bb9-99b4-6cdfdaebb24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6528e7-aaaf-4c8d-8b9d-c5304e64df74"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef89cae2-ae3f-4e13-8413-f9e496ac5a94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6501eee1-e6a8-44e3-97fd-c67804cf7a8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3f938eb-edd0-4027-b228-1e471b2fa904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0143aa70-011d-4d8c-b775-dad65ab2cbea"
                    }
                  }
                ]
              },
              {
                "id": "0b9fce07-1eaf-43c2-a447-945c62ed4596",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50014baa-8b60-48ab-8f59-ef285408cf95",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f540d4de-403a-4be7-b588-17c02ce9fc9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "32aa5e11-d05f-4d93-a6a0-1ad0adcd8756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4675d1d1-79cc-454c-b2db-f3ee7e1e4759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a02cc4f-25ab-45b8-8483-5974bffb233e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bad4ddfe-f7a0-4673-99e1-651e986c3cf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d70467c-9597-4367-b183-c637b2877256"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fae253d-23f3-4290-8fbb-a23ec04581e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc8229a0-c120-44f4-82b9-67db3861183c"
                    }
                  }
                ]
              },
              {
                "id": "a17916af-7741-43ef-b420-ea0918015216",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7395059f-8290-4ff9-a405-16a907a77ea5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9606373c-9063-471e-9db1-9f8636beb87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4140fa12-7c0f-4fca-b615-1e6b27b698b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bb7b98-9c7e-4cdf-93d0-29f92a61d1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63ac210-9699-4c81-b9b5-8ff28310bbd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "09545977-ea09-4d57-a840-624a2dfa2b04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "099bbfc9-e234-459b-80ba-2ba76734ee43",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0eab190-5b04-42b8-be3a-ed4f12cdb7ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b64f49e8-f8a9-46ab-8e83-e543dfda0700"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "497bf6c8-cae3-4c61-8e8e-3cd41b3f0c66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4ef76e7-94d3-45a1-9150-c5ba6fab8060"
                    }
                  }
                ]
              },
              {
                "id": "68e0d961-0f36-4a5d-a623-2f2828158390",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0a6c497-5179-44c6-9f3f-eb59f5af03bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9dd9d22f-d44f-4182-8175-7c3c9a3da9f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f29c38-9b0e-4c3f-a9fa-e4ab299e3b73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65a82f01-9fbd-4b7b-bf5f-a61e5f58b2ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60509d9f-f34a-44ed-8376-a0acaa944906",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d703702f-2e6b-45fa-ac28-6619acd8b1f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66bc6d39-035a-491a-a6f5-f42c32b01833",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f492f3f-1bc5-4865-896c-6507feef367c"
            }
          }
        ]
      },
      {
        "id": "84e21a91-31b1-4f51-9acf-79f3f63a57e6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b75f6ce8-ac43-4501-a85e-346fec017454",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16886da9-11f6-4d6c-b987-96271c53a066",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae4b394b-af91-46c9-804c-3eb905385702",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c9da74-2d0e-4b8b-b647-7f03d852f07e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8d6c1c28-723b-43b7-8523-9034f6a18898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7ebc23-c5b9-4baa-8fe5-0668e14743cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "251f2be4-a807-49d5-b620-076318956ecd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94075682-4331-4d70-8bfb-d746311ded58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88968616-5b09-47b2-b6fe-306eadb7ed11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbb59118-82e6-4698-bef1-0bbafb9cf6fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b911b540-55ab-4a0a-8cae-d25471504afa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5530e64b-7c8f-4cf6-9ae8-d42d7a9c6af4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5f98c80e-d295-4f9e-8dcd-5bd2990d3ee3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4189eb64-c53b-4cf8-8786-005d124fb9b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a0ed6f8-4f1d-475d-84ab-580f390d2131"
            }
          }
        ]
      },
      {
        "id": "2935c1d2-bc58-43ab-b092-73e611c190a1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0275e8fc-0f81-4ca6-b714-d2e781ac105e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f04605c4-c2fd-4c05-a943-cf4ad9457bb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fa0e6bd-183b-4df2-80b7-ba905df4da7f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52feb79e-7527-4a8f-8986-1eafee58c33e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af819470-a761-418d-ae6a-c196e6b7dce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6411e235-f125-4330-b6cb-0083bdd6a974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d84ff6-6eb1-4504-a4a9-edc2a27138a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1793909-0895-4bfb-8eec-11b4e8cbcfa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1bbf1e8-23a2-4f12-a812-54429182770c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "221320eb-2896-46e3-97b5-95b1b1e35849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc56d258-d42e-4f75-890a-769d87632141"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73986a98-2890-4407-aef7-e043b605f612",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ddacda4e-08bf-40db-a9b5-18c32f250d1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93b7733e-436c-4f70-bdaf-362cf649c83d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc9b5892-3cbd-46b0-8f5e-68391b8ddd94"
            }
          }
        ]
      },
      {
        "id": "b5c77561-e3fa-43a7-96af-65bb757a20d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fa52a4a7-578a-4dd4-92c8-d5a8c7d849a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29ec1bf9-d994-45e5-8d5b-9ed95de74795",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29a0dd6d-f601-4beb-b9bb-a0f529d5dc35",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf3cd3d-bbdb-4be0-a07a-cf740df28315",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d95388a-f6f7-40f4-aca0-34fce1415f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f2b3db-10fb-479d-98ab-59d7d51ca6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1815ae3-563f-4a27-be70-ab528c3c8e7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a8b1db6-57ef-4038-ad78-28ee9302a176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fffc5a4b-cc8d-450b-8905-27d6831f5e44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26191c8c-51db-4339-83bc-da8fef31d324",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dee21546-9d78-4c2b-b362-d84f7799febb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2bd2e83-b208-4e96-ae2f-2ef1c922afbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4cfd6d4-3936-4a0c-8f0a-b47b61d95784"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0092df5e-fe75-4d15-b232-ff463f34c9ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb2b5fe1-298a-47f0-abf5-0452ff332cbc"
            }
          }
        ]
      },
      {
        "id": "b72d55c8-f142-4f94-bd32-158e9aa64716",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bf26d1b-1269-4375-a10a-391f5ddd55a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f374f0ac-84e0-40dc-bd7c-6efc8e111735",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb5ee0e7-d23f-49f1-ae62-0d924d58c2eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a55c3460-16b0-4cfd-8334-06d1f5253612",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0309bc8b-cd6f-4c57-a0fa-05e2db1f1898",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 753.3928571428577,
      "responseMin": 25,
      "responseMax": 26051,
      "responseSd": 3898.544246064218,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727571053257,
      "completed": 1727571251821
    },
    "executions": [
      {
        "id": "45011014-5033-4964-832e-e499167f6b96",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4bd5265f-4361-4575-b580-6e9bccddbc4d",
          "httpRequestId": "ef0b8224-b6df-4e40-bc7b-82f2531b38b4"
        },
        "item": {
          "id": "45011014-5033-4964-832e-e499167f6b96",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "81e5219a-1e28-4829-80b4-05a74281c96b",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "1d241244-f657-43c3-abdc-4c56f60af80e",
        "cursor": {
          "ref": "8b0f2b09-de77-49f8-8cd4-bd39eb4351aa",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f41c0e1-6a4a-4a07-a373-20906281c3eb"
        },
        "item": {
          "id": "1d241244-f657-43c3-abdc-4c56f60af80e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1e214ab0-3309-4d3c-90dc-005e9e8d796d",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 0
        }
      },
      {
        "id": "28512e0f-c280-4089-aaf0-31fd80f75024",
        "cursor": {
          "ref": "a42b64ec-3a5e-4b18-8f1a-3a42d68a2cba",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87371ac0-44f2-486c-b142-748965bd0d68"
        },
        "item": {
          "id": "28512e0f-c280-4089-aaf0-31fd80f75024",
          "name": "did_json"
        },
        "response": {
          "id": "55724698-2367-4386-abe5-06049ccb23d5",
          "status": "OK",
          "code": 200,
          "responseTime": 445,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bbe37a-f68e-4052-8839-02b16b0ff2e6",
        "cursor": {
          "ref": "0a87ed9e-4128-4a5a-b31e-3f8ff583ce09",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a7130bbe-8c8c-4504-85fd-5d274989ae88"
        },
        "item": {
          "id": "32bbe37a-f68e-4052-8839-02b16b0ff2e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "0a1f6663-27cb-40ca-a6b7-8b3e16168216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2295,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bbe37a-f68e-4052-8839-02b16b0ff2e6",
        "cursor": {
          "ref": "0a87ed9e-4128-4a5a-b31e-3f8ff583ce09",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a7130bbe-8c8c-4504-85fd-5d274989ae88"
        },
        "item": {
          "id": "32bbe37a-f68e-4052-8839-02b16b0ff2e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "0a1f6663-27cb-40ca-a6b7-8b3e16168216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2295,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de7b0aa-8efc-4eb2-8206-a75222f85d88",
        "cursor": {
          "ref": "c73956f7-38d5-4fab-8597-43ad00e11ef7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c3f46ec-6e57-457d-aa57-309207d68135"
        },
        "item": {
          "id": "2de7b0aa-8efc-4eb2-8206-a75222f85d88",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1a7db1ff-30bd-4548-9b98-a83fffc647a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2782,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e919da-2bc1-4fed-8dbb-551870683e1e",
        "cursor": {
          "ref": "1ba38105-21bd-4027-9f6b-9b36ec024002",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61e6c9fb-2e72-433a-a632-f1321950370f"
        },
        "item": {
          "id": "b3e919da-2bc1-4fed-8dbb-551870683e1e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "05a03de7-6c62-4562-859e-228b4a63be02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2483,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b4de56-8551-4bb5-9505-6b9d040aeab7",
        "cursor": {
          "ref": "6828ded2-ec43-4edc-adfd-352ac45b35cc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c590ff91-05d8-4c6a-9dae-e4ac28072829"
        },
        "item": {
          "id": "b9b4de56-8551-4bb5-9505-6b9d040aeab7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9a1e03dc-f896-45a9-846a-3e0c4de5d798",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2174d3e-921b-4a07-b952-422e1284faed",
        "cursor": {
          "ref": "e7c5d6a9-c18d-43f9-9a91-f9dd2fd5319d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9de2b1c2-dff7-4a72-969f-c3defe23767b"
        },
        "item": {
          "id": "b2174d3e-921b-4a07-b952-422e1284faed",
          "name": "identifiers"
        },
        "response": {
          "id": "dcfd59db-6575-4eeb-85a9-4b6afecbe1a5",
          "status": "OK",
          "code": 200,
          "responseTime": 2449,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0021bc-7105-4ddc-9c86-a83035170d66",
        "cursor": {
          "ref": "80d4a42b-b479-4f52-9f0c-c62148226c37",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d6ccc580-91c1-4f62-a672-1627eff24806"
        },
        "item": {
          "id": "af0021bc-7105-4ddc-9c86-a83035170d66",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8ea33af8-1615-4678-908e-5774fba632c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12708965-649e-4dbc-873b-0a95a891f645",
        "cursor": {
          "ref": "7369103f-7894-47a0-9c65-aaf39856120d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8364aa49-c1d4-4729-863f-3c5374b96cd7"
        },
        "item": {
          "id": "12708965-649e-4dbc-873b-0a95a891f645",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76e90eea-a437-4343-b4bc-6856b110cee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7018e4b4-463b-4d7a-a0fb-c8568b2f68ef",
        "cursor": {
          "ref": "15bbef8f-ea6e-4fbf-85d8-4123217e69c1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "46932f05-c2d8-4ab0-8e43-8ece6b31a803"
        },
        "item": {
          "id": "7018e4b4-463b-4d7a-a0fb-c8568b2f68ef",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "11015545-59a2-4d72-a68c-ae8f54106119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8263dd0-07c2-4033-93fd-4f0fc728784a",
        "cursor": {
          "ref": "e99d3827-79f9-4251-9e12-d9885d46a70d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "90d6fff3-0ad3-4d4a-81ad-d44abf8aa902"
        },
        "item": {
          "id": "b8263dd0-07c2-4033-93fd-4f0fc728784a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "18962de5-eeb6-4c98-9bca-1531ff89ba4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb991c04-78ea-4511-9366-a75a6318a5b8",
        "cursor": {
          "ref": "fe0aa365-f1bf-4a79-9349-61779fb261a2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2acd0ba7-5e65-47ee-bca9-9e9a1985918e"
        },
        "item": {
          "id": "bb991c04-78ea-4511-9366-a75a6318a5b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "15d3fe6e-bd75-473f-bf16-b65318ea2f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f411d-44b4-49fa-85d3-4cfef0f11c98",
        "cursor": {
          "ref": "f2949d89-d55e-4284-a9d6-45d0171ae015",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3181a683-a488-4370-9d62-0df46c02dc26"
        },
        "item": {
          "id": "010f411d-44b4-49fa-85d3-4cfef0f11c98",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "38510e19-e339-4bdc-8751-dbfa21193378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8c68a6-7473-4034-aa02-cc71677a9036",
        "cursor": {
          "ref": "11f1062e-3444-4249-b3bc-926777278eda",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "32d6bac6-f87d-47fa-814a-8725eae334a1"
        },
        "item": {
          "id": "7a8c68a6-7473-4034-aa02-cc71677a9036",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d3b6ed09-60c2-41d7-a7cd-90af04a70d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29196a1b-70ca-4fde-b14b-810883aee69d",
        "cursor": {
          "ref": "caa14732-d818-473c-b4d5-97abced0b049",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "75877e8c-8b1d-438f-aa83-537656ba1e3d"
        },
        "item": {
          "id": "29196a1b-70ca-4fde-b14b-810883aee69d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1e4b00b1-b11d-4a39-a5a0-3fd8babe50d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4287e2-0c36-4fe0-97d8-12da5c150919",
        "cursor": {
          "ref": "1d325037-b6d5-4754-9a1a-89a08026f6bc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "56417ccb-cc3b-471c-a46b-e54270597898"
        },
        "item": {
          "id": "2a4287e2-0c36-4fe0-97d8-12da5c150919",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67cc8ef9-92d1-4647-b618-a5c746066ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f2ed4d-7f37-49f5-98f6-77daf515df3a",
        "cursor": {
          "ref": "a1d1c654-e153-4dae-8ee5-63f474ad6935",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "078a5f2f-39bc-4ec2-97dc-ef031c2db6d2"
        },
        "item": {
          "id": "58f2ed4d-7f37-49f5-98f6-77daf515df3a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "921feb7a-2d54-416e-b641-f6e9110ea604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e4fc5b-71ae-400f-88bf-827683f21e48",
        "cursor": {
          "ref": "1f988087-4bf0-48ac-83a6-e9fd91c31f78",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5b856266-9cdd-44c5-bacb-1a47f580ec32"
        },
        "item": {
          "id": "b8e4fc5b-71ae-400f-88bf-827683f21e48",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "eac595ec-4df2-4d80-84ff-86e76f66bf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17616631-15b7-4c5b-af7f-feec8020d993",
        "cursor": {
          "ref": "7d8af95b-1134-4fb5-8fe4-3a5f77cc2779",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6d52c12d-f3df-407d-89d4-c4e133491b82"
        },
        "item": {
          "id": "17616631-15b7-4c5b-af7f-feec8020d993",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b3fdab27-5022-40cb-b0cb-bd1f9df0ce13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a90a0-1764-42ea-afcc-70709e6b6aa9",
        "cursor": {
          "ref": "4fb438ff-d35f-4147-ac28-a2c66d54bd54",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0ca829b1-6e92-42a0-907c-d89139a0b9c1"
        },
        "item": {
          "id": "a41a90a0-1764-42ea-afcc-70709e6b6aa9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cadfd612-d146-43d1-bb48-3a7c39b4681e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f01cf9-aa60-4f2a-aeb6-fa996dac25b4",
        "cursor": {
          "ref": "f52fa9e8-bbad-4f09-b534-be7af7e823dc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "23cc7a05-703a-47ee-b029-394ed8d73d0d"
        },
        "item": {
          "id": "76f01cf9-aa60-4f2a-aeb6-fa996dac25b4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "22cbfe71-7231-47e8-9a1a-97d8f7ae6720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bf482f-f74a-4f35-b71c-1cbed1db58f2",
        "cursor": {
          "ref": "4b8d73fc-fde9-4ed1-a7fe-b965304db1d5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f1541dc1-21b6-469f-94a7-624fc23731b8"
        },
        "item": {
          "id": "f0bf482f-f74a-4f35-b71c-1cbed1db58f2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b034117b-efa8-42a7-9b91-1f791863add4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a587cac3-791d-4587-9848-22cdd37d00af",
        "cursor": {
          "ref": "a199a905-3a05-4564-a21f-deec1b4820ee",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b2e9fc87-9fa8-4d77-ac01-6853a53c4b6d"
        },
        "item": {
          "id": "a587cac3-791d-4587-9848-22cdd37d00af",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "30d8807e-d20c-4245-b0e4-4b85a0a5fc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e295b7-dfb6-4f81-9483-f017587637c8",
        "cursor": {
          "ref": "3c1738c5-e714-4ef2-8ca0-04a0d0f7917d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cef8c031-db14-4e64-99aa-766cab085e9a"
        },
        "item": {
          "id": "e4e295b7-dfb6-4f81-9483-f017587637c8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "08360d8d-2458-40ac-b64a-73070e5a71a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f84e6aa-7fe7-40a3-9b2b-a9b1e7433d6b",
        "cursor": {
          "ref": "db845616-88c5-4394-9e2c-ddc19a2e80d6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "165a51c4-c29f-41d6-8663-dad212e09022"
        },
        "item": {
          "id": "4f84e6aa-7fe7-40a3-9b2b-a9b1e7433d6b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "328685d5-e2aa-4754-b801-0ffdd39caca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a667e30-4988-4d35-94e8-1a464367158f",
        "cursor": {
          "ref": "f9f75ad8-e9ae-4e64-bee0-f3a31cc54a74",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e0c14283-1aa7-43f4-8533-13225eb5c846"
        },
        "item": {
          "id": "2a667e30-4988-4d35-94e8-1a464367158f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d99be397-f2fe-4b3e-8169-4975eaa3a987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111100fe-d0d2-489a-a97a-57df3afda93e",
        "cursor": {
          "ref": "01186915-32e2-4408-9309-5ef5c67fc826",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ca40b75a-a22d-4446-8e40-f2c918b81ca8"
        },
        "item": {
          "id": "111100fe-d0d2-489a-a97a-57df3afda93e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "626dc95f-36ac-4fad-92d4-193870e82a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b192d3d-367d-43f3-bb7e-4e85232ac681",
        "cursor": {
          "ref": "390661ee-2921-426c-bb66-80f649c1e287",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fe48246f-2ea2-4516-b300-6af5864b4609"
        },
        "item": {
          "id": "7b192d3d-367d-43f3-bb7e-4e85232ac681",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7c8739bd-5991-4de9-9341-d62416db59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c861a1d7-1ec2-4707-ba2a-02e537e34439",
        "cursor": {
          "ref": "b1ad1401-e340-4369-8f13-007d364cdb41",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0315142c-5093-48a2-a094-a408ede38d10"
        },
        "item": {
          "id": "c861a1d7-1ec2-4707-ba2a-02e537e34439",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "67dc59d5-37cb-4b74-8b6b-9a4f77b8c3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ae5e8f-b4ae-4001-9853-50959d95f102",
        "cursor": {
          "ref": "12301b7a-5de3-4ef8-8987-70b5fa4474d8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d060512-e3b4-4eb8-b46d-fccc69e62821"
        },
        "item": {
          "id": "69ae5e8f-b4ae-4001-9853-50959d95f102",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "281df045-a988-4a93-856a-778ed77b59a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276373bd-bbd1-4082-98ab-5fb57c0c43ab",
        "cursor": {
          "ref": "0f1f2ca6-6390-4254-914c-210dec8330c3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1eff1b7a-e5d0-4864-80c7-67e3a39dbc08"
        },
        "item": {
          "id": "276373bd-bbd1-4082-98ab-5fb57c0c43ab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b17688e4-a571-4bce-8699-989f6624a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1003363-a029-49e2-85ed-944405834822",
        "cursor": {
          "ref": "c1a0e502-2524-4f68-8eee-d41f0f5714f5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "61ac6e75-d1ad-4d6d-8ccd-07c2e95fe152"
        },
        "item": {
          "id": "a1003363-a029-49e2-85ed-944405834822",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8c59767f-3151-48ce-8424-00278c928671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab2c6d3-7028-4cbb-9b48-32cf75a458cd",
        "cursor": {
          "ref": "242f781d-c4d8-49e8-b0a9-56966167f2e7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c9aa1ad1-c6da-419e-9d95-e6c50f1c3440"
        },
        "item": {
          "id": "3ab2c6d3-7028-4cbb-9b48-32cf75a458cd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b77590e-5745-435b-b76d-76cb735f51ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314f73bb-b32b-4c54-8adf-e4b174baf612",
        "cursor": {
          "ref": "d2ddfa8f-48ce-44e8-880c-523611f3c913",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "495bfa7f-1c98-4665-8b97-1dbcaf6e1b92"
        },
        "item": {
          "id": "314f73bb-b32b-4c54-8adf-e4b174baf612",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38ed1c38-ded6-41bf-b214-ed8a59c058cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99431d0f-9ea6-47c9-8029-d12ddd6366c8",
        "cursor": {
          "ref": "791be3b8-d39a-48c2-b96b-fbc62e404bd3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9be86abd-ef22-4b69-8245-dcb7ba9d1cbb"
        },
        "item": {
          "id": "99431d0f-9ea6-47c9-8029-d12ddd6366c8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "40ca66cc-3c3c-4f21-ac53-27c8a343b0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606a9845-979a-4081-aa23-9490b0923c8b",
        "cursor": {
          "ref": "d5bddb54-7251-42dd-b354-120b7c690526",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "769fc528-c900-4f14-9e80-194a5a09abd1"
        },
        "item": {
          "id": "606a9845-979a-4081-aa23-9490b0923c8b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4374952-0104-4965-8608-ca97fe02a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86911ba8-6b28-4380-aee4-e491dbdd6728",
        "cursor": {
          "ref": "b7083fdb-6e3e-4816-84ba-454a2468eb71",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba52ff1f-db3e-4b1d-866d-361b2b58ab6d"
        },
        "item": {
          "id": "86911ba8-6b28-4380-aee4-e491dbdd6728",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e89255a2-1ba5-4b5a-86b0-52f49b0c6343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ef0d8-7035-4959-93d7-4e45e3b23ba2",
        "cursor": {
          "ref": "4efadc4f-101e-4cde-ac92-d07190d01879",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6e08dcad-5efe-40a3-91c2-f03c7a732830"
        },
        "item": {
          "id": "b10ef0d8-7035-4959-93d7-4e45e3b23ba2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2fb44214-c757-4975-ac1a-86d42e55447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a191c3-b712-4d90-be47-fcd2619d7a7b",
        "cursor": {
          "ref": "f607c2c4-ab69-4568-91d3-2afd51e7b2ab",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dfebfc35-680a-4e80-9460-c893ada17126"
        },
        "item": {
          "id": "e1a191c3-b712-4d90-be47-fcd2619d7a7b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "349b3bf3-cbff-4502-8ceb-77e0d5482543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586d781-f897-4054-8730-9d136220d7aa",
        "cursor": {
          "ref": "fb1bb980-1680-47d8-8ea0-cb7a64a7a2ce",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "936312ef-6670-4e10-a39e-b8ae30aecedc"
        },
        "item": {
          "id": "a586d781-f897-4054-8730-9d136220d7aa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a7ac5012-9f62-4cbc-a1b0-6522e87c7dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a590e-cc42-4e91-813c-27e4c49fdb5a",
        "cursor": {
          "ref": "b945909d-39a8-49f6-befd-649886d8d82d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a2f10ea2-5b77-4b40-b7ee-53ca07498004"
        },
        "item": {
          "id": "910a590e-cc42-4e91-813c-27e4c49fdb5a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "69024b89-af73-4721-b7e7-5a0bda204ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1088a75-4803-4f89-89ec-ae0686b250fc",
        "cursor": {
          "ref": "11b14e0a-a90f-4813-b317-4fdcf97b9fa5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ce764bab-fe0e-4732-b842-4873bf3bb003"
        },
        "item": {
          "id": "e1088a75-4803-4f89-89ec-ae0686b250fc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "04bb82b9-44b9-4eb4-8763-2444c1357913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7394ec65-3c8d-4478-a4af-30474ba89d8e",
        "cursor": {
          "ref": "40df3b65-bf1f-4400-a15c-88aaf984e590",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ed936e92-cfec-4cae-a46e-4f0e9b687485"
        },
        "item": {
          "id": "7394ec65-3c8d-4478-a4af-30474ba89d8e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b8641500-2858-4e73-a0f3-bc90a36c4271",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e7f5e1-a3dd-45bc-a7e1-63fb8c3b8bfc",
        "cursor": {
          "ref": "ef1269ae-7993-453d-8a08-973a089e5ea7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "32678856-a849-4232-80cc-bd5203cb5476"
        },
        "item": {
          "id": "a3e7f5e1-a3dd-45bc-a7e1-63fb8c3b8bfc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d0fbe951-7398-47d4-9dad-dd50bb0544ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203f31c2-3648-42f7-8580-a206953577cb",
        "cursor": {
          "ref": "bec3cada-3ca2-412b-b8a3-098ee738e9a9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "715dc146-a720-4580-8481-c5dac64a9592"
        },
        "item": {
          "id": "203f31c2-3648-42f7-8580-a206953577cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f96a5d6e-7e09-4d21-ab3a-721322e5c636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50231d50-b0bd-41a2-8a33-fce80ecdf31f",
        "cursor": {
          "ref": "7cb5ad61-9add-49c6-8f38-1d840da536d2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6c61f0c6-0e3a-4bc2-b155-9b939863426c"
        },
        "item": {
          "id": "50231d50-b0bd-41a2-8a33-fce80ecdf31f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3eb288df-8eea-4ddb-a62a-ff9a0285845d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e165e3a5-2d62-4593-a5ed-a9ecb1159e4a",
        "cursor": {
          "ref": "767d143e-8752-429a-b1ed-24bfb5389f4e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "05379116-ed58-49d6-a8dc-15e95b9495f4"
        },
        "item": {
          "id": "e165e3a5-2d62-4593-a5ed-a9ecb1159e4a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2b96138f-b442-4095-8c75-d6c14a1bd75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a119d9f-1e5f-496b-a696-7aba9e1e46ce",
        "cursor": {
          "ref": "8ac96820-85fc-470f-be06-cb83f7ba6a9b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3d81a5e4-c4b1-4722-92be-3fd1ca1572f6"
        },
        "item": {
          "id": "1a119d9f-1e5f-496b-a696-7aba9e1e46ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eef4bbb7-290a-44f6-9bcd-91a9181cd757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d3782-58b3-4859-b43b-b2ee24042dc8",
        "cursor": {
          "ref": "2916d879-cfdc-488e-8ee6-93bd0b60e531",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "603faca3-baf1-4055-9516-7694422ab389"
        },
        "item": {
          "id": "7b5d3782-58b3-4859-b43b-b2ee24042dc8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5ba772ea-0d04-4bb7-93f3-4d053ecbc6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d893d96f-5f79-4539-837c-d5099e7b9348",
        "cursor": {
          "ref": "8d686ad9-38b6-41d7-a1d6-23f86f6be1f2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "da9bdf6c-b86b-4207-99d0-c77ed53768ea"
        },
        "item": {
          "id": "d893d96f-5f79-4539-837c-d5099e7b9348",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "339926db-f9c1-485a-87f1-e973e51891e8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 64,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da25f43-2506-44e3-8037-362716f59fce",
        "cursor": {
          "ref": "e02b7387-e7d8-4556-89f3-cc8f41cbdf64",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a76295ec-e03f-4b0c-beca-4c75823565b4"
        },
        "item": {
          "id": "4da25f43-2506-44e3-8037-362716f59fce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8cda841b-2610-4781-96ce-f8a9cc89afc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5650e82f-0b9a-46eb-b374-a9fc369ad47a",
        "cursor": {
          "ref": "133314a7-bd26-49d8-b5f0-232179ae946d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9782c799-76ee-432b-8750-68b789e67641"
        },
        "item": {
          "id": "5650e82f-0b9a-46eb-b374-a9fc369ad47a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "27bcaec3-f254-4966-a3ef-5e53bbbb84fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af06009-c4c7-4bab-93e3-901ef8eb529d",
        "cursor": {
          "ref": "0ba09e1e-1fa1-4d1c-908e-d6fad14c7c0e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ad108b39-6e4f-499b-b294-eae9c665881f"
        },
        "item": {
          "id": "1af06009-c4c7-4bab-93e3-901ef8eb529d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d64352ee-ab89-443e-b74e-37c6336281ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd8885-5cf5-4e7a-b54d-ae1153f67e1d",
        "cursor": {
          "ref": "ffee2f86-772a-4d03-95c0-3bba9d0e7046",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b85b1136-b842-44ee-921d-210e02d30431"
        },
        "item": {
          "id": "a1bd8885-5cf5-4e7a-b54d-ae1153f67e1d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c1700772-3fd4-461f-b1e4-2b9aa480db7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0079da1-2705-4ec6-88f0-eadb79b7d250",
        "cursor": {
          "ref": "b744ccaa-e7ee-4019-a807-3eafc0b69c77",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "68d37cc4-cd18-4fdd-8874-60503258ec11"
        },
        "item": {
          "id": "c0079da1-2705-4ec6-88f0-eadb79b7d250",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "59075861-daef-4ca5-931a-891470193a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9999a5fe-8607-4019-884e-b08e70f34569",
        "cursor": {
          "ref": "b9444133-55b1-4784-a121-bb1098fbc9aa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e522999-23dd-4584-87d0-d45985130d17"
        },
        "item": {
          "id": "9999a5fe-8607-4019-884e-b08e70f34569",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "514ef7bd-072e-4901-916f-7e11d1312c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73da3ac8-d896-4b90-b21e-7db9d703058f",
        "cursor": {
          "ref": "cdcba087-dcd4-4a43-aedc-23fd99ac92ac",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5a3777d-ac87-4a67-a48a-4075585aec6b"
        },
        "item": {
          "id": "73da3ac8-d896-4b90-b21e-7db9d703058f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b7bc542c-e030-4149-bb9a-28d883e201d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e3a761-dfa2-401c-ad77-f2bf245716db",
        "cursor": {
          "ref": "33b11184-5af9-4004-8c83-57d8dfd7f62f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c4171908-61b4-4575-9b0a-84909ee29423"
        },
        "item": {
          "id": "a5e3a761-dfa2-401c-ad77-f2bf245716db",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "baea846e-1bf9-444f-8b14-8c6e2e6a0a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f0e853-1fba-49b0-9b55-96111ecf8f38",
        "cursor": {
          "ref": "797f22a4-5d34-4068-b91d-0dcd159323c9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a2a7a1b3-0cf3-45ff-98ab-69e1718a328b"
        },
        "item": {
          "id": "a5f0e853-1fba-49b0-9b55-96111ecf8f38",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3af83304-2a1d-4e2b-a0cc-c2aee1db5382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6776df20-fa0f-482b-85fe-6c6a84cf94cb",
        "cursor": {
          "ref": "c3d781f0-4dbd-4662-a95d-f485d84379f0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dd12de0d-42c3-4f1f-86fa-bd114423331c"
        },
        "item": {
          "id": "6776df20-fa0f-482b-85fe-6c6a84cf94cb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "24b8709d-33a4-4282-8851-2441d7417647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa920c-77ad-45a6-8c89-7a01136380df",
        "cursor": {
          "ref": "72bcb597-0719-4dcb-9eec-5beb2d67186e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a54e90be-d759-4575-8529-3700c31d5331"
        },
        "item": {
          "id": "60fa920c-77ad-45a6-8c89-7a01136380df",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5ed99f75-9943-47d5-9a9a-684dae3231b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e084d3-61b9-4b4a-90dd-f59d52fae44d",
        "cursor": {
          "ref": "4bdf388b-ea81-4ac3-89b4-96cf495cc9c7",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3aa5603c-bc71-4d59-b74c-47151f9d9194"
        },
        "item": {
          "id": "88e084d3-61b9-4b4a-90dd-f59d52fae44d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6699fe88-fe1f-498b-a277-2b817b8d8f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18ae122-8350-45b0-a9ad-22b1f796fdde",
        "cursor": {
          "ref": "f9b7087c-a48b-40ed-9f91-b36413f5eb13",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "84cec7ca-6285-4902-8ab5-fe3e6df23036"
        },
        "item": {
          "id": "d18ae122-8350-45b0-a9ad-22b1f796fdde",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ca8eddd8-13f9-499f-83c7-6a3ceb03acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447b47fa-563b-471d-8d17-8d0668401b2d",
        "cursor": {
          "ref": "a9e1de96-436d-4b67-8006-fa5e01406f3d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0f0f52d3-fc9c-454b-81b8-a9123079aca7"
        },
        "item": {
          "id": "447b47fa-563b-471d-8d17-8d0668401b2d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f52efd19-3eab-43f4-be32-f39b096a6280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baba1797-49dd-42f6-982e-9fefad40e211",
        "cursor": {
          "ref": "dd7633db-e210-46b4-8f50-9e5af5e035b7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4c1b067a-d665-4301-b607-d3d2d2e5ef55"
        },
        "item": {
          "id": "baba1797-49dd-42f6-982e-9fefad40e211",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4d766fc-6aae-42de-8bd2-b5548d28ba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1dd320-dd5f-4f93-a6ba-94cee5b15669",
        "cursor": {
          "ref": "0b8b7b63-762a-4e19-b025-38d1524cda2f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5f538352-5b85-44cf-ab82-6e3c1599a90f"
        },
        "item": {
          "id": "8d1dd320-dd5f-4f93-a6ba-94cee5b15669",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ec3b2c71-2928-40b4-8b3c-2fb917aed7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3029965-48b2-490c-901e-1d4ad0603a88",
        "cursor": {
          "ref": "fa3bb820-e27b-483c-86dc-1771efbb6bc1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5c67bb73-39bb-419b-a8e4-7f1cf180f809"
        },
        "item": {
          "id": "b3029965-48b2-490c-901e-1d4ad0603a88",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0b901546-171c-460e-aeac-9351b13bf766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5989d2-7e42-4be2-af88-fc34def9d903",
        "cursor": {
          "ref": "bee5bd45-0766-471e-b4cb-79a073d9dddb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f2f3c066-3623-48fb-a7ee-f85ec77c6c77"
        },
        "item": {
          "id": "6c5989d2-7e42-4be2-af88-fc34def9d903",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2c503deb-62aa-49f4-82f8-a2f3f4f30458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4eda69-07e4-463a-bf6f-4d823dbdf6f9",
        "cursor": {
          "ref": "13a7f1ca-ffb6-43d7-8b94-7ad3a59bdcd7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3c78f1fd-ac40-4e99-8cee-a3bcc3f9f84d"
        },
        "item": {
          "id": "ff4eda69-07e4-463a-bf6f-4d823dbdf6f9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dc840f8a-f4f7-407f-a468-48c0bb3963f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e2be8e-becb-4156-b284-4c9aaa885fa2",
        "cursor": {
          "ref": "e0fe269a-4f4f-48f9-821d-9e08fa7385af",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2c23e00e-fee8-4574-9d3b-49609bc7991a"
        },
        "item": {
          "id": "08e2be8e-becb-4156-b284-4c9aaa885fa2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fa488a55-c50c-4216-bffa-7a86603c0ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42da62df-c0ad-4d4e-9e2e-1f90c5725617",
        "cursor": {
          "ref": "37042d1d-5a21-4539-8764-6b0efcf16f2d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "da012634-6954-49d6-92d9-7dcc1c1d9a2a"
        },
        "item": {
          "id": "42da62df-c0ad-4d4e-9e2e-1f90c5725617",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "516df77d-6cdf-4379-8eeb-6546c9622caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbfe25d-bffa-4664-945c-3fb04241571f",
        "cursor": {
          "ref": "3eb17d66-cad7-4c07-a466-1e389658d175",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "99ee079a-411f-41ad-a36b-9a11639ee1f6"
        },
        "item": {
          "id": "3bbfe25d-bffa-4664-945c-3fb04241571f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "77ef3087-3464-4ba6-baea-378144a0e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491479b0-791a-4b7c-88a2-75e62e3a5d73",
        "cursor": {
          "ref": "bccd1307-af1f-49f4-b700-4accbcb2cfa9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0d100ef1-8616-4f76-b469-de086a39e77f"
        },
        "item": {
          "id": "491479b0-791a-4b7c-88a2-75e62e3a5d73",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4ccba650-3812-4dd8-b25a-e5ff40ab04aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb176825-3161-4c91-8b16-4fa46bf23f06",
        "cursor": {
          "ref": "3119ea09-9917-4781-9210-27d823f85368",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "554422d1-94fe-48d2-912d-d6fc7ba36d9f"
        },
        "item": {
          "id": "fb176825-3161-4c91-8b16-4fa46bf23f06",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9b581965-f628-4618-ae6e-1e1c5982798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daa92e8-d2cf-4997-8731-fad30d0b5c54",
        "cursor": {
          "ref": "7e584174-1b62-41aa-9501-4dadb3e22065",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3bf84994-1213-4c04-8653-6cd25ad020ec"
        },
        "item": {
          "id": "5daa92e8-d2cf-4997-8731-fad30d0b5c54",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a50cf2b9-c757-4c2b-a7be-20b3a594d7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7478ffa3-2c2f-4dae-a278-99f532614025",
        "cursor": {
          "ref": "6b480cc6-ac44-4198-b983-5b848f6c67d3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f98e4096-8dd0-4dc4-9299-72f108d39c75"
        },
        "item": {
          "id": "7478ffa3-2c2f-4dae-a278-99f532614025",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6b490b6a-31c6-408e-9bb2-3f907b89e158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5bb525-30a2-470a-bb60-16087eee1506",
        "cursor": {
          "ref": "d0e4abbd-21de-4188-80f0-873be4afc5a1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f8d65355-2b6f-4912-9694-19f57a44c5c6"
        },
        "item": {
          "id": "ac5bb525-30a2-470a-bb60-16087eee1506",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dada82db-699a-4279-9fcc-3d2eb1b018af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16441b0-a462-4a1a-a345-5ee0be5c5b8f",
        "cursor": {
          "ref": "bfb5268c-764c-4994-bb21-1f7cec0eaaec",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f0167bf0-8a39-4bf2-af5b-f006873578c3"
        },
        "item": {
          "id": "e16441b0-a462-4a1a-a345-5ee0be5c5b8f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f1ab7512-34d9-4fd8-882b-ef9f043ed47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a86ab6-6ee2-4de9-b01b-0f196a3e2cb7",
        "cursor": {
          "ref": "31b6241b-9f70-479f-8b73-cfac6c104e1b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e71d8be3-8ab8-4e0d-8370-06a77c00e635"
        },
        "item": {
          "id": "03a86ab6-6ee2-4de9-b01b-0f196a3e2cb7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1dc46b74-3444-4244-86a2-604d3424f373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f6e470-57b9-46cc-8078-fe1f4ff20ad9",
        "cursor": {
          "ref": "ea40b298-1b7b-4a85-a679-1c10c030813f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ab676633-7d06-44e1-b1cc-c3767f56089c"
        },
        "item": {
          "id": "e7f6e470-57b9-46cc-8078-fe1f4ff20ad9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a7705294-fea3-417a-880a-8d52a3659543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64049a79-b1a1-47a9-ab73-8df459e37459",
        "cursor": {
          "ref": "92aecf23-3543-489d-87ae-41da3c623656",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "877ff426-eea0-47a7-bc99-5ea1d3ed7812"
        },
        "item": {
          "id": "64049a79-b1a1-47a9-ab73-8df459e37459",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0c21b17a-c9ea-4104-b621-4c30675cc155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8d3426-28e3-42f2-b09c-45512b8aac9b",
        "cursor": {
          "ref": "e61cd84b-260a-4bd2-9d1b-9f0119eed4af",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e8f267a5-6434-40e0-94a2-d40ee258f083"
        },
        "item": {
          "id": "ae8d3426-28e3-42f2-b09c-45512b8aac9b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eac615ac-9f0c-4002-bdf0-15b16ff1d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf96257-ae70-4f50-af5b-fe268ef839e3",
        "cursor": {
          "ref": "bfddd88d-307a-435c-a871-946387b9f343",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41070c73-aefd-4fbe-a79c-39382e0c1f1c"
        },
        "item": {
          "id": "bbf96257-ae70-4f50-af5b-fe268ef839e3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e33dc6bc-92ce-47aa-9f6c-2caf63559354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deac04be-4ba8-4ff3-98d2-d6cd7f66a98e",
        "cursor": {
          "ref": "4fa7986a-c1d8-4ba5-bbb0-cf8c461e01a0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "61757f5e-8dce-4ef3-9484-07d0405431d0"
        },
        "item": {
          "id": "deac04be-4ba8-4ff3-98d2-d6cd7f66a98e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "02074bf8-5d86-4005-851a-0778c1dda3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bad462-e575-4a4e-a988-b47eb7722e00",
        "cursor": {
          "ref": "569b82fa-36c4-4f2e-8627-679d0eb8ce67",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d2bb745-8532-4800-8f67-d2cadf0e409d"
        },
        "item": {
          "id": "a3bad462-e575-4a4e-a988-b47eb7722e00",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "618818ce-6bde-4033-ab89-8f35a88086b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1407502-5b82-4318-b366-003f8103482e",
        "cursor": {
          "ref": "30b7ba6d-3379-4e47-b132-6954d1933453",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a04e9bf2-ef1a-44f8-bee5-24adf40daa7b"
        },
        "item": {
          "id": "d1407502-5b82-4318-b366-003f8103482e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aa35bf4e-8eeb-4148-86de-de8b29a40b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c57c4c6-e880-4b69-b36e-5aad8589e8d7",
        "cursor": {
          "ref": "0cc7236b-8827-459c-8264-5b33afca450d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f0f8ab8b-5bca-4c20-b269-3d45a818febf"
        },
        "item": {
          "id": "9c57c4c6-e880-4b69-b36e-5aad8589e8d7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1ff59020-3674-4130-b346-6cd56dfc2829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcf8f3f-d962-4ce0-8c99-aa16dccf8759",
        "cursor": {
          "ref": "4059a3f9-363a-40b9-ae92-3e8e18321a3b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ec91095b-7373-45b6-ac0b-99cb57c480bb"
        },
        "item": {
          "id": "ffcf8f3f-d962-4ce0-8c99-aa16dccf8759",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9903eb14-e76c-4775-837b-fa18461f6719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a4b5c8-b3e7-4430-ade9-0393e8214e09",
        "cursor": {
          "ref": "cad4e858-c2d0-4e47-8fc4-05ace37b29a1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "174faa04-cfd0-4547-b26d-27b1f1c19049"
        },
        "item": {
          "id": "68a4b5c8-b3e7-4430-ade9-0393e8214e09",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4972e29c-64d1-4252-a8e7-d346e203b512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb75c0e-1917-4ff9-add4-7bb73376097d",
        "cursor": {
          "ref": "24ce7482-8b2e-482f-bbed-44ad27c6496e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0e0e8119-87d1-413e-8b83-374fcb1ac595"
        },
        "item": {
          "id": "efb75c0e-1917-4ff9-add4-7bb73376097d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "35c1236b-e9c9-44ab-aa03-d934459f9545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17290079-92bf-4cc7-a4e4-3de7a89d9934",
        "cursor": {
          "ref": "f12d7012-3906-496d-b0a9-a7032866d7e4",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "51a8b17f-43c6-4194-8f82-4cc39fa21e6b"
        },
        "item": {
          "id": "17290079-92bf-4cc7-a4e4-3de7a89d9934",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6d6e8e6d-1c80-4d48-9432-3c5cb9b82852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aee33e-74a2-42ad-8042-96ae0375fd5e",
        "cursor": {
          "ref": "264073a9-a0c7-4cad-bca8-13f713820f68",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ea7b84da-59af-47a2-976f-82ee31f55517"
        },
        "item": {
          "id": "59aee33e-74a2-42ad-8042-96ae0375fd5e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8a99b123-6321-401c-9a5b-91f631fb6d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd5e39e-97f3-43c6-acba-d4f92fe0b3b8",
        "cursor": {
          "ref": "708ac3b6-1c0f-46fe-b5d3-0e32ddf810be",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e5ae55c1-ca27-41e0-b45e-dd4903006b23"
        },
        "item": {
          "id": "2dd5e39e-97f3-43c6-acba-d4f92fe0b3b8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d1f7309-4bf3-4b60-8c96-c475db53cbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aeeae0-6b60-4a00-b9c5-2d5aaed6f171",
        "cursor": {
          "ref": "5dbd5c8f-e25d-450c-8cf3-0d43e88f1bcd",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d0e74604-7f28-4eff-9bf9-1a73fc905660"
        },
        "item": {
          "id": "d9aeeae0-6b60-4a00-b9c5-2d5aaed6f171",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "521cf271-112f-40db-b7f6-44701ea42916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9045509-8b23-4c2f-85d5-d79c0b7f851b",
        "cursor": {
          "ref": "824a4c21-8db0-458a-b143-5afb14416fb7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c4646b80-6fd8-4a10-8d28-aa8e1d363f45"
        },
        "item": {
          "id": "b9045509-8b23-4c2f-85d5-d79c0b7f851b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "edd48c3f-c8ef-45b1-ac27-372e78eeb863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140fc0c5-af73-4462-a0ec-185e0d971f6b",
        "cursor": {
          "ref": "14c3d5ca-c8e3-4306-987e-cc70bb306997",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e634dee9-ab0e-4bbd-8431-3d3e03621d30"
        },
        "item": {
          "id": "140fc0c5-af73-4462-a0ec-185e0d971f6b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a630233c-11ad-42f3-9c2b-01a1a477911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa7bda0-4d92-4916-a2e0-97e0dec6151a",
        "cursor": {
          "ref": "ab4fda5c-d40a-43e8-aa07-ee3714b90a23",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7103a69c-aeb3-4875-8d0a-af940746a29e"
        },
        "item": {
          "id": "7aa7bda0-4d92-4916-a2e0-97e0dec6151a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bd756843-d75a-4378-8c66-96dadaf144e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285df216-a9ac-48d4-824c-8115f00e3dbc",
        "cursor": {
          "ref": "37f923ed-06df-4a73-852f-ceb19be48c45",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1d235f6f-fcea-4ff7-a0e4-71467bb31c6b"
        },
        "item": {
          "id": "285df216-a9ac-48d4-824c-8115f00e3dbc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f9e22e72-7907-4d94-9639-28ec204831b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eb256c-c14e-4304-b88c-bba14b4c4720",
        "cursor": {
          "ref": "5cffcde5-fc21-4ac7-9e49-e6036479077d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "21179426-35f5-43f7-a602-f6ac569db9e6"
        },
        "item": {
          "id": "c8eb256c-c14e-4304-b88c-bba14b4c4720",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3aa0a264-6f73-4271-b5eb-ada1580782f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24b439e-2437-4255-80c5-88050de89fa2",
        "cursor": {
          "ref": "e84f88de-68b0-4e0d-8142-78d84fc156fd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "819bbe1a-24eb-4b63-8f64-f98e59059ad7"
        },
        "item": {
          "id": "f24b439e-2437-4255-80c5-88050de89fa2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e8fd80b5-cf19-4e00-ad7d-59fdb507ea00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5d57cf-4853-4dc2-b115-efee28967786",
        "cursor": {
          "ref": "987de250-d404-432e-a000-c9fd65d98d34",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a6512bec-dd19-4297-8a8c-5e452e90f9c0"
        },
        "item": {
          "id": "be5d57cf-4853-4dc2-b115-efee28967786",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "56aaf607-9bb0-4743-81db-e8dc08bc69e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee812ae1-57c2-4873-a7b1-8e2a350eebe8",
        "cursor": {
          "ref": "01d66dda-9fe9-43b4-a0d3-5c41fa67b2b2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "160c0ee5-1324-4be8-ad8f-291ab05f40f5"
        },
        "item": {
          "id": "ee812ae1-57c2-4873-a7b1-8e2a350eebe8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a08a1c93-0dc2-4ddb-adb4-60102eccb96d",
          "status": "Created",
          "code": 201,
          "responseTime": 25853,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "40217193-f0c0-4b45-a59c-6a54f1b375f1",
        "cursor": {
          "ref": "0160e0c3-3667-4d98-a9bb-1599ef328441",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a520af68-4204-405c-9b73-a5bf3ed8da38"
        },
        "item": {
          "id": "40217193-f0c0-4b45-a59c-6a54f1b375f1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a53b3386-8687-4f1a-85b2-690f20a9e4ae",
          "status": "Created",
          "code": 201,
          "responseTime": 25827,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3246e0ef-0f36-4222-8bcf-21141c7b04a1",
        "cursor": {
          "ref": "05760e04-2ba0-4d22-808c-4eb156ffbe32",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5d10cd16-2d7a-4d35-aa1d-f951d07087db"
        },
        "item": {
          "id": "3246e0ef-0f36-4222-8bcf-21141c7b04a1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5dd715d6-e76a-406d-9618-66e1cdb8b449",
          "status": "Created",
          "code": 201,
          "responseTime": 24884,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec38f9f1-ce28-4791-bf82-2c5c8a70a1a3",
        "cursor": {
          "ref": "0e14ffb5-66ac-4975-ba93-de85c1b02652",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e3fbd5ad-d57d-4728-bc2f-9de0e6f4f406"
        },
        "item": {
          "id": "ec38f9f1-ce28-4791-bf82-2c5c8a70a1a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ddfe832d-205d-43f4-b3f2-209761e6d2bd",
          "status": "Created",
          "code": 201,
          "responseTime": 26051,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aebf5b5-524a-426f-b1cf-5efa973462a8",
        "cursor": {
          "ref": "8168bdc1-96ae-4e81-a4e5-e2fe4a7338f2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1af3fb61-7828-4165-a8e1-6dfbd4f5ee41"
        },
        "item": {
          "id": "7aebf5b5-524a-426f-b1cf-5efa973462a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6879eb7e-a9ff-4ded-8beb-c49dd9c7d642",
          "status": "Created",
          "code": 201,
          "responseTime": 25779,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-29T00:53:22Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-29T00:53:22Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9d5c7a43-41e2-4829-983f-cc45577aae68",
        "cursor": {
          "ref": "58a6b478-03f0-4e2c-b894-304a1d4fdc40",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0bf3c8c8-43c3-49a2-93fe-14155580eba4"
        },
        "item": {
          "id": "9d5c7a43-41e2-4829-983f-cc45577aae68",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cbad7786-a8cb-4e4c-bf59-dab791fe1c44",
          "status": "Created",
          "code": 201,
          "responseTime": 24821,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3857c374-f730-4b8a-a18d-b36d2fe0f18e",
        "cursor": {
          "ref": "74d64354-e0c8-4ad4-8358-f06ad93f9c2d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "346b0d06-86ab-4756-abab-a4c33e9465b1"
        },
        "item": {
          "id": "3857c374-f730-4b8a-a18d-b36d2fe0f18e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8c2f40e1-a97d-4dce-a8cc-d1942d7e6a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f8eb8c-108e-48bf-9609-ecbd131817d1",
        "cursor": {
          "ref": "e2bc966f-1588-4f4f-82b9-ef936c77c45c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c813d15c-6c6f-47da-8015-a98dde6a578b"
        },
        "item": {
          "id": "e5f8eb8c-108e-48bf-9609-ecbd131817d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8109e9e9-3f85-4e4d-96e0-43f5cbb67dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e51011-7d9b-48b3-b4bc-e5377a051db2",
        "cursor": {
          "ref": "3e83f087-7bca-4af8-899e-d8771e0bffd0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a1db3815-8e9b-43b2-ab6e-04023120d018"
        },
        "item": {
          "id": "43e51011-7d9b-48b3-b4bc-e5377a051db2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49617220-4ba6-40d1-ba3b-c48229b35c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34ffca6-4c2d-4228-abb9-60d1ef9c3a7b",
        "cursor": {
          "ref": "e7fb14ea-8199-436f-a02d-1c6622cbcdd9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf5485ff-c473-4afc-bb10-5a67745241bb"
        },
        "item": {
          "id": "f34ffca6-4c2d-4228-abb9-60d1ef9c3a7b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3029d7e7-577d-43bf-87bb-6d3bd4ef7613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b5d228-1f54-43e5-9ba8-f53788fc4695",
        "cursor": {
          "ref": "9b1b9502-edb9-49cc-b069-547d505c3e0d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "293716d7-1b7a-4840-afad-b7a736032747"
        },
        "item": {
          "id": "67b5d228-1f54-43e5-9ba8-f53788fc4695",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cea32d37-8f30-43a6-968b-b486a93d0121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c1864-63c6-4b8e-bea7-7939b5bb2f2f",
        "cursor": {
          "ref": "841402dd-06d6-4b7b-9a37-53b98637f902",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "29662082-5185-4caa-9c04-ed34b513a3a8"
        },
        "item": {
          "id": "c99c1864-63c6-4b8e-bea7-7939b5bb2f2f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3b3aa290-47e6-402b-ba6f-d3aa71bbbc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f14ab3-75b6-4d0e-b83f-b1c35057719c",
        "cursor": {
          "ref": "8199ae44-0a91-4e53-810d-71a86c819791",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6452c972-5ae6-45e7-97e2-59f34f98aa38"
        },
        "item": {
          "id": "70f14ab3-75b6-4d0e-b83f-b1c35057719c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d1d1be8-6ba9-4352-ad0d-e275ffd7f953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a269458-7c00-4c7a-ad6a-2160eb68db6a",
        "cursor": {
          "ref": "77146780-5de7-49d4-82e7-d3a096406d97",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "33c73dfa-abe8-4db1-b68d-1c48bb37efa1"
        },
        "item": {
          "id": "6a269458-7c00-4c7a-ad6a-2160eb68db6a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0af6b56b-c598-4deb-9642-a9e388064aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9bba5a-3c70-4108-a761-d169ed07f894",
        "cursor": {
          "ref": "bda5d240-28d0-4165-83b8-40f9263825cd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4df0347e-f271-47c0-a4a6-22a7393bfea0"
        },
        "item": {
          "id": "6d9bba5a-3c70-4108-a761-d169ed07f894",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "974992b7-eeab-4043-a604-02a876b555b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd386450-1a45-466d-96b3-498e8d00823d",
        "cursor": {
          "ref": "894b9c1d-1fb0-4160-9f1b-67f9a94d19d4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "16051776-28c1-4382-84eb-5c38aea02c1a"
        },
        "item": {
          "id": "fd386450-1a45-466d-96b3-498e8d00823d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "81b2899b-83fa-4a8a-a2c9-054ba2b6dbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931de346-d684-410a-b0e2-5ac85977280f",
        "cursor": {
          "ref": "676d44d4-38e7-4095-8865-e9b4fddbf3d2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5311136c-88ab-4a16-a91c-d2931fe581ed"
        },
        "item": {
          "id": "931de346-d684-410a-b0e2-5ac85977280f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5718f577-3d06-4e41-b908-ba79499e6143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27950725-fd4d-4551-a0b7-1e88a2ee4c87",
        "cursor": {
          "ref": "88ef47a8-c3c5-4c45-b9d9-d5dd1e04b309",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "06bed3fc-debc-4a55-83b9-83b12cf063c0"
        },
        "item": {
          "id": "27950725-fd4d-4551-a0b7-1e88a2ee4c87",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "242b6a70-61b2-4a12-8fb4-c42d7e9beb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351581ae-b6d7-4fb3-8991-a08030bb589e",
        "cursor": {
          "ref": "ab062341-9fbf-4da7-90f3-e1ea9d4d110d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "25b08651-624d-46b2-9e4a-1c9ea7b772de"
        },
        "item": {
          "id": "351581ae-b6d7-4fb3-8991-a08030bb589e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "61f9f882-ee1b-4a07-9322-4defaa7c9017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17647b8-3c3a-43d9-8aa6-a4a4c399ae85",
        "cursor": {
          "ref": "fdf73de4-e5d2-43a4-9ea3-1a2173e59791",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "928ef96f-54ca-4700-b7f1-239b9282cdca"
        },
        "item": {
          "id": "b17647b8-3c3a-43d9-8aa6-a4a4c399ae85",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5a865ce9-04cb-4092-bc1e-6fd717be4f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ddd985-ff85-4529-835a-5fedca96dfb3",
        "cursor": {
          "ref": "e85fb6e8-3683-49af-8850-cf5799a57913",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c9ab494f-174e-4d84-a5be-b13cd08ce930"
        },
        "item": {
          "id": "e2ddd985-ff85-4529-835a-5fedca96dfb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5eeed1ab-fd28-4ed2-aa1f-b6e122d7e642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dfde3a-9176-4fc1-9678-719d941ff77c",
        "cursor": {
          "ref": "037f7c30-59d2-4bdd-bbbc-11ce073836e1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be6e7aed-992a-45d9-bf4a-61a8339e702e"
        },
        "item": {
          "id": "74dfde3a-9176-4fc1-9678-719d941ff77c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15d374ed-e38b-4a96-b3ff-f2bf0aa7bd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef0c913-a9ff-4608-af0d-b2abd8857906",
        "cursor": {
          "ref": "2b103dc6-dce7-4a9f-b576-3fa1a575da50",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e91a49d9-2d9f-408b-8f44-504d5d71eab0"
        },
        "item": {
          "id": "3ef0c913-a9ff-4608-af0d-b2abd8857906",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "900772f6-b58d-4522-902d-a32557feacfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51b1050-e6e5-4611-b840-208b750820db",
        "cursor": {
          "ref": "5eb2df69-b6f5-46d5-83f5-2fa857afb3f6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e51f340-e90f-422c-b6ca-c4f4d0e37242"
        },
        "item": {
          "id": "b51b1050-e6e5-4611-b840-208b750820db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bfa0c058-8bf6-42ea-bc01-13b6cce0e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d945e7-d722-412c-aefd-56c93a9ecd35",
        "cursor": {
          "ref": "e89f8f96-daf7-4440-a1ac-15ae99238f2b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b819f192-0d14-4058-9acf-60a93c95ba02"
        },
        "item": {
          "id": "29d945e7-d722-412c-aefd-56c93a9ecd35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "509d5ced-032d-470e-be25-d75e03761b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e056c3d-2459-4653-bf5c-cbc4e61a6c66",
        "cursor": {
          "ref": "745bdab6-419b-4d3c-975d-89dd16494ec4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6c319660-1950-49c9-8e33-88c887e77ad4"
        },
        "item": {
          "id": "0e056c3d-2459-4653-bf5c-cbc4e61a6c66",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "87ca182f-9970-46ff-a3cc-e6e0b5b0903d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9a073c-bfc5-4126-802e-41c40f8a1ef7",
        "cursor": {
          "ref": "69bcdf62-2013-41d1-9b89-8a87afe4a2d0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3bcd1001-1abc-4a92-8037-59b3b39e3b41"
        },
        "item": {
          "id": "cf9a073c-bfc5-4126-802e-41c40f8a1ef7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a7133e20-f4ec-4662-b003-739ca1e8b1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f8a706-1d90-481a-896a-7602bbca4d81",
        "cursor": {
          "ref": "afa5fdf5-b9f1-4983-ac43-0667f4b16dda",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b146ea44-03e1-49ed-bab6-e4cf47aed378"
        },
        "item": {
          "id": "48f8a706-1d90-481a-896a-7602bbca4d81",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bc539e28-6f62-41f9-a802-4c3bd7fb4e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50bd2c2-6fd2-4edc-b22f-76d0fe63a853",
        "cursor": {
          "ref": "66c6e036-c96f-4138-aa6a-d295b6634a89",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f0a3280d-42b5-483e-a249-0c87bc0bbbd0"
        },
        "item": {
          "id": "a50bd2c2-6fd2-4edc-b22f-76d0fe63a853",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8739bd8a-c6a9-4464-bc81-202b4c509f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8238d4ae-3101-494e-980b-29778279a266",
        "cursor": {
          "ref": "15b0b82a-0527-48a4-91dd-81efd7b8cadb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "71044b2a-5be6-4a4d-b32e-acbdaf10cdb4"
        },
        "item": {
          "id": "8238d4ae-3101-494e-980b-29778279a266",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d42c6c53-be83-4805-bc20-462ac5d23c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982fd7fb-41b7-49e8-86b5-72d18f2a1ed5",
        "cursor": {
          "ref": "9667a386-c4dc-4f80-934d-759e9b23f18f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e7b6c6e9-d454-4d43-bc78-e2c48f8dd62a"
        },
        "item": {
          "id": "982fd7fb-41b7-49e8-86b5-72d18f2a1ed5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd2a5f65-3125-4ac3-856b-f116233f0e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea04592f-a590-419e-b8a7-304a9dbbf109",
        "cursor": {
          "ref": "785b0547-71fc-468d-899a-e4cff67504ed",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f5587c7e-1c0a-4b6a-9f62-847aaf6d1877"
        },
        "item": {
          "id": "ea04592f-a590-419e-b8a7-304a9dbbf109",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "20abd757-6354-4573-9e1b-9749a886b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff56d6c-4c15-4ef3-9e80-c51a68b2acbf",
        "cursor": {
          "ref": "a5527237-d27a-43ce-bdcf-5a677a557b00",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0bab132e-09c3-4cc5-a05f-fbefd303eb5a"
        },
        "item": {
          "id": "9ff56d6c-4c15-4ef3-9e80-c51a68b2acbf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dfb2e4be-2e1a-4f5c-a1b6-c5e8503ad104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8f3dec-1fbe-4582-a541-fac12f60513e",
        "cursor": {
          "ref": "fd49ba31-3011-4c71-8ca5-19ff0a2ca819",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f33ceef9-2b1c-4f7f-94e9-b48cbceaf519"
        },
        "item": {
          "id": "ac8f3dec-1fbe-4582-a541-fac12f60513e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e8fbe85e-a55a-4bf1-a34b-2b67533e0d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9627b964-9891-47f6-ba2d-8e3109151c71",
        "cursor": {
          "ref": "84d6e386-e6c4-4082-9236-8e89a0e22983",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "53db7601-5a7a-4e10-a01e-be1398908b7e"
        },
        "item": {
          "id": "9627b964-9891-47f6-ba2d-8e3109151c71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f3186b5c-63e4-4748-bb6d-209ee1d339be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf8bbbf-6e89-449e-9dd2-647df5a51dd1",
        "cursor": {
          "ref": "77d32ce8-5d91-4135-bed2-11e84105e2e7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3a73eb19-5cc2-412f-8612-b93246322215"
        },
        "item": {
          "id": "ddf8bbbf-6e89-449e-9dd2-647df5a51dd1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7ff4434-98c9-4e10-9350-bd5e142a17a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c477abe5-cd1e-4249-9c12-b27e0982ab9e",
        "cursor": {
          "ref": "75b0641a-9295-463c-8a63-e20e2f29e5e7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "68fdc8f2-a577-4cba-b9c8-e7d129f7f66c"
        },
        "item": {
          "id": "c477abe5-cd1e-4249-9c12-b27e0982ab9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "97c49008-d684-4622-bbd2-f114dadd20c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8edf3f-f8dc-432e-83b3-68559d211c33",
        "cursor": {
          "ref": "779e6fcc-4df8-4d91-9f4a-d9032e133383",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "655d5707-d575-428e-a768-d36dce4bce6d"
        },
        "item": {
          "id": "db8edf3f-f8dc-432e-83b3-68559d211c33",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "89de3fbf-ba69-40ad-9d53-274d6eea83ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de12f1d-569e-4a7a-a983-8c4a91a3ff25",
        "cursor": {
          "ref": "0ffca1ce-dd14-40f8-ac3d-adc86918a232",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5b8ab9fe-c037-49fc-9cc2-498742f8ed35"
        },
        "item": {
          "id": "9de12f1d-569e-4a7a-a983-8c4a91a3ff25",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8f469170-6545-4e3c-9a64-3b65bb01a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9581a-22fc-40df-9eec-9be650d1a744",
        "cursor": {
          "ref": "7b9b885d-b90e-4073-8567-2a7ba799f8dd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e2418317-486a-4dfb-9c1e-8a47283ab336"
        },
        "item": {
          "id": "cbd9581a-22fc-40df-9eec-9be650d1a744",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "84d67e2a-4df5-4e41-988e-c103b64f214a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6598c3-450e-412d-9612-b06df57720f6",
        "cursor": {
          "ref": "3e6778ff-13e0-44a4-82af-3c3cdf37f1cd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bc165f5e-6dc9-45f3-affa-b2fa6698611b"
        },
        "item": {
          "id": "bb6598c3-450e-412d-9612-b06df57720f6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f79b8b7a-9ac5-4e4b-b6f1-7658c02f9ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47621b4-d151-4614-8145-2808281501d5",
        "cursor": {
          "ref": "b16d124b-1a0e-46ee-b01f-f2c9ced2b59c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eab64aa3-bc9a-4241-bc39-a6a2eb29e5e3"
        },
        "item": {
          "id": "d47621b4-d151-4614-8145-2808281501d5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ea194278-4e17-4ac4-b51e-8645d6742c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484c9b75-ea22-4383-b420-4ca840a35a11",
        "cursor": {
          "ref": "da3b9833-f4be-45af-bc9b-fd47c6537c96",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3d094022-a80c-4bb7-b3fa-b8daa859302c"
        },
        "item": {
          "id": "484c9b75-ea22-4383-b420-4ca840a35a11",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01d29e12-86fe-4983-a85d-2470e0e4c0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813201d0-1adb-4e09-9f6a-e53d0a3fee59",
        "cursor": {
          "ref": "a5aadd8b-2229-49fe-a519-0ad3acc0d7d7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "41afd2ca-5ae7-4f38-b25f-3cdea15e5822"
        },
        "item": {
          "id": "813201d0-1adb-4e09-9f6a-e53d0a3fee59",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2e70222-24e9-4e1c-b5f9-99693185d288",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3103731-12b0-46d6-92f2-c0231bed1f2b",
        "cursor": {
          "ref": "6157911f-f215-489a-8bdd-7bd7772d7519",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "adead73f-d67c-40f6-a98b-47fb2754e625"
        },
        "item": {
          "id": "f3103731-12b0-46d6-92f2-c0231bed1f2b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f21690d3-1773-439b-9a81-1ae9f373c39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6a4d7d-842b-4a73-9930-e706f3db440e",
        "cursor": {
          "ref": "908ba290-a0be-4cf0-96c7-83b952349bf8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e64bc90f-6de3-4264-b0d8-af454b8eb7c5"
        },
        "item": {
          "id": "cd6a4d7d-842b-4a73-9930-e706f3db440e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0408153f-5b89-4053-82c1-705213f05462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63eb16f-d79e-4d23-ad84-40ff0d0cd7fd",
        "cursor": {
          "ref": "2f1af753-c2bf-46a4-a45b-c33049ff1f95",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4644cae6-e76f-464a-bc9d-93582c3a9da8"
        },
        "item": {
          "id": "f63eb16f-d79e-4d23-ad84-40ff0d0cd7fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "415fef74-f5f7-447a-b14e-0bfb3a8799f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd763e11-55d9-446f-8ac8-3f61370cdb76",
        "cursor": {
          "ref": "ea148581-ee71-438a-87b6-2a8bd8b94bda",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ee388cd0-6de2-4e89-9487-d888efb1e9cf"
        },
        "item": {
          "id": "dd763e11-55d9-446f-8ac8-3f61370cdb76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f47507f8-cc95-443a-9c4c-bb6ccdc44420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeb756a-3a24-4495-adb5-6e31084ee6f7",
        "cursor": {
          "ref": "64db94be-0d62-4c0c-9da1-d91faf578a77",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0680969c-0309-4ff8-836d-79361dc7aacd"
        },
        "item": {
          "id": "ebeb756a-3a24-4495-adb5-6e31084ee6f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b772a55d-658f-49aa-8f02-671beba27cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882c86f1-c42a-470b-a88f-580b3eb1b066",
        "cursor": {
          "ref": "13ae7c53-8e37-48f2-ba2a-e84f2434a87e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ea3852fb-f4f5-4590-8529-f84751c239c4"
        },
        "item": {
          "id": "882c86f1-c42a-470b-a88f-580b3eb1b066",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a9e5592c-0a2e-4e4c-84ff-d8f0b12d81e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34546f47-066d-4c51-a860-6888d8bb2938",
        "cursor": {
          "ref": "d305ee89-438e-413e-9bdd-9d97b1fee882",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "459e6871-1ae9-45f3-98fd-6fdf93eba2c1"
        },
        "item": {
          "id": "34546f47-066d-4c51-a860-6888d8bb2938",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e9f540e1-2e02-43d3-8dbb-bd6af8208077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7913854b-cf47-45d2-9649-6b14eb2e4866",
        "cursor": {
          "ref": "4e17cd52-497d-4722-a843-15983b32ead0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a31b4b02-e586-49f4-ae1f-e112a5c9ff79"
        },
        "item": {
          "id": "7913854b-cf47-45d2-9649-6b14eb2e4866",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4cd57a7e-2f72-4aee-b49e-ffb3cb44e4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbebe117-939c-48fe-b0c6-c65a64357743",
        "cursor": {
          "ref": "28f3b4ad-aaa1-4977-8773-289c31ae45f7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f775e6c9-32db-4902-956e-f3a66fa91ca8"
        },
        "item": {
          "id": "dbebe117-939c-48fe-b0c6-c65a64357743",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5278b956-2954-49d4-ad17-e8648bfe784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4458b58d-3b82-4247-b1b7-92041516a5d2",
        "cursor": {
          "ref": "243d3b9c-c7d6-4a43-b6a4-d6a8514ae849",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "878fda10-5c58-45ba-adc5-8ba97b1a6506"
        },
        "item": {
          "id": "4458b58d-3b82-4247-b1b7-92041516a5d2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b3cfe9a7-7d27-486a-99cf-c7b2e1a8ad8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c408fe1d-9061-43bc-9871-627c026cc440",
        "cursor": {
          "ref": "44784cab-e011-4994-a5f7-fba05f13c846",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d74859f3-426e-4405-a82b-1000896ffc5c"
        },
        "item": {
          "id": "c408fe1d-9061-43bc-9871-627c026cc440",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "15075bc3-5191-4694-a8ad-1589b3162e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b91c81a-36b7-485a-b3c0-5a2b33217d95",
        "cursor": {
          "ref": "916c0565-0cf1-49c7-bf2d-f8457726176a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "738ef1e5-1d99-4d76-9461-c8fbea4a50f0"
        },
        "item": {
          "id": "4b91c81a-36b7-485a-b3c0-5a2b33217d95",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "67726955-2ee5-4f52-a701-6766e5ea04e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6831e2-b336-4739-ab33-4ccdcc9ea30d",
        "cursor": {
          "ref": "4bd11026-bfc9-43b7-abd0-0ee632b4ff46",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3aa0f7d1-3090-4334-a440-80ecc521a7d3"
        },
        "item": {
          "id": "cf6831e2-b336-4739-ab33-4ccdcc9ea30d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1ca8e680-4490-4828-b472-4f73aea93d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb948fff-3b6d-4e7b-9a45-c2a6d0aacef4",
        "cursor": {
          "ref": "2647f705-2855-434a-a2e3-3ab883b4a4d8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e7265f84-9e96-4fd2-bf51-4248d580c904"
        },
        "item": {
          "id": "eb948fff-3b6d-4e7b-9a45-c2a6d0aacef4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "533cbf34-3c5a-47fd-8309-04e93d598337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10fb8ce-bb46-4e05-b7ec-aa510d69535f",
        "cursor": {
          "ref": "b56d213d-c5d8-491b-8b14-3d13712b0263",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b7fdf359-b77a-425b-acda-c6c050801595"
        },
        "item": {
          "id": "d10fb8ce-bb46-4e05-b7ec-aa510d69535f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a4f20e4c-5272-4883-a602-b038dc72d575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2fd266-08d8-4195-b912-321a4d1b1b86",
        "cursor": {
          "ref": "88e18f82-7a49-4075-9247-845f6d22aae3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a738a3a1-6555-47f4-8efa-0c5e2e273a28"
        },
        "item": {
          "id": "5d2fd266-08d8-4195-b912-321a4d1b1b86",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3360239f-17b2-4923-ab53-edb3025865c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53cd48d-2e37-4e0b-bda9-445e4b1e0875",
        "cursor": {
          "ref": "42922fb2-907b-403b-b7ee-a7ce5beea048",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "15d34cd9-da25-4c4f-82f4-0a00efe1350b"
        },
        "item": {
          "id": "e53cd48d-2e37-4e0b-bda9-445e4b1e0875",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6e192f91-4b91-4ac0-9f50-212c48ebfb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ca1365-abd6-4906-9538-e23a664829b9",
        "cursor": {
          "ref": "3ae8b145-2a3f-4ccf-940b-d3b5f8604315",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "93762511-a376-4e3b-a132-ad4400474682"
        },
        "item": {
          "id": "89ca1365-abd6-4906-9538-e23a664829b9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73285c27-cca3-4c43-a656-6ea5051e1de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0999080-ffe0-4498-9bfd-1432a78f0f3c",
        "cursor": {
          "ref": "68cd5ca4-3cb4-4c19-9330-d783cfc9f0ad",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2cdacf1a-6783-449d-b1a2-9dd9507c2f44"
        },
        "item": {
          "id": "d0999080-ffe0-4498-9bfd-1432a78f0f3c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4c52aa8-e196-42e2-9af0-ae055e107f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98159eb7-581c-4af9-b79f-1f7df1925ec5",
        "cursor": {
          "ref": "b3c5155e-acbd-45a6-ac02-3b72248548d0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "58e4f86e-ba7f-4a76-84ab-eca1a2e9cf27"
        },
        "item": {
          "id": "98159eb7-581c-4af9-b79f-1f7df1925ec5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "66f639bf-60ae-4d4c-875c-b9bccd02cff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c138022-1c92-49f4-8106-0798f8ef3546",
        "cursor": {
          "ref": "12aef201-24d6-449f-a0c2-1c5a65039dea",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e255a6a2-e3f7-4cd2-98fb-0261528d272d"
        },
        "item": {
          "id": "0c138022-1c92-49f4-8106-0798f8ef3546",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fce529a9-bf68-41f6-8f5d-daea5124e3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7c11dd-ccc9-479d-af7f-10b7a0217372",
        "cursor": {
          "ref": "070b6cf0-3876-489a-bdb9-cba76cd624d1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0861ff08-3a39-45e7-8d81-771fb9b50e79"
        },
        "item": {
          "id": "6a7c11dd-ccc9-479d-af7f-10b7a0217372",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d4aa0b16-7e1e-491c-a320-2d740157ccdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9053368-b5b4-4c2f-997d-e475ef1eb9c1",
        "cursor": {
          "ref": "834b6f9a-c69b-4ca6-ba27-869edf55522c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "977b8284-2ae1-426a-8ee3-be9ad3386782"
        },
        "item": {
          "id": "a9053368-b5b4-4c2f-997d-e475ef1eb9c1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "802582bb-60dd-4f0c-a389-e3fdc242aead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df8a7ce-0e16-4b71-a03b-6a666ab4accb",
        "cursor": {
          "ref": "8b39607d-4601-4e4e-84fe-981c7956e677",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f1aff19e-30f6-49f4-9bc0-b906960d01e7"
        },
        "item": {
          "id": "4df8a7ce-0e16-4b71-a03b-6a666ab4accb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a48dc366-d736-4ec9-b29e-8a9cfb734af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb5b1a9-85a0-43fb-b861-27ff014fbf41",
        "cursor": {
          "ref": "b3f70162-b42e-476d-919d-176a8078b39a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dea44783-0255-4a00-b0a8-9fb6b7d11608"
        },
        "item": {
          "id": "ddb5b1a9-85a0-43fb-b861-27ff014fbf41",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6e74c3ae-199c-462c-ad71-da1700d57215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab41e7-3aa7-48ff-bd4d-47140bc218bc",
        "cursor": {
          "ref": "96974797-ec1b-4c76-9816-a74e4da6e0f2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "396f2139-8072-4d6c-945c-1b786bfe4703"
        },
        "item": {
          "id": "9cab41e7-3aa7-48ff-bd4d-47140bc218bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "80cafac4-6041-4bfe-b244-07dc50d9a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47ef58a-8949-447f-9a78-0abc7c846a44",
        "cursor": {
          "ref": "653ce4d8-41bf-40a0-ade3-922bbd378520",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "28dd9c60-3775-4da6-b838-c90050a7805e"
        },
        "item": {
          "id": "d47ef58a-8949-447f-9a78-0abc7c846a44",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d3ba6e65-2c47-410a-a6e6-4caeccd045ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f47c06-4172-472a-86ad-2081e1c144df",
        "cursor": {
          "ref": "15e4563a-351d-4d94-8481-cd782fe0e4fc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "80b05e69-55cb-40c2-a234-5f792122ece7"
        },
        "item": {
          "id": "27f47c06-4172-472a-86ad-2081e1c144df",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "afce9de9-a566-4cef-b1d4-533444e57334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d429c419-ae12-4d87-913b-318cf71139eb",
        "cursor": {
          "ref": "1f4228e3-1a86-4120-804f-53f03c47a230",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "544400ca-1e74-410a-b584-390fe5503655"
        },
        "item": {
          "id": "d429c419-ae12-4d87-913b-318cf71139eb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "694f7096-ccac-4c95-b0cb-b144c8c6586e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d82821a-9449-437a-a14d-f0331ec997c8",
        "cursor": {
          "ref": "50b083ae-e68f-45b1-9277-c5dab03f805d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5f7677d0-9fa4-4560-8953-5c1bc9a123bb"
        },
        "item": {
          "id": "0d82821a-9449-437a-a14d-f0331ec997c8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "63c7460b-e37b-403c-99a2-b8116b7cfbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65c022b-efe4-4be7-a5f5-6c1acec5ac73",
        "cursor": {
          "ref": "afc6c500-2246-474e-8bef-c86baed78379",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9e1c1f50-a8dd-4478-a4f1-f35000bbf814"
        },
        "item": {
          "id": "e65c022b-efe4-4be7-a5f5-6c1acec5ac73",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e1825d40-a09f-45ef-a488-403cdbe16ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938729ab-fdc4-4024-a5ee-1a7540ca3f71",
        "cursor": {
          "ref": "3fdf5518-c6d9-414b-bdcc-6d6c727308b6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7bc06623-85e5-447a-bfaf-d5da2652dcf3"
        },
        "item": {
          "id": "938729ab-fdc4-4024-a5ee-1a7540ca3f71",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b3933c60-c0bb-4f3f-85bb-c15c4388b0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f50b20-347e-40ca-9fbc-5fb638236de7",
        "cursor": {
          "ref": "0a3123b0-3b49-48ef-90d1-f9fe376b4dd0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9db8d1ad-20b1-45f7-ba06-57a7bff9f539"
        },
        "item": {
          "id": "e2f50b20-347e-40ca-9fbc-5fb638236de7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c75a8056-4c16-4e48-8868-46e678987d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46786b5b-c52c-4753-844d-654ac87a6beb",
        "cursor": {
          "ref": "e85794f4-e587-4136-87a6-59ca6b01f9f1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1571321d-defc-41af-ad9b-817c4f7757d7"
        },
        "item": {
          "id": "46786b5b-c52c-4753-844d-654ac87a6beb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5b69642d-d337-4d22-935e-eeeee1fe5948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0238e0b2-55b7-4873-8507-2f59a07da6a7",
        "cursor": {
          "ref": "9b46ae2d-de16-4aad-82de-e7cf281fade4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5f4cc439-b5e4-4e61-b88f-afbcb2e37ff2"
        },
        "item": {
          "id": "0238e0b2-55b7-4873-8507-2f59a07da6a7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d064feda-373c-4293-8bb5-77b593969320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68bef87-6a62-4431-8a82-f4c8cd686480",
        "cursor": {
          "ref": "eacd69b3-cb3a-4023-a5d2-40cb64ad9d56",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1af7c937-32a6-49f6-bb88-9b5b19c7bdd0"
        },
        "item": {
          "id": "c68bef87-6a62-4431-8a82-f4c8cd686480",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7b62e2a6-b019-489e-b6c0-d0e18c1c6db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81163925-9bfe-4ed5-8a2a-7c11d3b68c9f",
        "cursor": {
          "ref": "2a4d25b5-228b-4100-b1e6-4bcb2e96545b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5d085192-792b-4545-9a5f-a2af7fa67458"
        },
        "item": {
          "id": "81163925-9bfe-4ed5-8a2a-7c11d3b68c9f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ac31be69-f8d0-4b84-8f17-7cd4a324f72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c71d78-56ed-41c3-88a9-505651fe1ea7",
        "cursor": {
          "ref": "585757ff-d842-40ad-845f-6f85ba62453e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "50eb22c6-9448-42d7-a20e-20c08174938d"
        },
        "item": {
          "id": "74c71d78-56ed-41c3-88a9-505651fe1ea7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "73e18622-82ea-4662-8248-478ae3ff6573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f272931-1521-4cc5-bf2c-553897f2aac5",
        "cursor": {
          "ref": "cc4cf533-0de2-42a5-a340-d4c410dff4c5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9986cfd6-997f-4ae8-9b64-ad8b00b3a409"
        },
        "item": {
          "id": "2f272931-1521-4cc5-bf2c-553897f2aac5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "39230520-fdae-4e8b-9785-4bc302855e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e80622-6240-421f-9f83-e1fcc833467b",
        "cursor": {
          "ref": "b89efb1f-2506-48ed-a471-3f978d537887",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6b8faeb0-b6f7-40d4-b52e-3dec807d09a7"
        },
        "item": {
          "id": "b6e80622-6240-421f-9f83-e1fcc833467b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0c3d0328-aca9-4cb1-8cce-a0b910b6f5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f20d40-a414-4501-bdbe-358ccb538741",
        "cursor": {
          "ref": "5adbf4cd-7d69-4355-bae0-987f469dfee9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5504726d-e150-4625-9f8d-14e7959cb6eb"
        },
        "item": {
          "id": "83f20d40-a414-4501-bdbe-358ccb538741",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d2934bb6-5025-4a48-9bb3-374d1336b4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052d50ee-ac74-4cbd-a39a-702249fd379d",
        "cursor": {
          "ref": "894e3a93-8e78-4867-96c1-589c53ee1b82",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f510af96-8e06-4a23-900a-0944cdd96f62"
        },
        "item": {
          "id": "052d50ee-ac74-4cbd-a39a-702249fd379d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "62b7172f-10b8-4237-9063-e920685b580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba8e038-391e-46c0-b933-7b045e955411",
        "cursor": {
          "ref": "fd0c6443-bdd1-4eb4-b713-e1fae3243744",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "68846adf-f9b6-4b6d-bb47-8590fe61671f"
        },
        "item": {
          "id": "5ba8e038-391e-46c0-b933-7b045e955411",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "67be2db8-9071-4c0f-8e51-f405f05783fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e632f45-07a0-4803-940b-e5cd94f9a1f0",
        "cursor": {
          "ref": "ba7ef616-439b-4012-9dcd-72fc9f46e25d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c5c3a429-f78d-4b17-8caf-42afbee596a9"
        },
        "item": {
          "id": "0e632f45-07a0-4803-940b-e5cd94f9a1f0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "35bad4c9-1672-4547-866a-fe543694d5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572d2f2b-a6dd-45c8-b21d-75c06d209e2f",
        "cursor": {
          "ref": "740ec5d4-daed-4f8e-8d84-65d2eb4faefb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ad3984f9-7820-45af-b180-1d13a8801d01"
        },
        "item": {
          "id": "572d2f2b-a6dd-45c8-b21d-75c06d209e2f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "de0cde35-de85-40ba-8b13-245858c9ba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5466baa-a986-4437-b039-2dcb891346f7",
        "cursor": {
          "ref": "e33bf88f-1f13-4dd0-a56e-fb9ca37dbff4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "33039bf0-7666-45ac-b83f-b80406089397"
        },
        "item": {
          "id": "f5466baa-a986-4437-b039-2dcb891346f7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6af50bc8-e3a5-404e-8665-d03b4d136a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec52e7-4580-4bd5-adc2-9f3db1a4e9e5",
        "cursor": {
          "ref": "6afb013d-2b57-43c0-9b27-8dc66abd83f9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dbe73076-6f98-46e2-aa9d-9f5995b828be"
        },
        "item": {
          "id": "6fec52e7-4580-4bd5-adc2-9f3db1a4e9e5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "05316d16-c371-4572-bec6-51141984ebdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b656663a-ea42-43e6-9d77-2d55bbc99d0c",
        "cursor": {
          "ref": "0b61a80a-e551-439f-97f5-e12c15c85b9a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d2c6ead-f1f5-4e2b-97b0-a7235acf5b78"
        },
        "item": {
          "id": "b656663a-ea42-43e6-9d77-2d55bbc99d0c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a1c3efd8-96c6-41a7-a671-793c9e6956e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6144035e-070f-4e7b-8965-c8bb398a42c7",
        "cursor": {
          "ref": "cea37540-4c42-4ff3-98d8-ab51e38506d2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3d62a337-26db-4c68-890a-ff065a211208"
        },
        "item": {
          "id": "6144035e-070f-4e7b-8965-c8bb398a42c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "14826b90-a81b-4787-9986-81135979bbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76a36a7-49d2-4004-94b2-d09c4fc2a01a",
        "cursor": {
          "ref": "0b81f0a4-7690-436f-92ba-03b65c886463",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2b322b77-7acb-4d74-a86e-f6f8db358907"
        },
        "item": {
          "id": "a76a36a7-49d2-4004-94b2-d09c4fc2a01a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bc8120cb-949e-4b0e-92ab-680d9d71603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce704a77-6c90-4fdb-aafd-55db960292f2",
        "cursor": {
          "ref": "730a3369-54c4-467b-9ac7-c94045a09cd6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8f5e0c1e-89b5-4c96-9a9b-ee7b22c4fc90"
        },
        "item": {
          "id": "ce704a77-6c90-4fdb-aafd-55db960292f2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f550d991-0ec3-4a54-bb32-aa1c70b92032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5a487-f1aa-4aa1-aa78-35f79fd7de40",
        "cursor": {
          "ref": "156500d1-583c-4188-8e1f-72845657350c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f88b4a4c-d8ec-4b09-a0d6-759e5c23f512"
        },
        "item": {
          "id": "2ae5a487-f1aa-4aa1-aa78-35f79fd7de40",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8b1fcd0f-c3a6-4c62-8755-edd0f9795d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4841383-b1bc-4f9d-8329-a54b992b848a",
        "cursor": {
          "ref": "ed467b7c-9d5d-41fe-aabb-7d5b578ad0d9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "70361272-0ae7-48bf-a81d-81f00b0cf702"
        },
        "item": {
          "id": "f4841383-b1bc-4f9d-8329-a54b992b848a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "537d7411-ab89-42d2-81a3-2dfd30a21290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdee9045-6a0d-4503-b002-4d03b7efa1da",
        "cursor": {
          "ref": "25db1e51-fe35-46b5-af48-7b489996c3be",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e298f2ef-f512-4dc9-ad7f-839feafa8ed9"
        },
        "item": {
          "id": "fdee9045-6a0d-4503-b002-4d03b7efa1da",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47610c15-3755-4142-b70c-ba9bd0fe3ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20de2726-9d63-4c02-875f-f15587fc8df4",
        "cursor": {
          "ref": "96442194-095b-40bb-a572-c1d1b0c38577",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "36c46960-a513-4abc-953a-e16e422ecc3e"
        },
        "item": {
          "id": "20de2726-9d63-4c02-875f-f15587fc8df4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02ee5ab4-6acc-47a4-865d-eb37c4c98a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61812e03-d025-4eae-8207-8e4591946f46",
        "cursor": {
          "ref": "cc6b7d0f-7d44-48d3-a579-8d074e3c66a5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e139917d-fccd-4def-b003-3111e1958baf"
        },
        "item": {
          "id": "61812e03-d025-4eae-8207-8e4591946f46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "54a4807e-8ef6-4d39-aed2-7deb82740191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31938e92-f71e-4a08-9f83-20c7f5dea9c8",
        "cursor": {
          "ref": "a73ae755-e53d-4fd1-9e60-97717332083a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fbaa7100-64a7-4308-a1cf-da8b25ba54f2"
        },
        "item": {
          "id": "31938e92-f71e-4a08-9f83-20c7f5dea9c8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "74b1fa3c-870d-46c5-82da-635b62963de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657633f7-6bb8-4cdc-b49b-8027a5c6a7ab",
        "cursor": {
          "ref": "8168353f-1c15-43fa-b092-010cf8e680dc",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4970ac79-994d-4e07-aa17-058ef3364e8f"
        },
        "item": {
          "id": "657633f7-6bb8-4cdc-b49b-8027a5c6a7ab",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c4134cb9-24cb-4c0e-a515-0a129825847e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9c61c-26db-4d5e-b772-104746f58389",
        "cursor": {
          "ref": "a9f3792c-c9ed-49fd-9b8c-528b2436188a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fcdb7097-0994-45a7-84f6-2af90584dc4a"
        },
        "item": {
          "id": "6cf9c61c-26db-4d5e-b772-104746f58389",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "89ee2c1f-9476-4e50-a991-173916452caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6cec1c-c759-4e28-b8b5-bfb33c9161fb",
        "cursor": {
          "ref": "b889658a-9b1c-4298-abfb-c9c77f641ad0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5aa93a3c-2816-4720-afb6-0a771c831dbb"
        },
        "item": {
          "id": "0a6cec1c-c759-4e28-b8b5-bfb33c9161fb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "09fdeef2-5691-45b1-b5b0-b05c23283cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028793d0-b6cb-4498-bd8a-ec7ac1582205",
        "cursor": {
          "ref": "b1b25120-2d4b-48ba-b5ce-44692bc64b79",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d76d8843-2094-4d94-a26a-794cbb308477"
        },
        "item": {
          "id": "028793d0-b6cb-4498-bd8a-ec7ac1582205",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "69c62cf4-6b49-4d28-a6eb-b6ac94ad0316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1bf58e-51e9-4134-8ab3-c8aafd493237",
        "cursor": {
          "ref": "4ed63938-c5a7-4893-9027-3e0f02a398ad",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "78291067-65c1-42db-bc91-384e3dd70a67"
        },
        "item": {
          "id": "af1bf58e-51e9-4134-8ab3-c8aafd493237",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "661b96cf-9983-4a92-894b-03cf204b6fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eab052e-c8c4-4261-a1f6-147fa6641fd0",
        "cursor": {
          "ref": "f10fe760-e36c-45ca-95ae-e4bf74bb049b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9288f702-6b03-431f-9621-c3f52e8ae3ef"
        },
        "item": {
          "id": "3eab052e-c8c4-4261-a1f6-147fa6641fd0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "afa79b96-2527-4cb8-a001-da0dceeaf8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be467fa-6694-4fdb-84f4-d4f7e05b448e",
        "cursor": {
          "ref": "36008ac5-0f23-4204-bb45-c35109e48928",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c4f67f23-036d-4ba9-9d68-b8750f5bb0cd"
        },
        "item": {
          "id": "0be467fa-6694-4fdb-84f4-d4f7e05b448e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "967a7469-d64f-4a5e-a1c5-6a219d0858df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8100805c-0aee-481d-8cd7-0b08d4427768",
        "cursor": {
          "ref": "aaf64c75-ee97-4541-b6cf-332c9cb45aa6",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "228fe905-5229-4ff6-9e11-dd97d5468d98"
        },
        "item": {
          "id": "8100805c-0aee-481d-8cd7-0b08d4427768",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1c569d19-f515-4cb7-9a65-4e3a371e7cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb67427-4d6a-413a-a390-7deede14e340",
        "cursor": {
          "ref": "e6036441-50a5-4589-bc48-4fa2f1e02e52",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "020ade74-1efe-4268-a8d7-cb50af8b36bb"
        },
        "item": {
          "id": "ffb67427-4d6a-413a-a390-7deede14e340",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7354f04a-bbad-45c3-bc8e-e6e7ddd4393a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b88d48d-bd4d-41b9-aaa1-ee3ab55e8045",
        "cursor": {
          "ref": "cc96393c-099b-4a14-a2a3-65ed63ca41c6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2192a334-391d-4c6e-8faf-333efc35997b"
        },
        "item": {
          "id": "8b88d48d-bd4d-41b9-aaa1-ee3ab55e8045",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "933fdc23-0d64-4488-b9c8-85d1d86781b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e856b6-b66b-4a1f-99d5-34e8b96cfcc9",
        "cursor": {
          "ref": "1fa74444-b473-4e63-a144-958a6d32107d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51a6d033-2445-4fe0-a645-8a8ae86963f2"
        },
        "item": {
          "id": "21e856b6-b66b-4a1f-99d5-34e8b96cfcc9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f1cb1e6c-e1f0-495c-b49c-2682b9ebf04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9d8fa1-d0fd-47d0-96fa-8912fe507a88",
        "cursor": {
          "ref": "33747f1a-a92c-4b58-b300-5177c85d29ed",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bd128d78-b379-404d-9dd5-23cd486cc049"
        },
        "item": {
          "id": "da9d8fa1-d0fd-47d0-96fa-8912fe507a88",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "74c6f4c1-1182-49b0-a221-7792390075dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6232a6-a0e5-4449-b2d6-6ee0943d3ac9",
        "cursor": {
          "ref": "e1bcd52c-3a86-4152-a179-502dbbeaa9bd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd8c30ab-da6c-4a6a-9439-3fefae523e6f"
        },
        "item": {
          "id": "5e6232a6-a0e5-4449-b2d6-6ee0943d3ac9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "181105fc-c9db-41ef-a6f4-b1fbc1854710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2590202c-01b5-4aaf-a7fd-d05bed2e256a",
        "cursor": {
          "ref": "44f2a751-2710-4587-a7d5-3ad0d2c8f3fe",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3aba022d-5944-4215-a07b-407bd92e57e5"
        },
        "item": {
          "id": "2590202c-01b5-4aaf-a7fd-d05bed2e256a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "40953d35-6037-46a2-ac6a-37e5e507d8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8245e75-f84d-40bf-a83c-930fa4f36b1b",
        "cursor": {
          "ref": "f4157db7-7431-4221-a302-f6ba4e50d44b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2568ea77-e75f-4731-9cf3-78bf6d907e40"
        },
        "item": {
          "id": "f8245e75-f84d-40bf-a83c-930fa4f36b1b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ce635f1-74ef-4e2f-b13c-9dc036b4711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8df028e-b940-4d97-aded-11782b7d52da",
        "cursor": {
          "ref": "f595798a-1770-4921-9d5b-323d35d2102a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "176a8fbe-91dd-49c4-b574-4b328fb67f0c"
        },
        "item": {
          "id": "e8df028e-b940-4d97-aded-11782b7d52da",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8848243f-091c-4c2b-8039-800beeadf025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b2acc-aaa8-4e40-95c7-db37a9e9fbc3",
        "cursor": {
          "ref": "32fe536f-a2bb-43e0-8274-a4310cceca15",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "341d1939-a140-4d5a-b965-7e52f8cd7f51"
        },
        "item": {
          "id": "9e6b2acc-aaa8-4e40-95c7-db37a9e9fbc3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e477be26-2c53-4848-842f-b67ade774419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab037047-642b-463c-9684-95b0633cd5a9",
        "cursor": {
          "ref": "bc6974fb-6063-427f-8052-d0fbd82b6754",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0c67a57f-7fbd-4c8d-8379-9df7e2b3253c"
        },
        "item": {
          "id": "ab037047-642b-463c-9684-95b0633cd5a9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "943790f2-1238-4b4f-a100-2fd94cf9fc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce82655-c577-4c0b-9fc9-1725a25d195d",
        "cursor": {
          "ref": "9a94af7c-ecc3-4aa7-b577-2eecbd5fe9f0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a0fcd7d7-25e5-4524-ba0a-5781a71c397c"
        },
        "item": {
          "id": "bce82655-c577-4c0b-9fc9-1725a25d195d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "28edb0ea-6474-41a7-8e9a-41e9f5ff9cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f345126e-0bce-4690-99e3-cbd71ac6c549",
        "cursor": {
          "ref": "d7c71f61-8023-470e-b274-25bf99aefcc2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "77528dd0-0476-4392-97f7-993633c78bf7"
        },
        "item": {
          "id": "f345126e-0bce-4690-99e3-cbd71ac6c549",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3e74819c-3b42-430c-9470-3b973abd93c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33491b6-8cb7-42e0-907c-b4473ef6c894",
        "cursor": {
          "ref": "ff0068aa-acc0-4846-b9e7-64138d1b427c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c0baaae9-d2ae-4951-accf-2f5d139dbfb0"
        },
        "item": {
          "id": "b33491b6-8cb7-42e0-907c-b4473ef6c894",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7fa30325-d61e-4af2-997f-641c4495a5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8308d216-4947-4fe0-9690-039da31a6d4b",
        "cursor": {
          "ref": "cef209ee-cec7-4866-ac16-4bb26a31f746",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cacb9e44-95c8-4266-a7e4-32b53e7679a9"
        },
        "item": {
          "id": "8308d216-4947-4fe0-9690-039da31a6d4b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4fae7f3f-c79f-4389-8e1f-568d6a6e309b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6db8a3e-6ffc-4e41-a894-779ad8572225",
        "cursor": {
          "ref": "ba0142ba-0a1a-4e98-a6eb-159c1d1d2d6b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "58104fb5-2f1e-4450-89ef-837519c3fc6d"
        },
        "item": {
          "id": "c6db8a3e-6ffc-4e41-a894-779ad8572225",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "073020d5-b33a-4686-af02-b7c006879020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f8cc65-265d-40c1-a7f4-09f07749dd99",
        "cursor": {
          "ref": "9709a4cc-506e-4f24-83fc-8b7d08b918bc",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4b733282-1414-45e6-af4a-12b38870afbd"
        },
        "item": {
          "id": "c5f8cc65-265d-40c1-a7f4-09f07749dd99",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57e76241-34ae-4709-9fbe-658dad2d5373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c79891-85fc-476e-90cf-0c9733a7fd16",
        "cursor": {
          "ref": "a6bbf884-ca95-40d2-a89d-06eef7a44057",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "078dab28-4c4b-479a-95fc-d7ebfa1d9744"
        },
        "item": {
          "id": "d4c79891-85fc-476e-90cf-0c9733a7fd16",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cf8c5422-c96f-4e53-bb1e-40659ecc8c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cb19e3-e315-4b3a-be1e-10a45d06c46e",
        "cursor": {
          "ref": "ef92c7d4-33c2-4b67-9610-76ca2239de8d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c527d6b8-9e0e-4da2-a92e-f8f5f4d01a79"
        },
        "item": {
          "id": "a1cb19e3-e315-4b3a-be1e-10a45d06c46e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a5e2fac8-118a-48a5-89cd-fc7c57347037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2d8e99-695f-4140-954d-3029a0ca736e",
        "cursor": {
          "ref": "00c46eb3-79d6-4dc4-adf3-1860dce902ad",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c25b158b-d400-495c-8733-e56bceaf336e"
        },
        "item": {
          "id": "7b2d8e99-695f-4140-954d-3029a0ca736e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d2308ea-969b-4947-8842-61c76cdf0616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a51ca76-04ed-4896-af58-b3a92266d2f4",
        "cursor": {
          "ref": "c59ec39d-9bc3-47b6-b76a-700429250074",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6c2d2ff4-82ca-4241-9dc5-3f2f096bcf2e"
        },
        "item": {
          "id": "8a51ca76-04ed-4896-af58-b3a92266d2f4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fbe41a65-595a-4a43-b5ba-88cc1d764bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceda654-92bc-45c1-a6f7-c1bdce372d07",
        "cursor": {
          "ref": "f6bca2f8-3e04-47f1-a153-730420002e44",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cbb31ddd-7426-4733-affc-5d1c43ca8f85"
        },
        "item": {
          "id": "7ceda654-92bc-45c1-a6f7-c1bdce372d07",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "60376d75-0960-44e0-8fc8-ffdfaf60bab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b3eb0d-1fe5-4e83-b9f9-acaedf70f850",
        "cursor": {
          "ref": "27d34e91-58aa-4651-943d-df6b608c62cd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8ac23d05-c965-426f-b583-08a2c6da88ab"
        },
        "item": {
          "id": "d9b3eb0d-1fe5-4e83-b9f9-acaedf70f850",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3f76a262-e010-49b1-a922-677219779eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672b4283-e517-4a02-8aac-18c392e21e47",
        "cursor": {
          "ref": "f2dbfaed-a9f3-4f81-95c4-698dac87cc02",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7431ec59-c636-42b0-a080-472eec8daa95"
        },
        "item": {
          "id": "672b4283-e517-4a02-8aac-18c392e21e47",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9e8ed15d-9235-4311-b896-b66eaaaadf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac8290b-b658-43c3-a471-503903876d16",
        "cursor": {
          "ref": "7507719e-9d54-4c5b-9d9b-ef7ebb7e7612",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6fac2d25-ef46-4190-8dd2-cf9bd3565e4e"
        },
        "item": {
          "id": "1ac8290b-b658-43c3-a471-503903876d16",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "536a591b-d417-4ad9-9742-4d103dde0137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a0d0c9-b04f-4109-9c31-10ee4d9cd58f",
        "cursor": {
          "ref": "aa67927d-3531-4e67-ad2d-04482aa7c5d1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cfd00c01-0113-4175-ace0-c6dc61b3c644"
        },
        "item": {
          "id": "42a0d0c9-b04f-4109-9c31-10ee4d9cd58f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c665e2b7-28ea-43ce-9c84-e0b3b172187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4196f8-e1a6-406f-851b-f426810ddeac",
        "cursor": {
          "ref": "86e19965-7654-420d-ac54-45c0e67e9864",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "59869eef-4d4a-4fbe-b63a-0e285433e815"
        },
        "item": {
          "id": "3f4196f8-e1a6-406f-851b-f426810ddeac",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72b4b255-03e8-491b-b879-8defbb6199b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9d9c4-02bd-4b83-b23b-90435ef949f1",
        "cursor": {
          "ref": "3ea4ae40-5494-4f94-8100-10f72463c8a8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5e7525b3-7bc9-427c-a75d-c9e1f690f34d"
        },
        "item": {
          "id": "65f9d9c4-02bd-4b83-b23b-90435ef949f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d59b5ee6-6928-42ae-8426-3a8c330a2f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac098fc9-637b-4648-aa25-39cfb17a3a9e",
        "cursor": {
          "ref": "4dcd0b18-ffca-49d1-9818-2db7f39152bd",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e9b6aa3c-6668-4f4e-8c35-935c621520ac"
        },
        "item": {
          "id": "ac098fc9-637b-4648-aa25-39cfb17a3a9e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3d10ad18-1e90-462d-99d9-c6fbd6c428ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfc9c42-9d55-4bf4-b305-d82dfdd37929",
        "cursor": {
          "ref": "e7a41aba-4ad0-4239-b018-e095d9794bb8",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bff37b44-8173-4bb7-b218-e9f89ac95cce"
        },
        "item": {
          "id": "5dfc9c42-9d55-4bf4-b305-d82dfdd37929",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "04022664-3f53-48c2-aded-2e37dfa490ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369e398b-49c3-4f42-9cdb-e9c0296ceb30",
        "cursor": {
          "ref": "80d28746-b35a-4248-b6a4-11bcbab19dbc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e7364cd6-314e-4c7c-b73c-1a364f53e815"
        },
        "item": {
          "id": "369e398b-49c3-4f42-9cdb-e9c0296ceb30",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0e9fdf8c-07d2-48ca-a309-8a079fe64dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5da712b-10be-44d2-a011-6758d12799e8",
        "cursor": {
          "ref": "ba5fedc6-c9bd-43bf-84af-5a35b42ee7f4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bada7ed1-7ff4-448a-b809-ef5a63fe6dd8"
        },
        "item": {
          "id": "f5da712b-10be-44d2-a011-6758d12799e8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dfa7e4b2-9b8c-4e8c-b943-18f72d74f99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055b5e0f-a5eb-444c-93f6-b8487521d2a9",
        "cursor": {
          "ref": "bfc9968d-4139-49ab-a6bf-e86054256667",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ecfb04e7-7296-47e4-b817-360863e1c483"
        },
        "item": {
          "id": "055b5e0f-a5eb-444c-93f6-b8487521d2a9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "047c4306-acd8-443b-a14f-4736973882e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50014baa-8b60-48ab-8f59-ef285408cf95",
        "cursor": {
          "ref": "5e3111f4-8e59-4e9b-94fc-83a5fed5d96e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6907df51-e2f9-4653-b304-4cc1e970292d"
        },
        "item": {
          "id": "50014baa-8b60-48ab-8f59-ef285408cf95",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "80cf60e3-8c58-4912-983d-b718619bcfbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7395059f-8290-4ff9-a405-16a907a77ea5",
        "cursor": {
          "ref": "2c31a598-b924-41fd-b1ac-100c75abbcea",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c7bd1a21-6682-42fe-b513-c04b80b5b08c"
        },
        "item": {
          "id": "7395059f-8290-4ff9-a405-16a907a77ea5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "42665c35-4ea3-478b-ac71-7535fcf2c560",
          "status": "OK",
          "code": 200,
          "responseTime": 2436,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "099bbfc9-e234-459b-80ba-2ba76734ee43",
        "cursor": {
          "ref": "72ef1940-19f5-404a-8a08-5d15e7f81ab9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fdaff908-27aa-4fcd-a1ff-7603dfc37f95"
        },
        "item": {
          "id": "099bbfc9-e234-459b-80ba-2ba76734ee43",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ee36a50-f4d6-4a6a-91c0-7c06a5f2ef96",
          "status": "OK",
          "code": 200,
          "responseTime": 3821,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e0d961-0f36-4a5d-a623-2f2828158390",
        "cursor": {
          "ref": "0df045b0-4403-4996-8946-28df2b38eb9d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bd76b7a4-fdae-44b6-81ea-de1b5c2230e4"
        },
        "item": {
          "id": "68e0d961-0f36-4a5d-a623-2f2828158390",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8a109156-4245-4f2e-8716-77bebab420ec",
          "status": "OK",
          "code": 200,
          "responseTime": 3463,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b394b-af91-46c9-804c-3eb905385702",
        "cursor": {
          "ref": "c519b1a1-1592-45e8-9b40-39c694ed6cab",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "abb3f06d-8546-4443-94b5-33540e5a635c"
        },
        "item": {
          "id": "ae4b394b-af91-46c9-804c-3eb905385702",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7b3ae522-3d9e-4ebd-9000-385d029497ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b394b-af91-46c9-804c-3eb905385702",
        "cursor": {
          "ref": "c519b1a1-1592-45e8-9b40-39c694ed6cab",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "abb3f06d-8546-4443-94b5-33540e5a635c"
        },
        "item": {
          "id": "ae4b394b-af91-46c9-804c-3eb905385702",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7b3ae522-3d9e-4ebd-9000-385d029497ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa0e6bd-183b-4df2-80b7-ba905df4da7f",
        "cursor": {
          "ref": "1373809c-92fc-478c-91da-a61e2ab09b60",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "abedfb07-21b0-4230-9136-4f02c98c4f3d"
        },
        "item": {
          "id": "7fa0e6bd-183b-4df2-80b7-ba905df4da7f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1a1311a1-b3fb-4d50-b61d-04d5d3e944b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a0dd6d-f601-4beb-b9bb-a0f529d5dc35",
        "cursor": {
          "ref": "fec999d5-4c1b-4ade-8710-bd23e16e3e15",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ce37c08-d13e-4a4a-96e7-d8cbbe7e0e39"
        },
        "item": {
          "id": "29a0dd6d-f601-4beb-b9bb-a0f529d5dc35",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "84c66d6b-947b-49a2-b11c-5ccfd2e0e388",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}