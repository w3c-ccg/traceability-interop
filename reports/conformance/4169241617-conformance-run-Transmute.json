{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "326d4085-f570-41ab-bad5-db7ae8f40c92",
        "name": "Clear Cache",
        "item": [
          {
            "id": "df64c80e-f9b8-4c82-881f-3fc97d0e596d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d521310e-0027-44b6-adb4-cd502b72962e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5cfd5df5-0e1c-4076-ac89-000caba83526"
                }
              }
            ]
          },
          {
            "id": "be2bace2-09e8-4579-aeb0-8768d415d500",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b154565-df3f-42fb-9b60-5d5f5375ab1a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b93640f6-3abd-44b0-95d4-943e75a0fa9c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d46f357c-332a-4c2a-a95e-f0d66626fd72",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ddfbd5e1-2d67-40ec-ba1c-e5319efe3592",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3b068d6-6178-43e7-b5ce-87d7038e2c35",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e83bf824-2a5f-438f-a592-30f7d30e1075",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c469b9a-9488-4cf3-a0eb-bdfa2acece25"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7313a9d6-5727-4612-9829-9021e81e1cd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9104e50-f9d2-4e8d-86e0-6b71e0ce0441"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b64ac52-1d51-4a42-9ba6-47f10fb5e579",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5dc195e-cc99-4a49-898d-84f35809bfdb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54fe8c21-3035-477b-8b94-7e2c561383c1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "110b6e94-3d03-44a3-a070-530673b7cdc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2180af2-1dc7-4a4a-ba98-fb02e42a7470",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d12219e6-623d-4dd1-979a-1eb5723b7146"
            }
          }
        ]
      },
      {
        "id": "03906564-f81a-46b4-8049-49fee9766499",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4a46cbd7-1370-4abb-a831-efb4b7511bd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3637e0c3-a524-4eb6-9f0f-5cd8e7312895",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38c98544-ee4b-49f8-9dec-c1f7c932d722",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918066fe-ea2d-47ae-85df-27a018b0b8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f10527f-8207-43eb-840c-b9453ed9c283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883eabf1-95f7-4581-8ee8-f61e0b50ee9d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b730e96-a7c2-4344-9a7f-baaf6b07ad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc0ad465-ccd7-4aae-bc7e-615443d126bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833c9d74-6c9e-4d3d-8a5d-866c7d852b3f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16358695-1e2f-4781-979e-e82c973fc934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e32c97-95a7-4b05-9093-0954cabf6005"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d33fff2-a6d6-4ea7-a1ee-62199eb5ca25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83b0526a-d956-4fd9-968c-daba889551e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5270cf-6e2b-44ee-81d7-b87ae29c9f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6985a5a7-a7a3-4530-85da-7ac0b9b817c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8789f6-4efc-4d94-9a45-eb1eba5a9781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef9f9a9-06f4-433d-97f6-cb2c4e9fb940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63c56d5-ef4a-42ef-b5e4-b18fd3bb820b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2db593b-fcd9-4c08-a206-f389d6bae8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f775083-f6d5-4d54-bcb2-1edfcc7b2f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aa1d41-7697-4294-9c86-e1600e61669a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "debad1f1-03c6-4575-a9b5-aaa76ab95f5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bcfec879-fa7e-43bb-9784-37a4ab02ee75",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e3ede19-6d40-47ff-8e9f-e57f318ccaad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "caf8eaba-b60d-4152-ab2f-3403668c4822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f13220c1-4829-49e7-929f-9c79eb91285c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1562f35c-82cc-426b-b8b9-e2ce0d61d633",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e99fd464-8c82-487f-882d-a7d7127c9b11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e468fcd-5ead-4637-bfa8-09c38400e272",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9db5d87f-b1a7-4e12-bc8c-d57482a13710"
            }
          }
        ]
      },
      {
        "id": "c13d54d3-05f5-4137-af73-b9dbd8892b4a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "feedfd75-47e3-4ed1-8dec-dc984f637774",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53d3a389-d7b9-4237-8c24-40aeb550c8c0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4f7c20ee-3b1b-41bb-a051-63bbba2673fd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f009c1de-1194-4e4f-a0d5-40d58740f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee134ac-a0cc-4318-a92f-03f3ba5c5a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dc1159-30dc-458e-8898-888f445a5b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e0a94a7-08a6-4f5f-b845-cb0692c2e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867811d6-a7db-4fed-9edb-9050d65b3a63",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67043a6-743b-4b96-838c-6be8d958ef7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f7e93b-fc69-4567-95ac-7a77c2afa477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e7923-4546-4db4-aac8-f0ada7326257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac77b623-e1d1-42de-a431-3764e07a97c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b3e715-a8be-4877-a6f1-b5e280523232",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af5191e-7201-4f19-86eb-8197044766d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f0bff4-6839-48ac-ba22-046cd89155fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9021b57-e628-46c6-a906-7b6783d59b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e80b1665-8251-499c-8cde-06a60862c6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd0397a-eb1b-44bb-bb93-f56bd83ee7b5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb9a92a-0b67-4b6a-937e-174ffd61caac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665a7831-dce3-4619-9dac-eaa870dc097f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fc8a26-167f-47e0-8596-325416be9456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2392669a-c821-414c-b87e-b6fd31d467e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f39feb7-df46-4305-9092-c799b9b119d6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98805b02-00a0-4643-8781-bd8506d849ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d91c4a-4d11-4416-a7e3-a6f6572e83f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b05d99-c6fc-409b-91e9-3ad753e605b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "685fe698-99da-4461-8c47-f2571b7d52cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8840af9-c076-4920-9916-d33f44a5ff63",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfcd641-e859-4d31-9c40-60488993bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff515d3a-e329-471e-9a3f-d5b417454980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5933fbe2-0da6-4ea6-9d4c-20a635459d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae4cae77-5279-4929-b608-4637ba612790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd55e10-d6d9-433f-a023-89c59ab39d2f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa9351e-13b2-4a16-a456-9611980bfefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec598133-ca14-4bd3-a2b5-c801f408a804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dca95ce-7eb4-4879-9413-657fa7d95ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "432a633f-f631-4317-96f0-1e3c43d94dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abac240e-07da-4952-8cd1-70b50bcee4cc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101fb3c9-e7d1-444d-b80d-4c6a7de52499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ca620f-5444-4106-927c-50310709d6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3954ddf7-b7c2-4480-a46c-a636ce46a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8104262a-69b3-4605-a71f-ec89d17986d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f748ab5-8280-4b0e-9ad9-9bee898b5ba9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1b5364-3b3b-4877-b276-f2af009dfd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ca90f-becc-4447-9336-358e2637c6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08923f90-5567-472b-953f-25eb4e571a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f848c3af-980e-4bbb-b808-8a6db7fb9f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a19375-3000-4844-8967-9a7a5b399bfa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb505cc-f38c-4ff5-be9e-513e16afbf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7177991d-66e0-41b2-8a07-491091279db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa6a2b-e32d-488b-bbd7-0227ae152a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd7619a-975a-46f6-8999-2a4d3d1beaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae646ac-1d2b-4a05-b0c4-68ac889f97d2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae47568-d87c-432a-b71e-df8997639a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eed726e-57b1-4835-b805-3ab2569b8828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbc6e2c-05a5-46cf-80b3-3fc78ebc478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87184ebf-8d7d-4b02-9c6d-267874d65fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf99153f-ee95-449f-8147-fac55ae07faf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eec78df-8e81-4b09-8f9c-239e8e305507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231adf70-5de7-4ea8-9755-5934938838c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf5ed5a-a41d-4d1f-b4e3-17b6036bbb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad97d926-5991-439a-970c-3802131e1f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8299d930-9119-42ad-b25f-e2d39c28da1a",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d14dde2-03f8-4cb0-a534-826ec21791d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef91994-4846-41d6-8766-fda9c1576982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f360a64-5b00-46f0-ac79-dda02b2171c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "6433de27-7f73-4d20-8326-4e77a451177b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a2bb6c-5c0b-4482-b5e3-c14c085d700a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25f983e-721e-41a2-a15d-ef42dcc728ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11033b1-d3cd-4744-a96b-8cf53be3148d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b56ca25-7364-492a-baac-58a35ca0ebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65c4924c-4936-4dea-988d-b11a29ad8425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a062596-d805-4374-88dd-5e8e12c69006",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe4227b-7468-446c-893f-b0843276b81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049101b2-6855-4625-b0de-8872eda39c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8a12df-b8cf-4402-a3d5-b20a191591d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9951b975-6ee0-41a2-a52e-3daa184186c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8974e0-f5e4-4b18-b748-b23fdffe8f57",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d68bd22-e67c-466e-a71e-529787633936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc62dbe-bcc8-45f5-9f8b-671aafd808c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe83cf6a-87e1-4d6e-86dc-084fc79fd8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9c5d05-587c-435c-a2aa-94f3634af42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484c2f16-6684-4cb8-893a-b75ad65278ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26e6c38-a025-4132-9b6a-0b3cdf04de68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa1de0f-e657-4c6d-9a54-b0cde4125007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b18885f-2f50-4d1c-93ac-8760bda6e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9017471d-8073-4633-aaa2-d9b66c1edaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3078a7-a75a-4643-bb75-8c2754825da1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b5f3f-3f4c-46ef-83e9-0f91d2360939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2119f7fc-2a18-491f-98ca-029fd7d31fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07ff96-506f-452f-bcb8-6fcdf471ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c3ace7-9127-4e02-b503-bf40e9882151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985afd24-896d-4f4b-b4d8-e3e957760e16",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2803f43-47ba-40c3-9de3-8ab627826e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53214653-802e-45d2-84dc-25ae02768b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc44b6f-8219-4acc-a046-07b312abc3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1f7aa2-a544-4ae0-9a11-33fed4055b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2dd434-92df-45a1-a599-ecf1c4b5d523",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b97715-1d6b-48da-951c-3ca8793776cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7787149-9f9c-4f09-8af0-4ac542150962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb56a59-6db5-4fe6-8481-077b7df7d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeca73fc-fa25-4871-a61f-7aaebd638f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4529ff16-0153-4afe-b15b-eea362088995",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a90e7e-f5b9-490e-a2aa-3b832711dc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636a1406-4954-48cf-927e-ba3f34a832e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57af2427-cd95-42c4-b3d6-d1d532a37ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4162b66c-53fb-42cb-9e83-9d3390cc55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da9ce95-1415-40b6-b8ff-2bcd5e3a99df",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81705d4-392c-4470-9f12-828002790de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc67f7f-90bf-4859-9083-ddd8dd6beaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f1c3d9-8717-48a9-a7d7-175476318982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfbfe79-434f-4529-94af-3cae877c2fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cf0741-a0f2-4ea3-83c7-df68b9987579",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecf3b00-606f-43e8-ae69-42c66446c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf31c0a-890a-4546-a5e3-f020a3655f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f799fc-adce-4b26-a0c9-a86f11bbcfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db8b1801-86fc-4929-ac7f-fa14c8bc44dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45324ac-71be-4579-8d5f-fdb8f9c6121f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3ddcd5-7f7d-4edf-b531-62b92e9f455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e06296-09c9-45bb-800c-a2112213342a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e48670-766c-482e-8210-f93f1f74119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78905b60-3742-4754-bda9-3e1ece932a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f51623-8295-43fd-a84b-ccfc9171b252",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b28c99-4388-4cd2-b144-a12b6476802f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad13f7c2-ee56-4097-afd3-6733c081d720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fbf825-146f-48bc-98c4-835ecc111d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ffa810-a71d-45df-b50d-206a364a513d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61adbda7-43e4-46b0-9065-954917aa87ca",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c5ae8a-f69b-4daa-9ea9-a625b2a0e90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6eac33-cc88-4057-af1b-f904965b1f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7f8086-d851-4875-af4a-1d5b58245fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79924b1-75a7-4f10-bf93-8a461de5e53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513651f0-1022-4f11-9dd1-dc0104b8f5e5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651c50d6-c35b-4574-aca9-1958b1ba2ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1ebdbf-7820-4c77-8d2c-e7067332bd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b16a575-4752-42c5-ab27-1c4bc2f32883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfb6623-5d2e-432e-a6b1-40903f65e08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5becbc86-8959-4ab5-971c-c16a12ce97da",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c75ee6-4364-4a57-894c-2233186375e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a50bf3-6628-4688-b3ff-fec5e8d18d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe17084-00cd-4b12-969a-7023300db572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b44a724-c0a6-4e01-84aa-b0dbce4089c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591ea22d-8f5d-4f9e-9d37-0e3da4cc9e8a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752a7c6e-63fc-4230-bbf1-6431d582e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b28c7e0-cbd4-48fb-b72e-7ccaddb1a21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07420a23-f824-4628-86ed-122cf412b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73572613-b544-4aeb-815a-91f3818d1109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0b1c57-6acd-4cbb-8d5b-02f415d4f18c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c19867b-ea29-4c82-abbd-7eeb1d2e47ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f2327c-4281-498e-abc0-f59bc20abaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f946c30b-08fe-4efa-98e9-cf7634f70611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b532cb4e-8103-4126-aa02-43366ad5554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b9e1ae-a183-4fcc-9a24-2ecf5d36276e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26be6538-d6c8-43d0-ba20-c406f3a8955d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d524bc-1563-4432-a7bf-956ced260d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d92ea2-1e17-4e4e-a950-7046ed93323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "625bb541-c936-4193-a17b-02344efbfdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168d48d5-8fd2-4796-b87c-1a467cfbae02",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f8689d-9d23-4504-9eba-07ef0a1abc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162adf4c-579c-4b98-a115-1d08e8cb5655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55cbcff-9b44-42f6-8799-2716c0a2cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4645a3b3-cc71-4128-a7d5-ee910c86d944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cea94e-1eb2-43c7-9500-9d8ac1e1f547",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d80e3bc-c417-421d-b61b-771502d6d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71de0c4d-bc04-453c-b015-8ef8fcbf8bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7236e6d0-aaa9-41ae-861b-00f8624e9025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "054eb685-1508-4ba1-8dd2-a128e65f7d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27db418b-eb71-4ed7-9f7d-0186907cd713",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b6530c-ad78-4607-961d-f46e92d535ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edf3a53-f2cc-4bb1-a070-3e342e403fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f2e3a6-a1d3-4758-b81f-2f61506806f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22fd277d-a6e1-4183-a885-857c62c01299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e959a2-0411-462e-a513-c5501bb07a2f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681ac85f-2593-4ebc-acf0-e109053e872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39688ee-6455-48dc-acc4-5a82edc1e2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639fdb15-aa80-419e-8898-05fdcde0eed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "756a0e7c-1d5f-4a9f-8659-202d0322c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1832c9e8-e6f6-4139-8e29-9c3961f6de3b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526800b8-7de5-4149-9424-964f2041c7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2add15-ddaf-42b7-81bf-3ab6ea6be53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce72d8e-052a-482d-bfbe-e13c1ba4b6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "92c743eb-f7fb-4788-bcd5-793c40e9ed75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e4ec55-1713-483f-8ca1-72a8b25edb5a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5cacdb-69fb-40ea-bf84-6fbefc5ae44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "062a21ae-d3c9-45d1-8963-155e7186a7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450cedad-8a14-43ab-a9b7-1bef85654624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4877e6-c399-4526-8077-340fa389ad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153871f2-66fa-4779-8430-f7cba83046cc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea29563-5dc9-47e5-9604-ab8094d6141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998607eb-aa62-4631-b472-172450da1603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167b5427-1939-4e34-a0e8-1ff8fa6b785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d68baa5-c0f0-4389-8de9-ae47fa23e6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5259468e-28c2-4546-811b-6b8f5926b16d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f760072b-caa1-439a-b3bb-345b7ff3fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942b62c7-2ed3-41a1-9a37-60c1709721f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404866e9-29f7-4e89-9712-fcc67d6b2d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e51f2764-0d29-4418-96e2-8aa127eaf638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff635c0a-207b-4e94-9876-ba806d19cb5b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd8bd60-3626-413c-908d-1f1e1000da44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412b2dc6-2921-4881-8ae2-024755a75f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fffc1c4-6aac-4fa3-8486-646699868d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d97aa8f4-215c-40cb-b52c-e4eda50636a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3b577d-bc9b-4f29-b4f7-929476fb4145",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a6bffc-cea4-42b0-8acd-8fea5f2c3450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b425ef-4979-4093-a7da-e8a853e5e458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef78d061-a881-4e87-b02a-e4b54d4ca795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b83e74a-08f5-42ea-b801-305df78ab0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb273f1-3092-4d67-bba8-f2c8075a10b6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f579d37-af86-4d16-8e66-0d0759ab165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063805df-d1ed-461a-8915-cc28f893df01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bece0b-3361-405d-bccc-95ddd58dacfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae11c34b-8c94-45c7-a2ea-754d2baf2961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ac237f-b334-4236-8665-ce251d475eb1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14d3c9c-90b4-4225-917b-c73a4d5d92e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9376de5-c16a-467c-bd44-f4e055225e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d9c4d-750e-46f0-afc4-74ab32d11bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e20431cb-f67c-4686-b666-64625a85f9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a54aef9-ddb6-471e-a2f0-67975b85069f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e860c0d-7f96-4364-a504-7562ee971a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca99eeb-fb0b-4c18-9b7b-8a3cf23b33ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f023bfa-3e66-49e0-8004-e9490aab8c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "901b10bb-f92f-4a02-9664-9d596a73bcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c482ca-52ae-4ba2-a4c9-3f8ea7475c3b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515471e0-f083-4ac6-9bed-4df0bc18178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c490227e-bc1a-4131-86fe-0193f04e0c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903be05d-9a92-4723-98cd-15f23dab4123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a3904a-f40a-4293-9e01-64bee1e291ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e4dd0c-c5bf-4b82-a230-d5c6569a4312",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cf7c84-bfad-45fd-ac02-787d838853f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd89f73-8526-4c36-bdf5-e6860e071478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8704e397-6d3f-44f0-8474-7ba60cf27160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7362c57-9420-4836-8059-ffe6996c1c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddf29ac-e94e-4fb2-aa88-6d77734c6855",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624fc872-fc49-4f76-ab4b-f86592cd1970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177a464b-0b3c-4143-bb1c-a2448aeb863b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892b9946-7235-4774-af78-4d3b65f97b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb9f019-5ad7-48f9-b239-ffcad0c3a4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf32306-1988-4e70-8b01-7db8adcf3e63",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8972c8d2-f5d9-4b76-b3dd-06de4aa494bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4d9601-8880-48cd-b1f9-e3b49ebc53b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc7b224-1126-463c-a8ea-4b62c588456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8737ef5b-92da-448c-a7f8-281b3cbe15e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de179559-2817-4d2b-b4c9-5538640efcc8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a608e4-edbe-454f-be61-e28fcd688bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b29b0a1-47a4-40d0-84fd-db9707dd6cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9aa9aa-118b-44f3-9c40-e66083d515bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab5e3cc-8fc8-49b7-9c59-4c503ae76125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8579e9ef-b891-4b71-90f7-a665423b8422",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663fffa0-3359-4ab9-bc75-7ff9c3581432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8be2f2b-b467-477a-a1ef-8a5e4eee228e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6617d801-e470-49dc-9a5d-09db63390fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7219da44-0b55-4ba0-a19d-49893cee8527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91370eee-60a5-44d1-b5b8-62df34c51636",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a3395b-5264-4871-bf2b-fe865795781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360deabd-72f5-46bc-afaf-6469931ecf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bf1c6d-19a7-47ce-a51e-c9b6f9018122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa15f66-ed86-4ffa-b729-8e451ec5de51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9973f71-2faa-439d-89ac-767355bff670",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cb82df-f9b0-47f2-a6b7-c18d58256ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e6e55f-e791-4a92-84b7-bc694314caa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e935b414-6feb-408a-86c8-173ace8a6227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa79dfc-1391-42b9-a98e-f01d9772c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778e13de-0236-4c5a-9ebc-b8d49750b135",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83128b65-9690-4164-bd00-73e00c6b43fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b73864-55fa-4cfd-bfba-32a371ee5334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746a908b-ccda-4875-8d48-ca085770f578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3616bbf8-145d-4fd3-8a88-3da3655be69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e971ac0-c7b6-4014-9edc-898d751828fc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd94ea6-afc3-4b0d-bb5a-65739bd6e81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ef6161-3058-4d4b-b297-55e9eb5b5b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef182238-9431-418b-8e5a-192bf36793c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "185841e7-50da-4198-b007-8e147a7e9d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecbeb12-7dc5-4124-ba0d-8aebbe6fadee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9104f5f-5a92-4d08-a304-6d07fcf59986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3353da-0778-4623-9b38-2e0b2acd635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6c2c9f-363c-413a-834d-9e4e587920c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "156223b5-3c49-497e-8887-e42c8ccb1d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d923a7-a8cb-4ed6-908f-916151ece011",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f2cfe7-9b9f-4201-a6c3-eec5fdf6e06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01febcce-520e-4641-8b82-a56260486da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e136b9-1902-471a-852f-a0e32a43dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37711bcf-2fe1-419f-836e-552000f71f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84ed998-cfe9-4ca1-8f30-f3f9a0de129b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b14c4e-52d6-44ec-a7b7-f6a3f7672a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78648546-2662-4266-951a-d1acc13c782f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3aa718b-33c6-4fc6-bae2-f080333c2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9494ad2f-6c91-453b-9f7a-462cff438fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76ed44d-4c59-4035-a8d5-315f47226d67",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95aa6f4-2bde-4436-ac49-4fa0e4befc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b33b0d-451c-4deb-8218-5aa190b5cf6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa0137-763e-4eb6-bd75-e1cf781d75d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0686656c-076c-4ff4-a653-b1c235e19488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb91251-6540-41c5-8177-4be78c82e9e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fbd5fd-bf18-4493-b518-7159b69bd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfad165-e08c-46b5-b272-18383781414a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9870ce2d-576b-4539-a2f4-fc52a742aefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4a7b9b-495a-445c-84d4-17d3f238bcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253cf5ea-11cd-41fe-b086-5b1fceb82bdb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b36df1a-1792-483b-8ee4-988b523e51e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b65e2c9-8561-429c-82c8-c57ca1b02118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44b0946-a17c-4b20-8da9-289cd89bf746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a89760-9ce0-40e5-aa5e-92dee5b534c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b734689-968d-4552-bca9-64d7ec4609fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde8b93-b33e-4b78-929b-a6a63fd659b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6851fb10-2b1d-425e-aa24-9754849bc69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a108f6fc-bdec-4203-898b-0ba383211852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac862fbd-4509-4efd-95fc-431ca3dd5eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49f2730-f61a-4126-98b9-844075abdda8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86581fdf-d5e4-44df-a92d-0e52ba785d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04653c7-190a-4c77-a0bf-ca44f3e5ec0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f40d1e-33e6-4370-b20b-0e4bdfaed59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5addfe9-cc54-42ed-b5c7-58492a8217ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f862b6b2-8bf9-44cc-a122-7b7e0f34fd32",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7abdaf2-63fa-48f7-bc53-cfbc9fdf998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182fa930-541b-4e19-9656-2d6d12359b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd4bb48-5265-48cb-9e9b-d97581943c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bbbcc0-fb83-486d-8843-9a36900adb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07019d-796c-4331-aaa9-61f1caee3405",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3945ee8-ca02-4ef1-8f1a-0bc74283c207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b218af30-22d7-4615-9597-cd9e302b2190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ce7d52-40e2-4f6a-9aa9-37801975120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c287409-f32d-40c4-8e0c-5a6019a09042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d189c2fc-c588-4d31-9aa6-b21e4f305629",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32081bf-6be7-4405-9a52-cb9aa4a98c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a394e54-bb65-4557-a111-c87b5a4a7e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd4489-2d67-4f22-9e26-22e223fd021a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57610074-75e9-4a0c-bfdc-d721dc3d1eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e04d0d9-cb18-42ed-8628-f330c47ebffe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417fbe32-c635-4f31-baaf-ab1a6610bd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c153874b-8a49-42c0-89ae-48976dbc86aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd397acd-c2d5-4d61-8f28-095856b62b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59a9d95-2ee7-4f6a-ad95-2dc182889fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b96599e-e949-414d-afcc-687cafcc695f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703bf84e-f4b4-4d22-b518-d47707d926f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef3ed0f-ca31-44a7-9b67-c7078d43b87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6ec05c-9376-4e64-8553-1ba1e9b0ef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a68b6c2-9b7b-4798-84ba-d0333de5cc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc39c12e-4c6e-466f-ae26-0933d66efa2d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d319711b-3ced-4ff7-b49d-46a764b5fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b386fb72-8b0f-4756-b655-a9c5c9e37eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cf0a3d-9565-4f94-b0d1-bc7ecebd2183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d633868-9f02-4190-88f3-aca1052380a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3fc1d7-f3c5-4218-a315-cb8e04cda2ee",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2fb408-2318-4aa8-aac3-91eb98df8208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3aef41-9ec3-400a-9d5b-f440c88ea1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acd9e5d-f798-4b9d-9f57-2b93a6e13878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce33a128-eaa4-4e21-9dfc-974b85779bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8574096e-b596-487c-a94b-496fc2011ec2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0e261-4471-4a84-a448-8c9a1f6753fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd318e8-5c87-4626-83b0-3fba6c7c3663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f70bb5-79e3-40fc-b357-bbc2ee5e9c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec7035c-c9c1-4374-8e6f-c1af905233b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db14a5f-f99b-4b36-b6fc-b1f039256acf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd9d9fd-6308-45c2-adf2-dbd16e9633dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db157b91-2ebc-44f0-a6dd-1ad25471d2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f946e7-143e-4004-8a31-53b29be5afb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d47534b-a48c-4699-a024-b7f5a2b14a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93d2556-b2ac-4a51-8419-8f23f907fab8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7486259a-ae1b-4b53-9b62-5bdcaf8fa320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3a6ab3-b673-4fd7-8a70-8fd0cd1a8b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7eb020-6ccc-4a38-9e46-c39acacc25a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda1ac93-920e-40c0-badc-cf06c723d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee3732a-e704-4ee0-bf12-7a092e494fa8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6943b0-00bb-4aff-aad3-354d214f15bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ab383e-c16a-4bcb-b662-8af85afba6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3282260a-1b23-41b2-b5b8-9aa864ad5973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a792aa0-3140-4ba7-adc6-b71c00e4a46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56f020d-62ae-42dc-b931-9b1f19283331",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81aee38-9637-46ce-a48f-5df8bdc2f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204dacd2-90b2-4ec9-b1bd-1ad27e6bc575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111a0153-2fa0-4b07-b869-c1d9da957d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d0cf7a-7dbe-43bb-a6a7-7998202ddcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df3ecce-0391-4d28-a7ff-ec1a04d16a1f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4201014a-7e27-48e2-af1b-0fab1030aaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02afeb2-de3c-4e9d-a844-8b4a1373cc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac82eb5-76e0-46c0-a868-2905fffcddf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e6087c-e0e1-4f91-9bed-e44b0c6e033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b894cff-c8d0-4786-91a0-015d1e968905",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c08d2f0-5d26-4704-aa10-75d0cc8742b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcc0353-c54e-4f84-9f13-7117008942c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b26132-dd38-4b95-8bb5-6abaecc5507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a9693e-e962-4f02-918f-68d2b25efbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869e6b32-2b9b-49d9-b6d7-88619bf9fcdb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7feba887-d012-4054-99fd-67722cf8ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4420ec77-9a42-4cd4-b461-08c8883be785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6465f6a4-e2f9-438a-b637-fb696dba6534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0d9ca9-d19a-46d3-8c63-e582764169b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249464af-1171-4db8-9318-aec38eac3106",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a448be-7a40-45da-b6a9-be6104bc18c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a0e552-f58e-4fa1-b99b-9b817f73217c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9875e9fb-0420-466d-ac5f-b029e0fe9cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb98751-15e8-4fbf-a002-1b9478bc0e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d36cfeb-7c49-48d5-aa3d-16517568e990",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d655011-e5cb-402e-801f-8bd33707166a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c98d32-cb93-4d52-8569-1893a6847d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b153bda6-c3f7-4aa0-8e44-268e0e3d7349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12290919-019a-40ff-9865-cd919eab056e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f11f2e1-7b63-4210-b2ce-ae46ce8eda6c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e5ba3-b7b4-4611-9764-78067bb429e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf8df10-6aca-47c1-92b9-46b9eee59bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424eef59-9462-4a66-9d5c-08797e586196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c6fd42-5525-4af1-b3e8-5746e6ee589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532ccfc5-b6ea-440f-84bf-3c4309a625cf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1355eb59-e442-4a5b-b992-b19c4484fa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b16786a-bdbf-47ca-98a3-7709647c2424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f604ed-8254-4d0d-b121-1a3597d0b4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31fe391c-ace2-408a-988c-9292a645f353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5950efb-bf97-4d57-81b7-ecd2cddaed90",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edbc84e-6aaf-4625-9798-0df973cbb30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf2cf46-0cc2-4459-9681-798666484b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdddb0b-dbe1-4b52-bbaa-64bd4f267ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ac0864-dfa9-4e50-beba-619161407acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7a1d38-afe8-4eb8-8983-c859b5b7abc7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63053a51-61e2-4423-bd0d-b84132ed49a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2267a5-b001-40ef-b73a-fe95cb1b9e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5636cde7-7736-4ba6-87df-55690ade44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d05dfa-a0aa-4122-a355-64efba753ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daca8405-cf44-437b-83a7-b253cd1ca7bd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1a573c-68c9-453d-ab3a-53a32f68a8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2aaa94-d44d-4e43-b394-fd6003ee1bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686e4334-6cfa-4960-bbad-c27a3a364b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a702122c-af00-4ee9-9b3d-0a79dd0682f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd71ca3f-8a74-4b17-9194-81694ba0b904",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565bd42-2569-4d62-9697-9b6a4d76a34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fa4c39-02a5-4e7e-abdc-4a4f50695ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0446b85-2ed2-4b54-bf3b-c23c334314b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa64d2ab-70b9-4ac7-bc8f-fb4a75811f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcf13d0-0b8b-4ec1-a516-8f5fcd79c412",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e2fbe-241d-4354-b3e1-8be4d3162669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a08ebaf-3cb8-43be-8467-5b7a973b1650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9252c5f-9fa4-456b-8219-f2c64d52ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fed172c-3936-454c-9de3-e20fa91646ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03030cc7-e741-4f2c-95ab-ec9b90c8ab56",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b63c470-f43f-427c-a56a-57424fe712c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72c638d-ba3d-4c9c-8ba7-083de1d19a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d823854-5e95-420c-82a5-236d27c03adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc893624-5ce3-48fe-88d4-cccf32c54cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ee4c32-e401-40fb-bf76-d92422031f51",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e1112f-40d3-4e99-b835-bdf8a6b504f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50477cce-2d1c-4e74-b4f4-9c70dff3ef6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8accb71c-6539-4dbb-92b8-6395c88ffe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0de156-b6a1-4b39-922c-490927e73d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaae47aa-2f0f-474b-b83a-0008ff28ed09",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89273196-5fc8-4c90-81ee-bee74a5cdb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b03559-6efe-414a-be7d-d7a29d0a55a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6b31ae-0d27-4210-bdfa-eb2a75db5880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36de961-1bdc-47a1-964f-f2d3e90b8cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a03a4-c523-4aa9-adc7-59cc20a38fd6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a5712a-17f8-47d8-ad22-8cff57877834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d221e2b6-8a4e-4d96-af2b-e7eb36523514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9194c35-1d86-48cf-a3f5-d38fac612d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d88fe935-1d3f-4b92-a1d4-37f3465f2231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0963986-9a5e-4fa7-ae82-6a5f7380e08a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8985d0ca-0201-4c74-86d6-be3a2d639a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0824cad4-f897-4181-aceb-716c633301cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286bad39-6d39-4465-8004-f746ca593326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f83b42a-afcb-4bc8-9c11-bb0b80701807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d725c4f-7d21-404a-9e84-df63be70ac04",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846042bb-775e-4c77-9c50-8657cb7a95b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2281d0-647d-4165-9804-416e62d1611a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6b5ae0-d48c-4210-a3ca-7a48f0b1430a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "038bec2c-6348-47b9-9729-cc0b2ef5795b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009b0a2a-037d-48bd-a168-12762a1799aa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3515514e-30ad-49a0-993f-f82acac88696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0ea37368-478e-4891-aa9e-7d0dd1a1487c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0a4de0-1407-41ac-be6b-1aa91aeb3d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca16e16f-be7b-4761-9ea7-d2271dccc2f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "634c9f01-83be-4087-8c69-4459b60dee03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d1e592c-3ce2-44c5-a0e5-2d020ae4e9ef",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f891cb9d-39c5-46a6-ab7f-01add5ec7187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9529739-a0ea-452b-901d-cd4087b25e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462320db-4032-4fb0-baad-4fe9ab76d0cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3594664b-19b1-47a1-8d6f-6636a9778c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5b400a-e532-4bf7-b250-6aeebfc10732",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1d780-fcfe-4686-860f-8ccf79744a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed7d046f-6442-421f-b2f7-227de00c6f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b2c6bb-357f-4e67-b9cd-8981e552844c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b45e31e6-0164-44ea-b4a7-21bd2e30bb99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a77c0bc6-c2d0-4a43-ab62-4eba76772b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be4ecb5b-6bc5-4a84-a9ff-2799f52336ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d6a98c7-66b6-41c9-916f-7b75f42f02ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72efb50b-3a80-4613-aae0-9eab0f96db3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd0e8334-13c5-46eb-8fc0-7d260f9827b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f287d8fe-967a-4211-b62c-32082d0a3ca3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e86f2301-10ff-4c64-a580-806157d7f499",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8536891-264a-43eb-ad42-aac922fb926c"
                }
              }
            ]
          },
          {
            "id": "41316e62-0636-43ab-b09d-db9cb8168798",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aee138d9-ccc0-4f64-9ab0-30b9e0cfe90f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a73973f-b5ba-4a44-9809-701c041232d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "213946ea-152f-42c5-995c-bade8629999f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45c466a6-7cd0-433c-aa11-b83641689a09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61a6e144-65fa-401a-a2b6-0c3298869e09"
                    }
                  }
                ]
              },
              {
                "id": "8ea1b917-e365-4a0c-89dc-963c55edeb4b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "507322ff-9a9a-467f-90ba-73cbaffa6628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca97d29b-475a-4a3b-aaba-3adf6d9e70c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7d7c25-3f43-428c-b450-59b4e6133882",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1a11dfa-e890-4605-9d1d-35ed067b7e55"
                    }
                  }
                ]
              },
              {
                "id": "3c4f99cd-d3ec-4ccf-a002-7d6db29324f0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca75aa1e-ac71-4320-9445-cf18f976c4ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27044208-31ab-465f-bb22-a6d316d0a184"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d83c8a7d-03cc-43dd-8f45-2c1535fe9a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "849c3e06-09d1-4b8a-bd79-c3abe7186bd3"
                    }
                  }
                ]
              },
              {
                "id": "0a2ba219-1f5a-44ee-a928-9b393208bb24",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a55754f4-3f4d-4209-a7b4-89708edc0fbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd2fe9e9-bde8-48e6-a3d1-623385619a8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a99a5ba-4b88-4213-832e-901a69d92b85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "23db684a-5419-4563-9cf1-460a8e60b244"
                    }
                  }
                ]
              },
              {
                "id": "e36ac4eb-5068-4ef2-8429-994a948c1cff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a25e31cf-d163-44fd-b28b-3c8f3903bca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "655b63a2-fbd6-4f73-ad5d-6ce099aa8540"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc0edb83-cc8a-44df-8d03-abf9b2c61a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7806098d-8b81-4a9d-bb21-4178f9911ac1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29eba382-84b5-47e5-8347-accc64a519b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f73254d5-e1bb-4ec9-a2ef-118fa25925af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f26e7692-b9ce-4220-86ee-c8109638562b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92cd7a20-a831-4763-ab4e-2ef7fb6d10b2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0c75201-8111-4c91-a23f-22e11b5810f1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0d26dc7c-0459-476d-8aae-2777a2078b99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a2ac5cf-dcda-46b5-9f1d-2116da9a3e0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64572df6-4493-4a3b-b1e7-1548e229ec33"
            }
          }
        ]
      },
      {
        "id": "92d3d9dd-9cd4-465e-bd04-4cee8d5c5dea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e82451e-1d7a-4dd0-8e7f-6782120c0a28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d9f7738-3d9f-44d8-bfdd-8410c2bff0d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3740fee0-f919-4fa0-8405-52dd40bd8361",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1876bc0e-0129-449f-97e7-53fe276f7841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e76e8ee-0031-457a-88c8-22cb967a0b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67569907-1b22-450b-900a-152723b9b3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b94d94ed-45c9-4276-9455-e9a333e98b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0ddf53-e571-40f6-a43e-48c940c93f44",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c3aded-6d92-4480-a411-32f949528f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d0fdb0-8b9a-4647-bd25-5cf360cd283d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1469cb-a8b9-4678-adb2-5a138d6e4857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8881124-b80d-48b7-8691-6c6f4e178d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1ffa44-1c04-46f2-979f-0b6d454ed1a7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843291af-3d68-47f1-8044-bd11d53d4de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0543de7b-35d4-4e09-96a0-518b3fd07188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c95565-06f1-4559-99d3-dd8a563c121b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36e88fd-114b-4309-bbd2-7615a1185cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb22a84-f34f-4312-a107-a8e14c705ff6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118055ff-996e-498c-b30e-42a1863b3d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6edb7c-aabd-4d25-b00b-a6c7a0feff00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac417821-1867-4aeb-a2d3-111665c9bc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4289a039-93c4-4851-a3d9-84dbe8f35740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29325f8c-3973-4d37-af59-ff8c90d2c013",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f86f8b4-3fab-423b-b9c0-fd12f5cbd542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2515f6f5-8d0f-4749-965b-20ba55b5af2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9202f160-94f0-4617-bd78-5650e58fdb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b20c7c-afeb-45ed-8cba-3949c7b625eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082706f-bb5d-4cf2-ab68-03241a6d76be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3719aca7-7ef3-4580-bfca-41410c14572b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8ae403-8fa8-4678-977d-866458c19c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd1da7a-b22c-4567-85ac-ab12c05064f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa57273c-a161-476b-bac8-e8f8a71ec51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8456fc3-f1c8-441e-84d9-dfb9ab0b4fd9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e8da4f-3ba8-44cd-a98d-1b1e7800efed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317caea8-960d-4d91-89a3-6b9ca62e77f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5337a05f-9d76-4c33-aa75-c5c9e98a27a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb04194a-247b-4637-9691-c8877cfef6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771436a2-9113-419b-8d33-0bde09f42cb2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbe4ca9-b1c6-4040-8ab3-ba944a294a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be99636-7683-419f-bdd5-97ae3229738f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ed3d9c-b761-40c5-9aad-62ed9516749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "328435bf-dbe3-486c-985b-e83f3c28892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d84f11-1948-422e-b7cf-cd99967642e2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0bab88-8f1d-4b96-92a2-090b566bc617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac114f05-c71c-4f82-bc1e-430c3075514b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a79cf-431d-40b1-a1f9-a63f02d98259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "214f0364-3fc2-4e74-b4ef-22671ef9c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ed55fc-905d-4e55-a8a8-9b6e2e25a4ff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8fde68-4616-4805-83b0-8da3d05344b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074084e9-6e89-4bec-8e51-6b35e1271373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93147128-7961-4c68-b6fc-762961f9e344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c98d7c9-2604-4817-b244-0e492671f7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8915efa-ad13-4db1-9db5-014ce6fcde16",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3045a0-b14e-487e-bacf-ce01f28f0569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdf9e91-ac01-44bb-84bb-ea732033a96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9547624-c27e-4b0a-9199-81e9317ddea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "93387c6b-050a-4356-9252-eb3ba8b0c122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10441e5-3c1c-4f4a-88d9-9f37790c5478",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f587ca9a-ee06-41fc-9368-2f85cef27de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd7c1df-cad3-4d1a-82f6-d33d854e724d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bf04d4-fa33-4e48-a82a-a5ed327de925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca3d024-68af-470f-831d-0ce00c86d703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bcc2fc-5fa7-4df1-9d40-dbde1e3f6233",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b1bcb9-0f5e-479d-876e-46fe77752c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f536f995-769b-4da6-bd53-d7ae4fb649ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fef4d6-d792-4f10-8b4d-f5ddbcebe3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa078ff2-5032-42ae-a34f-6bf89ec8eb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e244b14-2bb2-4642-bd95-26cef817bab3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7a8a04-fe25-4d69-9a2b-c0d513825739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780a9841-a975-4545-9fce-4fbf336b69aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb91a6c-d403-48fa-b2d8-1d7ff1bf84a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "854675b3-bc6b-45c6-8137-01a62d7d7a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb01376-afa1-40d5-b58f-139b8ae6dd14",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b335a750-3536-4f8d-a4c2-7f078d024531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c26acc9-17fd-4683-8494-fabf967dac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda14ad-05ef-47ed-91be-1f4fcf0e2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0d41de-7c58-4410-9f9c-7fa844fdbc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3d591a-7fdf-4abb-82e8-b12e02d978d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f00a28-7507-476f-abfa-318ddb722637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a642e03-9de0-45b6-a53e-aefccaf1785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e91a94-88c5-4721-a5a9-427838f815b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fee8db3-8e45-4e3b-86f1-7279eb01ddd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a88d8b-8da6-4f07-85fe-fe947624ecdc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b608df-ec15-41b7-a557-2dd08411001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f5e728-cbe8-49a9-9860-a81a7996f59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76443b57-71ca-45f0-b460-cdfdb428f03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a21be8-9876-4f6e-b519-4da769514340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f09d799-bc5d-42ce-8e50-10598c922e42",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd271247-f988-4548-8e78-8f9b207e8a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373e5530-3668-4557-b56a-67757de384b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2140c182-879e-4a2a-a20a-8eee9349fca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec961e0e-679e-4ba8-9785-46b3b2d0d3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86f3ae3-e21e-402b-8c61-935f97c5ed2c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a88c5b-f130-42cc-82ae-8ef5e11197e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7eb1e3e-e9aa-4731-8865-d38fbee4a86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a02932-54ce-4ccf-bfc6-074577023a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3805156a-f419-44a4-a214-11ed758c7733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4d7e33-98ff-4277-9ee2-39600bdab646",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93399e23-a346-42f2-b865-655922bd6c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d06f2c5-004a-4714-a9a5-832b6176a116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1322a2f6-3faf-494b-9e08-3983e8c80ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e6a346-01d5-4804-824f-9391f68e1730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8daa71-ce56-4f62-8a1f-141462c7a043",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a92010-ae6a-4ab8-a565-065fda1f8b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc80a8c-9bb7-48d5-9d16-6567ef91d081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e500db-f414-4237-bf7c-24f9879ee561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c817dbb-8f77-4267-9c80-a446ae649208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe16e7cb-b233-4892-911a-eef1ba99018e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830503ec-8576-49f9-8a04-54da2d6a24c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171db045-d696-405b-8e3e-8ac1011b7aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03be356-6f52-4f43-8dfa-bc879575f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d188a1-f50a-4705-bef3-01a0dc47ec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f009072d-a8be-4361-850d-8b0a750db3e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c5dc32-c5b3-4aba-985a-2cdc53064348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0734ab-9d82-4330-914e-81fc5d325409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a2c678-fe7f-443e-ae4b-25d2baeb39f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c9ddc9-2d08-4071-a105-996e744bc3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96977449-98da-4dba-9224-d2b0b29f9030",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bf1c1e-9058-4f34-9f27-a07d73d1a48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3173114a-de0c-44c6-8139-f2a43154d136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffe6701-0e20-45f0-95f9-b9acdd3608e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cae74d7-a916-4855-9854-ccfb2fc0c6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5173ca-142a-4b43-895f-1a3d91ba005e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59945dd-45a2-4ab5-86e5-2657a3ebe01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e41937-1187-44c9-bc6d-7612d4f0717b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdadea1d-98d9-492c-ab17-5c8abf927a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce41427a-c798-40ac-aeb6-d22d4e276733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca4b3f2-148f-4774-a8f7-d5d8f283b687",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb3d99-b544-4363-b84f-399c1b92ac40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3f89b1-1ff3-4ab6-9548-b8fd79c88f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e768851-6f20-4fb6-9c69-57f9375bf53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95eb3350-2fb2-4cf4-a113-0ed6f12a2674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546bd525-dbe2-4259-921d-6c5e1c415e94",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fc672f-ca7e-4774-8b1b-ac8f47ee6a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b80a84-dfb3-4fea-b0b2-c93f476b227c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82482731-c1d5-4ec2-9aee-2e19e08816f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e257ee6f-22e4-48f4-868e-41d487a02ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9b2d21-85a5-4b46-a20b-bd5e54b55ea1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06afbc8c-f78f-49b4-a42b-cc7560a38c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa584e7-59ad-4505-8361-5c0ec1936328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46c9d22-6d09-4bca-a528-ff178cf5a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a913fd7-81c4-481a-b96f-93f8733a968a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c37426-d630-4c3d-b118-403ff068fca9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a427a5e-b74b-4127-b7e4-a781b27edb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8557ae-c6df-4c84-8ec2-b4934392dd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea5b31d-d602-4a0e-a11c-868a9f42d405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd118682-0995-4fc6-b342-2ed078c6bf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f8f1cf-1544-43e9-9140-20504719ac0f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c40548-d18c-4277-b412-1278ccfb19d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788450be-4a3b-4067-9206-17a45317a3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175c09a9-430f-42e4-9aa2-a11cc57fd8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccfbb1c-2a1a-46ab-9565-2bb270a3dc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0bf6dc-19ae-420e-b282-3783c8a41ed6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193471a3-19ac-4fcd-8ba0-3be50638c470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f312d2-4285-4618-928b-5eee54032e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa8b0f1-0f2a-492a-91e7-a812f5f43655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "984ba79c-4b7e-4693-a0a4-64f257596126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787eed1a-7d6f-4bbf-90ca-b111f67ee144",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dc4b27-907a-4f34-88c2-f7fe62f1b518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefb3e96-d098-42c3-b483-9f73c8ccc3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480eb735-ec73-4e04-96c7-46d27a5cf959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9045e0c-6ebe-441d-aa2e-f7d90a3f9522"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a316d6b2-281c-4494-ad71-e8ce0daa6dcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2929e7b-9da5-4fe4-b1dd-284ffa062975",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8867a-c213-4560-be8b-335be08cab71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6f0b8d-e1ef-48d1-812a-47f5842a4465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6e05f9-1aea-43ad-884e-43e10df6aca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56dfead7-d87c-45fa-831d-d198865d7d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faad608-c730-4e6f-8463-a92a20799915",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc7b045-6d8e-4f76-85cd-fed76c33a0a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "60785f53-6196-4a91-b028-d10c2f9eab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d86aa2c-65c0-4640-a377-73dd416dcdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc10b3a1-ef58-41b3-8cad-39d946170dc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dab05d09-70c0-4c18-8f39-ea680bdfb14c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42c9a5e1-f269-4a7c-af41-2eb4ca8091de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3df3ee32-2755-4955-8c06-9a2a91f0f11a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b89404d-e492-48c4-bd45-e61bc41c5d33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4d842d2-8488-43fc-8801-463bb96ee015",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "755863c8-cd76-48d5-a048-9848e4364ad1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "975bf25b-0716-4890-9f45-fe7cb45f127e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "205f3e70-acf1-4fa8-8b32-7d52baaddf72"
            }
          }
        ]
      },
      {
        "id": "ce56a0ed-778c-40a9-b349-66aaf30c55de",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "340585fb-6e01-48ea-86d5-7c69b2c46241",
            "name": "Negative Testing",
            "item": [
              {
                "id": "318cedfc-1eed-49c5-b292-2b07c17b2d8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34ee8f82-ec6c-4303-be09-57de26aea92a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24766a1-53f4-4eec-8bdd-c2e12151b2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db71bc0-2613-4100-ae82-566a38f59161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8155f8ef-6e1f-4626-8cd7-cc6876e6cdc2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9b8d68-6dcc-4339-baa6-2cdb03354b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeb7372-cd25-4658-bd6b-d3123891f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dade49e1-5ad5-45bc-81d6-28ffea547db9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a970152c-29d7-4181-83ce-2d9f906aef67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f22f75-863e-4c10-a997-3a156a5c965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028aee6b-d186-444f-b7d3-6c9e47b6078a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987021de-a497-4676-baf2-7a78c6b1be74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1cb67c-546d-4f73-9fc0-49de11de2885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4925ca2b-a10f-4cac-937d-84edfc99e454",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88eeb2-40d6-4858-a952-f6e970f119f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacd974a-a1e4-4deb-a802-fae0033f917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a99f3-96bd-44d7-97b1-7a2b51b283b2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac6890b-9555-48f8-a18b-d3ef4133b3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cbe1c2-6912-4ed3-9e9d-c5a1f7b8e86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e695de41-04e6-4d92-a08f-1fb15a69d5eb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b021993-8f4d-4346-a993-b3840e5a6163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c041f3-1126-459c-8c80-54639e16f66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb9dd41-af7c-4445-a367-1c9715985bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d61220e-fe8d-47ad-a12f-5965aeadc648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fb33f1-0a20-4644-839c-9612c3ec423b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc9044f-80b8-4a4e-bfd6-c0c21a2b42f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f284c56-2f9b-4558-997d-0510f2fddb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c01492d-e96a-42f2-9a5c-d6813d9b9006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbded90-6c72-4c73-9333-852313685e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fbcfd9-4dde-449b-9ad2-8b66144e0d8a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85069ae6-daa0-47d1-b4cf-e3ebe7cd5201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b595ddb8-df72-48f6-b33a-3e3e1bae717b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9f97a2-6ece-4b11-9145-0f5528fae7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a75729a-03b4-4047-9156-76d873e6d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b420213-7a74-4e85-8758-ea8c6763a4da",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff32eff0-d1db-4763-8cef-23c5d62c4916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc75e7d-b4b4-46d6-800c-d0072039dbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8014c1c3-e62e-48a5-bd1e-c6c75a7a532c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b9d450-86a3-4fd2-9eba-f50f8bc7b3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1945339-1099-4daa-8a5b-d417686cdabc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478ef2fc-aee3-4e76-a95b-4706c309ebdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a336e842-0980-422f-bfe7-a7b99a77f382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a3d0d4-3a43-4a18-9ac3-200973026f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af93d46d-fb61-41f0-bb87-24e2bdfc3c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fff114-a76c-4eb7-8de3-e36d4ad3134d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76402ea6-fe93-46eb-975b-298781ca329e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748546a6-9a67-47ec-816d-36cb59662064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1263648c-b102-42d3-b043-3d0cda0fc941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77af1ab-2b8a-4647-837b-18da695a3b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc433e87-f215-4219-b833-90e74e908d0f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165342ed-ef14-4392-8dce-15a741941fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad264748-ab89-4865-8fdf-3e9cd88e21cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241ee00e-cc49-4195-b9cc-4fe80b22f7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb4bb39-7cf9-4d03-a7f4-7259a8e4ceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3563806-9db1-4faf-8257-74b81af25ae0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c137db9a-2a1c-46b9-9ef3-fb719484dda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34a12cb-70ec-4c8f-8471-d777490bd396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab25453-0735-4f0e-97ff-cad203ede1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a07b23-9c2c-4c31-b611-3de1c5976315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b0d53f-5700-4ce3-b268-27a127dd040b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d34c8f-128a-49c3-96eb-30de1ac2a369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d477ce1-e6fc-4238-ab8e-d12925ee3edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c88e712-3e26-4416-a795-d968cd597f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df6009d-a6ee-471e-b5c6-46a631bbc064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b738ee-ba14-4541-be8b-e8701f1515f5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35be50e-2347-49b4-9d96-d77b1a27c56f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00f617b-82cc-496d-ac3f-26309d716b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde8b5d3-9ebb-4c10-a7e3-692d49543e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01158eba-7881-41e6-8286-fcabfb8051c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45006db0-6634-49c8-97a6-53fc93401db5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2ca34b-6965-4040-99e2-91b22cc0417d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c34a1b-7cb1-4f16-bb53-003b27a1e8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a109ace-92e0-41e6-9bb5-175822a024ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153c335f-65f4-4f7c-8de5-e715ea6edb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641aa20b-1e2d-434c-9670-e1f72d483f3c",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a37f34-934c-4ce1-9cc9-72a4a7754692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3424e09-072b-442a-b805-46fd1b355f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed8b6ea-a021-45fe-bf4e-7904e3da5c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e26eec9-fc46-48b3-8156-12a0f2e19d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fc714f-4199-43e8-84fd-80ff1faa35cd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e615dc-933b-455c-9b22-9e3a3796eaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a864ae3e-e51d-4958-9e68-84dcc9216837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e9c0e9-1e9c-40f3-9558-cd7cdfde1b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8381665-2d8d-4cc3-a7a6-6224b03f2504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb9563b-86bd-4473-baf9-995ddf9c9d2b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f1813a-70ab-48af-acbf-c1086c03d441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350d1bdb-4e04-42dc-acf7-35bcdd13d898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6441b4-42fb-4765-8c1d-bf719eec7f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbd4156-340c-4df3-9994-63c2d5d5cc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8162437e-26df-4fc5-8a85-d9fcbf184c0b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c792c298-f1b5-40e3-a944-76be8f202554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5b765e-8bc4-4bea-a679-5d32bccdec94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154c29c8-bb68-43dd-b7e4-3c2cfde5b6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bbcc20-62d7-480a-90cf-d6f097b8a3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9905c3a2-1a80-4f34-9c50-a11a0294fbda",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b11eff1-a24e-4a8f-b0cc-71df0f17fdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad931f7e-d8d6-4893-8b9d-27f9cb6df0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac5ed3-1028-46ef-b1dd-bc184338a6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bc86eb-9a85-4c0c-aaf7-7c92a04c7727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c842517d-ee7a-4c7f-90e3-d2ecfc1589db",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6c1ce2-0306-4142-b4c5-4337db70c5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5790c8e-3466-4e09-8672-30d74774b5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd471439-dede-4943-ad0d-72bfe9db77eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1639848c-89ea-4ec9-9a5f-705d90ca9e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d0491-b7e9-4950-840e-a5cacfb901a9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab8aa8d-8e1f-455d-b03d-bf6c9b8445e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1756d2a6-77cc-4685-bbb5-a03fab2de437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768eb6bb-8aaa-49a0-a7e0-9da6c048c6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d3d043-6698-44c4-aff5-2e290830796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c24c0aa-410e-43d1-99e2-37c93d563aa8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead0a775-ec8b-499f-9e92-2623cebc54ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed4898f-d43c-4dc8-ac3a-61e262999df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923fda83-295b-48c5-8dc2-f3e9911848dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e8a58d-966a-4781-b0a2-d7c113d6783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7184abcb-3d54-4834-93ec-916ddbb33498",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647c1c9f-4762-45c8-8b95-4ac195f1ee7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f75b3a-1274-42b7-9890-d884c12b9472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd12f6d9-6489-4662-b39a-dacedb15ead7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41464776-14f6-4ff6-bbf5-2824c90d7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e055d256-94cc-43d8-b1f0-7c1982abc803",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f118e5a-8b20-487c-8b94-ebad9bb1695c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5dea864-f5f7-49ef-ba5a-522f41d94738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e06485-1590-4444-92ac-317dca539db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e56874a-7b1e-450c-96c5-3c93ae78049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7619a839-c1b6-4d29-82a3-6181eb6948d6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2346ec76-db57-4b92-9add-90fe3cf96ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550ed93f-f97e-43d1-8767-1e9742fa3cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c621751-3463-47b5-9367-282faa614254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0bb0d9-0d4f-47e1-8dba-24da770b578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684c4783-f18b-4835-a4a2-8417110eeb53",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bd65dc-e00c-459a-9a88-babd9da467dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f8b1cf-4957-48bf-a4c9-0dd0cad35bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b61b04-045c-454f-ab5c-df3f5d73b71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0c98f7-8891-4c25-9e05-05019e760082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0792ce7d-48eb-4bc9-95d1-73eb3ba469bd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610af6b9-372b-4bd7-bd89-c479c4078885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47647d76-6b67-4168-be6f-7a32c0c7a137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af70fc4a-ed38-46a9-aea9-33abf241f805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495cf18e-9b95-4c27-ba75-f3d4ba24393f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c4da18-c2a7-4b90-8aec-4df9fbb8cf63",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3818cf7-94d6-42e6-bed2-e78d0b6fa84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9934040-947d-4c46-93de-d356279c5ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71a1129-034a-45a5-90ba-9ea805494a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f313334-4236-48ce-b0bb-6d37b87286c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeccb1c-e8f2-4fd8-bb05-ed82e4c590db",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba059e2f-b0bd-410d-8a83-7afefea0d898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e85fef5-86f1-4435-9b86-b9f687f814e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07a686a-0446-49f4-a406-59fdb4ead1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9989078-7a83-472a-867e-01645db8451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba59cc19-45c1-4df8-944c-1fe053b84d2a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1fb8d-76cb-4fa1-a849-a16ef048096c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9cb09dd-6050-4323-9d12-2dc58a821db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b814af9-bba1-47fa-9c95-f23a46bce7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9952e4-31e7-4a3c-93f3-769944538ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189ec92a-a8eb-41c7-82ad-d7604f73c466",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346070fe-2912-4eb8-83de-327435289011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15506bf-192c-4205-8e0d-6a391f6ca6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e558e76-1fba-4aeb-8ad1-9ad8ba8873c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f612faf6-51bc-4050-9e53-2cf0100665cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f525fe2-aa1e-40cf-b876-a25962a78e23",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ec4f49-855d-4cbb-be37-dbc62b41b2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e1ba61-10f5-4d60-8501-af942c98b6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c244ed-65a6-4853-9e2a-64ea868aa553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aca817f-c226-4b85-a7f6-7ed119e519d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d72fa4-5e33-41af-856c-f257ed6de667",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5621741-dc5d-46b9-99ca-ce494974e45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28def85-b95f-4fa3-833a-98130222f7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b05367-c24d-46ad-be45-bc5becb55fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfe40fd-0025-4dbe-9f9f-6668330411a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5910e2e9-e8b1-4b3e-b4f2-7b1683d2cd2c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8bb4b-f261-43c5-b4b9-75c79a94f88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95825288-196a-46ec-bdbe-659e39da4c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4408c7ab-ca46-45e3-b08d-225a67da941e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4615c9-7077-4364-96e6-549860028509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c236711-15ff-4d6c-9b69-f1509050f275",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c387a57-65c3-456a-afde-468c50b3938e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142dad45-531d-4c16-87ba-223286028a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89333618-643b-4c06-bd3e-54abc958b643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316cb58a-158a-42c6-a68f-b240f9b5553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ebc40-a12b-407f-8019-8897376b244b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e3e5e-e875-475f-a1c0-07a9ff79ba8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0494438a-f301-448d-bc96-0f47299df28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f7551f-5a12-48a7-bd75-2ba0b9ef6552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eca07fd-a8ac-4ce7-a139-763a671fca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172bb769-3248-46d0-851d-a84c788329b2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e7aa95-5b37-44bb-a479-ee1988d252b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbe6fc2-9f3a-4c7e-8315-4fee4f7adf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f44ad3-52b2-41ee-b039-3a6509e6257f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae23c5f6-967b-4daf-b58b-7cf5f300c732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12962796-69be-4e18-98d3-eb61e777f481",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdcbaf7-f68f-44a7-9e91-ec4b71bf4aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24be99b-3fd2-4f8d-9fb5-9fef94ff809b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8075452f-8eb4-4683-8d3e-0bf4cd89b6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4fa492-89f5-4511-b149-07f84277dccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc222f34-130f-48b7-90c8-47a5930f3e7a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ad1acc-67b4-4b5e-a967-d94ace487cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf82f96-65a6-433f-a6a3-c5ebbd6aad68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63e4846-c6ff-46c0-953c-c65eb83900e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130299ea-9545-474f-b698-b829936f08cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca29d4d0-ef12-4639-b4b5-e02d627b69d2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23a5b69-010a-4d8d-ba47-4c76d58c7a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f968a0f-303a-4b91-862b-c4da63622476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7015171-684e-409b-aa2c-35c91509b4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0eb404-f4b7-4c9e-86fe-c22f1d94281e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3f8ede-a941-491b-b9f6-b6ad6e992580",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af62488-cb0b-460d-a14e-72ccb6ec83b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec8356a-a544-42af-98dc-c1a3cee5ef76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d0e808-30fd-48a9-80da-7ccb75fb1157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3c7312-c674-434b-8620-61dd03dddd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a819270-35fb-4f82-94d2-ed5fafb0cffc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ae6808-0b8d-491d-9158-9f49ddf7f242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb274703-c805-4d1c-823f-eeec8c21058e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f1bcde-3298-46aa-9292-05a459ecfce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cd1a6b-40b3-4b01-a325-c690df58ab79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed179cad-8eb9-40b6-99f8-02a72fa957e1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94bb167-1788-4dd3-a4e3-8287976f0a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f4440c-6f54-466b-aff2-c3f5970e38dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193545ab-e90c-45db-9aa4-d88774311fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3335fc-30ee-4ed2-8417-cc1bdc695f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd1e982-c2c8-4fee-99d7-06b117e38fdb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d135af-ff3c-4b0e-bfbd-8869eb11221d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274a2b24-27fe-4f54-890e-0da473f4379a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fad6b0-e301-47d1-af68-d8e7ae01ee22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd41ee41-8220-444a-8ac9-f9ccc715f3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c128b6-d8e7-4bee-9ebf-914c965c5886",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5fcc76-761b-47bd-b87e-06fea26a82d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e336d8c-11fe-40bf-a8d4-7615bd9737a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92b9595-57dc-4645-940d-a1bab44a5577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c04928a-37b5-47a7-9e67-fd20a9d767cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9f3e1f-a67f-46fc-be9f-395abea92743",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019e4ded-8540-457b-ae51-e3d697c8a91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3dbe2c-d706-43b3-988b-2062ddb8ac0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a64d6d-213f-4923-b28b-3c9d3d9dfb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bece074-fc3d-4547-b810-545ecf0699bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589666db-2bde-48bf-a7fb-31d53ba64a9c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0c460e-2206-40eb-8921-a38a508c3797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74faa805-e8fa-47f8-ae47-8609e0bc2ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f368db-4df4-4259-841b-6f3a09ea55d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e3dac1-6de8-4db6-a508-1cf5d476c3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264fe8ff-9f9b-4a12-9424-34af2afacfe2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d73479-6c8d-4a20-8eba-9bcf17cd0c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2829b780-7f0b-481a-88ea-648506dd4c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6ae35c-46ba-4899-a945-fe076371ad1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff5143e-73a4-46c3-af10-61c337644f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559a99a7-dd3f-45cd-aeac-b993af3c9c77",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb00287c-9a65-4999-a429-9a2e6c7e7b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200b8195-eaa7-428a-8d72-1cdcde1d98f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b616731-b6b7-402f-9418-a28b441a3f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e42a27-d62c-4402-ac65-c9d89333d4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cfb1c3-ada6-4f3e-a7aa-5c161b631eb1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af0c560-6aae-4f0a-9c00-d9424fb448c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5bf040-e5a1-443e-a885-e22a0aea671c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8bb973-877e-4dce-98dd-0c9d0953f5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca87c357-0178-4418-ab25-5567d474535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689595a0-18fa-4c01-8298-96c8780cefb1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ae9f71-43b0-4aea-b45b-b6c4579ada8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29008b7-28b6-4ab4-92f9-40c185f91153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c573cd-d62e-4ebc-88b1-12a95309dea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7a5402-9786-476d-bc6e-1262f1ba612c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe47724-2746-43f1-b134-2432ca3820b3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af24e1e-ee63-4da4-81fd-78f370b241c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156fcdba-636c-418b-83b5-0bee1f46f3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255091c8-8e28-4d95-8c76-c2afaf169615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd274ee-0365-4137-a00e-135c1cd3c2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2819428-cfe5-4af0-9af7-8b2373e4df52",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e1365-2932-4c0a-9a71-8ceafd195a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b998497-738b-4f63-87ec-f489a8cd7380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fb7927-1ba3-4e60-b74d-62666ce712f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bf4754-59b8-4bb9-ba24-9b29c46d2af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b34fd68-0841-4f75-b755-9e4deb0bee0f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ed887f-7e31-4e25-99cc-2de3c4dc4d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8e9c94-a599-483b-89dc-2451952dcf31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714c3a1d-2635-435b-91cb-14d609d3f8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae6b2b7-bb78-48bc-a774-eddd71e97689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53976db1-381f-4bcb-b73d-65f50a6d22e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f0ca58-92e7-48ba-a6a5-c80303360677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546575ef-8250-4abb-b3c8-1ae2d441ada8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34766573-bbce-4ba2-b404-2b7cffeccf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf6b8a3-6d1e-4066-81e1-473f5fcfb091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e922f7-9e9d-43d6-9fe3-ba353efe1492",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d542ad4-c0df-4ec5-9a0d-147d251f92db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf908904-4772-458b-9aff-ed21f4a75bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd51bf2-1a51-4169-b589-74a66699930f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ec54cc-80df-49b4-8e62-18742e40beb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deabdb52-3827-488a-800d-369839143b73",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860e43f5-234c-47fe-bf97-0f75a94acf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0be0d3-bc39-42c3-87f0-1881eb1b4828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feb565f-4f58-4aac-aa99-401a43156819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf654417-f948-4c40-bd6a-c29fa716bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331af52-8e07-4567-859e-fd21bcf319d4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718a0793-e252-483c-9e3a-5e4f372e0d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a388d0-e831-4786-b61d-27078e734dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0990a2a5-d9d2-4425-8c78-c2a0b2c5751b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d958f9-0ef9-4a57-855a-d3dfc18f24c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca33189-0d05-4670-9350-dd12bf94ddc2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe8d645-7398-45fb-b7de-86676db891ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2163eb26-2ff3-4b0f-a555-3606c30ef022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3810f134-d9fe-41d3-9976-b4994b0bdbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d842be6-d439-4720-ba09-b4c343d489be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aaa7b3-24a0-42e2-a764-ba9e226059f2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af20ce3-8867-4d36-8fbf-92a7e3db0b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4303c123-ff44-4692-b1bf-773c80badb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd96704d-bf61-45ec-abd8-734b40f245b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109accd6-14de-4fda-8cc6-af3f50284527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455d79a4-d1c1-4db0-b89e-ec9f3f4aeb70",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36acfc1-a3be-44d1-ba4c-ed7387b52f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af08f946-667a-4d26-b458-1078a33ca7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72c7b3c-7889-40ad-9d9f-5424ff47628c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be69fcb-f87e-4260-9150-60501929760b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266a2caa-2769-49e0-8439-bb01f25764f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c0c4a8-6cb6-48d8-a66a-eced92ee8a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cecb2f-4230-402f-a0d6-85aa5436bad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2f1ddc-a317-4898-ba61-96faa44e3975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6641116-f061-4133-861c-01d57d32b815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b8cf12-123f-4658-90b3-0415f49626fa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e9cc8d-81ac-4d63-8177-38ef5d0f46cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92295011-2411-4d38-a114-f638c4905144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b159e05-d006-49ec-be89-15b2919cef61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c36687-4248-412d-b117-a50054398d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a7e4a8-b0db-44f1-b12b-5caec0d8c0d8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ddad77-9612-46e0-b6b5-c682394ef83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f72396-cc38-4cb6-99b3-4fe1eab75d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521af905-bc6e-4878-9159-0ce4914bda74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10615122-20f6-4443-a5ec-3521925d789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2473ae38-2417-4fd2-ae76-3e9ed22ffd58",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29451738-a380-454f-8593-913601270cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4f872c-4921-43d6-b677-bb64ab87611b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7497cd2b-92a4-46fe-9f3c-9c65bae6fdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117b9a24-187c-4a6b-8b02-5a0a8db4e795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bd3edb-96bc-4ca5-bd0b-3a509dcf619a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc40eb8-7391-463f-a969-748b38740818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc90a9d-5cab-42ff-af54-02d109dab729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f7312-5609-4886-99bc-47935ae9f3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda8e4d1-675c-4ca9-8945-5f3ab0c0c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a755f70-9912-4c57-892b-e30981e7e25e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f914be8f-dee9-4f52-97e3-d0aa0cc376d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67171ff6-96de-4777-a275-fdeabf180f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f55004-e0f3-4f67-80f3-70c4b5a82b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a492c38-9916-4085-8fd4-e859ddb61fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb8801a-6664-4aa3-ba8a-1c9c1efdf150",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0adeab1-fa00-4983-bae5-f21cf21bb327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5842a26b-4875-4757-ba51-0f44853584e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe69518-3241-4e9d-9f9b-0562a40775f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9695d2-86bb-4a02-9e46-b8587e574ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24464d3b-5820-4067-8a5f-19465d7ebd55",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a3f53a-753e-408e-95e2-586bb317e117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebf43f0-0ba7-4ea2-a19b-1b67d7b78a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d57258d-7c78-4494-bab8-89f8e3c4c248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d96e3c-a22f-4119-b8f7-59d88ee0b9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e0eb7a-820b-43ab-8090-8fd2231230a6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e9b554-69f9-4979-9e29-1cb8c3b7746c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b857f22-c9b6-486a-9587-85e6c7471151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cb5abb-1247-4345-a2ee-a82ae3a8e493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1090c1-de90-4d8d-9265-fef6dd9aefd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80102c8c-e2d3-42a9-b37e-8fd551289072",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905fdfc1-4f40-43d2-b3ca-b6d6785c86d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25acd4e6-bebc-4f76-819f-1199426f993d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220e2c4e-5a80-4ee6-8a4c-9e6172566568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57df468-672e-4671-8680-1b54acefa26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18da2ec2-196a-401c-8f30-f0a7d7e8d5ce",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cd28c5-d300-4ceb-949e-99ad478d532f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ea98a3-3618-460a-b838-222d14c1eb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783d228c-8821-43b3-b3ed-35212750a02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94240538-510d-4ba4-9460-5a11e7415513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f596bea-dba0-4079-9d3b-e12f115077de",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e148a3a-16af-4b5e-b1f6-5d44fb755c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6cdf33-f529-4663-b08d-7e4781c227e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a17683-29a2-4b3f-9439-abd260b5d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b85a22-2183-4168-a238-ce060f699088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48523fa7-723d-4fe3-b931-89a67d63a3e0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e01ce-7dec-4442-a859-3154c9aa7b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa1d35c-c76d-4c38-b1d3-b66ff95f8f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6eec1e-f5e9-48e6-b17e-990770aa0279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79854c5-4db3-447d-9dc1-362f4198d7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24bbfd8-df22-4b06-ac08-2da0b2007c18",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669d8c1d-714e-49aa-9907-9fc5f0d76563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05363dc9-a762-47c2-a760-b1c4d356d6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12772e56-ddc5-4fbe-89c9-f226a4043d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5169494c-f8cd-4401-bb51-2777a49478f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8120d2-11d9-4653-9640-023ae3ce0436",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d3ee7d-8ddc-43aa-a6d1-d715808f10bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e0a9d6-e29c-4719-ac69-e47b95748383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee5e752-85c6-46a1-ba75-f63eab09f09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa59e64-1af1-4e6d-9ff1-ffc95555eb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c765ea01-477b-45b7-9709-ff58de2ecdfd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf5a854-1486-41c8-8169-fe1689c52dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecf3c0d-5fa4-4410-99ee-cb42850131bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54db7e28-ba92-4d8e-817d-bddb3b975cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62152701-6b77-4ddd-b130-d29e405f4042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325c628c-9574-4399-bc33-11dca5bae350",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544044c0-5b7d-41a5-9355-23a132b8e11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00209c8b-4587-49d1-9b33-6bd03c93c934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166b2238-2831-4137-b9e5-9825595ee84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2648a0bb-1052-4a43-ad00-03a9a23f34b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992d4237-a536-4ba4-83f6-7dc205553ee2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a6913-e16b-43ba-b5df-95a5db826915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2238580-b3b8-4149-9ccd-fd354082a2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab6ac25-de86-4ffe-8bca-ad72b480303b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cdf208-d0fc-47ae-859b-1af0d420b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb4997a-1e1b-4487-b337-53876281e660",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9809f87-6676-4d16-9aa7-612c118ca7b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c30ae8-72f2-4d05-93fe-59b04b12f5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04fdbe4-3109-472f-a61b-6e42a2fc1b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2877251-cb7e-4d3a-bc01-d8fda5993da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe8e766-e826-4a97-bc46-de246c3af04a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f482f7-3e0e-4ce0-b725-fdbefaba9e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4543881-85b3-4b80-98d6-2557338bba5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b34c99-58d0-42fb-a46b-97b562f63b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462c129d-0bbb-439d-839f-7867179fabf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c27556-d34a-423a-b3b4-dee294b26b27",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0c036f-062f-4b8e-abbf-48587d0db100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fab521b-f190-4303-8264-b8b8e1dfdc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41524123-1e3b-49d4-bd2a-638675ea81ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88d9569-3b94-4cc8-ac99-576f3da7e7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94e8dc8-5d78-4a9f-9f1a-1fa803c9e41a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987fbc10-e9b5-40c2-8bcb-0460c9aac9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee74cb6-c84c-4c66-9cee-713da771e941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b97a71d-f82b-445c-b305-a6b51979f0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7218093b-ed65-4784-8c76-a109cff2b347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4651f-ed75-490b-8e1b-e1f33b3114b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e382c173-f3ef-4b4f-9081-ac2df4dba38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7e4804-e995-404f-88e0-009635be8319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3600764c-9387-4de6-89b0-a5b55f272bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281f5b60-4289-4aa9-a068-5db2c14fcbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3784f8ac-61a2-471e-93a4-95d275374a99",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9fee62-34e5-48b1-b844-6e1b61eddd35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d3b664-47e5-4623-8b54-cf7a0711771f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81011980-a6ba-4fc9-8d23-64ff0ad5b730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720fcb11-de05-4243-9811-2d66f7811e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c54bf80-fe9a-406e-a6a2-c96299f687d6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49130c7e-1c17-42d9-9781-bac2ed6b80c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0403a4cf-b1fa-4cf8-a6fa-eb1772309675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888f9e06-8ae0-4bf2-a207-3368ce93f4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb00f7c-e22d-442f-b703-488c6f55dc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6342e0-ea46-4ff5-8c8d-d27cef5af087",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da98af0-cf4e-455c-ade4-190cde9e3eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f210ed-555e-4425-afd9-2f1ed9c7a9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894b7987-f028-4140-a6ab-d80821196fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73caea65-07a7-42f9-a809-9d3c53f07cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbf2de9-db76-4d76-8a20-6f669d7b516e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e464893-3b72-4dc5-a99a-c5a4d1c33199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb523d1-ed5c-4c0c-b454-ffcabe2a48c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d44c18d-1c86-4ef7-a5f6-7b0c4b842e76",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92221a25-ac5d-41de-9d1a-cd4a7cd45ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0654df91-5fd8-49f9-b3a8-55ff9e25d5f7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbca0bd4-c07e-4e74-bf61-e5a147dad075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "326e0e62-0627-4650-984c-1328e5f6a9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebaaf40-d59d-4171-8740-80836ab699a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d6ed57-39a3-4c5d-879d-af13648de910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee5aaf3-45ee-4e2a-ad41-2dad7d9f08ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d484a3f-a71b-4a92-b885-ff4f41211bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a559aea-f406-4fa8-9d82-209c7d5cd715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbe74ff-e78b-4871-9548-2d7739b82d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb59db1-2bc7-4bd6-a0ea-72fff78a2434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41acfcf1-9c7f-412a-bc84-204cf51789c3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0cd378-2edf-486b-a7a7-a8bc62986a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2ef5cb-92f3-4d40-a54f-49eae500c249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b11080c-8741-415b-a7f7-35d7211f0c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f4cecf-d520-4a35-9618-ded3cec45b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1948beb4-fc00-4cd3-9fb7-5d150e194f37",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155f35e8-54bc-461a-81d4-b04998ff892e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4c6c0b-767f-4109-abe6-5f878f0ffe4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8072f5-6008-4854-89ec-fc2f1fbf0306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9208ec-3173-4f65-b1d9-8c5a25b947b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec4b830-842a-46c7-97fa-b5ef1ae5f492",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f73bd99-5181-407b-a373-fe0428b011b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f889d1ea-4722-414d-88a3-92a2151fc1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31face7-3afb-4fbf-9a58-12495591928e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e29424-b63c-491b-be7f-091f11f7624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde57b1d-dd8f-4fa9-8211-8a9165189117",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dced40-abfd-40a9-a1e9-c28c51e5b524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47708fa-efe0-4b94-a3eb-ce2d8916df1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c6ee75-ed8d-455f-a6a1-2c3237e6d78c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29c91de-d8f0-4e4d-97a7-9fc7c837dee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c73ef3f-f4b4-44e4-82cb-a594739db299",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cfde46-433b-405b-9526-4331f7636791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4bc3b5-7c5b-4b94-a93c-b334c92bdb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e7a6c3-f678-48fa-b745-cdcbd3917266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7e1b4e-19d6-4610-bcf4-0a5ce34fb731"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3685b99e-357e-4120-8742-c0b5a083c79f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7b35969-cc28-45af-9775-313a56a9be39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e6a61e-5c38-4654-be18-760f8b8fd4f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ac19651-4e48-466f-9e6d-3372e61cc603"
                    }
                  }
                ]
              },
              {
                "id": "e81e8973-634b-41e4-a7c2-1e62c6b83094",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61284438-95be-4eb3-bcf0-750ece0701d0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6f45ec-4fd3-4e10-a67f-a6799a1446c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4bc71d41-760b-438d-927b-20be2576a17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300d422d-84f3-4676-a6db-db8837ff9bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e01665f-bcd6-42fb-b4cc-96c1836c7116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d86bea-fabb-4616-b911-5dbaafba99ff",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df71b66-c1b9-4fd9-82e5-bc39fb19cba6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "511974ae-1580-4e3f-a0e8-9d6e3c1b433f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379543ff-09f6-4f97-992c-b5556c39626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d80c8904-7469-4f14-9598-d45d30257d47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c8c810f-8110-4f69-8de7-4dbab0444cd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8df99a06-d1c8-4234-a074-499cfc02ea21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df1d4213-f69e-48cc-91ae-ae363c69ab5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c75ba659-62de-4b63-bc0e-b90e89574f18"
                    }
                  }
                ]
              },
              {
                "id": "04d59ed9-4046-49b2-9d7b-f6936702278c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "15238326-42b3-4680-91ef-41b38861a61f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755153ae-0b67-4673-96de-5d27c9df7de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "05ddbfcc-ab44-4484-bbd2-e77240776a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca27c2e2-9a91-473e-b52d-fa0ea4383023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7c5f50-d01a-40bf-865a-52c22044d33a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b1065ace-6c36-4878-a549-1166bfc9f4ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca2dd50a-1b10-428d-a1f5-303bfd7b1c5b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abf2866b-2d18-4f72-af8d-7d54b3519537",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0b9c987c-e62f-4af7-8890-a3cabb09da61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20cfcfc2-2be4-458e-b9c1-735d6ea8f7ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bec077e-1a1b-4824-88fa-23b8daf180aa"
                    }
                  }
                ]
              },
              {
                "id": "65d46b13-db2a-49b5-95eb-f7c95ad98725",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42a12a50-285a-41ad-ac5a-49eb15090ff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ce1afbb-51c7-494a-9404-02d6c16dcb8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c377ab8b-4033-484b-8386-c563730d1d5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fde09215-e6c7-4a32-ac42-11fe7e57097d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a088931-f872-49bf-b507-4341ff8a7603",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "06afc65b-8e21-4028-af22-4736da0136aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37a963ce-b44c-4086-b379-53142a49a04b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13e01cc5-68d5-4926-89fd-78284b04de23"
            }
          }
        ]
      },
      {
        "id": "f1893bb0-47ea-4978-9a39-025d5c1c05e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c1d67b71-c913-44cc-8c21-a7c6461cf0d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9664b88b-014a-48eb-a5c6-3efcc93e5e35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df5703f2-6111-408d-9e92-754ed96a028d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4242362e-7624-422f-bebb-d849bee57c4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "635565b8-b848-4bfb-87bd-8b00860a17b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b5f444-c2bb-470a-bf3c-0cbda6a8ec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "356602ee-90ba-4358-8239-9e61d9ef27cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d43d47-39dd-455e-8c99-cb1cb1edc5ca",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eee305-6313-4e35-9cda-ca5e24987c60",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "028b51e7-d52a-43df-8f23-e41caec044fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea5f2df-496d-40ae-9643-2f526cc187c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b446b2f-d2a4-49e1-b5f3-cad97c4c4667"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f95ad07a-02f8-4b52-a9c4-a61d13f6bcf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33ad9a89-2111-4a9c-b82a-71210df42d4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e52387dd-12c2-4453-a3ff-c561db161df2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90ea050a-9c2b-49b3-873c-664992d2c3cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6a360fc-f4e3-4b75-a0f1-72cdfbe478ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "18769163-5e78-4817-8e6d-c937e127c6a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb05ee97-a7c6-4135-a895-f6bf2918a799",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46f59ee9-e03e-4c2c-b51c-cad8ccc6ba43"
            }
          }
        ]
      },
      {
        "id": "1c2fe452-08c3-44c4-b99d-ad5553849fb0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8b3c9702-7b6f-44d3-8ae9-b7faf0d4fb45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98962a2b-bd8e-4134-9612-fe59d4048ac1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "165302f9-0129-47c9-b991-782e4d697a96",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93a6030-2aaf-48d0-a27b-0279819c45fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "193158fb-207b-422e-b03c-64a63a5df482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e513c263-91bf-4e6d-82cd-9e50851828f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "927e4a04-539d-4bf9-8e4a-45b881758c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cf0b02-e445-4923-8917-29c9177ff638",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9871325f-55b9-44ca-8f11-5ef8c2f290e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "09ef5d1a-124a-4670-8bfd-e921fd15be64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f3aa57-e720-4f68-875e-ef75c48c2fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b96061d9-3b2f-4cb5-959a-61b4ab7bc1c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82747b38-e556-4089-8977-d92ae0cbca1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2473cd4f-5c2f-47b0-a73e-d47361ad008e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8afa61f2-aeb2-451d-9f87-4a7437afff94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddfc88ba-e100-4d2e-949e-7c2724e3ae38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "872d759d-9f88-48b1-8931-642e8d6aff70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7ac967e2-9cc1-4e8c-b9f2-dc25dbbce7e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7430d992-0887-46a1-99a8-9c19b651493a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5927f132-7831-4887-9ba8-48422b6b6a46"
            }
          }
        ]
      },
      {
        "id": "22ffdc4f-7d4b-4048-abe4-75fe52e314a3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f27c1fe8-461c-4f23-8254-6a7d7a13208d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f52839a-639d-4a05-bc2c-b18b9ed1b64d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54522511-879c-4c3c-be28-1118c6cf6b2b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cf5b4e-1a9f-47d4-890d-c315ebc157e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e23ad958-0dec-4fb6-8680-9713dccce504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20649898-2c46-4918-b891-4732df078c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff84d517-81bc-4482-9dca-b7fde26a7e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ae1e39-2f50-491b-8e08-c36c7bb77648",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e91801-49c6-4881-b5da-628b4459bba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "130db1e1-3c05-4808-851a-0c4ea6f2c520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8130457c-a744-4f9f-b5f8-7ede962a2eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5d48b80-1b66-4c99-a48d-f2537b66b5d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a79afd4b-cad8-4e44-8ff6-b535c310810b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e845e617-ef6e-4072-a3e4-c875412579d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cd52090-fad7-46fc-9a17-550aea959767",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8f0fe2b-66bf-4403-9d94-df351bf7dec9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b21eba65-6422-4044-bc83-48374e1151f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e938234-db3b-4de2-bc11-551d369386b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89561d6e-e084-4d3e-8944-890895456169",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "346e15bf-6af5-4bef-a4e4-ed970c0f6c84"
            }
          }
        ]
      },
      {
        "id": "c6fac980-4b28-443e-81f5-9db117295ad5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93ca2135-7367-47b7-852e-debbe6b86231",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "652b4c75-a59e-4255-8d24-31da17bbb717",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2f94f2d4-9296-4136-8f77-1d18b8c26010",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83a8c188-017f-47b2-97a9-e94ffbdeb0bf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "072a8079-9a9d-4561-a289-6a18570e5e90",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1917,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 515,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 963,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 954,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 622,
      "responseMin": 10,
      "responseMax": 7160,
      "responseSd": 782.4965009163681,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676335264025,
      "completed": 1676335436818
    },
    "executions": [
      {
        "id": "df64c80e-f9b8-4c82-881f-3fc97d0e596d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "becbe0e6-9b44-4885-b513-038aff94400e",
          "httpRequestId": "c5eef53c-13d5-4bc0-a900-8f88a9866222"
        },
        "item": {
          "id": "df64c80e-f9b8-4c82-881f-3fc97d0e596d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "160d8f71-1cd4-4bb7-a5b6-963192db2602",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "be2bace2-09e8-4579-aeb0-8768d415d500",
        "cursor": {
          "ref": "c3c960d6-f782-4283-8ee1-6daca69f252e",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b91d5314-b0d1-472c-bbe4-670631a4bf85"
        },
        "item": {
          "id": "be2bace2-09e8-4579-aeb0-8768d415d500",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "51874d00-db2a-4ead-8e89-7424943cfa20",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "f3b068d6-6178-43e7-b5ce-87d7038e2c35",
        "cursor": {
          "ref": "61f70b38-4fd1-45df-ae7f-ae197a4bb909",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77557c25-6113-404c-86af-5dde7e74c924"
        },
        "item": {
          "id": "f3b068d6-6178-43e7-b5ce-87d7038e2c35",
          "name": "did_json"
        },
        "response": {
          "id": "fae51360-288a-40f0-83d2-e3ae927a56a9",
          "status": "OK",
          "code": 200,
          "responseTime": 1031,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c98544-ee4b-49f8-9dec-c1f7c932d722",
        "cursor": {
          "ref": "0ec6f9f1-1a72-4791-9d89-03dd9ac2cdf7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9427128a-bdbd-46b4-9a08-c69fc01f08ed"
        },
        "item": {
          "id": "38c98544-ee4b-49f8-9dec-c1f7c932d722",
          "name": "did:invalid"
        },
        "response": {
          "id": "260a3581-e01a-4406-b55d-d03ad3453dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c98544-ee4b-49f8-9dec-c1f7c932d722",
        "cursor": {
          "ref": "0ec6f9f1-1a72-4791-9d89-03dd9ac2cdf7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9427128a-bdbd-46b4-9a08-c69fc01f08ed"
        },
        "item": {
          "id": "38c98544-ee4b-49f8-9dec-c1f7c932d722",
          "name": "did:invalid"
        },
        "response": {
          "id": "260a3581-e01a-4406-b55d-d03ad3453dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883eabf1-95f7-4581-8ee8-f61e0b50ee9d",
        "cursor": {
          "ref": "ae292d82-f4f2-4f37-96b4-e4ef497d6ff3",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a60fa1b-fa79-4b8e-b1fc-8f7cc4ae455d"
        },
        "item": {
          "id": "883eabf1-95f7-4581-8ee8-f61e0b50ee9d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7f72670e-cab8-4dfa-b2f1-1db60ece3cf2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1174,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833c9d74-6c9e-4d3d-8a5d-866c7d852b3f",
        "cursor": {
          "ref": "be38d83b-62a9-4a81-a180-813a96b402f9",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f6c49981-fb77-46e7-90d6-8a730e69a448"
        },
        "item": {
          "id": "833c9d74-6c9e-4d3d-8a5d-866c7d852b3f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b061ee06-1028-47b8-b03c-c7035eb00a12",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1279,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b0526a-d956-4fd9-968c-daba889551e5",
        "cursor": {
          "ref": "7d08efcc-ecc4-4d83-a0d4-ecef69d59d20",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6fed3e84-5a33-4963-830b-b58533e4b273"
        },
        "item": {
          "id": "83b0526a-d956-4fd9-968c-daba889551e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9d2a84fd-528e-4f20-b865-48289216e925",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63c56d5-ef4a-42ef-b5e4-b18fd3bb820b",
        "cursor": {
          "ref": "0520afec-4dd6-4a63-aec6-01cfb0b6bb76",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a8f5e641-c561-486d-a113-4aa1ba6acfbe"
        },
        "item": {
          "id": "a63c56d5-ef4a-42ef-b5e4-b18fd3bb820b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "11ccca94-c14c-41ad-ad14-1e3c82bbaa7b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1412,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63c56d5-ef4a-42ef-b5e4-b18fd3bb820b",
        "cursor": {
          "ref": "0520afec-4dd6-4a63-aec6-01cfb0b6bb76",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a8f5e641-c561-486d-a113-4aa1ba6acfbe"
        },
        "item": {
          "id": "a63c56d5-ef4a-42ef-b5e4-b18fd3bb820b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "11ccca94-c14c-41ad-ad14-1e3c82bbaa7b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1412,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3ede19-6d40-47ff-8e9f-e57f318ccaad",
        "cursor": {
          "ref": "356b292b-afb8-4b13-9b85-8bca86c4bf49",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13dfe65b-915d-4fb3-868a-5ed691114f68"
        },
        "item": {
          "id": "8e3ede19-6d40-47ff-8e9f-e57f318ccaad",
          "name": "identifiers"
        },
        "response": {
          "id": "bc7a019d-516c-4868-a532-1369cf6d9294",
          "status": "OK",
          "code": 200,
          "responseTime": 1486,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7c20ee-3b1b-41bb-a051-63bbba2673fd",
        "cursor": {
          "ref": "934c3ad7-ece5-41a9-a80d-3af78394e308",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8558d581-7612-403e-87d6-140dc3649630"
        },
        "item": {
          "id": "4f7c20ee-3b1b-41bb-a051-63bbba2673fd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45ea4a95-344f-4004-ae12-2d4bbb289030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7c20ee-3b1b-41bb-a051-63bbba2673fd",
        "cursor": {
          "ref": "934c3ad7-ece5-41a9-a80d-3af78394e308",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8558d581-7612-403e-87d6-140dc3649630"
        },
        "item": {
          "id": "4f7c20ee-3b1b-41bb-a051-63bbba2673fd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45ea4a95-344f-4004-ae12-2d4bbb289030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867811d6-a7db-4fed-9edb-9050d65b3a63",
        "cursor": {
          "ref": "bf2c7c68-26ea-4b33-9043-606f5a58e479",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "597e1f68-1fad-489b-8a3a-a49d2a8abda7"
        },
        "item": {
          "id": "867811d6-a7db-4fed-9edb-9050d65b3a63",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "587b6470-d027-4af9-99c1-1d55b81b9769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b3e715-a8be-4877-a6f1-b5e280523232",
        "cursor": {
          "ref": "2832f6d1-0ed4-4b8c-b786-302679616137",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "24c6c95d-d998-441f-abea-7ace4bab6c88"
        },
        "item": {
          "id": "d7b3e715-a8be-4877-a6f1-b5e280523232",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c682ebc9-041b-4952-880e-d737dd6e1bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd0397a-eb1b-44bb-bb93-f56bd83ee7b5",
        "cursor": {
          "ref": "ee06d8c5-2592-4d79-8b84-9f13405219f5",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "72f44a1f-8a85-487b-aa04-aad3db7117f1"
        },
        "item": {
          "id": "0fd0397a-eb1b-44bb-bb93-f56bd83ee7b5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3ea4c27b-552a-4ad8-8766-0abfa0bf9722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f39feb7-df46-4305-9092-c799b9b119d6",
        "cursor": {
          "ref": "08a1067f-3834-4124-9951-98d4974fc06a",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ee907e32-29a7-4445-aaab-3ce8fec21e13"
        },
        "item": {
          "id": "2f39feb7-df46-4305-9092-c799b9b119d6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4874a440-92f7-4531-91be-38eee4bb0ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8840af9-c076-4920-9916-d33f44a5ff63",
        "cursor": {
          "ref": "7af07733-7009-4828-a4eb-3455ea39dbf4",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8311ebf9-9b7b-4c40-86d8-2e2167f6b36e"
        },
        "item": {
          "id": "d8840af9-c076-4920-9916-d33f44a5ff63",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e65b37af-d56d-472e-a567-e1bb4aeae4a9",
          "status": "Created",
          "code": 201,
          "responseTime": 2998,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "acd55e10-d6d9-433f-a023-89c59ab39d2f",
        "cursor": {
          "ref": "484124c2-80bb-4320-a4f0-ae20264db6b8",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "db663a0c-bfa4-4779-90b7-5e64a4ff6b4d"
        },
        "item": {
          "id": "acd55e10-d6d9-433f-a023-89c59ab39d2f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "72f8d871-edc8-4009-a8c5-4f114c90ed17",
          "status": "Created",
          "code": 201,
          "responseTime": 2794,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "abac240e-07da-4952-8cd1-70b50bcee4cc",
        "cursor": {
          "ref": "10377b27-8cbf-4bc2-9b30-8f6d6d1c1437",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d81485ed-d3bb-4ba6-b999-72357a4ef19d"
        },
        "item": {
          "id": "abac240e-07da-4952-8cd1-70b50bcee4cc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "86c77f0f-660a-40e1-bc2f-c0f4e9d87954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f748ab5-8280-4b0e-9ad9-9bee898b5ba9",
        "cursor": {
          "ref": "fe474a1f-eae3-463e-812d-cacd9edc242a",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8bb9ba7a-5689-4a1a-bfa6-70b805c40e0d"
        },
        "item": {
          "id": "3f748ab5-8280-4b0e-9ad9-9bee898b5ba9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3cda1f0b-59d7-45a9-ba5e-ad96968fe11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a19375-3000-4844-8967-9a7a5b399bfa",
        "cursor": {
          "ref": "bce8a139-15d7-4af6-9e79-0eeaa9430778",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4ff3631f-1da3-40f2-9cb3-141de693be9b"
        },
        "item": {
          "id": "32a19375-3000-4844-8967-9a7a5b399bfa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eb0428b4-976e-4ea7-9ebe-f4e4c38ce25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae646ac-1d2b-4a05-b0c4-68ac889f97d2",
        "cursor": {
          "ref": "67b8654e-9c35-46dd-b563-2c296e87aa1c",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e1cded1a-00f9-4af9-b64c-c051f485e061"
        },
        "item": {
          "id": "6ae646ac-1d2b-4a05-b0c4-68ac889f97d2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ce25fd91-8510-457c-8653-8c0730db1e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99153f-ee95-449f-8147-fac55ae07faf",
        "cursor": {
          "ref": "a503153d-ee64-465b-aca0-30e647b08b37",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3bd5a4a8-a489-457c-88f4-b6b30fadcd98"
        },
        "item": {
          "id": "cf99153f-ee95-449f-8147-fac55ae07faf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dc0515db-5ef4-4406-a79c-6f2931502876",
          "status": "Created",
          "code": 201,
          "responseTime": 2681,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "8299d930-9119-42ad-b25f-e2d39c28da1a",
        "cursor": {
          "ref": "312ca2fb-628a-46e6-9ea6-a40b30cb0fba",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5f016e0f-ee14-4d6f-a896-be6ef19fe3cc"
        },
        "item": {
          "id": "8299d930-9119-42ad-b25f-e2d39c28da1a",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "b81d4ef5-8ad4-4702-8398-3e03d93cd8c1",
          "status": "Created",
          "code": 201,
          "responseTime": 7160,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "22a2bb6c-5c0b-4482-b5e3-c14c085d700a",
        "cursor": {
          "ref": "6d5297e8-609f-44bd-ad4d-5f13fa61fd81",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da13f76b-6209-40e8-bfd2-a4971f486065"
        },
        "item": {
          "id": "22a2bb6c-5c0b-4482-b5e3-c14c085d700a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4fa73b46-8ebb-4fc2-a8a3-e75cfa0bb89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a062596-d805-4374-88dd-5e8e12c69006",
        "cursor": {
          "ref": "68bf25b5-5e9c-45bd-9322-812952b24069",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d7107975-363b-4ab4-bf8c-e6ddf96567a9"
        },
        "item": {
          "id": "0a062596-d805-4374-88dd-5e8e12c69006",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ccc7a21c-06d2-4d89-9a13-f76cd02e4dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8974e0-f5e4-4b18-b748-b23fdffe8f57",
        "cursor": {
          "ref": "6dbb1808-d98c-4a45-9c74-a4d44cdd5dbd",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a56fefed-ab61-4be4-9192-f826b91f33dd"
        },
        "item": {
          "id": "9a8974e0-f5e4-4b18-b748-b23fdffe8f57",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c1a5ec37-247c-44fd-8340-c289cc3ea49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484c2f16-6684-4cb8-893a-b75ad65278ae",
        "cursor": {
          "ref": "3e056d1d-d87a-4016-8879-a03213b3200b",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "673b62bc-27f3-4acf-99e5-2da24a18eef6"
        },
        "item": {
          "id": "484c2f16-6684-4cb8-893a-b75ad65278ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4c503a4d-c761-4d9a-a520-f2c8322a8ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3078a7-a75a-4643-bb75-8c2754825da1",
        "cursor": {
          "ref": "9055bdc6-2b35-49d9-8019-6b82d57a1a2b",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3cbe9f26-b767-46fd-a8e8-9070920f3d58"
        },
        "item": {
          "id": "de3078a7-a75a-4643-bb75-8c2754825da1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f069d23-b478-490b-93c0-e924c37a3e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985afd24-896d-4f4b-b4d8-e3e957760e16",
        "cursor": {
          "ref": "c21fb3d1-19da-4e8c-b60d-45021da4225b",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e68a7d52-d139-4e8d-a8a8-bc2e3756c03c"
        },
        "item": {
          "id": "985afd24-896d-4f4b-b4d8-e3e957760e16",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "de5d6813-e844-4059-ab6f-a12f100fc799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2dd434-92df-45a1-a599-ecf1c4b5d523",
        "cursor": {
          "ref": "39680312-ffba-43ec-b8cb-66cd8f152d6c",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f4236d7-31d4-43d0-a1f8-f46a8e2da13a"
        },
        "item": {
          "id": "9a2dd434-92df-45a1-a599-ecf1c4b5d523",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "69ebf9b1-673a-45e7-8e59-efe90d418803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4529ff16-0153-4afe-b15b-eea362088995",
        "cursor": {
          "ref": "37276e73-2278-49d0-87ff-08c724636b00",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "811db892-5a61-4170-a28a-96eb4bbd51cf"
        },
        "item": {
          "id": "4529ff16-0153-4afe-b15b-eea362088995",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e98d2401-d764-4e33-a01b-8421d2513971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da9ce95-1415-40b6-b8ff-2bcd5e3a99df",
        "cursor": {
          "ref": "aa0c98d6-8db1-41a4-b36a-c18c772739e1",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f44a7d33-d317-4872-b4b8-adfb691f2f67"
        },
        "item": {
          "id": "6da9ce95-1415-40b6-b8ff-2bcd5e3a99df",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bbfbbd7d-b6f8-46c5-a68d-db746471a952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cf0741-a0f2-4ea3-83c7-df68b9987579",
        "cursor": {
          "ref": "7bc73d4e-92c3-4c11-b44d-d0d1c3744d0c",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4107616e-f43a-499f-bca5-08edd2bfc605"
        },
        "item": {
          "id": "13cf0741-a0f2-4ea3-83c7-df68b9987579",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5d2756b4-18a8-4775-92e5-8b241a003c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45324ac-71be-4579-8d5f-fdb8f9c6121f",
        "cursor": {
          "ref": "0a9045f8-45c0-483d-86b8-4c48a77b131d",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a0837fda-509d-4d5e-b5d7-729e98f1ec5b"
        },
        "item": {
          "id": "d45324ac-71be-4579-8d5f-fdb8f9c6121f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "01a8829e-ec3b-4b45-80c8-82acdd93f148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f51623-8295-43fd-a84b-ccfc9171b252",
        "cursor": {
          "ref": "cca11e78-970b-49f4-a96f-4992db1cc613",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4478f537-2d0d-41fd-9d2c-78c1b6915702"
        },
        "item": {
          "id": "64f51623-8295-43fd-a84b-ccfc9171b252",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ee2d660b-b487-48b1-838d-34f5702d7df2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1914,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:34)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:34)"
            }
          }
        ]
      },
      {
        "id": "61adbda7-43e4-46b0-9065-954917aa87ca",
        "cursor": {
          "ref": "4ac23f62-e3d1-4f47-8525-0a8490ed2e81",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5eb0871a-8135-4c67-ad9d-3ae61aa005ea"
        },
        "item": {
          "id": "61adbda7-43e4-46b0-9065-954917aa87ca",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ed02f418-9b38-4acc-a383-d75faf735abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513651f0-1022-4f11-9dd1-dc0104b8f5e5",
        "cursor": {
          "ref": "f9622c7c-c322-4749-a517-e163f6a6f77c",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4f8cd295-e507-436e-868b-44140b9f455d"
        },
        "item": {
          "id": "513651f0-1022-4f11-9dd1-dc0104b8f5e5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9b4dcbe1-994f-407b-bc80-0d5d05ee0c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5becbc86-8959-4ab5-971c-c16a12ce97da",
        "cursor": {
          "ref": "8dd49936-04b1-4afa-8f13-fc12b1438414",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "429a10b5-b670-4389-833b-0ee514d8c0e7"
        },
        "item": {
          "id": "5becbc86-8959-4ab5-971c-c16a12ce97da",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f119f2c6-ae2a-44c9-a01e-6a3be22e1528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591ea22d-8f5d-4f9e-9d37-0e3da4cc9e8a",
        "cursor": {
          "ref": "eb99da27-a0cd-4ff5-924c-74022be5a71f",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0b8e23fb-0e0f-4191-8abf-d7033d254d4e"
        },
        "item": {
          "id": "591ea22d-8f5d-4f9e-9d37-0e3da4cc9e8a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d6703d5e-727b-46fc-9caf-794296aca2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0b1c57-6acd-4cbb-8d5b-02f415d4f18c",
        "cursor": {
          "ref": "820a0c7a-6e77-4e16-8bc6-a312d23176a3",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "68c2e47c-7b8e-48c3-ac30-5a84c8f74add"
        },
        "item": {
          "id": "fd0b1c57-6acd-4cbb-8d5b-02f415d4f18c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "32963893-e515-4263-a39c-61386bdc3d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b9e1ae-a183-4fcc-9a24-2ecf5d36276e",
        "cursor": {
          "ref": "f8af6989-a669-4fa7-8588-2012996cd50a",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "adc08ddd-c473-46c8-a475-3a61a8ace9f0"
        },
        "item": {
          "id": "64b9e1ae-a183-4fcc-9a24-2ecf5d36276e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "23962ef0-7c3d-42ea-af0a-6d3d4dbc54a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168d48d5-8fd2-4796-b87c-1a467cfbae02",
        "cursor": {
          "ref": "ed074a73-ab29-42a2-9e71-d36a53711c06",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b23872bb-15fc-44ea-bdad-6264969b6b68"
        },
        "item": {
          "id": "168d48d5-8fd2-4796-b87c-1a467cfbae02",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "07f4d861-7f91-42ec-b0e6-5f870e847a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cea94e-1eb2-43c7-9500-9d8ac1e1f547",
        "cursor": {
          "ref": "d140ff23-60b7-4880-a24b-1f0b4bfa90bf",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "da842733-369d-4ea6-8fb0-29d34c769b8c"
        },
        "item": {
          "id": "a2cea94e-1eb2-43c7-9500-9d8ac1e1f547",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "473531d7-8ea7-4990-a45b-abeaad1486b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27db418b-eb71-4ed7-9f7d-0186907cd713",
        "cursor": {
          "ref": "67af8dab-872d-44cb-9702-9cd66185ab96",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "12190ade-e2fa-426c-bc0b-6ee847867860"
        },
        "item": {
          "id": "27db418b-eb71-4ed7-9f7d-0186907cd713",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1f0e2f5c-e240-47b8-8910-3225ba866c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e959a2-0411-462e-a513-c5501bb07a2f",
        "cursor": {
          "ref": "f52a651b-2e98-4bff-9c8f-56e9f73a98cc",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3ac2d298-c089-4cc9-a317-74d5eed1fe59"
        },
        "item": {
          "id": "78e959a2-0411-462e-a513-c5501bb07a2f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b5131009-9a7d-436e-822d-cc3111dfda8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1832c9e8-e6f6-4139-8e29-9c3961f6de3b",
        "cursor": {
          "ref": "3158a4c3-05cb-4459-9293-6cbab538ed88",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1404846d-c5b8-42c7-ab5b-037439dd0623"
        },
        "item": {
          "id": "1832c9e8-e6f6-4139-8e29-9c3961f6de3b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3ecf292c-47a2-4040-b787-01821663a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e4ec55-1713-483f-8ca1-72a8b25edb5a",
        "cursor": {
          "ref": "275dd5b4-4b58-49e9-af0f-d5733350697a",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "692358e3-e481-4fe6-95c2-35b3f71fc5eb"
        },
        "item": {
          "id": "c7e4ec55-1713-483f-8ca1-72a8b25edb5a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "54dc42e3-88a3-402e-a5ad-e54524842d23",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 567,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153871f2-66fa-4779-8430-f7cba83046cc",
        "cursor": {
          "ref": "a058e44b-a7ec-4cfb-a70e-a32403077d1f",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e886fd39-687a-4c60-bace-6b59289f190c"
        },
        "item": {
          "id": "153871f2-66fa-4779-8430-f7cba83046cc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "08493f16-c255-4091-b532-a7b3ffb4f11f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 536,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:47)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:47)"
            }
          }
        ]
      },
      {
        "id": "5259468e-28c2-4546-811b-6b8f5926b16d",
        "cursor": {
          "ref": "4eb032bf-657e-4aa1-933a-c7326eef7bdb",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "92c09ec2-9b38-4f46-b04c-87bbe95f50b4"
        },
        "item": {
          "id": "5259468e-28c2-4546-811b-6b8f5926b16d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7df24f66-7c83-4a1f-8631-f218c497e885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff635c0a-207b-4e94-9876-ba806d19cb5b",
        "cursor": {
          "ref": "7fa4208b-c9bc-4581-8908-ba5d179f52ff",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8c964a97-c984-4719-9d8c-7facd0763bbc"
        },
        "item": {
          "id": "ff635c0a-207b-4e94-9876-ba806d19cb5b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3fd3e0a0-606f-4ed2-be11-ca7be2035191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b577d-bc9b-4f29-b4f7-929476fb4145",
        "cursor": {
          "ref": "dbb54c23-f614-4369-af0b-cf662e00f8c0",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "90e59ee5-de8d-46bf-8271-184b55017e23"
        },
        "item": {
          "id": "5b3b577d-bc9b-4f29-b4f7-929476fb4145",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7710dcd3-28aa-4392-a067-d1a3dc2d41a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb273f1-3092-4d67-bba8-f2c8075a10b6",
        "cursor": {
          "ref": "780ff0d6-bb4a-4a01-adec-5fee0119acbf",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1fc49b2f-dcda-4193-8669-dd3c50a1ceca"
        },
        "item": {
          "id": "dfb273f1-3092-4d67-bba8-f2c8075a10b6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "39d2d717-4eaa-421c-981a-f8f69293af75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ac237f-b334-4236-8665-ce251d475eb1",
        "cursor": {
          "ref": "7dc3de8e-e3f3-41fb-bc5c-f97a263cf390",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "05890974-06ca-4dcb-b790-b1b3d90159e2"
        },
        "item": {
          "id": "b4ac237f-b334-4236-8665-ce251d475eb1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1420b1a2-df73-4bc1-9d79-44b6a9976e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a54aef9-ddb6-471e-a2f0-67975b85069f",
        "cursor": {
          "ref": "f4e42f23-c18a-4b58-9d2d-36d798ec07d5",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f7106c6-396a-4ee5-a7ac-7ac15aeac62f"
        },
        "item": {
          "id": "4a54aef9-ddb6-471e-a2f0-67975b85069f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "204a200b-8a6e-43bf-9fe5-0cedc9c9aac4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 614,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c482ca-52ae-4ba2-a4c9-3f8ea7475c3b",
        "cursor": {
          "ref": "e36489f3-9078-4fd8-be00-be218016031a",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "87ea79a0-11e3-4b04-b068-de1db32e5bc2"
        },
        "item": {
          "id": "90c482ca-52ae-4ba2-a4c9-3f8ea7475c3b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a8186f91-9af8-421f-81e0-2c2b24f0b0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e4dd0c-c5bf-4b82-a230-d5c6569a4312",
        "cursor": {
          "ref": "458d5e8a-a889-4bf5-8511-1b8676546d33",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4afc9292-ed3c-4778-bb5b-9dcc57fbd646"
        },
        "item": {
          "id": "81e4dd0c-c5bf-4b82-a230-d5c6569a4312",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "db38a7a3-a1f8-460e-90a7-f903c50a9682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddf29ac-e94e-4fb2-aa88-6d77734c6855",
        "cursor": {
          "ref": "13ab97a3-cb4a-4418-9e8a-c327c28e8580",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8e67718b-bb79-4beb-8803-b83e0fc2275f"
        },
        "item": {
          "id": "fddf29ac-e94e-4fb2-aa88-6d77734c6855",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0490b19-12da-44fd-af8e-6aea1e7eedd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf32306-1988-4e70-8b01-7db8adcf3e63",
        "cursor": {
          "ref": "31f7cd60-95c6-4e8f-80cf-d15530a455e0",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "011b6402-780a-44dc-ae2e-70845f76dc1c"
        },
        "item": {
          "id": "aaf32306-1988-4e70-8b01-7db8adcf3e63",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c19cec76-dada-4ffb-b0bc-bfaf2f04fb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de179559-2817-4d2b-b4c9-5538640efcc8",
        "cursor": {
          "ref": "d584ff52-c519-4b29-8e1d-4efb3eb8a94d",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ae767522-92cf-4c37-8d14-36d434e68631"
        },
        "item": {
          "id": "de179559-2817-4d2b-b4c9-5538640efcc8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bea3481a-5b31-42f6-b7d0-3370b743bd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8579e9ef-b891-4b71-90f7-a665423b8422",
        "cursor": {
          "ref": "818f14fb-12f1-46f4-a654-9ee118a61307",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "895dde85-00a0-4c1e-888c-934e03b6da49"
        },
        "item": {
          "id": "8579e9ef-b891-4b71-90f7-a665423b8422",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4a3c090e-d505-4d73-b07d-469f7060e601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91370eee-60a5-44d1-b5b8-62df34c51636",
        "cursor": {
          "ref": "2b3ab8ad-3a91-481c-b657-65e2a326abd8",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f9c1b1c2-b7fa-4e94-9e13-c9bf4c345190"
        },
        "item": {
          "id": "91370eee-60a5-44d1-b5b8-62df34c51636",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "75d1bad6-e65b-44e5-9c3d-98b1e9e66fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9973f71-2faa-439d-89ac-767355bff670",
        "cursor": {
          "ref": "95529aa5-bca5-4c6d-b6ee-611c59e49858",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c48e349c-bb69-4840-8a2c-2eb573cd64fb"
        },
        "item": {
          "id": "a9973f71-2faa-439d-89ac-767355bff670",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ada35aa2-ca74-4c7e-ac39-2df5c365b946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778e13de-0236-4c5a-9ebc-b8d49750b135",
        "cursor": {
          "ref": "0ad74d77-ee4a-4c52-afe4-9a1b9b3586d2",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73c4f06d-5206-4581-a033-be4f02c70d98"
        },
        "item": {
          "id": "778e13de-0236-4c5a-9ebc-b8d49750b135",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a8521ee5-67a0-4116-a9b8-d510869d5904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e971ac0-c7b6-4014-9edc-898d751828fc",
        "cursor": {
          "ref": "feb906a6-6808-415e-aa60-72dcfda95696",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "930cda37-90d5-4d55-ada4-163a5065f53a"
        },
        "item": {
          "id": "1e971ac0-c7b6-4014-9edc-898d751828fc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ea1ea1ce-f75a-4f79-984c-5559a4cfbd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecbeb12-7dc5-4124-ba0d-8aebbe6fadee",
        "cursor": {
          "ref": "7b2b0644-42ca-4b89-843d-420843e6320a",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce442b7e-4587-4978-95df-2e7c871792b9"
        },
        "item": {
          "id": "4ecbeb12-7dc5-4124-ba0d-8aebbe6fadee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cc55173c-0cc6-4915-b9c2-4db87b8fbc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d923a7-a8cb-4ed6-908f-916151ece011",
        "cursor": {
          "ref": "be0d9d5f-d583-4826-ad6a-81ab0a602740",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fcd0492c-d054-403b-b552-a6cd6d74c13b"
        },
        "item": {
          "id": "37d923a7-a8cb-4ed6-908f-916151ece011",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "323e0dea-85aa-429f-9ee4-27703ccefea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84ed998-cfe9-4ca1-8f30-f3f9a0de129b",
        "cursor": {
          "ref": "e4d08129-5abc-4568-bd8f-63539bbb201d",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "357c3f25-65d8-4adf-9651-cf7f36c9989a"
        },
        "item": {
          "id": "e84ed998-cfe9-4ca1-8f30-f3f9a0de129b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6a9a12aa-65a1-46a7-a925-1f94b544cf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76ed44d-4c59-4035-a8d5-315f47226d67",
        "cursor": {
          "ref": "b795db81-1537-4356-81fe-6d2792bd4c1c",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "794e1076-fa67-4072-9111-641829a29b3c"
        },
        "item": {
          "id": "f76ed44d-4c59-4035-a8d5-315f47226d67",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b273d603-8aea-4d5d-b462-e373a31f56ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb91251-6540-41c5-8177-4be78c82e9e6",
        "cursor": {
          "ref": "af636e9f-aef1-4702-8091-241106e89d72",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9b0f0f8f-89c1-4065-a264-4a2e54ce867b"
        },
        "item": {
          "id": "bdb91251-6540-41c5-8177-4be78c82e9e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0c3ac631-38af-412f-b1b6-3c4d9509360c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253cf5ea-11cd-41fe-b086-5b1fceb82bdb",
        "cursor": {
          "ref": "4dc73afc-f52e-45a5-829a-aa90ad2ce90d",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6af8dd76-42b1-4030-a14f-b3fb018f6fb8"
        },
        "item": {
          "id": "253cf5ea-11cd-41fe-b086-5b1fceb82bdb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6d6c32c6-42ca-4ccc-82c8-7e77a31876bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b734689-968d-4552-bca9-64d7ec4609fd",
        "cursor": {
          "ref": "3f0d19e3-deb6-402d-9304-f44b799dffc6",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "635dd17d-4e3c-4b11-bf38-c737a0ce0f17"
        },
        "item": {
          "id": "1b734689-968d-4552-bca9-64d7ec4609fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4cbdaa73-5c09-4eee-8267-f304e432d754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49f2730-f61a-4126-98b9-844075abdda8",
        "cursor": {
          "ref": "97be00e5-eb16-4d6c-b724-988a244edeff",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "febfcef7-4664-43a8-ad49-3d8b335b797b"
        },
        "item": {
          "id": "e49f2730-f61a-4126-98b9-844075abdda8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2f653ca4-6577-47ed-a7d2-c3ece587adaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f862b6b2-8bf9-44cc-a122-7b7e0f34fd32",
        "cursor": {
          "ref": "d2b3cd91-85e4-4a66-8ce4-379971b9d3ef",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dae51d9f-7610-4765-8adc-e8d7e0af7e02"
        },
        "item": {
          "id": "f862b6b2-8bf9-44cc-a122-7b7e0f34fd32",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2a751300-4981-41b8-85b2-a04589e594dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07019d-796c-4331-aaa9-61f1caee3405",
        "cursor": {
          "ref": "a779e82c-31df-4a84-aaad-35bcdb36409d",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2dc53ee2-7236-4ac5-aed2-d1942130f869"
        },
        "item": {
          "id": "aa07019d-796c-4331-aaa9-61f1caee3405",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "34c6ae21-b555-4f45-88bd-b43f07263197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d189c2fc-c588-4d31-9aa6-b21e4f305629",
        "cursor": {
          "ref": "67693ca8-8bca-4475-b749-5b8fba8caf13",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6f9c54d7-f69c-4768-a477-cf1ee3c4ca1d"
        },
        "item": {
          "id": "d189c2fc-c588-4d31-9aa6-b21e4f305629",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "998d8421-90ea-42c7-9975-fb742e4709cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e04d0d9-cb18-42ed-8628-f330c47ebffe",
        "cursor": {
          "ref": "833b7f8b-2356-429f-bbaa-abccbced4925",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "46667707-866d-48e5-8b0c-2bea25f91c60"
        },
        "item": {
          "id": "6e04d0d9-cb18-42ed-8628-f330c47ebffe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8abe8d8f-f4ad-415f-bef1-dc49b651f285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b96599e-e949-414d-afcc-687cafcc695f",
        "cursor": {
          "ref": "e0c4ad4e-45f6-43f0-846c-3e6a3b040734",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0a11e2bc-5da3-4dca-a4ed-513cbe84a880"
        },
        "item": {
          "id": "0b96599e-e949-414d-afcc-687cafcc695f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab6e81ab-31e4-49c1-8e9a-7f83962a03fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc39c12e-4c6e-466f-ae26-0933d66efa2d",
        "cursor": {
          "ref": "fd2cb88d-d04c-434d-aa3a-968d969d20ba",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "21e72aed-c5e3-4e19-ba14-afbead3d39de"
        },
        "item": {
          "id": "bc39c12e-4c6e-466f-ae26-0933d66efa2d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c595badc-ba3f-4cdd-b343-039638ac2305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3fc1d7-f3c5-4218-a315-cb8e04cda2ee",
        "cursor": {
          "ref": "e580e01c-c6f0-4fe1-bcba-b490b885c361",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1f4160f6-9929-40dd-b01b-7a725b76fdcf"
        },
        "item": {
          "id": "9e3fc1d7-f3c5-4218-a315-cb8e04cda2ee",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5c9a32cd-b518-4fde-bd69-7b267cd7e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8574096e-b596-487c-a94b-496fc2011ec2",
        "cursor": {
          "ref": "948d8350-fb33-46ac-9bd8-d837569fad97",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b8f9190-4140-4fff-bda8-4c086c86b3b2"
        },
        "item": {
          "id": "8574096e-b596-487c-a94b-496fc2011ec2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a9086f1b-13bb-4b12-83ec-8d3fce2dfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db14a5f-f99b-4b36-b6fc-b1f039256acf",
        "cursor": {
          "ref": "e04e697b-1511-470e-aadc-a748f3586ec1",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "15ae3867-1405-4e42-b25c-4fbf8e1fa3ce"
        },
        "item": {
          "id": "8db14a5f-f99b-4b36-b6fc-b1f039256acf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cda117ab-ae0f-428f-b173-c5b8e3ae86be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93d2556-b2ac-4a51-8419-8f23f907fab8",
        "cursor": {
          "ref": "4af83af4-8309-4962-9698-72eceb40c275",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "51780954-eb22-4d5a-abd9-68c8641cfbeb"
        },
        "item": {
          "id": "d93d2556-b2ac-4a51-8419-8f23f907fab8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0f54336b-ee17-46c8-b681-ae7ac72b51ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee3732a-e704-4ee0-bf12-7a092e494fa8",
        "cursor": {
          "ref": "e2a82b9e-b458-485e-a185-6f1cf92c03f2",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "81a58b4f-677c-4821-b60f-9c29e51d0807"
        },
        "item": {
          "id": "3ee3732a-e704-4ee0-bf12-7a092e494fa8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ad12cca1-6681-4289-8549-f3e896be9a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56f020d-62ae-42dc-b931-9b1f19283331",
        "cursor": {
          "ref": "347d79b2-8a3e-4d0e-b377-ea9c53202596",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f7da2099-54ec-4c95-bc5c-9b77b1fe52e0"
        },
        "item": {
          "id": "b56f020d-62ae-42dc-b931-9b1f19283331",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e1904c1d-1fc8-4986-851f-9b27a1b1d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df3ecce-0391-4d28-a7ff-ec1a04d16a1f",
        "cursor": {
          "ref": "41384601-5efc-45f8-acd2-a6e5a2af19da",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3ededc53-03dc-4c12-8cc3-37d1b59b5367"
        },
        "item": {
          "id": "5df3ecce-0391-4d28-a7ff-ec1a04d16a1f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6d4c1ee2-443a-4b93-aac3-187dddc25396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b894cff-c8d0-4786-91a0-015d1e968905",
        "cursor": {
          "ref": "c3c6f02c-9da1-4264-96ca-a8181fb1e473",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff7b0ee4-2a18-482f-ad2b-8c5d30308b81"
        },
        "item": {
          "id": "8b894cff-c8d0-4786-91a0-015d1e968905",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2cdd7055-d224-4dc8-b85e-f51a64893498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869e6b32-2b9b-49d9-b6d7-88619bf9fcdb",
        "cursor": {
          "ref": "980118a8-e970-497a-b570-9da0be38a03b",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6c581adb-287a-4357-a652-6669e9cc3957"
        },
        "item": {
          "id": "869e6b32-2b9b-49d9-b6d7-88619bf9fcdb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e024e7e9-64c6-4e00-b20a-f68b875d9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249464af-1171-4db8-9318-aec38eac3106",
        "cursor": {
          "ref": "e0eea6ad-6f5f-4333-b40b-8e861badc1a2",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e01300fc-8822-4868-afc0-8f531ebf6546"
        },
        "item": {
          "id": "249464af-1171-4db8-9318-aec38eac3106",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fe2f39a4-d9ed-461a-906c-335f218dc693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d36cfeb-7c49-48d5-aa3d-16517568e990",
        "cursor": {
          "ref": "79c1a7d1-a6dc-4301-aa15-cfb0d1759650",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "320f27df-9eb8-49be-a6ea-c81321787b92"
        },
        "item": {
          "id": "8d36cfeb-7c49-48d5-aa3d-16517568e990",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d765d58c-5a1c-4be3-9604-3a6a6c1b9c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f11f2e1-7b63-4210-b2ce-ae46ce8eda6c",
        "cursor": {
          "ref": "965edd25-ebed-422c-83f3-446ec8640c2d",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a9909c71-d947-4b08-992d-b9f8b3a24858"
        },
        "item": {
          "id": "1f11f2e1-7b63-4210-b2ce-ae46ce8eda6c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1d9a3832-3b6f-46fd-a475-c92be041e904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ccfc5-b6ea-440f-84bf-3c4309a625cf",
        "cursor": {
          "ref": "fdffc84f-acd9-4c17-8e5c-64050cc0a30e",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4b6324cd-9f96-4459-890d-abc94b29c105"
        },
        "item": {
          "id": "532ccfc5-b6ea-440f-84bf-3c4309a625cf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bfe5e406-4f2b-4b5b-9b8a-9f4bdfd031a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5950efb-bf97-4d57-81b7-ecd2cddaed90",
        "cursor": {
          "ref": "644774d8-25eb-42de-a037-5a4d0ebf5d77",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "66d97207-482f-4914-953d-7579d6dab2cd"
        },
        "item": {
          "id": "e5950efb-bf97-4d57-81b7-ecd2cddaed90",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0927ce1b-6536-41d8-ac11-70fd378392ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7a1d38-afe8-4eb8-8983-c859b5b7abc7",
        "cursor": {
          "ref": "58e2e7a7-9278-4ed7-b459-b59320b143e6",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "29ae751b-eeb0-4e29-aefe-e7730fcd6bcc"
        },
        "item": {
          "id": "7c7a1d38-afe8-4eb8-8983-c859b5b7abc7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f4e28c32-e85a-48fa-a2c3-f394636f1581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daca8405-cf44-437b-83a7-b253cd1ca7bd",
        "cursor": {
          "ref": "6f69cad1-563c-4207-86ca-fcf02c0c8f0d",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7dec5025-8af3-4cee-a3c3-013013447136"
        },
        "item": {
          "id": "daca8405-cf44-437b-83a7-b253cd1ca7bd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8500cd18-a212-420f-8057-e68d3598a585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd71ca3f-8a74-4b17-9194-81694ba0b904",
        "cursor": {
          "ref": "20b65100-6185-4196-a1f4-9009116f168e",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ffadfff3-9310-4a35-ada5-408a8e242b87"
        },
        "item": {
          "id": "cd71ca3f-8a74-4b17-9194-81694ba0b904",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2e1f943a-bd86-4151-8d06-4248b54cd991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcf13d0-0b8b-4ec1-a516-8f5fcd79c412",
        "cursor": {
          "ref": "2794cf75-fca8-4083-be7a-b3b80181f066",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "85c5bf23-2c63-4e02-b889-551fdbca4a6c"
        },
        "item": {
          "id": "3dcf13d0-0b8b-4ec1-a516-8f5fcd79c412",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c4024c38-7baf-4cc0-b400-5108d17c7c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03030cc7-e741-4f2c-95ab-ec9b90c8ab56",
        "cursor": {
          "ref": "5664e18b-12ca-4bbe-bdc2-590cc2402a4f",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d39f12f8-9a62-4453-a3b3-20f3c6817a72"
        },
        "item": {
          "id": "03030cc7-e741-4f2c-95ab-ec9b90c8ab56",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e99605cc-78b2-44dc-9a93-5b30c12ec2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ee4c32-e401-40fb-bf76-d92422031f51",
        "cursor": {
          "ref": "5c7d41ed-c5ec-4a07-905d-3d54893bd632",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4aea3d55-90a6-4204-a19e-0de151c07cee"
        },
        "item": {
          "id": "a2ee4c32-e401-40fb-bf76-d92422031f51",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2cc29bbb-deac-4b5d-b382-8e7e7e504202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaae47aa-2f0f-474b-b83a-0008ff28ed09",
        "cursor": {
          "ref": "2ca2def2-da03-4cad-bca7-83908de54992",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5b5d62af-fbcc-4f05-a31a-c30a26b5acf6"
        },
        "item": {
          "id": "eaae47aa-2f0f-474b-b83a-0008ff28ed09",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4435462-12fb-4e88-8c79-4abcdee3a182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a03a4-c523-4aa9-adc7-59cc20a38fd6",
        "cursor": {
          "ref": "993e33cb-71df-4c72-bf09-9c1d962a1109",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41d22b52-dc31-47ed-8757-0094ad407a89"
        },
        "item": {
          "id": "1e6a03a4-c523-4aa9-adc7-59cc20a38fd6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e3d8e802-7dc0-4158-839b-b847b0b357a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0963986-9a5e-4fa7-ae82-6a5f7380e08a",
        "cursor": {
          "ref": "9b2cd2be-c591-4b0c-9a39-dceb0e12c297",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bb6797e8-435a-446f-84b7-718bd70920f1"
        },
        "item": {
          "id": "e0963986-9a5e-4fa7-ae82-6a5f7380e08a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3c15f51a-8da6-4f02-9e78-1d89371d054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d725c4f-7d21-404a-9e84-df63be70ac04",
        "cursor": {
          "ref": "bedbe814-107a-44da-96f2-4fa0d48cb062",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f4b6a38b-ec0f-4d6a-b9b8-212ec841dcea"
        },
        "item": {
          "id": "9d725c4f-7d21-404a-9e84-df63be70ac04",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e79b53a5-cc88-4884-9256-ce733034fb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009b0a2a-037d-48bd-a168-12762a1799aa",
        "cursor": {
          "ref": "6ceef42b-0145-4799-ae36-7dfbfd21d86a",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "501b2516-6bb7-43a1-b298-d1c420999059"
        },
        "item": {
          "id": "009b0a2a-037d-48bd-a168-12762a1799aa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8cc1f0c1-75d7-41d9-b9f1-eca2eebdb4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1e592c-3ce2-44c5-a0e5-2d020ae4e9ef",
        "cursor": {
          "ref": "d87b8d39-8fa3-4216-8df6-4d9ce7802bed",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e5fb3f47-bc86-4ab3-83ca-c73e25924e00"
        },
        "item": {
          "id": "8d1e592c-3ce2-44c5-a0e5-2d020ae4e9ef",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4f3fd4c2-2a89-41d7-b65d-4007433d8095",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5b400a-e532-4bf7-b250-6aeebfc10732",
        "cursor": {
          "ref": "6b2d91f3-55f8-480f-b38d-6e5fa92a08f6",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "afd1ee69-f627-46d0-9f72-fd01617386a8"
        },
        "item": {
          "id": "0d5b400a-e532-4bf7-b250-6aeebfc10732",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e23b7401-e724-4aab-b9f2-206eb0617558",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 536,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee138d9-ccc0-4f64-9ab0-30b9e0cfe90f",
        "cursor": {
          "ref": "b0df3122-1437-44c4-8c28-a2ccf3ca9181",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ce1120af-daec-4907-abbe-5c16bdd4d753"
        },
        "item": {
          "id": "aee138d9-ccc0-4f64-9ab0-30b9e0cfe90f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ea60c380-68ae-4032-8bb0-81b4c965fb7b",
          "status": "Created",
          "code": 201,
          "responseTime": 4591,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea1b917-e365-4a0c-89dc-963c55edeb4b",
        "cursor": {
          "ref": "29531aaf-ec01-488e-96a3-1f1afef9fe81",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d4dcffea-b595-4eed-8cf9-d20d4f1bdde1"
        },
        "item": {
          "id": "8ea1b917-e365-4a0c-89dc-963c55edeb4b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ebfdf177-398d-4191-8075-7e12070aee41",
          "status": "Created",
          "code": 201,
          "responseTime": 3781,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4f99cd-d3ec-4ccf-a002-7d6db29324f0",
        "cursor": {
          "ref": "84e6ef62-06fe-4c9e-91ff-8d416b7b5662",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37cccf4c-f92f-4f27-af71-e666138c5d7b"
        },
        "item": {
          "id": "3c4f99cd-d3ec-4ccf-a002-7d6db29324f0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "31b0ea6f-c890-41ed-85d8-f3e462069a97",
          "status": "Created",
          "code": 201,
          "responseTime": 4447,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2ba219-1f5a-44ee-a928-9b393208bb24",
        "cursor": {
          "ref": "1061b0fd-b86a-42a6-9506-157e72c8b1e9",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "88fd16e0-989b-4b03-843e-f9a7a0b0ffb9"
        },
        "item": {
          "id": "0a2ba219-1f5a-44ee-a928-9b393208bb24",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3b3862ed-adbc-404d-9789-b60a6fc42d5f",
          "status": "Created",
          "code": 201,
          "responseTime": 4716,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36ac4eb-5068-4ef2-8429-994a948c1cff",
        "cursor": {
          "ref": "5a7d169a-1634-49a5-a359-7f50850e7c5e",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a56b3633-11fb-4947-9acd-e64057e30596"
        },
        "item": {
          "id": "e36ac4eb-5068-4ef2-8429-994a948c1cff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a67cdcc3-92de-4b46-a1a3-841b73990bdf",
          "status": "Created",
          "code": 201,
          "responseTime": 4948,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "3740fee0-f919-4fa0-8405-52dd40bd8361",
        "cursor": {
          "ref": "f929d577-bc0f-4d6c-a596-903d2db8f724",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f625b3b-2686-4c3f-a030-fc524f0cd0f0"
        },
        "item": {
          "id": "3740fee0-f919-4fa0-8405-52dd40bd8361",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd343f5d-e607-4e3b-98a4-719c3dbca789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3740fee0-f919-4fa0-8405-52dd40bd8361",
        "cursor": {
          "ref": "f929d577-bc0f-4d6c-a596-903d2db8f724",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f625b3b-2686-4c3f-a030-fc524f0cd0f0"
        },
        "item": {
          "id": "3740fee0-f919-4fa0-8405-52dd40bd8361",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd343f5d-e607-4e3b-98a4-719c3dbca789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0ddf53-e571-40f6-a43e-48c940c93f44",
        "cursor": {
          "ref": "8bf3c25f-50e3-4c9a-a768-24b02b6a931d",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "02ca55fe-d1bf-468b-b670-0e108fe8c36e"
        },
        "item": {
          "id": "ff0ddf53-e571-40f6-a43e-48c940c93f44",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a71974b-211b-471f-b0bc-78a03a5d5059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ffa44-1c04-46f2-979f-0b6d454ed1a7",
        "cursor": {
          "ref": "f83b4990-920f-482c-885f-92b294934bd9",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "82aabb51-b24a-4b47-beb9-710003cf0991"
        },
        "item": {
          "id": "0e1ffa44-1c04-46f2-979f-0b6d454ed1a7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "193c539c-4ef7-4272-ac35-2b67836644af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb22a84-f34f-4312-a107-a8e14c705ff6",
        "cursor": {
          "ref": "7b514f5f-3c5d-4430-8928-50adfa945d19",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4313f86a-7bdd-4df8-94da-38b6ef699ed2"
        },
        "item": {
          "id": "2fb22a84-f34f-4312-a107-a8e14c705ff6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91f44d40-d946-40c2-b9a2-7bf9151bbe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29325f8c-3973-4d37-af59-ff8c90d2c013",
        "cursor": {
          "ref": "30f3974a-37f1-4c46-8862-8e4d92334a6a",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f80991c4-e7e7-47a9-b449-e09aeba9ce8b"
        },
        "item": {
          "id": "29325f8c-3973-4d37-af59-ff8c90d2c013",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14490dfb-aa49-4e3f-857e-b5bd2a871ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b082706f-bb5d-4cf2-ab68-03241a6d76be",
        "cursor": {
          "ref": "f2f03950-5feb-4cb2-8816-d583553c7911",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2fd0e738-afdf-4b4d-a12f-012257c5be45"
        },
        "item": {
          "id": "b082706f-bb5d-4cf2-ab68-03241a6d76be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d8850c96-4407-44dd-bfc6-691b1160e051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8456fc3-f1c8-441e-84d9-dfb9ab0b4fd9",
        "cursor": {
          "ref": "44a2ad4d-342f-4653-bde7-0d309e5bd91b",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "52600eaa-38bd-4747-ad45-49dd3bc63b43"
        },
        "item": {
          "id": "d8456fc3-f1c8-441e-84d9-dfb9ab0b4fd9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5832b779-b8f5-4584-b135-9ca74dd5db5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771436a2-9113-419b-8d33-0bde09f42cb2",
        "cursor": {
          "ref": "635a496f-dd8d-40f2-92fe-5acb590132bf",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0507ba98-6c35-4cc8-8302-caa8484e074a"
        },
        "item": {
          "id": "771436a2-9113-419b-8d33-0bde09f42cb2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "88a0322f-6667-4ea1-867b-7644502295bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d84f11-1948-422e-b7cf-cd99967642e2",
        "cursor": {
          "ref": "201259a3-9ddc-4ff4-a6e1-1ae671c2c2dc",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6ba6d5ac-a0ba-4dd5-baac-8a6dca140b4a"
        },
        "item": {
          "id": "f6d84f11-1948-422e-b7cf-cd99967642e2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9d625bba-6d14-40e1-a817-b8dc4f2e63c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ed55fc-905d-4e55-a8a8-9b6e2e25a4ff",
        "cursor": {
          "ref": "58e961b4-c4d1-401b-8b80-f96643036ba2",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "35fc3801-c02d-4be4-9888-77c24b1b38f1"
        },
        "item": {
          "id": "e5ed55fc-905d-4e55-a8a8-9b6e2e25a4ff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8e94233b-6a02-45ad-9a21-8d9773b1ac0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8915efa-ad13-4db1-9db5-014ce6fcde16",
        "cursor": {
          "ref": "e7da03af-869f-4035-9cf5-b0eeb87b9fbf",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d7cec62a-59fe-41dd-a355-490c5dfa226e"
        },
        "item": {
          "id": "a8915efa-ad13-4db1-9db5-014ce6fcde16",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "90ed7e96-9960-44f9-b7b8-470e2d3f6f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10441e5-3c1c-4f4a-88d9-9f37790c5478",
        "cursor": {
          "ref": "269d127e-19b2-4a9f-8114-054fc1cae9d9",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4c4e08b4-f1ac-4d92-afa6-696a296f1fab"
        },
        "item": {
          "id": "f10441e5-3c1c-4f4a-88d9-9f37790c5478",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "87393ef1-771b-4073-8c60-6a71398a195e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bcc2fc-5fa7-4df1-9d40-dbde1e3f6233",
        "cursor": {
          "ref": "4c645387-f5a5-496f-b937-f7b7995f6036",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0c2fc063-cd7b-433d-980d-b83b20a23383"
        },
        "item": {
          "id": "88bcc2fc-5fa7-4df1-9d40-dbde1e3f6233",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3bb0cb49-b4be-4606-ac09-e6a38e1eecd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e244b14-2bb2-4642-bd95-26cef817bab3",
        "cursor": {
          "ref": "7248fd82-a3fe-4928-8ca1-ea05b4a7b457",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "74e7b21d-a029-430c-acee-3e872328eb0f"
        },
        "item": {
          "id": "9e244b14-2bb2-4642-bd95-26cef817bab3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "89297539-da1c-4fd0-85f4-dc69ac423e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb01376-afa1-40d5-b58f-139b8ae6dd14",
        "cursor": {
          "ref": "62320643-7799-4e6e-8fe8-445fc4b17aaf",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f7bbd5c8-54ef-4c2d-8cc2-9b11e7e16e9a"
        },
        "item": {
          "id": "ccb01376-afa1-40d5-b58f-139b8ae6dd14",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49fa9c76-d983-4663-a1e2-74a132d12818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3d591a-7fdf-4abb-82e8-b12e02d978d9",
        "cursor": {
          "ref": "372e3867-5476-4fdd-a783-8b8e85343665",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a8196e35-5b05-4f2d-ac23-d9e22808e958"
        },
        "item": {
          "id": "6a3d591a-7fdf-4abb-82e8-b12e02d978d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a5073406-6806-4e5f-bbd0-0c270fed4210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a88d8b-8da6-4f07-85fe-fe947624ecdc",
        "cursor": {
          "ref": "bc84b0c2-8a3c-4374-8b06-08be76e6d298",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d9118050-b60e-4558-b089-a1a13e3c427c"
        },
        "item": {
          "id": "92a88d8b-8da6-4f07-85fe-fe947624ecdc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "010b5cd0-b9cb-43e8-942f-55c44bf399ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f09d799-bc5d-42ce-8e50-10598c922e42",
        "cursor": {
          "ref": "cdc0e4c7-852f-46ff-a9f3-c64922b92fd4",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "49dff29c-e775-4c01-a7bc-a8f1380a9871"
        },
        "item": {
          "id": "1f09d799-bc5d-42ce-8e50-10598c922e42",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b15a93f6-a736-4477-9b9f-e332b6f548bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86f3ae3-e21e-402b-8c61-935f97c5ed2c",
        "cursor": {
          "ref": "8230cdde-4ea7-4f0d-9924-9bb3afba5932",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c692d30d-d18d-4a92-ad93-fe8d09aae4ee"
        },
        "item": {
          "id": "f86f3ae3-e21e-402b-8c61-935f97c5ed2c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cedd36ec-dd4e-4d60-9baf-87c16eab1063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4d7e33-98ff-4277-9ee2-39600bdab646",
        "cursor": {
          "ref": "c6d40d92-0d66-4d6d-986f-3696ed44673c",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9af5c829-9af5-4f28-ad87-00b90033e23c"
        },
        "item": {
          "id": "ca4d7e33-98ff-4277-9ee2-39600bdab646",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f276413c-2ef3-460a-ad74-5b9ecd3caf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8daa71-ce56-4f62-8a1f-141462c7a043",
        "cursor": {
          "ref": "3d68e8bd-c2df-4b0e-bd0c-404ffcc5b152",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e5dc1f52-d033-4004-9eb5-b38df412b022"
        },
        "item": {
          "id": "bb8daa71-ce56-4f62-8a1f-141462c7a043",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f8de35d-b5ea-4875-9ad6-663e09614301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe16e7cb-b233-4892-911a-eef1ba99018e",
        "cursor": {
          "ref": "a8c74afd-49fa-42eb-9c80-bd0bc5af61be",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6ee4bd7f-921b-474b-96cd-40659fae46df"
        },
        "item": {
          "id": "fe16e7cb-b233-4892-911a-eef1ba99018e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a6e5313-f7d1-4a8f-b9c5-8e23a9598a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f009072d-a8be-4361-850d-8b0a750db3e7",
        "cursor": {
          "ref": "98a911ec-ec5c-41af-8214-30057c239e78",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e5342aa7-3368-4ec2-9c07-225e005004f9"
        },
        "item": {
          "id": "f009072d-a8be-4361-850d-8b0a750db3e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c85e6842-d73e-437e-927b-b0f7f8506302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96977449-98da-4dba-9224-d2b0b29f9030",
        "cursor": {
          "ref": "e0da7af0-5568-4701-9eae-21e4eb18d29f",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e837a966-68eb-4edb-8b49-a0c38e6ad1e3"
        },
        "item": {
          "id": "96977449-98da-4dba-9224-d2b0b29f9030",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f01216a9-312b-4a43-9f06-f397c9efad2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5173ca-142a-4b43-895f-1a3d91ba005e",
        "cursor": {
          "ref": "5c8f4a38-d95d-453f-87f8-5773dfb17413",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b8a97f23-c69b-4716-9735-5b86407f5609"
        },
        "item": {
          "id": "eb5173ca-142a-4b43-895f-1a3d91ba005e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2146e1b8-251e-42eb-8f44-76a72f549507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca4b3f2-148f-4774-a8f7-d5d8f283b687",
        "cursor": {
          "ref": "3c55c6e2-75cb-4aa5-a6f1-eb386331ef74",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ddac3a36-0516-4d86-9cd3-3056105a584f"
        },
        "item": {
          "id": "3ca4b3f2-148f-4774-a8f7-d5d8f283b687",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ba5a24d9-2cf9-472c-8103-d201d0bae796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546bd525-dbe2-4259-921d-6c5e1c415e94",
        "cursor": {
          "ref": "13431f72-a445-47fd-9754-d52c442dc56d",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2be7b4f1-3ed0-417a-adff-3c2ce22fa493"
        },
        "item": {
          "id": "546bd525-dbe2-4259-921d-6c5e1c415e94",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4bde2522-bcf4-46c9-956c-efef90b4aca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9b2d21-85a5-4b46-a20b-bd5e54b55ea1",
        "cursor": {
          "ref": "6d062bc3-bbb3-4cb9-a764-c7b3d386d081",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e8f49107-d045-414e-990a-e5bc3de50479"
        },
        "item": {
          "id": "2a9b2d21-85a5-4b46-a20b-bd5e54b55ea1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6803a70e-48c7-4c93-9635-a51fb432603a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c37426-d630-4c3d-b118-403ff068fca9",
        "cursor": {
          "ref": "f81fcab1-7775-4e06-9062-445d01f55ebf",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0e950be8-1b55-4bcc-b694-7c5566ccdf79"
        },
        "item": {
          "id": "10c37426-d630-4c3d-b118-403ff068fca9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "580c12b7-fec3-4e6a-a3d9-7d95931a2fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f8f1cf-1544-43e9-9140-20504719ac0f",
        "cursor": {
          "ref": "b729e3e6-1459-4c92-895c-6490bfaa6131",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e30f6086-5cc4-44a6-995d-007475392f7b"
        },
        "item": {
          "id": "89f8f1cf-1544-43e9-9140-20504719ac0f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "88da9bca-6c38-40e1-aafd-7eb0e7ded3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0bf6dc-19ae-420e-b282-3783c8a41ed6",
        "cursor": {
          "ref": "c6b89ff6-59df-4f8d-91b8-64afe3271ca7",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a41b9c4f-fb8e-48fe-b278-4540d17fb394"
        },
        "item": {
          "id": "5e0bf6dc-19ae-420e-b282-3783c8a41ed6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1567f0e6-0dd6-4357-bf69-723ca380822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787eed1a-7d6f-4bbf-90ca-b111f67ee144",
        "cursor": {
          "ref": "b8b17173-c9c1-4e6c-a08b-391d0ed47bdf",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d755cd20-2dc5-4ddd-9dd0-bf77ce261c52"
        },
        "item": {
          "id": "787eed1a-7d6f-4bbf-90ca-b111f67ee144",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f3fd19ad-24bb-4269-adc4-1a29eaa395a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2929e7b-9da5-4fe4-b1dd-284ffa062975",
        "cursor": {
          "ref": "e69e942c-ead6-431d-9452-33749dd81cf5",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2ca6dd27-820a-4b1c-9592-b99c1e160c0c"
        },
        "item": {
          "id": "a2929e7b-9da5-4fe4-b1dd-284ffa062975",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de2aef17-23b2-4eef-9d4e-940743f39fc1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faad608-c730-4e6f-8463-a92a20799915",
        "cursor": {
          "ref": "749f5aaa-ec3a-4fb7-818f-95c8f1eab00b",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d129d8bb-f911-41fb-902d-350ebaf24c6e"
        },
        "item": {
          "id": "6faad608-c730-4e6f-8463-a92a20799915",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "328a5df5-5b73-4a65-b399-1acdc75f7922",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 764,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ee8f82-ec6c-4303-be09-57de26aea92a",
        "cursor": {
          "ref": "a83bef37-8f99-4da5-96a3-2cbd81bacfa3",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1ed3cbd5-ef10-4f84-a9bf-39b1a07562f9"
        },
        "item": {
          "id": "34ee8f82-ec6c-4303-be09-57de26aea92a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2866c067-0e06-4816-9328-d83003c42d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ee8f82-ec6c-4303-be09-57de26aea92a",
        "cursor": {
          "ref": "a83bef37-8f99-4da5-96a3-2cbd81bacfa3",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1ed3cbd5-ef10-4f84-a9bf-39b1a07562f9"
        },
        "item": {
          "id": "34ee8f82-ec6c-4303-be09-57de26aea92a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2866c067-0e06-4816-9328-d83003c42d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8155f8ef-6e1f-4626-8cd7-cc6876e6cdc2",
        "cursor": {
          "ref": "e10453b8-223a-4835-be92-f6c72f799245",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d738131f-1ddd-4292-86e3-e3b15fde8d10"
        },
        "item": {
          "id": "8155f8ef-6e1f-4626-8cd7-cc6876e6cdc2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e3e99ea-dfe0-4b7f-a133-dcee0078e542",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "dade49e1-5ad5-45bc-81d6-28ffea547db9",
        "cursor": {
          "ref": "7fe43b48-7dd8-44ff-8a74-07fb15071a0f",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1857c9a7-c55e-435a-8a46-b960e92e7537"
        },
        "item": {
          "id": "dade49e1-5ad5-45bc-81d6-28ffea547db9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d6f3c252-a383-472f-86e8-9d46a39ad853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028aee6b-d186-444f-b7d3-6c9e47b6078a",
        "cursor": {
          "ref": "a1341fff-d19f-467e-93ae-e029d3e63236",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "97a12bfd-c9d9-4427-a601-730918575db0"
        },
        "item": {
          "id": "028aee6b-d186-444f-b7d3-6c9e47b6078a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23671db0-c579-4d6c-8da6-0279f104af1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4925ca2b-a10f-4cac-937d-84edfc99e454",
        "cursor": {
          "ref": "165d3a27-6e73-4157-b757-be61bbe6034a",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dc26c89f-4fb5-4e34-a988-c0b6ebec6ebd"
        },
        "item": {
          "id": "4925ca2b-a10f-4cac-937d-84edfc99e454",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6a713c94-343b-48eb-aa28-a95b4a5b7fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a99f3-96bd-44d7-97b1-7a2b51b283b2",
        "cursor": {
          "ref": "10260576-010d-447a-be3e-d6079277e979",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fca28d5c-4c71-4d82-b51a-a85085b8357f"
        },
        "item": {
          "id": "ec3a99f3-96bd-44d7-97b1-7a2b51b283b2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "31c30e5b-a6c5-4815-8f3d-49c65ff21a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e695de41-04e6-4d92-a08f-1fb15a69d5eb",
        "cursor": {
          "ref": "1316167a-8760-4591-b100-c255c6f88bb5",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e0530892-96ac-46ea-ab37-f15d036bb168"
        },
        "item": {
          "id": "e695de41-04e6-4d92-a08f-1fb15a69d5eb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aba835c6-472a-4868-8bca-036ed61f8ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fb33f1-0a20-4644-839c-9612c3ec423b",
        "cursor": {
          "ref": "5cd12a71-fa72-44ee-af53-310ba6116e6e",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "81e8e582-be86-48e3-a974-f1a8f44acd21"
        },
        "item": {
          "id": "e6fb33f1-0a20-4644-839c-9612c3ec423b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4621a097-0256-4bfe-a10e-6d57ec35b328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fbcfd9-4dde-449b-9ad2-8b66144e0d8a",
        "cursor": {
          "ref": "3a70d15d-b268-48b0-986a-8f0a9ca85540",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "22dfd24d-2f0a-4461-add5-20314868c1c7"
        },
        "item": {
          "id": "27fbcfd9-4dde-449b-9ad2-8b66144e0d8a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b520ba2b-017c-40e5-a96c-e06b34c8fee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b420213-7a74-4e85-8758-ea8c6763a4da",
        "cursor": {
          "ref": "b2b7c918-f637-4583-9157-3bba730f902c",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7f2819d2-c0aa-4db9-b793-d212bed8d745"
        },
        "item": {
          "id": "5b420213-7a74-4e85-8758-ea8c6763a4da",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cbcdaf75-e757-4658-a0ad-fae036cfe4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1945339-1099-4daa-8a5b-d417686cdabc",
        "cursor": {
          "ref": "bd95cd40-7af5-4136-91c6-51f919ce27dc",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8e9ae91c-4210-4573-b21d-3d939fea2861"
        },
        "item": {
          "id": "f1945339-1099-4daa-8a5b-d417686cdabc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ebf7ef1c-c569-4d61-917f-35ff5ec748bb",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "e0fff114-a76c-4eb7-8de3-e36d4ad3134d",
        "cursor": {
          "ref": "8fa6d186-9963-4cc7-9d4d-10ca71e53c1d",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a644e54a-4e71-4f5e-bcd3-c3107dda24b5"
        },
        "item": {
          "id": "e0fff114-a76c-4eb7-8de3-e36d4ad3134d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "566582ca-002f-4162-a513-d42799df9ce4",
          "status": "OK",
          "code": 200,
          "responseTime": 397,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "bc433e87-f215-4219-b833-90e74e908d0f",
        "cursor": {
          "ref": "a5d8774a-f16f-403e-95c8-68bd30737001",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "63b41055-8994-41b9-ad33-ed42d6a5803c"
        },
        "item": {
          "id": "bc433e87-f215-4219-b833-90e74e908d0f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c327d3b2-720c-486b-832b-c1e6129f8cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3563806-9db1-4faf-8257-74b81af25ae0",
        "cursor": {
          "ref": "e9ff80a4-f7a2-4e26-9e7a-0de5b2cd6096",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6e423955-a738-4215-95be-bcf7accecbb8"
        },
        "item": {
          "id": "a3563806-9db1-4faf-8257-74b81af25ae0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1982ed68-7d02-4f76-8fe2-2babeedaad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b0d53f-5700-4ce3-b268-27a127dd040b",
        "cursor": {
          "ref": "74c2f969-988b-452a-a367-755f4aaa1197",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a3f39688-36f4-492e-95c9-cce699528191"
        },
        "item": {
          "id": "a1b0d53f-5700-4ce3-b268-27a127dd040b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2ec73986-9364-4cef-b3b3-9fc817e0e596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b738ee-ba14-4541-be8b-e8701f1515f5",
        "cursor": {
          "ref": "12af6ed2-72cf-4de4-80e6-f90820456ce4",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1ddea515-0560-47bf-9b03-e650967e9c8c"
        },
        "item": {
          "id": "34b738ee-ba14-4541-be8b-e8701f1515f5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c69a4ad3-d0e4-4b79-8c68-d599dce169df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45006db0-6634-49c8-97a6-53fc93401db5",
        "cursor": {
          "ref": "b15d3124-687c-4f10-92f7-d5bdf8434bb3",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7ede5ec2-1533-4945-be3d-69fb581ef3b1"
        },
        "item": {
          "id": "45006db0-6634-49c8-97a6-53fc93401db5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "61afca27-8129-4395-89ed-267299090e37",
          "status": "OK",
          "code": 200,
          "responseTime": 384,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:160)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:160)"
            }
          }
        ]
      },
      {
        "id": "641aa20b-1e2d-434c-9670-e1f72d483f3c",
        "cursor": {
          "ref": "aad364b7-3d6e-4420-b81a-9a5681ae8aaf",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d65688d5-6485-4fb8-9d4b-bfeab2a08cd1"
        },
        "item": {
          "id": "641aa20b-1e2d-434c-9670-e1f72d483f3c",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "8690cb5d-d2ff-42b5-a891-974acb5613c5",
          "status": "OK",
          "code": 200,
          "responseTime": 1997,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "a6fc714f-4199-43e8-84fd-80ff1faa35cd",
        "cursor": {
          "ref": "88d4d58d-d80a-40a4-b1f4-b520233b9793",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e559e23-39a3-4a4f-b5ba-0698cb2e0727"
        },
        "item": {
          "id": "a6fc714f-4199-43e8-84fd-80ff1faa35cd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "437583f9-86c1-45c7-91e7-40a7c181f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb9563b-86bd-4473-baf9-995ddf9c9d2b",
        "cursor": {
          "ref": "66392ca6-02af-4906-b6ac-97862acfd6e6",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c0254af0-6bd2-47c5-804f-281db621bd89"
        },
        "item": {
          "id": "9cb9563b-86bd-4473-baf9-995ddf9c9d2b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b45d2c57-e4dd-4d7f-8a75-62c2f0a85689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8162437e-26df-4fc5-8a85-d9fcbf184c0b",
        "cursor": {
          "ref": "adb2bed8-69bf-46c4-9c45-eccea6224a10",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "24e16f1a-52d9-45e7-a9ab-70c6557438d1"
        },
        "item": {
          "id": "8162437e-26df-4fc5-8a85-d9fcbf184c0b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3515dad3-193c-40b3-af96-e7dce4e8e1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9905c3a2-1a80-4f34-9c50-a11a0294fbda",
        "cursor": {
          "ref": "27933ece-cba4-45ed-993b-9ef75973a870",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bdb8ade8-d751-4b51-bba5-218a68efa7eb"
        },
        "item": {
          "id": "9905c3a2-1a80-4f34-9c50-a11a0294fbda",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "caae8ed2-2c68-449a-95b4-bdf70f612931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c842517d-ee7a-4c7f-90e3-d2ecfc1589db",
        "cursor": {
          "ref": "0bdff5c9-5b53-4f85-bbed-3740c93f77b1",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a09a519a-532d-4137-9d51-447ff801672f"
        },
        "item": {
          "id": "c842517d-ee7a-4c7f-90e3-d2ecfc1589db",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eee4fd1b-9f3b-4b56-ad50-bf1839e10d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d0491-b7e9-4950-840e-a5cacfb901a9",
        "cursor": {
          "ref": "288e996e-6c93-4015-96b1-d4d361bcac13",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2731d062-5afe-4c82-9b98-2e610ef5814e"
        },
        "item": {
          "id": "d88d0491-b7e9-4950-840e-a5cacfb901a9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "769406c3-e153-41fa-a667-f90b0b42463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c24c0aa-410e-43d1-99e2-37c93d563aa8",
        "cursor": {
          "ref": "83f44192-eccf-43ee-a38a-f1c6d41b5f1e",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d8c4839c-f21f-47a7-b9b8-94a1dc56d597"
        },
        "item": {
          "id": "0c24c0aa-410e-43d1-99e2-37c93d563aa8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cab7c100-2103-4b47-9ba9-079783ce68b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7184abcb-3d54-4834-93ec-916ddbb33498",
        "cursor": {
          "ref": "23b65297-86bd-4447-84ee-f59854975819",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "844184fa-9ea7-4c03-bf26-3321b09a7d2e"
        },
        "item": {
          "id": "7184abcb-3d54-4834-93ec-916ddbb33498",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b496adc9-c436-47f0-a9a0-1a92ee93fc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e055d256-94cc-43d8-b1f0-7c1982abc803",
        "cursor": {
          "ref": "d8516e08-1802-4707-b55f-0b07f8244d1d",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "122e5487-a5ea-4550-b2ec-9acb3b65ba72"
        },
        "item": {
          "id": "e055d256-94cc-43d8-b1f0-7c1982abc803",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "373cb6ab-1773-4ebb-a01f-f5e884c6ab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7619a839-c1b6-4d29-82a3-6181eb6948d6",
        "cursor": {
          "ref": "43c7b216-1f12-4b1f-9fdf-b0ebc2fe6780",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ea37768e-0907-49ee-b3e5-bad0f33264d2"
        },
        "item": {
          "id": "7619a839-c1b6-4d29-82a3-6181eb6948d6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8f208744-9623-4628-8dfe-2740528540e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684c4783-f18b-4835-a4a2-8417110eeb53",
        "cursor": {
          "ref": "ddb15849-76a3-4495-b899-1ec3a3854134",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6b2b2575-a655-4f9e-b3b6-3ad1ba582f59"
        },
        "item": {
          "id": "684c4783-f18b-4835-a4a2-8417110eeb53",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "559bb276-8400-486d-ba87-5c46027e074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0792ce7d-48eb-4bc9-95d1-73eb3ba469bd",
        "cursor": {
          "ref": "f6382c8d-f6aa-47f6-a9e3-7e15683866b8",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9be6576a-f991-4bf4-a273-3c9ff66e3b2d"
        },
        "item": {
          "id": "0792ce7d-48eb-4bc9-95d1-73eb3ba469bd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a66b7403-1cd9-4a16-af86-26004dfefada",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "99c4da18-c2a7-4b90-8aec-4df9fbb8cf63",
        "cursor": {
          "ref": "ad32a1a9-02f6-429b-adef-e0914cc6a3ad",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d235d6ac-2f9a-41c8-bf04-eb91cb858673"
        },
        "item": {
          "id": "99c4da18-c2a7-4b90-8aec-4df9fbb8cf63",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "28e0ce3f-699f-4a7c-9534-691f4e9018f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeccb1c-e8f2-4fd8-bb05-ed82e4c590db",
        "cursor": {
          "ref": "af5934bf-8a63-4de6-ac4f-8e8b2e27e1b9",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "17cd032f-9608-4f65-b6c6-13c5a4871bcb"
        },
        "item": {
          "id": "2aeccb1c-e8f2-4fd8-bb05-ed82e4c590db",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e8eaba89-9a03-42c0-bdea-ad0ce4a61534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba59cc19-45c1-4df8-944c-1fe053b84d2a",
        "cursor": {
          "ref": "8515d7cd-cc31-48d4-bd8d-6f685e8ccfae",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3da5661d-af94-4ff8-b0aa-ddfc7765c5c6"
        },
        "item": {
          "id": "ba59cc19-45c1-4df8-944c-1fe053b84d2a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e4cf02e6-2665-46d2-ba7e-258113304646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189ec92a-a8eb-41c7-82ad-d7604f73c466",
        "cursor": {
          "ref": "a956ca4a-0d23-4150-acc0-5063fcc88d56",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "28280219-f91e-4a25-8d3b-a5a96ece2a37"
        },
        "item": {
          "id": "189ec92a-a8eb-41c7-82ad-d7604f73c466",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fd7a8175-4e72-4761-800c-a2cab8b44a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f525fe2-aa1e-40cf-b876-a25962a78e23",
        "cursor": {
          "ref": "897f6256-701c-41f1-aab8-83bfd2b091f5",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3f1c4be6-1164-440a-b070-f05b93efd1cb"
        },
        "item": {
          "id": "5f525fe2-aa1e-40cf-b876-a25962a78e23",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9cf3f78f-f0b8-41b2-9406-847b35b002a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d72fa4-5e33-41af-856c-f257ed6de667",
        "cursor": {
          "ref": "36a81590-3996-4469-9e44-66d69bf786d0",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8f04af55-1e81-4df6-927c-74e19a79e12d"
        },
        "item": {
          "id": "e9d72fa4-5e33-41af-856c-f257ed6de667",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "38f8d922-4174-4804-9a2a-8d0982307ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5910e2e9-e8b1-4b3e-b4f2-7b1683d2cd2c",
        "cursor": {
          "ref": "4780275f-ac70-4d66-98d3-1bbb37f2c3f2",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0395d157-71b9-47bf-9287-808a95cc0251"
        },
        "item": {
          "id": "5910e2e9-e8b1-4b3e-b4f2-7b1683d2cd2c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c452ba9a-ac83-42cf-8f0f-4837657bb2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c236711-15ff-4d6c-9b69-f1509050f275",
        "cursor": {
          "ref": "8e2a407e-4eba-416e-85fc-9c139d46eba3",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "adb8c5b9-55f4-4c70-af6e-c3c31fe1f36c"
        },
        "item": {
          "id": "9c236711-15ff-4d6c-9b69-f1509050f275",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c0e63cf3-66dd-4ff7-b3ce-405004f4cc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ebc40-a12b-407f-8019-8897376b244b",
        "cursor": {
          "ref": "9c90a44e-b003-43e4-b0c8-e7f3b9400a8b",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b8474a9e-a308-4ebf-a3de-528d8d7ecede"
        },
        "item": {
          "id": "665ebc40-a12b-407f-8019-8897376b244b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "186e00aa-767b-4875-8e8d-9772cdc0907d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172bb769-3248-46d0-851d-a84c788329b2",
        "cursor": {
          "ref": "d0f0d25c-aa85-4628-8733-a6b3ab6035ed",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f92ce34-1219-4fd5-9824-cffb4e6ed782"
        },
        "item": {
          "id": "172bb769-3248-46d0-851d-a84c788329b2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b1d59adc-a603-4e63-8eb5-4bd7e36c5a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12962796-69be-4e18-98d3-eb61e777f481",
        "cursor": {
          "ref": "ad2eaf62-8d2d-4b74-b396-379893e2c815",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "011da4d1-d135-4664-8918-11abd3f16075"
        },
        "item": {
          "id": "12962796-69be-4e18-98d3-eb61e777f481",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "80279180-bcff-499a-ac17-fd4d1eb471fa",
          "status": "OK",
          "code": 200,
          "responseTime": 275,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:184)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:184)"
            }
          }
        ]
      },
      {
        "id": "bc222f34-130f-48b7-90c8-47a5930f3e7a",
        "cursor": {
          "ref": "63b97c89-c657-4217-8f37-f3709ccf71fd",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c1dc6705-5b22-49fa-8fc4-7b5fb2e5bd64"
        },
        "item": {
          "id": "bc222f34-130f-48b7-90c8-47a5930f3e7a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8b08be7-c677-44b4-ba3d-5fc4df5997bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca29d4d0-ef12-4639-b4b5-e02d627b69d2",
        "cursor": {
          "ref": "3a0167b7-d76e-4fd6-89b0-704ceebd3762",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ccf8b2cf-a2f8-403b-865f-cd97eee1e3e5"
        },
        "item": {
          "id": "ca29d4d0-ef12-4639-b4b5-e02d627b69d2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7c28b4b6-a6ad-4a25-82cd-5044007589d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3f8ede-a941-491b-b9f6-b6ad6e992580",
        "cursor": {
          "ref": "771a5ce6-3650-432c-a2f0-42058e76fa82",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "03655e57-2c4b-4dcb-a2d0-c5e63bdcfac2"
        },
        "item": {
          "id": "3b3f8ede-a941-491b-b9f6-b6ad6e992580",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c56ab87-fd63-4023-85e7-78b2cff405a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a819270-35fb-4f82-94d2-ed5fafb0cffc",
        "cursor": {
          "ref": "050a6cab-7b19-4617-9e91-8f7840e84447",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9dd4a377-e88d-4b78-bbf2-c4cff7b80eae"
        },
        "item": {
          "id": "5a819270-35fb-4f82-94d2-ed5fafb0cffc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6534895d-616d-4650-b27d-9c93db293ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed179cad-8eb9-40b6-99f8-02a72fa957e1",
        "cursor": {
          "ref": "cc87f133-4554-47b9-9467-617046da8d4d",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7e802ba8-dab5-47ea-af77-cc7bd7166328"
        },
        "item": {
          "id": "ed179cad-8eb9-40b6-99f8-02a72fa957e1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2816b028-b436-442c-90d0-3b9c14ba0c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd1e982-c2c8-4fee-99d7-06b117e38fdb",
        "cursor": {
          "ref": "5c6805a9-8b73-4349-8788-72d4fa46d638",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0b313618-206d-4263-a0cd-200127feeee4"
        },
        "item": {
          "id": "3fd1e982-c2c8-4fee-99d7-06b117e38fdb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4ce6bb90-c5b2-4332-b33f-1f9ff59c994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c128b6-d8e7-4bee-9ebf-914c965c5886",
        "cursor": {
          "ref": "459ed804-7147-4d37-9b96-be0ffe07dfd9",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e6066e9-507b-48fa-9508-0d4a2ea92776"
        },
        "item": {
          "id": "05c128b6-d8e7-4bee-9ebf-914c965c5886",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d13d1a6c-e3ad-40b4-9026-8d3f71e65c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9f3e1f-a67f-46fc-be9f-395abea92743",
        "cursor": {
          "ref": "36ae85da-5395-48f2-a97a-af78f461b47a",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a201f1da-7ae9-45c1-b63b-8178f2908684"
        },
        "item": {
          "id": "1b9f3e1f-a67f-46fc-be9f-395abea92743",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f4545e08-54db-4a83-b8ec-2a3ca7d9bbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589666db-2bde-48bf-a7fb-31d53ba64a9c",
        "cursor": {
          "ref": "e4310101-0c67-476e-bc23-c68b2aa9bde0",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1fdb4bbf-615c-4714-826a-973588e69d6b"
        },
        "item": {
          "id": "589666db-2bde-48bf-a7fb-31d53ba64a9c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cb50dc58-b3f8-4bd5-a455-9176f9379da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264fe8ff-9f9b-4a12-9424-34af2afacfe2",
        "cursor": {
          "ref": "89f08094-d417-4ad3-8db6-9204eeb414c7",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "317fb1e7-ca05-452d-a89b-27e7e2b1f244"
        },
        "item": {
          "id": "264fe8ff-9f9b-4a12-9424-34af2afacfe2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c549ee00-d601-4dde-b3ea-9cb9bbc9beb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559a99a7-dd3f-45cd-aeac-b993af3c9c77",
        "cursor": {
          "ref": "e06d2dc3-1355-440f-8a57-c981e7e68a5c",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a105a9c6-9f8d-40d6-89d2-5c599708d266"
        },
        "item": {
          "id": "559a99a7-dd3f-45cd-aeac-b993af3c9c77",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "42d61d59-3cd3-438d-9218-29e2d3d82e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cfb1c3-ada6-4f3e-a7aa-5c161b631eb1",
        "cursor": {
          "ref": "eb10c17d-8c67-4ef9-b5aa-745a7b5aae1f",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0b43046d-5fac-48a2-bcd5-1cbb080f04a7"
        },
        "item": {
          "id": "03cfb1c3-ada6-4f3e-a7aa-5c161b631eb1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7342770-e397-40b4-a3c9-ba6d2d1f1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689595a0-18fa-4c01-8298-96c8780cefb1",
        "cursor": {
          "ref": "bf30bc65-d99a-4e90-b3e8-33c63de08aa1",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "64cda2f4-0375-406a-9330-84aaba911831"
        },
        "item": {
          "id": "689595a0-18fa-4c01-8298-96c8780cefb1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d8c1552e-7eb6-42b4-9665-36fda12ad80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe47724-2746-43f1-b134-2432ca3820b3",
        "cursor": {
          "ref": "a502ccbc-d8e4-4d19-947e-7d4500b831fb",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a02cbd76-989b-4722-8e8c-d5e27d65d2d4"
        },
        "item": {
          "id": "1fe47724-2746-43f1-b134-2432ca3820b3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7b39fdfe-c325-4975-8b7f-0b9a300b1edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2819428-cfe5-4af0-9af7-8b2373e4df52",
        "cursor": {
          "ref": "5b1a2ed0-e4bb-4b16-978a-8ce20966f641",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c9d37f61-106f-4c0a-9d56-7fe6e05f3101"
        },
        "item": {
          "id": "e2819428-cfe5-4af0-9af7-8b2373e4df52",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eae49042-2ee8-4956-86c7-64709a6c86bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b34fd68-0841-4f75-b755-9e4deb0bee0f",
        "cursor": {
          "ref": "bd8ffeff-5d33-4042-b213-9ff0b4393c5b",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e0ab9d9f-d9ad-4552-9ecb-2f074bb496a6"
        },
        "item": {
          "id": "4b34fd68-0841-4f75-b755-9e4deb0bee0f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2159aaf9-13bf-49a2-8ef0-333b08c9ef23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53976db1-381f-4bcb-b73d-65f50a6d22e9",
        "cursor": {
          "ref": "8fa2b197-5df0-4106-912b-209d4d14917a",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cb56330a-db31-4376-a2d6-fbad9f28aa04"
        },
        "item": {
          "id": "53976db1-381f-4bcb-b73d-65f50a6d22e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "75838274-01c0-4f0a-a3df-d9ba5cfbb2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e922f7-9e9d-43d6-9fe3-ba353efe1492",
        "cursor": {
          "ref": "6db8682d-2a0b-4bcc-86f5-a0ee78f75536",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e0be0aeb-f3c6-4938-b39a-7d066aca9c3f"
        },
        "item": {
          "id": "62e922f7-9e9d-43d6-9fe3-ba353efe1492",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "171908b4-d6d4-43b8-b6a2-7b628683eaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deabdb52-3827-488a-800d-369839143b73",
        "cursor": {
          "ref": "3dc9626d-6528-4a4d-b45c-e1681c74ef98",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "543e2b70-83c6-4224-a165-c162e2e54e31"
        },
        "item": {
          "id": "deabdb52-3827-488a-800d-369839143b73",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3688cc33-8471-416d-880a-97fe10b2df95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331af52-8e07-4567-859e-fd21bcf319d4",
        "cursor": {
          "ref": "21f70d30-959f-4712-be06-e6d61f5793af",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0360f7c4-eafe-42cc-b295-24f0715388e5"
        },
        "item": {
          "id": "6331af52-8e07-4567-859e-fd21bcf319d4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "47cc698c-b460-4514-9193-9f735164839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca33189-0d05-4670-9350-dd12bf94ddc2",
        "cursor": {
          "ref": "d1c13405-d72f-4e48-84e1-a5f9a2d79839",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d621e767-29ae-473b-9f0b-01cc58cd643e"
        },
        "item": {
          "id": "6ca33189-0d05-4670-9350-dd12bf94ddc2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5d3b2971-91cf-4eb1-b3b8-921efdbddd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aaa7b3-24a0-42e2-a764-ba9e226059f2",
        "cursor": {
          "ref": "4407afee-9f8a-4c3a-bf2f-0db8ddf8523e",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "325ecec0-6a4a-4c8b-9619-1a126bcfb639"
        },
        "item": {
          "id": "92aaa7b3-24a0-42e2-a764-ba9e226059f2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cbb7b099-0b30-431a-867e-b7d7ecc8efbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455d79a4-d1c1-4db0-b89e-ec9f3f4aeb70",
        "cursor": {
          "ref": "681ebd72-7046-4fbc-87ea-219e57f062fc",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e02db6e6-73ec-4ca7-b3f6-e14648cf07ee"
        },
        "item": {
          "id": "455d79a4-d1c1-4db0-b89e-ec9f3f4aeb70",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "79ca176f-0595-486a-9432-62830589a364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266a2caa-2769-49e0-8439-bb01f25764f6",
        "cursor": {
          "ref": "a517e7da-7636-417d-bcca-672ee135d2b7",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "70612b2f-2d24-498e-913d-b14cae8a440b"
        },
        "item": {
          "id": "266a2caa-2769-49e0-8439-bb01f25764f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe34e7cc-d694-407b-b979-b5c99f38c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b8cf12-123f-4658-90b3-0415f49626fa",
        "cursor": {
          "ref": "cb6bc859-a01a-4f6a-b6fc-76dbf9e956ec",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "27a35810-c152-4296-af55-09be57f9ea6c"
        },
        "item": {
          "id": "40b8cf12-123f-4658-90b3-0415f49626fa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eea3b5ff-215b-4019-ba72-ed38f9d32067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a7e4a8-b0db-44f1-b12b-5caec0d8c0d8",
        "cursor": {
          "ref": "34d9f4e9-beea-4034-83b0-f5b0c820db07",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "82ecf028-d9bb-4da1-beb0-15ed356355ec"
        },
        "item": {
          "id": "b7a7e4a8-b0db-44f1-b12b-5caec0d8c0d8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2dc35ad4-2b4b-4359-959f-d7b7385ca030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2473ae38-2417-4fd2-ae76-3e9ed22ffd58",
        "cursor": {
          "ref": "b87a2abc-a609-4a86-bf6b-ce9d586b1aef",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9acb3472-36e4-4f07-95b9-b6b82bd05fee"
        },
        "item": {
          "id": "2473ae38-2417-4fd2-ae76-3e9ed22ffd58",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b33a455d-1632-4f27-b611-a46911b786e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bd3edb-96bc-4ca5-bd0b-3a509dcf619a",
        "cursor": {
          "ref": "8338c5e1-20c7-4424-97a7-a1ea631c1779",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d1f4fa20-957a-4b12-9480-eb840569a7d8"
        },
        "item": {
          "id": "f6bd3edb-96bc-4ca5-bd0b-3a509dcf619a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7946a539-8e8c-4a72-b1d9-53bfbf715fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a755f70-9912-4c57-892b-e30981e7e25e",
        "cursor": {
          "ref": "6f4c138d-8313-4c01-99dc-002c8476889a",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e1576354-821c-40ab-9a4d-035961c62e82"
        },
        "item": {
          "id": "1a755f70-9912-4c57-892b-e30981e7e25e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f5c7bcc-2144-4a6e-b74d-f96961c4f196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb8801a-6664-4aa3-ba8a-1c9c1efdf150",
        "cursor": {
          "ref": "691bd08b-bbcf-4ff2-b9f1-4283eeeb06e8",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "822bbe32-c790-42be-862e-93c7d8eaa97d"
        },
        "item": {
          "id": "deb8801a-6664-4aa3-ba8a-1c9c1efdf150",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "81227b2f-f838-4732-a984-9b0b42b608a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24464d3b-5820-4067-8a5f-19465d7ebd55",
        "cursor": {
          "ref": "0e01394a-6e17-424f-a593-b327b4c75e7e",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4721786f-1c67-48a8-9ce7-f4b6b1fee9ef"
        },
        "item": {
          "id": "24464d3b-5820-4067-8a5f-19465d7ebd55",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9dcf52e9-411e-4c5f-9821-b8d42820a06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e0eb7a-820b-43ab-8090-8fd2231230a6",
        "cursor": {
          "ref": "b041bc2d-b0a7-4870-913f-0685578e99b1",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1e945305-c9af-4752-9fa8-17cd9e6090d3"
        },
        "item": {
          "id": "73e0eb7a-820b-43ab-8090-8fd2231230a6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d57b4df0-cfd0-4080-85d1-7ef235955ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80102c8c-e2d3-42a9-b37e-8fd551289072",
        "cursor": {
          "ref": "7831d789-838d-4aa0-886d-df1c8f016263",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0651e5c2-f284-4851-a0be-29507df8e8c5"
        },
        "item": {
          "id": "80102c8c-e2d3-42a9-b37e-8fd551289072",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f175eaaa-1c43-4616-bb95-7b7cb83a09a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18da2ec2-196a-401c-8f30-f0a7d7e8d5ce",
        "cursor": {
          "ref": "1ca8d3ed-db6b-4fd7-826a-8e9b415a81cc",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c53494fb-071e-49d0-bd99-580a7e232af2"
        },
        "item": {
          "id": "18da2ec2-196a-401c-8f30-f0a7d7e8d5ce",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c9fb5fed-1b14-4eea-a817-c26fcf3880cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f596bea-dba0-4079-9d3b-e12f115077de",
        "cursor": {
          "ref": "06e39083-f00c-4d56-a0b4-9142dc7911ff",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc780a39-0bb0-4b46-b65c-889efd5e4bc0"
        },
        "item": {
          "id": "7f596bea-dba0-4079-9d3b-e12f115077de",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "daef7d1d-4f1f-45f2-a870-23d2ceaa7b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48523fa7-723d-4fe3-b931-89a67d63a3e0",
        "cursor": {
          "ref": "682e688b-f91b-4b96-9873-7d3700adf69e",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c4f11cd3-84ff-40cd-b74c-b24a8d5ff5f0"
        },
        "item": {
          "id": "48523fa7-723d-4fe3-b931-89a67d63a3e0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e9fedbf0-f47e-436b-bb2f-61f9068ce240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24bbfd8-df22-4b06-ac08-2da0b2007c18",
        "cursor": {
          "ref": "541c1229-96ac-4bf0-af88-54477be2df9f",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3f8ef71e-568e-48e0-b3f8-83e1e1973196"
        },
        "item": {
          "id": "d24bbfd8-df22-4b06-ac08-2da0b2007c18",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "11048a27-f12c-4e49-9e5a-d1a2546c475c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8120d2-11d9-4653-9640-023ae3ce0436",
        "cursor": {
          "ref": "3ccf86a1-e926-43a3-9019-551bfb077d05",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d03aba4-8e0d-4f4e-b12f-b4b8e3c3e34b"
        },
        "item": {
          "id": "6b8120d2-11d9-4653-9640-023ae3ce0436",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "03e4d71a-cdb2-4b77-9a38-3fbab91b6623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c765ea01-477b-45b7-9709-ff58de2ecdfd",
        "cursor": {
          "ref": "5821cd83-9b48-4399-9a80-d72eb1e276af",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "302f1926-2cc7-477b-9eed-0fc8529bea93"
        },
        "item": {
          "id": "c765ea01-477b-45b7-9709-ff58de2ecdfd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "11ba82f5-ac39-4377-a08e-f52c7764153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325c628c-9574-4399-bc33-11dca5bae350",
        "cursor": {
          "ref": "1094e4d0-0d15-41da-a7cf-6a57efe1d7cb",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3859cf08-7eb6-4b97-9726-d4d79d3d0a6b"
        },
        "item": {
          "id": "325c628c-9574-4399-bc33-11dca5bae350",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "224d51c0-158a-41ba-86e5-e6023b3988bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992d4237-a536-4ba4-83f6-7dc205553ee2",
        "cursor": {
          "ref": "afc07afa-01ac-4dbd-a748-4f2edfe43da8",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "be6eea60-aad7-453f-a2a7-1223e61593f4"
        },
        "item": {
          "id": "992d4237-a536-4ba4-83f6-7dc205553ee2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "71aae4dc-8417-4ad6-b27c-11f8279e04e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb4997a-1e1b-4487-b337-53876281e660",
        "cursor": {
          "ref": "4d1a3ece-1f3e-46e9-805e-1a15b19335e6",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5ce452b4-1ed0-4585-8445-341a7b97142b"
        },
        "item": {
          "id": "bdb4997a-1e1b-4487-b337-53876281e660",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "df7d59bf-06a1-48ed-9dd7-77de110be9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe8e766-e826-4a97-bc46-de246c3af04a",
        "cursor": {
          "ref": "172782db-1559-47af-a76d-0e9af971c9b1",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dcba26a4-f854-4206-bd2b-6295062d63eb"
        },
        "item": {
          "id": "0fe8e766-e826-4a97-bc46-de246c3af04a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "923891a1-249f-494c-b366-f02591a8b61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c27556-d34a-423a-b3b4-dee294b26b27",
        "cursor": {
          "ref": "c302aa87-071b-4bd1-a941-810c08b2ffa3",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ef8ca4b8-df6b-41f7-9a14-bfa0fcbb60db"
        },
        "item": {
          "id": "80c27556-d34a-423a-b3b4-dee294b26b27",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fbf8e9f3-3186-4222-8139-930a18eaa1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94e8dc8-5d78-4a9f-9f1a-1fa803c9e41a",
        "cursor": {
          "ref": "92c7dc48-9c9f-4468-9393-d45a1021a4c0",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d172c480-4261-4ebb-a9f1-3001d767b8bc"
        },
        "item": {
          "id": "d94e8dc8-5d78-4a9f-9f1a-1fa803c9e41a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b22c2a87-c68a-47c0-bb9c-9c822e6f67c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4651f-ed75-490b-8e1b-e1f33b3114b1",
        "cursor": {
          "ref": "d859ebdd-4176-4b45-a354-20fe9b302b46",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "268e3dd6-1171-4f05-b5f7-61723549c5cf"
        },
        "item": {
          "id": "7fe4651f-ed75-490b-8e1b-e1f33b3114b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0f364a16-fccb-42e5-8fa6-cb173ce4d7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3784f8ac-61a2-471e-93a4-95d275374a99",
        "cursor": {
          "ref": "c2c8ea97-3ae2-4ef1-861b-d7b0dc2e775c",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "af0eda22-e77d-4423-a08b-a90222fb79af"
        },
        "item": {
          "id": "3784f8ac-61a2-471e-93a4-95d275374a99",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "55d9ae49-c738-4db3-8717-bb226bc98245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c54bf80-fe9a-406e-a6a2-c96299f687d6",
        "cursor": {
          "ref": "3a5cfc1d-2560-435c-8b9d-37d5a5144324",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bb8b07b1-d484-48df-93e3-2714b4472707"
        },
        "item": {
          "id": "4c54bf80-fe9a-406e-a6a2-c96299f687d6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7a3e39d3-7cb0-46ce-b7ec-b3f5b45b20c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6342e0-ea46-4ff5-8c8d-d27cef5af087",
        "cursor": {
          "ref": "094bc3d7-e89e-4573-b418-d15c7e66bd3e",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aa4af5d1-3cd6-4157-b711-2b8efb88bbd6"
        },
        "item": {
          "id": "8b6342e0-ea46-4ff5-8c8d-d27cef5af087",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "664b229b-dc50-4891-8c30-34130222d5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbf2de9-db76-4d76-8a20-6f669d7b516e",
        "cursor": {
          "ref": "89fc16cf-94a7-4048-a103-db86a194d917",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fae3cb4f-8461-43e6-afeb-8dfee8b6f4c4"
        },
        "item": {
          "id": "cbbf2de9-db76-4d76-8a20-6f669d7b516e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e74900cc-0b06-4f64-97a2-caaacc23046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0654df91-5fd8-49f9-b3a8-55ff9e25d5f7",
        "cursor": {
          "ref": "5627605f-1c9c-4437-a766-07fb91be86ea",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bb8169b0-520c-402f-90fe-b5170a2680a7"
        },
        "item": {
          "id": "0654df91-5fd8-49f9-b3a8-55ff9e25d5f7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0de706ba-e266-488c-9f02-c283ca1810f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee5aaf3-45ee-4e2a-ad41-2dad7d9f08ce",
        "cursor": {
          "ref": "f7609fa1-3509-43f7-8460-f4e65d5abfb7",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "83f4d1bc-5488-411e-ac7c-7dcc47ff2370"
        },
        "item": {
          "id": "4ee5aaf3-45ee-4e2a-ad41-2dad7d9f08ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "16637a45-f007-43ea-b145-013b43594ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41acfcf1-9c7f-412a-bc84-204cf51789c3",
        "cursor": {
          "ref": "456fc5aa-d36e-4f98-a65d-eea31c7bcb56",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8f540520-cd18-49a9-8b5c-f9b1d700d8e6"
        },
        "item": {
          "id": "41acfcf1-9c7f-412a-bc84-204cf51789c3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "134cd716-f6a1-4cdc-994f-96376ed8d537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1948beb4-fc00-4cd3-9fb7-5d150e194f37",
        "cursor": {
          "ref": "9a6fcadb-03a3-4e49-858c-66a637e9b58d",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2868bf56-a7b8-4e61-a546-23d305960992"
        },
        "item": {
          "id": "1948beb4-fc00-4cd3-9fb7-5d150e194f37",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "930b119f-f235-49b4-a8eb-06e7560d3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec4b830-842a-46c7-97fa-b5ef1ae5f492",
        "cursor": {
          "ref": "2d6b4b0b-b9aa-49a8-ab0f-5218db1a6687",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d84ecd11-37d1-46a3-8d5c-4377c7289119"
        },
        "item": {
          "id": "2ec4b830-842a-46c7-97fa-b5ef1ae5f492",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6fdb9176-dae1-43dc-be97-f335a45a502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde57b1d-dd8f-4fa9-8211-8a9165189117",
        "cursor": {
          "ref": "0d3b0ffa-7875-4f93-9d51-88804358efc4",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7c97ba4e-1694-4a70-8a91-8b7ef36cbcd0"
        },
        "item": {
          "id": "dde57b1d-dd8f-4fa9-8211-8a9165189117",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6bcd088f-cc74-43c1-8eb4-815de265e483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c73ef3f-f4b4-44e4-82cb-a594739db299",
        "cursor": {
          "ref": "c5b096a9-0858-45d3-ad55-a6429b828ea1",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7ad6bd1f-2b7a-435b-b3d8-2a034ff3df6c"
        },
        "item": {
          "id": "7c73ef3f-f4b4-44e4-82cb-a594739db299",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c9fcfe12-f351-44e8-9215-26cc0b049c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61284438-95be-4eb3-bcf0-750ece0701d0",
        "cursor": {
          "ref": "d3cd39ad-55e7-4c22-ab08-b844d6a7d3a8",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8289737-f169-4a4f-8fee-12077e842041"
        },
        "item": {
          "id": "61284438-95be-4eb3-bcf0-750ece0701d0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c2762da4-9b48-4268-9c73-5ebf681c9f12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d86bea-fabb-4616-b911-5dbaafba99ff",
        "cursor": {
          "ref": "6fbc994f-c80c-4f2a-9b97-b2d9d4324413",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f2d70e7f-67cf-40ca-8379-79592b39a5f7"
        },
        "item": {
          "id": "50d86bea-fabb-4616-b911-5dbaafba99ff",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "dbe4a5c0-abe2-4fe4-9a43-68307f94b050",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 285,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15238326-42b3-4680-91ef-41b38861a61f",
        "cursor": {
          "ref": "853c3bc8-f278-44ec-a093-4f5baa2c1f53",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef4d781a-0231-45ce-8743-810f124e0bb6"
        },
        "item": {
          "id": "15238326-42b3-4680-91ef-41b38861a61f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2002879f-4e96-4085-9a31-74d2071ee860",
          "status": "OK",
          "code": 200,
          "responseTime": 439,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2dd50a-1b10-428d-a1f5-303bfd7b1c5b",
        "cursor": {
          "ref": "6c830dd6-7ba0-44e0-a894-35b974d72739",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "75e136ec-0482-408e-aac1-da0ad2f3ee3b"
        },
        "item": {
          "id": "ca2dd50a-1b10-428d-a1f5-303bfd7b1c5b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69d07472-c32b-46bc-90ae-897d35f632fd",
          "status": "OK",
          "code": 200,
          "responseTime": 2321,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d46b13-db2a-49b5-95eb-f7c95ad98725",
        "cursor": {
          "ref": "85936eb6-68e5-405c-a313-e2ec0c35ec8f",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd3eb99a-9beb-4f8d-8d25-5d6a4b1fb179"
        },
        "item": {
          "id": "65d46b13-db2a-49b5-95eb-f7c95ad98725",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "60a58668-dfb8-4a05-9753-a3f2159ccaf0",
          "status": "OK",
          "code": 200,
          "responseTime": 2299,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5703f2-6111-408d-9e92-754ed96a028d",
        "cursor": {
          "ref": "1f381990-bf92-4477-bef8-380cabf8b9bd",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d92cb4b7-8e03-4b27-9542-abb15b9df067"
        },
        "item": {
          "id": "df5703f2-6111-408d-9e92-754ed96a028d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c48bf9f7-ba3e-498b-96e6-c6196d27bb51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5703f2-6111-408d-9e92-754ed96a028d",
        "cursor": {
          "ref": "1f381990-bf92-4477-bef8-380cabf8b9bd",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d92cb4b7-8e03-4b27-9542-abb15b9df067"
        },
        "item": {
          "id": "df5703f2-6111-408d-9e92-754ed96a028d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c48bf9f7-ba3e-498b-96e6-c6196d27bb51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5703f2-6111-408d-9e92-754ed96a028d",
        "cursor": {
          "ref": "1f381990-bf92-4477-bef8-380cabf8b9bd",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d92cb4b7-8e03-4b27-9542-abb15b9df067"
        },
        "item": {
          "id": "df5703f2-6111-408d-9e92-754ed96a028d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c48bf9f7-ba3e-498b-96e6-c6196d27bb51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d43d47-39dd-455e-8c99-cb1cb1edc5ca",
        "cursor": {
          "ref": "4e0f220b-42f6-4f1b-a277-af9145ee1dba",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "60f0a45c-ffaf-4355-8855-1802014d8dd0"
        },
        "item": {
          "id": "d9d43d47-39dd-455e-8c99-cb1cb1edc5ca",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "609f07e9-5de7-46bc-aa76-07c6c79c5618",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 421,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165302f9-0129-47c9-b991-782e4d697a96",
        "cursor": {
          "ref": "744758e1-3b4e-4fb6-a5d8-824144991abf",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b91c747f-e41c-4304-bede-bae0450fe9af"
        },
        "item": {
          "id": "165302f9-0129-47c9-b991-782e4d697a96",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cfa89e37-93c3-4eaf-a53b-c7b8f30d9411",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165302f9-0129-47c9-b991-782e4d697a96",
        "cursor": {
          "ref": "744758e1-3b4e-4fb6-a5d8-824144991abf",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b91c747f-e41c-4304-bede-bae0450fe9af"
        },
        "item": {
          "id": "165302f9-0129-47c9-b991-782e4d697a96",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cfa89e37-93c3-4eaf-a53b-c7b8f30d9411",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cf0b02-e445-4923-8917-29c9177ff638",
        "cursor": {
          "ref": "4e6b9288-09ca-4e31-be7e-5d8532cfb691",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "66f9745d-a6bb-4571-ab2f-e504d0e2444f"
        },
        "item": {
          "id": "06cf0b02-e445-4923-8917-29c9177ff638",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c87b901c-77a0-4df5-8a38-2afa0e213076",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 924,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54522511-879c-4c3c-be28-1118c6cf6b2b",
        "cursor": {
          "ref": "5936bf39-294f-40fb-b92a-cd33c98877ff",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "27da57de-2e87-4cb6-9b0f-8f21cc751bd0"
        },
        "item": {
          "id": "54522511-879c-4c3c-be28-1118c6cf6b2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c42750a0-7008-4412-8783-0bf87d0331ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54522511-879c-4c3c-be28-1118c6cf6b2b",
        "cursor": {
          "ref": "5936bf39-294f-40fb-b92a-cd33c98877ff",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "27da57de-2e87-4cb6-9b0f-8f21cc751bd0"
        },
        "item": {
          "id": "54522511-879c-4c3c-be28-1118c6cf6b2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c42750a0-7008-4412-8783-0bf87d0331ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae1e39-2f50-491b-8e08-c36c7bb77648",
        "cursor": {
          "ref": "c72c08eb-100e-4467-8fad-57a108741b81",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e47abca1-1d62-4529-acae-b20e870d1d72"
        },
        "item": {
          "id": "36ae1e39-2f50-491b-8e08-c36c7bb77648",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a91b73bb-94df-4901-92b1-2865537229be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 500,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}