{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "92215c30-cafa-4111-b377-d93d1e333beb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c92b7903-51aa-4a1d-87f9-b481fc93d999",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59d246cc-36bc-4049-a65e-eacc325608f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3c3e44b0-67b7-44e8-b198-26f2ad036134"
                }
              }
            ]
          },
          {
            "id": "44cbc89a-0415-411f-b6c6-cb0323c6e40c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6411ce0d-0203-4587-bc8d-ba295ff7dfc4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1b95fa58-676f-455e-99cf-bffb4872b9ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "96bb730c-e6c9-4a65-ab79-b6da61b7940e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0c6c021b-de8d-490b-88c3-fdba362f9106",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cd2330e-93ec-45bc-ad6c-048503559cfd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "824dc8ac-88d6-4983-8305-d535824f0b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcc64f8d-0d88-4473-910a-b8b3743252e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6eee3220-c53b-471f-95a7-d0f84dcb0a66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b675cc8-b30a-4c75-b5ab-2a2514a8de3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58891d65-ee12-45b6-bf4a-31edbef2ee62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db338907-00be-45ba-82bb-e569f049a162"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cea945fb-eea4-4968-837a-594c060c0b4b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3c6b4ec9-005f-4b5e-b2b5-42629c13842b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3652f937-a8b8-483b-b5ba-4cd85cc1cb30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6327c773-aa02-49a2-bb58-da6e308b5f06"
            }
          }
        ]
      },
      {
        "id": "d90e9ab0-526c-48df-8415-c9780b398261",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0d63edca-236e-4989-a8d8-c86cd0a77a66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ce90aca-929b-4e5b-9c0e-06dd699de85b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31156f8e-2c88-4b88-8c26-b5e264bb1677",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9f9980-512a-44ec-afcb-516febd31f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "486b45dd-3b07-4406-941d-21d8959622ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2891dacf-b2ae-4f73-b9a9-3e17dd2def7f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4dae2f-3b2b-4822-99c8-d6f53e3d34ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcaf42d5-99f0-492a-b131-20b0a055b51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e47622-d3c8-419b-8452-66e131f203f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618534f5-5c41-4734-93b2-fb6a06116ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9bf0961-323a-4099-b9bd-0c0ee7089b0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73091ca6-6c0b-47d1-927c-0266358dd43c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddedde6f-2ecf-48d1-9158-13b9632bbb9e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e0e91-622e-4454-97c5-19405a4ffa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cffa2224-9ab6-41a0-9076-be4295310f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0c62a4-8c79-46bd-93f5-9b0448ecd0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f71b38-bc45-4764-8f23-5b289f1c2f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff10efd-9ee4-40a1-8a89-9cff8b1350be",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c58478c-ab1c-40be-a1a9-1f2d55bef19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bead54c1-613d-4f77-b926-66386a41cc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0c7435-89fd-4f87-af64-36fe58ed4e28",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "78edd60e-f423-4861-924e-fad97bd83682"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "77cd28c1-ffed-4cd2-930d-20e4153c36c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "935e04cf-b720-4464-9da3-cf761bf1253f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73bb4011-2908-4088-b6c4-fc484f0ca560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5685482-d014-476b-83b9-40b9e2c3ff67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f67c15c1-2551-491c-8463-e168a2e3f441",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5c5c04a6-d2d7-42d8-a18a-b8dca0af04e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b66f246a-5ea7-4fdf-b721-bea75d7e3ead",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31d5e5c0-ce4d-46b1-923e-363b511cb2e1"
            }
          }
        ]
      },
      {
        "id": "c1ac4fbd-5fc0-4f11-8aea-0379cd6c5403",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "768374f7-5d63-4ff9-9188-73a242a945a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4120cf6e-49a7-4ed3-a517-88e3d8a63a3c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cc726da3-b287-4960-8ca8-fab5fe2b745f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f2552-fca8-4631-a779-886b88eba741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca0cd7-b9ea-409c-829d-5b0e7404556b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf52a5-b0eb-4ccd-9880-e878e1138651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8aa6d0e-4225-4ed8-9d16-0a813a4a6c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484e1d61-bc4f-4e6f-94b1-246c1b92103d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc05448-ce36-40f1-81aa-b63b67aa7658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8eb01c-fdf2-4afb-9f61-58ad8c372a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25173fc-701f-4bed-926b-286e811b59d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f179c10b-52d4-426b-b13f-e65097629881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa30aef-4fd6-40df-8c34-84750ac3d7d4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070632e0-3ecc-4a43-a0cb-df394a1d6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069dbae8-8b52-484f-8100-f5ea9f8e142c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed7ba47-3d66-4b0b-bd70-a8e55ef37c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6663731-41ac-41fc-be12-e3c30dd6f675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4024df1b-3c11-42a0-af68-cec8db66882d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc4002b-5cf2-46ba-9055-3cfbfacb726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a639598c-962b-4966-8721-ea0ced992b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d4d9a0-dc74-471e-a3b9-a30d3f7b1398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc1fe9c-5fd3-4205-9708-0e92ab5eabd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ec8cd0-f1a1-4673-801f-52e63005eff1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925c181-e2fb-4840-973e-7bd1d2549f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566c2184-bbef-435a-b275-f6f508c009b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a93dbdf-4321-48fa-8c6d-80a6ca41b05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce11f1d-5fdb-4ab6-92b4-e210e2e42631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bdbcb8-48ad-4625-8865-b3baa2e56928",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d11e7c0-3d89-4840-9606-961e6e9f076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcf2662-5380-477a-a686-0f9544b7305e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8f1c76-3851-480e-8314-5652890fb565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d09475-4b63-4b3c-9f99-ceae3058e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e24aa97-06bb-4c62-b933-6d0163374585",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84330ca-1f88-4a5e-b79b-3f9ef84ee482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69812113-7e19-423c-93e0-18d1a0e930e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cc0558-2844-41d2-abf5-8bf43bd0228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "804169bd-0d71-465e-9caf-f024d2edfb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dc75e7-5a78-43bd-9064-6f684d914759",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ada80-f8bd-4761-a346-aa4140e4aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b303c1-f2d0-42b1-9d4c-01298eb4a7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582c3c78-3b3d-4185-8f9f-2f5290046dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c44c6c6-61e3-46f5-a7a9-c55f4caeed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8b945-4f58-4dd2-8c5c-088a2e6c7bce",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea902458-7e12-4e94-a10c-0198996fbba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38d5997-9723-428d-89a6-405b7f4c4042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7676fc98-fd8a-456a-b2bf-68d5c86cadde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "663fc4ef-2407-4dca-b676-b980a1bb8ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b2db11-7a4c-4e4d-b233-e498a00f5e3c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b3ef40-695b-4a35-8f50-faf615c7d833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01007574-19ab-404c-891f-b6691227df07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f06ceb-3e0b-4215-9f89-7aadae682681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da7d711d-6d85-42b0-8fb9-f84a0dd1a8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d59ea-7ba8-48e3-b6c0-17f4c25accb4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec61be0-1d0b-41bc-99aa-0bb19b68c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f6fe1f-8bc6-43ac-aa6d-aa8155916163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ac12ad-1887-4729-8515-61a429de7cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bcda36d-102f-496b-b754-dbf9386a877a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa927452-0f35-4843-ae3a-0f0a01ad67bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0d116d-6ea5-4470-8239-fce041d87f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb48d51-dd8f-4afd-aaf6-a8718de2c5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b52c59-8ea1-4925-bff8-f5081f80257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "327f09a8-f12b-478a-abad-488478ed35cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3657d7db-6128-4115-b1ac-e1989c2c0754",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb22ea5b-59c4-40f7-8629-dfc2c099c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171bdff2-a8fc-4f55-8545-7114aa5a707c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d161d4-3845-4ff7-b464-50d0a0cb3c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e996c80b-f90f-4fd0-a742-71ec84aa6ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9058ad8e-5204-42c6-8105-9f3129b4353c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c2549f-3c38-4668-b6bf-c1ffb92792ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab71fa9-20fd-406c-abba-57e2837c4494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaf0553-8005-42a5-bc63-4adfcfbe7a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05169bf0-0a49-437c-aa6f-e2e3b732abfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f1191e-669a-4252-a464-325a745e37be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc8844c-83ba-4de0-9224-f2e54b15be5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950a7de9-e133-43f5-a5c1-78787b69532c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b486e00-491d-472b-9410-229a8b6fa476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a3c7006-b8ce-430e-b7a7-81c3c9d176f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e102cc-6ef3-4ba9-8870-397599b06690",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58840f93-ba26-4021-8fe0-42f6e6713098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e18264c-4282-4971-bd12-161da9f17c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cec9a0-7cfb-4cba-b330-7293d08c5a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226bb6d5-3d5d-4f09-adb8-0fd27ed2e3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199c3b12-4c8d-4908-a2e6-a3ad8c00cb7f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3657c4a-cc19-48e3-9b5f-4ddc88af6699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dfed12-1871-4635-8968-649d08d5d0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1d0a6-4344-4097-8b4f-12718d3e3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "974bb7a8-f283-4a64-aaa0-c7dd0d279c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcecf87-f896-4769-9d5d-4e74e32b5234",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e421cd-e69a-4653-ac0b-eef1b26442ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb0898c-b456-4428-8393-8744dd52dbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f07291-e6cb-47c9-a341-462f59b9d98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f3dcce-820c-43ea-9009-b60b6c84b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ed1809-2fa0-4a50-9e1e-950c87371946",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f91d5-7c24-4b26-ad0a-8b7ca49a805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b876a9-baa6-4b6a-9d1a-4763534e47eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad86ddf1-9025-47a6-b7f4-4eebf1e465c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "530258eb-daa1-4b7c-9dae-c05523140868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47440122-1c26-4ac5-ab94-87290d724540",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb9731c-07de-4783-9270-8a78bdbf8e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53728bf9-2494-463b-848f-1f4205f76304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21227ad-199f-47c3-8f7a-5437288a6931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c138622-656b-493c-baa3-852be5bb24a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee74ffb-b83b-40f3-8427-4a55b995a08e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7548df19-e530-42fa-b03f-ae19364326f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0e2c41-89b5-4b78-9395-baf7112b333e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a824f5b-d1ec-47ef-ac4d-4c7da85e59f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e9caf5-a880-4c9e-95db-57915b96b81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeff352-9e54-4860-8f7c-0adc4ed11f88",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3589c51c-584e-4dfc-97d7-a030c2c650e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0354f38c-9fe9-4854-bfe1-b1e5c05b0c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688a47d6-1165-4750-8c25-cdcee51263c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1011af7-96bb-4fc7-9ecb-22d27deeb0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67238519-26f6-4890-988e-705257da4560",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84f07d5-9fd3-40cf-9265-75eafbd26e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5b9b70-68b4-4242-828d-efdf4147588e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d32a38-064b-4599-a689-b3ccd4540223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd86ddf-c3d8-4a57-93a2-620e199f6010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db27a39d-0d7f-4e77-b7ed-5b9fc9c385ea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60daec76-206d-43f7-ad26-43403b48cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63c2c26-3849-4ca2-b441-dae133a39565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b332ae1-20b2-4b13-a639-afcb9b810c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfa4a35-0764-472d-8614-d26085175fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5419e40a-e4b8-4f94-aab9-e19f75a4b95e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7267fc-b940-4bfe-ac4c-a0247a8b4882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b010803-70f2-4bd6-857d-ddc6db9cce89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa61d19b-b83d-426e-a721-38dbaac7f95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc385c6-76ec-4bcb-ae5f-c4b9412aa88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4f7f95-282c-44a1-9caf-b750a0579d92",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc41e2e-a741-4d2b-aa26-0ed706f5e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea75060-7160-4487-b07c-5f363e70af6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b47b22-b4c9-4153-9d1d-25df4cd54da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70117b66-4ef5-4219-b963-b82f32253fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a3835a-855a-469d-9e61-d02236ec3437",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4db458-31d2-47d5-9d97-17df2130af5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eae9251-6bfd-4886-bb1d-1db272e952d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d65db1-05f6-4952-9573-723f76d7fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e97752-77d1-4ee0-89cb-b868cae09bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88a3337-2608-41ef-873e-89447c1b0ac0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab9bd1a-1ed2-41cd-8819-a7ad359f0b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33457902-4ca5-407c-939a-65dcefd9274e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c4b440-bb70-415a-9084-4cbff17695f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78a019e-02a6-409e-ab9c-0a3a3d1a1f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f831c0-45cf-4915-b42d-9758e4373feb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29b45fb-11e1-410a-8c1b-426efbff97e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db47d788-e3f0-4839-b5f6-ae27567092ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7093b807-d84c-4a18-9662-a7da9b74c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed95bf37-967b-48e3-bfb2-0cd4117937eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5880474-52b2-45ef-98de-505899c8c88c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca1724a-8636-4fcb-96f3-8202eb406549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a22542-aed7-45fb-8063-f03f01c9d6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb2b3cd-6fda-42b9-807e-1b452b7f351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0240d7e5-f5d3-45b6-93d1-a75de481ea59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632a399e-72d9-4edd-b5d4-1941a293e34e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c587edd9-c301-4c09-bd98-b19750021770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac11790-1f52-4af9-af97-565f2c8e364d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3a78f9-14ad-49f4-8368-039c7c36271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3d505e-4ee2-4264-a928-5e567b8fd853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1355de-8181-4d15-9a49-d78f0e825732",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591c12f6-3005-4cc8-a181-80456482deae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd1bcd7-5c4a-4549-9109-e4ba320d4604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efacc3c-96e8-4408-9734-f6b9a1e9cea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd873be-2869-44cd-a8f5-555ba972815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cf391b-a1a3-4e83-8944-a338309067b7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630360b0-79d8-47db-bc96-07e97ee7cfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdfba97-cd37-4d1f-846e-def69e6bce80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded731a4-5015-4e6b-a030-f2f84e41887f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7630f60-4868-4dbf-bfaf-d4403e6871cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689716c1-cbc7-4a18-a8fa-5f3ff068330d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a44e01-aeac-4b5b-94fa-302c0ede049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a562f656-2819-4ff6-bb6e-120d059ab4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c1e0c2-a8ef-4806-8fc8-73fd3411325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "023bbea1-9541-4066-bea3-4941a9db245e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62241193-7d15-405d-a74c-e49f42025d50",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88991929-978b-4d68-a690-0fb40ce9c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ec93bb-7470-4399-b53c-5ffd12b98674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b39b5b6-a27d-4712-bb46-ef5419a669e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd21353-7e10-433e-8b7b-684d7efc3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27b94e7-a6b8-4cd7-b06e-c167a29af66d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3214ae31-2810-4a58-a842-a9516b9d87da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0daee328-27a7-4d41-8931-d20b79072b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b61cfcf-6b2c-4f62-ab5f-9e57fd0cc13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "043dc699-2a75-4c7f-90d3-0c4b5bc5b395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6315ce55-4f95-40fd-a82d-fdc734ed9b1f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c52fcdc-1cdf-43ea-b53b-a52c8cf7d984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66a1636-5cd6-445b-8f3b-18426ff223ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c92131-2d8e-4fb5-9c00-505b7fa1260b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2561081-a3ec-4926-94bb-b46510b4b085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4245993-831b-4afb-9b6b-1de459de6349",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bba55f5-77e3-4e14-a882-50e5abc4ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92b3a7c-8467-4efe-86b4-bbca94b9ca0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5701343b-5bdd-4a83-a036-166f117c5603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "329399d1-717c-4d11-9313-62ff3b0ceb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd200896-c9d0-4e8c-a009-8e556396b365",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0651904f-fb08-4b5b-828f-ffc382e073a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2e6f69-ffb1-4352-8db1-ff16ddba0df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfc2d6d-d8c9-424f-ae2e-41ef08685049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd00bb8-b423-4f6c-93e1-852cca6eebe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08aa276f-39f8-4ad5-abeb-d1a80694f17b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb979bd0-d767-4f48-a0fc-53d0510ef2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5473ead9-28c2-4ccc-afa1-bfdb9bd293ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1394405a-214c-43e1-beb7-cdb81e5b5ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e548f8ab-220a-427a-9874-f38ea5cecc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c7b334-9dd7-498f-a532-ab23d490327f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd86a63c-4464-41ef-8177-1193019115ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6eeac6-ff30-4c31-af17-c1845ab67c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d59767b-671e-4f1c-9d7e-8ab6415746b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4abf1731-e000-4808-98f5-3a8564f07e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb646c9b-db3e-4d22-a25c-a816222e4f3e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3013b67-396b-421c-8206-b32e43b59060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7188a5f9-efd2-4a60-9f75-75209592cceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6aa896-4162-489a-9e9f-e8b87b60b964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e750b017-a3f7-4eb5-8954-0b59d2250d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18c9389-ef89-430c-b6e0-12f65bfad35b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc895ad-c5d3-4a31-bb03-d8eefe07cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e65d2b-23da-4317-9036-14c576805824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c6c508-6411-4841-a742-97b4789f4795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea64292-58c7-4971-8dcc-34c5a2a62fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93f8269-a301-4504-8d48-9a5547a28b2b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e0954f-a330-4e58-b22f-2b9ff84d3168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f758df38-3da1-4ab9-8307-e0e435e13867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee150a-d5b4-4caa-9faa-4fbfb95cc75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "855a9318-d589-48a6-9e45-6180265efa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c935cc93-5d3a-4f21-8335-ba08b2f54b24",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df8eaa2-2372-4e31-96d1-d4f1e59e4797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dea237-5991-43a4-befa-d3150b344bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6847d9c-1f09-49e3-abd5-a5b2dcd5f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e073bd4-2517-44fa-8ecb-1da46ff3324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040546b5-7352-4c78-89ff-1de5e32c5a67",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0dbf38-634d-4ef8-94df-bce52583df21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d929fcb-1444-459c-bbbb-2dfa4f279b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937bd0b3-e78c-4a8e-a870-8518bd9a6cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afeda393-cb34-4c57-a5ba-eda053bd4b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169da08b-e2d5-4dbc-b238-18002071ab58",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9607c5c3-dec4-4b48-a63e-89a7d8efb109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dc66f4-12d2-4e28-a43f-8a32b7af0d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed9f905-e113-476d-a80d-13d19e67493d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93fa34c6-977a-40a9-819c-78f665986420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112b3009-b5b3-4720-b07a-926ab82251d8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d3caa-1d90-4c40-b505-c4b58a897621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07dadbb-a57d-4bc6-bdf4-fa3e2c1372e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f766bd-7846-4e79-8711-81de885740e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a132a2-e96c-4055-bb78-114772d65633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a570926-07fb-44f4-a6bb-8716a6cbd7dc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5ffe6e-2567-4363-9e83-b8c3a9d33005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9354c9a-efaa-4861-b192-19191ddfc1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256b33dc-b92b-460b-a9b1-56490ead2c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "169793c0-b0f2-4e1d-8ec4-83b039811dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102cb808-7ebc-45ce-9297-3de96d5dfa02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca31269a-b757-4a87-ac16-dd29f008c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad0cece-049c-4f4a-917b-cd30525de3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b560cf-7d27-425b-a0f3-a1c0e089b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ced164c3-3979-46ac-9ebe-0e966efe5761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8874a9-ae21-4e54-82a1-f777bf1410b2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99c0e81-2085-49b9-85f5-8af0dd4281dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25679bf3-2b82-4a70-9992-e1d9cdb3e5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0794853f-0ddd-4c7a-9171-e3fb31c26969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fccdc6f1-ec0c-45d6-9509-e760bdadbdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1079d397-08a0-4e44-8a2d-275c75da933d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb64fe5-5720-4fcb-bacc-4f7d546b4b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974b1c51-a0a0-4c64-8567-1248435e537a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4dd5bb-7381-4d1c-b293-4b39ea4b703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3f2409-fee4-4dee-912b-43561a710594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e2c4a0-faa2-40ad-afb0-ad0ebb0cca46",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f5fd22-9feb-4b33-b57b-d486bbf4e28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08033828-9a13-4a83-959e-c322df5388fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8889460e-855c-4b85-afa0-dd598c42f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e787dd37-09d8-4a4b-b3e6-5937249403d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5007506d-3445-4ccf-a0a4-9ed0152fcb28",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65cc337-cccf-4cb0-9511-054f834a3925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbf4aca-21a7-43ba-9d37-cf91d2ca5455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92862fd1-90aa-42f0-8ec6-aa005bf7a5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4762f38b-a9aa-440c-8f8f-b926e0ed9ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a17ed40-c1a9-4154-9eaa-2ad247da0655",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d73c9ed-bb00-4e04-9f96-7229ff1880ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993597bb-376c-47b0-8dbf-3efdd6428269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e055cb-fd88-4373-99c7-1ddda787f655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f391a6cc-9c90-4608-ab24-ec1f8c15a0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3962d841-6f5b-4e1e-8ee7-d2ee31fca8e1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bc93dd-d28c-49f0-a6bf-b2be42f774db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94220977-57f7-4985-b4ff-7ee5d980d69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a89f1b-8de1-4111-8bbc-fd416e64306b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3893ebc3-8539-44b5-956c-2c647196688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78c592e-f58f-4a8c-a9d9-d6903825c8fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8da6d94-7820-4090-bb73-81acb36dce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7944d110-8d23-4c3a-92d4-88349e1490b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044955c4-ad3f-4c0c-a659-09681697e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b4c747-b77d-475d-bebc-790b49623600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1f8130-2b02-474d-a9be-c2b6ad8862d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0dd9c0-5eee-41d8-ac2e-a3ed95fba7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ac40a3-3c06-4d1c-a7c6-5401baa9ab8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388cab78-5832-4484-869d-438d1e0e98df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9cfea2-a594-4371-b019-a7bc92597bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b18b1a-5b0c-4a37-8c37-e295adfaa598",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a9d394-890e-439b-90f7-64e4d0514e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f6c987-c5b0-487b-8a1d-337b7c424b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191e2e49-9276-454f-b07c-795cda5ee837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4550340-5144-487c-9e7b-a5c0a1a72d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a76c3a-e9b4-4937-a709-bac64a23cb10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a01797-01bd-4fae-8e37-ed9622ff40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1a3c75-86b4-41eb-9f6c-a81e84b8e402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c21c42-3b63-4963-b9ab-4b7d06552427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6612dabd-1167-4cae-a68d-2af51353fa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe946bd1-9372-49ad-8385-3c6d65ae9d27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08568472-ecce-45bc-96f5-da6865e21d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d98101-f3e2-4b3f-922b-d4c0bf8ea525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea18964-61d9-4f73-b5b8-6d93857dc8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "feafe86d-60c9-40ba-833f-c66b7918ff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc46c390-33fd-46e6-b179-b619c3c36c43",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641305f2-d815-4c9a-9df2-cb21e8d4b111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afac854-7348-4790-97ed-d52533d4877c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b4e277-9091-4bec-9353-8ed7977598cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fe07a5-f82e-4955-aab8-dbabd208cc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662f5c16-0a55-4be4-8aa2-0e51a9f7f182",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c21badc-08a1-40bd-a297-5d06a0e7d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0606a62-9eb0-4e34-902e-edab30f8ed57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2822ced-dced-45fe-a977-105ddcadd2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "946519b4-a2cc-4b0c-853f-0c704cb0610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f3b56b-05e8-4322-9ed4-b7668e7f660b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c7b151-2ace-4fbc-be76-9dd7e37e2d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97cf8c2-939b-4412-b6d7-400006f54dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51febb0-820f-41c5-a766-a5ade8aac06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82af26c0-b151-4600-866f-b1ee11f43857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c889674-79ef-4fc1-b6dd-aa7f2bdac060",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73614bc4-9d7e-404f-8ac0-ef9735394941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dc9bcd-e487-47c6-b9d4-925ca81582e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62121ea-f1ee-486f-bf9c-0be2ec462ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca52d44-38b3-4089-ba51-0d80af85c804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b28617-c0ec-4002-bd97-4bd7be3e775b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9e6e3-10a8-4d6a-8877-5e9a42fbfc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9ae333-e07f-489d-ab69-86e9f92002e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02387e12-61c9-4312-890c-727bd141fecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3624480f-114a-493b-bdfb-24190764bab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1883a63-2a8e-4b28-8211-be8a2f3532f4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726d941d-ea49-4cc2-b046-e93ea5a7cc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65103753-01ba-4d6d-abf0-d0d29083434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9857bf1-2194-44e1-8005-8f002cb53de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bed69bc-5f3c-43ac-8769-9de97b09010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad0d1ca-70fc-4155-aed2-b281d2a22fe5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9b179-cae9-4931-87e5-fab63c897e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb01681-6bee-4b96-993c-4c83169d8b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5eb118-d665-48e3-96a4-b3b445f078b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1b5055-72d5-473c-b36b-196becb83a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9400ac76-bd38-4ab4-a782-c5458993ab85",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eb84c2-18ca-434f-b276-45a6e9604f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41298ce4-6cbc-4a20-ab5e-0f2b75bc34d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a2b4f2-2a63-4660-ad80-9aa5fa2a6b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8955c87a-4c3f-4773-a66e-321959d4e7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd88f2c-9ad7-4333-a7f5-6937850aa478",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab82e5e0-62e5-429b-928c-1fcc2766f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a48927d-6f29-4a1e-808c-7f3c4058aca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d535c520-469f-425c-a0d3-fe1b9ab488df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "041166ee-59d3-4b7c-80b7-15cdcb974310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd26cd74-ad52-4dd1-91a0-08879607cbea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404518a7-4748-4887-9e34-4f1ad8328f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbfca8e-6cad-4a76-ba0c-371a3aaad013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339dc2fe-9f78-4adf-b812-2554bf6502d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2dcbc9-6b0b-4dab-8e87-772043e9366a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b91233-6955-427b-83fe-9b4c9eb1dd6d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00838e8a-654e-4ad8-929a-dc7bbaad6622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370fc025-7bb1-49f2-b72d-47cd48c1c717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c53d2b-f513-4ccc-93b1-8379854e5cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0381c3c8-7ae6-4a65-ac5e-693819aadc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d0fa5c-ce65-4ccf-87a8-511cdd9e38cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad0ea2-d092-43ae-a43d-dc3dd75810ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c479d4-417e-4bfd-a813-e8b195ae69ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412d3dac-f85e-4bd1-b31c-f92b9607d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4740008-77ef-4da6-950b-978e7e248687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a4c39-5479-4882-acb3-21088f0160ae",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad15fa9-77e6-4dd9-b6e9-cffa0c1e8a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d155b8b2-b8a9-46bf-a5e5-1948ab65bb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9daff1-1ef9-444c-83a9-016311ef4798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdd2fa1-3c75-411a-8e7f-07e1b59e0511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43536050-6959-4b11-a3da-d706d4fa6fa3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34e4842-e58f-4f5a-9614-7ea4fb26a118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc6feb7-91c2-42ac-9f21-7efe8ca2e54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d453df38-bd4e-4c85-9e3a-e902d7c51d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8bee07-14ca-4656-bd0b-0b0b2c479015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec90bf-dafe-495c-9be8-e2afc16867f4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fafcff-57b4-4a38-b614-a1d6f66529f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c410dbfc-7aba-4e10-a913-0a96e299342e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29b634e-9540-4525-863d-cc689081bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4b9352-fb02-4a0e-9c78-d6406b14b0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6316b4b2-0e7d-4e7b-a394-1ec661f76c40",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba6e242-4feb-4b9c-8f08-bd067c9c6f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7f7228-62cf-475f-ad4c-a2ea47926f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c963b37-ef4a-4e32-aa04-c6f369ad28de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "379e968c-c47e-4c8f-9d20-f62259951eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5cd21a-ca3a-4f7f-8be4-d9da1c8ebf1b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d357f3e-c8e4-4ff5-9c17-b4d1031a6427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f86817a-6d0d-4825-ae48-05790593a081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656d3d81-b5b1-492b-94a9-d16aa1ab16aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6128e1a-18c1-491c-8d2e-92996e5b439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1a8157-18da-4ef0-932c-f4b024c73733",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2a2da7-dd41-4224-ac23-a1eb0726b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54efb5ca-9c67-4260-9c6e-b0931970aafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db89a7da-da1b-47ab-8706-bac22a07469c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c97ca67e-2235-47b7-9d98-820638998cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c2c3c-5c3d-46bd-9f45-0e9a80e202e7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de4ec5b-4f27-4f96-82c5-740aea027d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e1aa55-e488-4761-ac15-ece5c20fa078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b24e7-53bc-422e-bb6a-9280b8866aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5551e2-7116-4657-92b0-fafa3041478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e75bb46-d347-4e80-ada3-976faa19e492",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702ca09f-8be8-4b6a-acdd-73890ac2a05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddca91a1-1d6d-44b0-9a38-721333dabad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0462868-cb7f-4f07-9988-e4fed4287943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8004159a-5c75-4178-9505-10ecfc554d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2e42f3-d201-4a43-b0ff-cc3852ee70f8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df631f2-cf00-4230-a11c-791a55649246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b722fa4-9a7b-4a68-b840-9c2229127464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44e2a0-9486-4e41-8857-4a4c53da3d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65655e48-1b7f-44c0-b6fe-3dd9482b9a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ce1dc7-e199-4473-b473-54a5f1b6a4e3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a94aeb-6857-49dc-ad5e-436c504cc7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5448e46f-ee4b-4312-8061-9e4037c77945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740a7731-888d-4bdd-a015-77c025208579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "726075c8-d66f-4763-beab-c5aa7940df0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fa55e4-9026-41da-849b-d5f3fe4541a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16df49a-0faf-44c2-8bec-8f8ed61871bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81ca372-28ad-42de-b72a-a90b3bdb5ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b665d70-6d1f-4054-a76e-2a9f751d68c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2647577b-af0f-4610-aaeb-e9afc8f5be36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e46863f-dc39-4654-9f8c-50dd2addbc3a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895a3c5-28b3-4869-9a13-2ac08ed4c257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8552021-0575-4b09-927e-28d1b7b4f78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2d1d04-293d-42da-911e-9fd76f1b5dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20ca9736-2afb-4e6d-865a-dd3b60a99d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fb730e-42f1-425f-94a3-0cab3bd9b42a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86653784-73ab-45bb-aeb8-68a8411aa411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d10863-9c60-46d7-a27e-efc58a4988cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2810fc8-aba3-4281-82d5-855cc75caa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5da07daa-27ef-459f-b4b3-ad9a9ec27ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eef52b-c61d-452f-8721-d7f7e860155a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b566d9c-ab21-4cc7-92fc-abed70036db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796ed007-ff20-498c-97b3-944777cdc039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deaf886-ffb7-49c5-9dcb-4e725096b158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09afd3cc-fc2c-4ff0-8ba0-6ba2701bac2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa336aa1-9d96-45f1-bd03-06a1ddd4b46c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6511f0f8-1891-422f-a786-1e35faf0c3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49846ce4-9362-48f5-8a9c-89655b165fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68411cff-4dda-4957-999d-4a484eba5726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f797ba90-5bb9-4ba7-85ab-cdeca537f7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60fea6a-dab5-4833-a83a-4377fee496c4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3a0a95-7b04-4fcf-8d4c-78357ed0bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64e8c1f-2877-4ba1-8f7f-9454f9d714ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd37a989-4f76-4a3c-af9d-fd44f2525c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f70220-6a25-4e48-8a3a-9ba00eafe961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ac3c6e-aa56-4702-818b-e1d7ee4d304d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fa00ac-2031-47c4-97cc-70473f95c6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b8293d-d91e-48c8-8e4a-27072c32ce81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309c57fd-8481-43a5-b294-102e5786c892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfb7dc7-927f-401c-b478-da3555842914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8013b199-575c-47bd-9614-360646ff0ef9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc3c019-243b-44c6-b942-4711f4a4b10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48b6417-0a97-41ca-a179-01aa0ba6ab89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b39ecfd-9cb5-44c0-81c8-2a60589405ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b3b235-7889-477a-ad18-16bf79446733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971df85a-e8cf-499c-ad23-37aae995e80f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d66c5a-d8c8-4747-9643-f750120f6fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1169396-95e6-4c7b-b4a6-a37143ca27db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05546e47-d931-4758-85f5-af4606189e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c33ebd-9dc3-40d9-a878-a47b33c9e31b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cacf7153-856f-4c87-a3de-2bd8f9007b08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0d8dedb-166b-48d2-bd5d-b539323e1b99",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5e15da-51e2-41a2-9359-17c8753f1e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c1293b2-7761-41b1-aec2-6d3df43b9e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf5ff17-8070-4f3e-abff-e2938172884d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95c7a0a-a8c1-4577-9110-40de5d18168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1117b6-b1d9-46a2-b39b-3dd18fafb066",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a58d8ce-cb3b-435f-b864-ce5f5d0329c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "405cfedd-d453-41da-ab69-296395154eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff75f91-f309-43e4-a825-41888e47666b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03391aca-a07b-4266-ae39-5539bd8f5c56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81b0097e-faf1-4e84-a1ea-9b9fb247cef9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea77efcb-0fe6-43d4-9bbe-17593edcd730"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0dd4c6-a522-4884-807a-81ec335a7043",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1aa245f-4497-4db5-b991-4bf993b0727f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f24ac1d-ff88-4fe9-8b53-6d9f91d1899c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77cbf058-c9b0-4e52-81ff-d2e028fa2e62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79ea953a-a97b-4543-aeff-25dc02c8a78e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78276f04-9b53-4566-8f60-f78423d10868"
                }
              }
            ]
          },
          {
            "id": "964affee-f187-49c8-961a-f2e1724ce50d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99277fed-7478-4f58-9220-fb3451f3cee8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef4fa3e2-a1bc-42f0-b149-e2a0a41e330f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87370ed1-9cf6-43a8-a5e0-c0f650a82846"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7915a691-e8bd-4707-b11a-1c8a5e1a9f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "760bb9d5-48a4-4014-b018-292e88cd7a86"
                    }
                  }
                ]
              },
              {
                "id": "cb36e604-2e77-4ca7-bcd3-2de5c5098fa6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8be5fa6-b1ae-490f-a373-0159f79d64bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f86b6a1b-eede-4357-ab2c-e5b30940ee68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39d1ff3-4039-4d2d-8942-708cfebe7c80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa384371-77da-483b-b479-3a42d32ef67e"
                    }
                  }
                ]
              },
              {
                "id": "37abce15-e665-4c16-8d3a-a04d5352ae86",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ed3c8c5-d515-4db3-9da2-16a3ff8dc7c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "893dd4fc-fe54-4a9b-9c6a-e260e7e0641e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49aca04f-d1b3-4867-80c0-32ebadc1425c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9c5984c-f32e-4d01-9115-ab3865915454"
                    }
                  }
                ]
              },
              {
                "id": "920f6179-2c59-42ea-ac99-a05595cb1036",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d341af1-507c-4262-a820-04b332f71bfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "171510c9-9f08-466e-b90c-9fdaddd6da4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3256825-2333-4c4f-a058-041824b4252e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b60a1b57-f418-4153-8bce-9998948cf833"
                    }
                  }
                ]
              },
              {
                "id": "6672b43a-c118-4432-a392-9ff0ee723a96",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76114512-a28e-4d85-87f6-8cc088ff02ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "283cf25c-624a-487e-94bf-288e18f7a2a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95f7d8fc-3d2b-42bf-9fa5-7a8efe5aa54b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "642b4920-3f23-40b0-b251-fea45701d7ac"
                    }
                  }
                ]
              },
              {
                "id": "a1c0ba73-b5c0-420e-b56e-273bfc1bb51e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52248e78-bdde-426a-a5da-9aebbaf79925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1122c6bc-3b45-42d8-b374-ef51cc8735c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee3cb0ee-58e9-4311-8186-cc11547d5190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad8e7835-7985-4607-81ed-bf20145c50e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b31fdd49-1080-4046-958e-b2007dc5549d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d94f7f11-1af3-43f7-97c5-9f6ded499ae0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27b98226-2fa4-4b44-8e62-2e981da88aaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b33cad64-c37a-416d-b6b1-219a9a16aaeb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5ebd269-4731-430a-8413-2144dcbf2ec5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4f667f23-016d-4ff2-9399-6f7e85449200"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c9b40e0-764a-4caf-9b33-845f1b1d2c36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edc74d10-30cb-40af-85aa-9e3c789f2d02"
            }
          }
        ]
      },
      {
        "id": "ae67db6f-0b2b-4cef-b47b-30dd2bfefbe8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2322aede-13cf-4429-8e64-3711c1af90ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1fa28e9-31a2-40e7-a588-0a8d726b7cf2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "042e2bfa-e1fd-413b-8d96-f38155424e36",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35aff8c3-16a2-4b53-a37d-ef17afcce487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd24cc9-8225-40ce-ab45-567495e039a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd31e7a-69ad-4de7-b472-d820e041b72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e6c250-6da1-4780-bd9b-a168ab669904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ac55f8-5b9c-43e5-a419-44db29d6be96",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff17787-a463-4b7d-965c-b47b94165553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e3ba5c-0122-43d5-bc16-9fa323c331ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e2cbc6-edde-41d6-acfd-48957016f98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c47c12a-ddc1-408e-8ba4-b9c5b9c2aa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302234b6-39c4-423c-b577-1b197fa0b162",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd898f4-20a3-4068-9b03-dd59f36c118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2205df55-aa7d-462b-927b-763b2e51ccbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9bb683-1cfe-4ee5-92d6-8c8d6a75f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4b5bd1-bf65-4038-ba31-369f7fa7a298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b337bd04-0bd0-4b7b-aa46-a2584b732ce6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d7e8ed-9050-4769-84ab-54942f030a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f2f89b-1c93-4ac3-be1c-8540c564d3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8236bc-9aa1-45d0-b4e9-5a04c0652412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "685161c4-c99e-4b15-b5ce-490ca0ef235c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f531eba9-d86e-44f0-800a-d2e08c4a31f5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ed44eb-4d18-4aeb-a132-cd1c940ff2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044aae66-f620-465a-807e-385bc3ee2aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8852958-c633-44e8-a559-241114c6cbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5447d069-2de3-4da6-b518-d61729f25e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820e6295-ac07-4ac5-a0cb-d2baae45eac5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9760032f-da29-488a-8291-86106cda8246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0c52eb-866b-464e-8c12-1d0dfc390c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0354dcfc-de74-4f69-bc60-4fe2fa345d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd10cda8-3863-47f5-8f68-77b359461d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54a1d0c-7f58-4810-b589-b99406843d20",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a390f41-1e54-4343-8c05-580e1e864d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b778d60-3db5-47d9-bef4-f1bdc29dfed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b9d1a-bec4-4df4-ae6f-fb0c1f8c2d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0265da52-7f6c-478a-a90a-bbfceec5c3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d162ab53-5e31-4c0b-834b-55eea9f1c390",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d83bd8-7bc3-4ffd-a468-ab079c3527c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1174ef6-4b5c-43e1-9bad-c30de715afed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f787e37-0b84-4a59-b5e6-e62ef8b98cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e834505b-5a83-4821-854b-89c8833500a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d03575f-b5eb-4b4e-9d54-dec55af4359f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f97a859-8693-4827-86f2-a38b277f852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04ae026-6610-4e2b-a130-cef8772e4284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595f333d-c1a6-4584-8765-2ba7699ca1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d2f413-7fdb-40b2-bcb2-7cdf721fd2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54a084-0b1b-4cc8-9df7-54238141896a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814b0cc7-5461-4725-b786-f34d0d0552c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca88c0b-4b2a-416a-8453-5cd1cdf8bbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b9896c-4f56-4603-bbcb-41155c37bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39fd27e-1ac9-439b-b071-f6155dd6f180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25407c74-5008-4827-8a74-1ae293e7f8dd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9ccb26-c618-4946-9e24-c6a9035a201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642426e9-4b7e-429c-a5c9-96182e472057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbeb9ef-c1cf-4a32-8cac-60b4f288e34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5b2163-181c-4314-9f03-919bf2582bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7437b3ac-7369-495e-884b-075094114605",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3728f9f6-b99c-4f49-b026-56354450316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b4d1b6-5e68-4d5a-8ea3-d7e66480f917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77606ec3-5506-4073-9270-ac1529bb37e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d931b82-f571-4e0e-a996-7d2a348db153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16a9ec7-3e0e-4e9c-97fa-335ac06772b4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1603ac-998e-443c-aba8-b0b63b3168ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f75a4d4-16ef-444b-8130-083a9d2e8d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa818bf5-bf1c-43b5-a51a-e5dda1f9543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55908529-81e8-4043-8bb2-b24810401385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdee78f1-ccca-4e5e-825b-71f24e119f88",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3faa1a8-2053-4a42-a459-125e4b41e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f47a37c-9f3f-434a-8075-7a167d21d22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9069f65-1ec3-4097-8a44-ed16b79b5a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b70d3fe-d2f9-4966-9180-42856104ccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fe9158-fc70-421a-adf1-b5c0fc92f01a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add84508-d52f-481a-bc6b-26e44a805ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fb206a-41ea-4a82-a666-65086062c785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463e239-40b1-4898-9407-fbcbc57b8e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "01baeb9f-49c7-472d-9672-1814b26c0c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bf9b51-20a1-4e91-8d8b-4498f92432d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41473c2d-d6d3-4016-b699-1c5111b70191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a9064c-b293-46e4-83dd-1203b5a1b4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bc07fb-6db2-4dc2-a747-c4f285100091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb5aa37-2efa-454c-af1d-345569821a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cfb7ef-870a-4583-a0c0-380994cbf821",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06996197-28f3-4177-81f1-e96976fb92a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf7a62c-0df5-4b2b-85e5-031cc5a56b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fda90c2-27fe-4121-acfa-91cbcb9b3ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea16eb4-1b06-429c-a268-a572f146654c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1349ce-e930-47d4-b0f6-196ea9e9fc86",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5427ab-1464-429c-873a-cbdf0efac3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a599ea1-45d7-4cf0-a15f-476715f00637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f37bd3-9d71-4242-964a-3931e94ce1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb96eed3-58ae-4fb1-a0d5-6ed56979b69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389a6c72-c3a3-4bd9-aef6-590fb68a367b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25de757a-7c0e-4c03-a7a3-9055860098a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6513440f-5d38-462c-b13c-0ec3e31bfb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65edfff1-c51d-4b3c-8e38-78638f4e30ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d698cf57-2b19-41bf-9564-3c3d443d0476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26599f22-3ced-4655-b082-6f1901c2442d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314563cf-3437-4cc0-90fb-4858e57dedee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e12b085-d0fb-469e-b050-79c4dcde7c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61792a0-b8b4-4af7-899f-2e7979ff442d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33b21c9-9cb2-41c0-9d22-b742ab13512f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf5f4bc-5348-4e25-b27f-3ba877079a7e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaa978a-b157-49b5-94cc-50451c3ad625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9bf7f0-8882-4839-8027-238f09bddd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a58c7f-730d-4b77-bfa7-4c6f1ad9b39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52515e8-44c3-4543-9c16-2d35d48635ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fa2daa-64c9-484b-9e2f-b6b63cfb6055",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b839b-0a5b-476c-93ec-97df59f9b645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb635be-262c-4ed4-8081-192d599f816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b585f87-7e1a-4c55-8d3d-b1b9cce30f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2d583c-364b-4586-a1c2-9099832d2264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fedfd3-c2b6-4da2-811f-1feb81eacee3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470348b4-23dc-4d45-b65b-161c59dcdc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eb59cc-6c6e-437e-b5b3-5c10678bb270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d004cc-f9d9-49e8-bb4f-b88b7aebf40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7ead07-4a14-433c-b244-e2fb24c52446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccedf185-1907-4a3f-8c3a-6eb1ea2dfa6a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c0113-6458-4c36-82da-980ee401a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5268e4ad-6e56-4771-ab4d-4539b6112ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b039cf-56c8-4104-8f1d-ed131f07d797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19cce430-6ad8-4c14-a8dd-66e5f1ff7309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b8f0a7-7264-4a67-a182-0247791c945d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51b227d-285c-4e63-b5f7-7e5e8e73a725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd7f9ba-4e5d-4ee7-a3d2-ed7a8ad899e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91259d7-8717-4b33-b223-3524d6c142c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccd870c-a05b-4570-ac90-59f74f3d643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9965c481-c484-403c-a81f-bbda00f28478",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae43ed9-359e-42dd-8517-ff7270a7129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7963d15c-e20e-4cd0-9d42-55c1e456e0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dad1d5-217d-4c5d-9776-cf192a1c86a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe821e8-b7f9-4e30-9a44-74cde57d1421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648666bd-3d31-4c3b-8da9-ab194546524f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38be12c-fff1-4478-a5d6-763f2bfd3e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a68cfc-5d68-400d-a762-2fc73f6dc14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a857ee8c-83c8-48dc-8601-477db5ad7d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "734e9eb9-d087-4820-b45e-849b4a81bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a0a6c1-9f98-4f74-84f9-21ba68bd40bb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ec945-e144-4572-a2ee-3b5636422249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b927a2f5-ac68-4fc4-bc7e-6233c3254e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed84a16-d5c6-443d-b515-0016525d2775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1557b21-b50e-4154-bc39-e70d993010fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0170588c-f162-46e4-85c3-87b14e98b001",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5256ec1-475a-439f-94ff-6232e0accf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990e5151-9981-48a9-aad9-d3a2be35fa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9210519-f768-4d0a-b8ff-e6e35a53a069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a58e746-9068-4022-b043-d3546ff8a2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03520fe2-72c8-417a-b8b0-033c764cfb08",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bc3883-6e34-4d7d-bac4-e8a39ed9f043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8a0a3f-b4bd-4f53-9597-2bb621164a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd76210e-036d-4eb9-b654-b3bc3301f4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c4d592-a4ef-4e57-8a7a-807aeea3d8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07ad01c-9b13-4fb3-b5e8-0342f49baaad",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d14143-48a5-472b-b8d4-d600c5693486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931b4d8a-3a08-4de2-917f-8a86f5be34cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ece656-c795-496c-8511-7419997f6e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3f7be5-f96a-446e-9b86-9763200838a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03744636-4d0d-4c06-a984-0db1eb050f13",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9019e7bb-08a7-40c8-a32a-40f6c28047cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8efff0-5856-4084-a5b6-6e9a9a82a83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42faae6-4143-4c36-94e0-95931f364b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb44fe2-5e49-43ae-8ebf-e6899ab305e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7147a64-d0ab-463e-8566-f9dcf0757219",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f423e081-ab89-483c-b3d9-d1e098b84a70",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502dae35-e9e1-4026-ae29-0f0d112ed396",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e5770d7c-b87a-49fa-aad9-aa33f0d55d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8290f863-8a2a-46d1-8123-9e29a7813f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "050bb818-eff4-44c0-b590-f9659cf10708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759eac5a-397b-400e-8674-942221af2166",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ed7f0a-3e12-4995-bb9e-f4917fb6ce59",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f94578-b5b7-467c-b67e-076a3cc0714d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c56c37-1bff-4e56-aec1-16445ba5ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0f6c549-51fe-4757-bc8c-d025a457bf8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2b759bb-7f0b-44a4-ac94-18a9ff293be8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36fedd67-0e42-4a94-9569-8db8f270ba43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d508b1c-cfa7-4de8-a8bb-36720b53e169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed4e850f-9b49-440e-b9b1-bdd56961ba50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1405d0dd-c5ff-45fa-b287-b78662072b45",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf6e5feb-77df-4403-9224-fe245c2f4a40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ffd9950-d574-4fab-a9b5-7940154749ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f6b268c-e97f-4b8e-93d1-819964993359"
            }
          }
        ]
      },
      {
        "id": "5706111d-b5bc-425b-8c7e-f48a01d2effc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a88e7894-7f8a-403c-96be-244205561e15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3fe5dd0-2070-4457-969f-0b439ae2a892",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "576a38f4-bb7a-4bec-830b-1af53e0af041",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d3e00-c04c-46ce-9e0e-78a9a00a3b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdcf432-ae93-471b-97a9-7a67d84abdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68244661-9a97-46bb-916f-0fe427ec09b9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cac7a34-d6b2-49cd-8863-ca2f5a0b684d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7436dd3-bcba-47c0-b58c-b60a339a67f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5732ea3c-5ef6-4b3e-b5c3-1051c7f754d0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec89638-d86c-4784-b8fa-4ce597707ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce42bd1-edf1-4e71-a022-815c2e2cdfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c988987-f7b8-4456-a3a0-bb29edbc71d1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777fe464-fe59-4a9c-a42a-1cc67dbe1694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def6ceb1-a61e-49be-8a99-b2b72f4f758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4a337b-de61-40de-bf19-1039e378baf6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf23bce-4b2b-4338-8ca5-f65a868c17f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e316c3-d422-437f-9a07-ba0ba31e1893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab74018-c000-47b9-848c-9af0dcf3bf75",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8918bb5-5b2a-4cda-8f48-ad2d2383c317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943731dc-b658-4437-9443-d76b46d30139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eefa8c9-cae3-4a45-a234-ac68299b4069",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f630d0-d4a1-4f27-9798-1a88f375805a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3219f913-6f54-42d1-b250-7a4f465ad72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ac4b68-851c-478e-b4af-7b2fbd14acae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677f3b86-2514-4f4e-9478-efdf0024a632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3340f34-7653-4f28-a240-ff4476368a3f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb580a7-77c4-4297-8e95-4318448072c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de6b081-289e-487a-82fe-7b3a08959806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b111d7-7cd1-4545-b5c7-e1003b6fdb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a011b896-a508-4949-a805-40a8f7256a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131ef3c0-73df-4134-a949-d835d31c1a64",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b52ab2c-dc4a-4e3f-8b61-b19dbc57ecf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdcc226b-ab3d-4afe-bf5d-d06443888694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86604a7c-9014-4af1-88aa-7209c888e8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "face2eb0-b940-4340-b1dc-314b2b0ed14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18311fde-ec54-4d0b-b4d3-86c0f32c406f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503ecf4c-b07a-4ecf-b116-750ca17b0604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b607801-2024-4822-9619-c4ddfa79e6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e828103-8d59-44fc-86ed-2f7a97ee3e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a286784f-ec13-4d3f-b340-c7ebbc1bb18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fd9f71-9e58-402e-973b-9b82e5766aeb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477622f8-1f63-4d0c-9e3f-f4247357a359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f41291-b6db-488c-bde7-8e434d30303d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32342e40-0ca6-44d0-b398-30b0185e4d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f2b9a9-0c2e-4b6c-a922-14cbbcfa4812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a34c75-1b35-4230-8811-ba51deec98c8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e58eea-ebb1-41ad-a339-2aa2dede5089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bf0b8c-1e82-47c3-ba7b-d066c94fc8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176b4a51-f9b5-4b8e-a558-9de4c6ee9a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97be5af6-aacd-41e4-818e-81e9aa47b3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43627920-ac4f-4c02-b03a-37b4618a6f8c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f54dbe-6234-445e-96f9-13fe2df5dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c47da6-f5b1-4391-8274-6e03a4e18487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c30a875-d8db-4767-9aa7-46d028c67863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f1c322-7317-4104-946c-c62e96837895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5b7fff-35ed-4202-9204-676bd4e9669b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffa8023-937e-4779-bdbe-acd25b18a588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac46bf4-6bbc-4590-bc61-1a1a20d2b154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8f0c1-9c74-4718-ac4d-846ca8d25135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50bf485-fd52-49fd-8f98-9f8096bfdc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e73c0-5a1c-4806-808c-c587cb12d1c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d028de3b-2ab6-4996-9d71-ce589df9ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55326642-fc8f-4e69-bbc4-af4a6fdf232f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16920acf-f7dc-4b96-9469-0a8316bbfcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9eb823a-3cfe-4c1b-96b0-553104d23329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55702e5c-79c5-4cb9-a15d-e29105db8fad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2296f93-7449-41ae-af8b-26edb1b20138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56dd6741-eb0f-41cc-bb22-414e1195666f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9dc652-d680-46c6-9ac9-f67f7d201222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc55ca7-0b42-4602-a1bc-02da05309147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a68bdf-41ff-487a-839b-3f452da0ca7e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2c7215-3009-48e0-a336-9ef381840f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f1ee34-ae2a-4dad-b7f4-e8cdf6e5665a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e570cd11-83b6-4a6a-a533-af00dd0accc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3565f8-8f1b-45fa-be6d-3b0bfc59d7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012a00df-609d-497d-9562-e6122c434fb7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff08052e-a9e1-4945-8fe6-260e66db9976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a53a39d-0b10-4baa-9db4-aa630025a858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b365abf-092c-446d-8d2d-0eb0ee3d73b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6f8d94-335c-437d-9088-49312e178602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb34cf4-135e-4e41-88af-1e35064d1c80",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d9d15-b26e-4882-9f32-7da9eeec2ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9760159a-0298-4e2d-8a99-20972e18bf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb03d62-812a-4a66-bac3-815ff41822bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2296f615-42f4-45ac-8694-ee710f832a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55448701-ce96-445d-98f5-7a63fed8463b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae839d7-c392-444a-9753-3f0bc60bbd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eacb52-cc8b-4489-8c67-99d7560109d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e8883a-b5a6-4454-9574-052739b3bb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1232e56f-1809-42b0-8518-61487e2fc284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd6928-c971-4f1f-bf15-9a261b35db90",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d50d5ce-d2f2-4323-b829-fd7bd6962d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58dde67-81fb-4f7e-ad34-7e7887fab50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d0330-0854-4466-9092-8612de4fe03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5da315c-faae-4f0f-b71f-ba579c930e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ece1265-0d4e-408c-8771-61f2403b7e49",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dacd468-5b5f-4178-8abe-746d2230a5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662f4b8a-0cf7-4793-911d-818eb4c717f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eeb17a-220c-4f55-a398-3e131f3ce6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74a9e39-f404-4c94-a828-f508c799022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1f44b1-7d1d-47b5-9476-ca5441106fb6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49c4ac1-ff23-4c78-9d09-a58d8d52b0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b840f-55ed-4daf-961c-c80896114acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7c7ba1-a5d6-4ceb-a748-e63cd5ffafc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4d9176-0107-4828-80b0-070f07a4ee97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9111df6-2ea4-44ab-855e-887b1f2ddfe4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332b6925-f65f-403d-a38a-67deb081526a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2733597a-b618-422d-b337-8ce2edeeb26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae511e7-3ca6-43a0-8b57-d1ff51744ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4b0fb1-6579-4ece-8aca-56df8e38f5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8653e001-1dfd-47fd-9beb-0604ea3873a5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224d591c-e626-412d-86c9-87ffaf2451f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5d51b1-6b99-4456-94a7-a62ebf55e2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680ac583-77b2-4825-97a3-d1e0db428cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c7e0e3-6a22-483c-9874-2f6b149885b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869862a4-a402-47cb-9538-5224a17a351c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a70441-c4e0-408f-bc7e-17b83bb55028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4832319-792b-4704-84c5-33bf04204609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaef79c-5e50-4bf0-86e7-9d1998014b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6b6208-4316-4963-95f1-5e752fd13bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a836300-e3ec-4ed1-a4ae-a57e74a3637e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6467a75b-5f2f-4536-a4aa-2c084a736f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92683679-81f3-4970-91fd-d4ff6fa7f7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37c244e-01d1-4fb1-8699-b32d326dc818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b36914-603e-4a5b-831a-cabb6f6bfe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209f6410-960d-434b-a452-bb02dfeb2d5d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068f4ad1-11c2-4a9f-af06-06543234811b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606713a7-623d-48bb-9324-78b42b108153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dbcc28-9618-4f5f-8a8a-2932d2a33278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c53cca-fc22-46fb-8ac3-2ae536d7aba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e984d05-a6ee-4494-9977-aaf6b5b1e045",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef19c42-6087-4ab8-af89-c92510367e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005ab87f-5101-441a-a583-e6d8df79d287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce46792f-4220-45ee-9e90-a7429683c47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4fa46a-d4dc-43bb-a752-5adefafe5889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9548ef-be72-4278-9232-d0b50070c844",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591cc22-4bd4-4133-90ed-7d55056f2682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3e6acc-bfef-4029-a86d-232adc56fe71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21481689-cbe0-40d9-9e8e-d80d12db8e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531ca590-33fd-4532-84d9-1a3bed7b5dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e538a8fb-fcae-4ae1-b126-c83b03bef405",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85daebde-1ec9-450b-b449-4f61c23621e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3256a4fb-04f3-4c47-b106-618e0ea3b6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fbeb11-ecf5-42ca-996b-0d77f86d76fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19820bea-97cb-4ea8-9674-911e934fe310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8bc4e4-8c1f-4792-a7b0-0457e3cda6c1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aac939a-462a-4dab-9207-b9e783ce7e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849e5cc0-e8e2-49fe-bab9-5e9894650a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3212f9-7f6b-4640-842a-08ce8eca3070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004ad310-4ea8-4e8a-9b35-54578b58e07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb263a0-12e4-4a17-9d64-0e2f5a668bb4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f7c6c4-07c0-47c7-93d7-c423c3c11cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccedbc5-6695-458a-95c4-af2085210ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71794ae-66ca-4b5d-b17a-fe9106e47112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6de419d-5a40-4d11-8f3f-e1a993c84552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1a33c8-9916-4f53-b1a2-dae78528e3d7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b5bf1-39dc-49c4-9acc-518edaa54779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e371d332-2ee5-45bc-b1e2-1871820ba1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a016a0-298f-4f70-9ca2-93aaad30864b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c3e0f5-d629-4984-852d-3e57f860ba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a744f2a6-a095-448b-b396-6e16529046b8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c099a057-462d-4585-b214-53deccc6f4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933d3f06-df3d-4db1-ab38-786396116b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded7efee-ce66-4523-b109-9741f49a1640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ec740b-5cd1-4f11-8ce7-823a9314ae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2455af28-39e8-4fbd-bce9-d992cdfc1297",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779ac92-66ab-4bc7-a7c2-7d7f9ced930d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3faad4-e174-4d20-a0e7-6b9a4e6aad51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54b7e5c-90f3-418e-bf15-c9b555c0c5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d2b5d7-4597-41cd-93bc-598aa8090a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30621720-7554-4336-b60e-38e2a0f8a1ce",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4cabfc-d5dc-4bf8-af2b-89c2b75fe0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3c835b-7b84-4e92-9208-d3bdb0eefba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c42ebb2-2365-4fcb-813e-ea0439b54812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6d7c7d-d536-4558-acb1-610f3d75ee12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aecc13f-d199-4498-b79f-088ff54905b4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6eb78b-4d88-4f8d-b8ca-1e62a4690c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de12b9fd-8d2b-4518-b988-1efdedf9699f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3b47b-31b0-4c22-9133-0a157b53675d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505dc6c1-6485-4bc2-bb0e-f9af4dc9f3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fed987-0488-4a46-a31c-ace7d8203273",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e9d61c-5e44-469e-ae2f-24e215cb4b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950f9176-8455-4898-8ed1-ef7adf52524d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b8459d-f468-4920-a5f2-865b4d2d4d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e4d369-472c-4285-a34f-5f5ab87c999a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f909d6-8724-4443-b706-fb713e805f9a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7fc858-7d8a-47f4-92ba-5de90d82d364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2d5e69-83e6-4b77-886e-144401953d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c9e36c-31b4-4f86-a012-ed01dfd1dffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b154b743-c0d1-4997-bda3-55ca2fb9b03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6476d335-1e5b-4049-821a-eceadf0cb66c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85064a-de6b-417b-bd98-6da600cf44e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a96623-44b6-46a2-bd82-75d7c9af93c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dea005-0ef7-4590-9bf9-55be3eb9f7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcff2306-a3e4-4d3e-901e-bdfa73c25275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78376a7-7c61-4fab-8d1c-6fdf59e55cb4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae6b5d6-9958-41f3-b564-113cf6d842ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24bf2b0-10d3-4967-9d85-e69b58d9edc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230a4637-af36-488b-88d3-35adfa9f7c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2495b67d-2e5d-4b88-90e2-ba31a73db454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb6ffa1-8cef-47f1-9b83-6860d44776fb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeaf597-f0f2-4265-b633-382d3d976573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5a12b1-43a9-4496-a7c0-61cb4fc1cbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30afb321-dd2f-481c-a356-5fe11b2f11fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2f562b-4325-45bd-9ffc-3989adc40c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05e2754-da83-4ac5-a59b-190363c0081c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01ea2de-357e-48aa-9271-70679bce3952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55327f58-7e03-443e-8e16-c395edcfa422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220ba871-ac1c-43ad-8228-ad784e914753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d9e904-d132-423d-8d33-600dc4622b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929fe861-7c92-4367-b97f-4239efa3c6b8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9d631a-1c61-4792-998e-fb4cdb109d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3dfca5-2d39-4cf7-8194-f339f44316f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4991be50-7b1e-44ca-830c-d2cb54b8ff9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49e5287-151e-4b7d-98c1-320b2c2841cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26fd674-73c7-4b97-8522-a5ba4fc6ff97",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b476e9b-d0b9-4ada-8bd9-12c2fc22c7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb2de74-e089-4966-95bc-f347442df80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267caa77-86cb-444f-aafe-15dea6384ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1fd669-39e6-4e11-a0d2-bc955d35ba59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169657ef-9d2c-43cd-933f-b0c72e3cd272",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09a3022-e572-4d6d-bd26-a82e5843807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6ba0a7-e182-4fc5-bacd-d28f8b2b1345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140511d2-ca85-463f-9264-c50a5fa58bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5a8097-5e5f-4c34-af4f-a1a0c0065824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cda86f-7fb3-43d4-97ea-9237a7f67a62",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595d44c7-3c53-49bd-b5d6-951c96d49162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c75c74-2bc6-4fda-9882-829d9d0aa624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12225bba-bd4c-41f8-8217-5a3afe5ea3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bf6410-9cc5-4c6c-aa9e-44472055bd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb7dc22-e0da-4635-b419-3d7c674c3e4a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c48831-532d-47c2-8e57-08242eedfd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a464dd11-f358-4fd4-a893-d5776dbc6478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ffad52-3103-43d6-8df1-1a9dbcb6092b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c318c9-b4d1-4de4-9b53-b2780b8985bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65553019-4f06-4697-b6f9-5259be6ed82a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485d707a-f198-44b6-9474-7f8ed535903b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3885c6e-9028-4319-b316-6a37c9a729bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4114e9-5a40-4f49-8663-7c612534071d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b02f17a-47d9-45c2-bca3-1cfaabe39019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10ba171-6f76-4eff-b2a6-b843467d936d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476aa7e3-bb93-42cc-86d6-4f3d8a190191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9beba199-f56f-4838-89cd-add3fe22f17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f00efea-4c6b-4ff4-9295-28384053737e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78908a94-030c-4f40-832f-c96b74b01ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ff109d-61ba-4f39-a453-75294e4d9e0b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659eb392-e7ee-4547-a220-1864255a6f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4648d7d3-2fa2-4892-8d2d-2903ed196269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8151208-e320-4a50-924d-444d64c26b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1997afd7-3965-41b9-847e-a93b48dc97a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eca826-3627-4c2a-a160-488f32c04cc6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5e3a3f-2a17-4938-8bbb-4b50a8380dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45579241-b683-4cc6-9086-6a80f6792e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfcd16a-4042-409b-99e5-f7cf5148b2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bec7a4-e0c4-49de-abc9-512a2b0788be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b95a09-e329-4926-8b7d-7e53289c97c2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3026fdf5-1891-4188-b661-bd6169b6bc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a009502-b6a3-4072-ac1e-d9845b1739e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab474359-c2c7-4d31-911f-c2a27748777b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b336c25-c68a-4f7f-87c8-c332a5cb87da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7e2e42-14fa-4482-ad76-62362922ac5a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c2c840-57dd-480b-95d2-4e5270ae31f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b7c2a1-c35f-4241-9c88-410a36e0b1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c22b7-7a16-4376-aa99-4a6cd29fa657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7447f0e5-488c-47c4-af41-fa113ca03b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6b845b-2615-464c-bf2f-d7ee53be2c91",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7564e2-e535-4fe9-a8c3-e163bb2cb40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a5cc6f-0613-4e58-9d68-bde12df19454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff528996-6c33-4411-abf8-6a9143ea85f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c461c2-74c7-4105-81da-d72d2df3b28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b314cc-ea82-45bb-8aae-d8343b1c4fad",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9314b56b-87c8-456b-94c2-7be7f3a36256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae7876d-042c-4870-8d94-b777f2846e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a91ecdd-59e9-47ca-8fb9-ced4200c4923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b79bff-03ac-4ccf-af15-9b5f36854fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b5ad2-ead7-4f2e-9492-50589149c4e1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5d5630-d665-48e9-afe9-398715da7c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef4c68b-5121-494b-9f15-6d85bc43ad3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfad0495-af55-4010-b9e7-df0c2f236612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d9baca-03b4-4573-97b5-2bdeb8e45488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b65432-ed2d-4f55-8493-f8fd7d1b17ed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e8073c-6d8a-44a0-9d74-f4743337694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247ee7e6-8141-4ebd-9cb0-d8e76e44ba57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ece57b-735a-4ca9-ae3a-fd21ea7283f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d02329-41c6-497a-bfa6-d939a339466b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4326035f-d09e-4de5-85d5-0d85c210c146",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83187e43-540d-47d2-9434-36893bb32fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe987afd-4810-4272-8158-aa6616242f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa30ca2-6dd1-4024-93ac-2a76aef59a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28207f88-e0a1-46ac-8bb9-361184419780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c322be-ca3b-4c5e-8f3c-4494ef6b3981",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9c5577-4bcc-49f4-8cf4-8f56258cdb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82b1170-02a4-4f57-896f-99d57c0eea45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03a9603-530b-4efd-aa02-1c26b9b5b981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71eb8647-6308-492e-9bea-504eb32f8752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632f2da2-5ba1-4e92-afce-1a57ac4578ad",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc1105a-9505-4e6c-9ca6-2df9cd3f5de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f24ad6c-39e0-4fc5-8c0e-5f06270a92c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0ad4e7-cd34-4021-b64e-655e0d4b96d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b46f49-95a6-489e-aac2-4f2cdeb2b377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97500a5b-19c9-449c-b662-4394fdb7cb0b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1516866c-8e58-4d9f-824c-fadd4c75b737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5616ce09-5bd0-4ab2-ad61-39f759abab1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc86d0c-3e7d-4f59-81ae-47180bf21dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce5d34b-c545-49e0-b2a2-99246bc9fdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066e351e-d113-4fe5-a0df-4777b4d3a6a7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4ddd37-de7e-4c14-8c6a-c5acffcaca6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae953cff-fa37-4235-824c-c9c1db9e24ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dd016d-007f-40c5-8b3f-9df390dc8286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5941f16-8f56-403e-bca1-7133aceed64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712464d1-d96d-4653-8652-78ce6e857157",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114b72a7-18c5-4dcf-bc43-93270154247d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f281cc5e-2caf-405f-aab7-23542ec8a27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5e0df1-88e1-4367-959a-06a49849dd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea27462-d384-41f2-968b-44a74fa23c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5920fa6b-c1c0-484f-b4d4-6b0b134a8f04",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5add65ed-0b23-4525-9850-c0817e4d1986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb666990-4ec1-40a2-a4e0-efb10511be63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76c4479-88d1-4da5-abf3-dbddc8445124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a805f36a-9320-4764-8d30-4a509baa8efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fef7d-2439-4493-8032-f8b4a2ff74a5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0ca1f-43c9-45ef-971f-6efc757cfaff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e408c83c-adce-4c18-ae99-877c2672f322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61434a77-9db3-435b-b71a-e9c658ee604e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f4c60e-1b86-4b43-a89e-2723806ab3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677352f9-b178-4c71-995e-bb40182af386",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35f0c7a-19ef-4005-9f18-aeae655191d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6780f76e-4656-4b0d-9a6b-192ad0513afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada3dd51-b6fb-43d1-bdf7-f2e559215779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fced6c67-35a0-4cbb-a2e9-eb974bcd9b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2561436-ba43-4d6d-884b-b3e49bc06619",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e648dcc-4399-4096-b2cd-55d27072ffde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb348c39-4f0e-41aa-94a2-53e6e180c489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c52d4a-e813-4f1d-801d-fd6cd7edc2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febf504a-495d-42fc-b1fe-c1385deb3c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16bfa6f-4064-48d7-b3b5-3c1752378bfe",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cef8a34-0883-4de6-8197-83ae520227fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a3ea11-78c7-49a7-8af2-02b6777327f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc9e983-64a0-4524-8b72-2437972f9018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31aa912c-9370-45b8-881b-996e5531b1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97e204f-eed7-4de4-bc54-7c17a94c0b49",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd840f6-24bc-46be-85b9-741ac4622339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084a6bfe-9582-4d6d-bf83-5437920b4c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674f6ae8-4301-4ca7-9b19-44e2dc385d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fa7888-96fc-41bb-ae27-861aaf60f373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46a806b-3946-4a94-9c91-8b82e8d17030",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554f8b0c-9856-42ee-8864-381bac921e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "371f386b-1792-48a4-937b-3125195f3dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c6da25-2884-4043-a1fb-876ee10cc69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d376c0d9-a66a-40a2-bc67-96530cbe6cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8e3c61-8cbd-46dc-95a2-e92f435a8e72",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3828871d-214e-4d10-b8c5-b4e8c55c111a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e01048-f8bb-4ffc-83db-8b78697785bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759006c7-265d-41c7-962b-a240c0b8b5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98beeaf8-d10e-4fc6-82c6-c82e6efe706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb90b2a0-2e5b-4948-bb4e-95bcdc98f2b7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2247a69e-b48c-46e8-815f-acfb24cb9177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4220db-8664-48bd-803e-54accb6134b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3fde26-5039-449c-825f-2a1bc2a5efe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc41478-acfa-4631-b7b4-5377513d0322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcf975f-efde-4d9a-b615-656b07b2d74e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8a7625-91d8-44a9-ba13-77d096d31659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b25bfdc-6e31-4906-8fdb-d48cc0162d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85d9795-a120-4b01-9e9b-c23565539b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e51ee3-8709-41a2-8084-36d40bfc5389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f353c463-9ed6-4781-8084-9a6c3e362729",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f70f26-5e75-4b10-a81e-2c243f9cfa17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05d921b-c0cf-45b1-b2d6-1009a8c5a1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc62bdd-e232-4274-9e0e-e09e2e3b011a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025187f6-fb78-4949-bcac-6ada30b6f2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fe5a0b-92a4-46d2-84f6-57fb7285a3db",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9770d1f5-85e5-46a9-8cb3-dd78bbc3b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a3b75f2-46fd-4844-bca1-1c6c0ea09bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a242c051-0161-4a34-ac32-0752fe66564c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0a6419-6c3a-449c-9f19-4b87773603e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ece36a-3277-4873-ab89-51aa6caeb837",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e1087d-2a27-4d8a-80bb-ff4eed5368b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297655bd-144a-416a-92fc-ac94e29e92e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b56de4-4f5b-49b0-b418-75f671c1a000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30973f90-0f8e-4604-af49-2f4a633ee85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b41069-0b65-4fc3-a208-4b50133bb037",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9978b2bb-d9de-4732-89ec-4bcb3167e13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a3cd5b-a31b-4ac3-8ff0-5bc7762727f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f8f4cd-1b2f-46fa-9be9-88e13b197984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aab596d-2dc4-4e4c-ac92-bf8e735c3a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ec2c8c-8eed-47b6-9894-a59f95f32f60",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b0003b-3d24-4983-a934-3dd7e07b8e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cefbcb7f-b225-47b4-8043-97c81fa1edc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa139896-ef91-46dc-a365-4ced0f95f356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2afc23d-3119-45da-92d7-b3db5fd138a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b9990a-f102-462c-bca9-dd14c2073df2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c7f257-a8aa-41a1-b5f1-d33fb076843a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b88527f-bf2f-42b0-91e3-57d363344b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6c7882-ef6f-42f0-a09e-16071950f2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177b5692-7207-4a1b-9b12-db3fb582287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0592c0f3-48be-403a-a59c-6a77d5b9a6ef",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38859b71-41dd-492a-9253-ec9c14313a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e328ad-5119-4bfa-8072-a55c1f7ff50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28a5213-5d1f-4a60-a5d7-da1ba812172d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a5601f-823a-4f97-91de-180135be248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bf85e9-2d25-4973-adab-7cf349634921",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69ce2f9-ae4d-4fef-910c-01dbb2610857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221d2651-39ee-4054-b848-c86d9d9d977d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9346d8c-5861-4854-ba14-e71907902bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17babf95-9346-4b3c-9ccf-5d7d35071e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae2f260-a466-410b-8046-89c2b576ee80",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc127bfe-ac9e-4d62-adf9-4907b426349f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1146382-179f-45e1-a69b-0515fccae5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0adf70c-f1b2-4221-add2-84206ea8f24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e699c2-4d33-4c3c-aa0c-2cf31fb035eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ab38d7-e106-46ad-b68d-1d4563fc8689",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509c1b7d-e4ad-4d6f-a7e7-b59d7715969b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d396101-f62e-42fe-bf49-c56c13b463c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63ca8b-36fd-4562-8f0c-04ff954e7197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef56085c-f8c4-4d91-ae98-c6ac8ceae0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd0c2f0-c032-4954-aa52-4a5148006ea7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d0e8f-158c-4f5d-a188-42b9d9c0ccc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479d269a-735a-48af-9ead-8d8243f458bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7628dceb-76ea-438f-99fc-6ac45f8f650a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f739998-d5c1-4d2b-aee5-00546a58fee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de144a8e-62e6-4098-82ae-736c6edabb3f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213149dc-e08b-406e-b953-1f448a7ee269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee40e48c-1c01-43bd-9030-5c9f07883469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db159ef1-6e60-4be1-9cef-5c4ecbd63b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ead9c17-ac32-4c52-8a00-17a11f2ebca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab54a4f-bdde-4681-a314-8c74b2c3fbce",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3921a9-17fd-4f56-be27-66448394eb7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b35d1075-cb7c-4b5e-9d78-b7852819212b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f432d41f-af2b-4d02-a487-4ca360d3e73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d11da59-9d7c-4909-9117-69121d22c1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4978a2-a4cb-48ec-bd11-c58cece1fa32",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7936d5-bc41-4545-b150-0aded413efef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44ae0f1-fa29-4cbe-af14-cdebf4d0484b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2de7288-b74c-439e-82be-9574c5c99670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b5f2e7-9a11-4fad-82e2-06eb5c44b4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c288e23-31a0-457e-987a-f14a6ae4bd60",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142b982f-2787-40b4-ae05-b2f541032df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7d6e43-b3d5-4470-963e-e5d647d2076d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe848806-f695-4f0a-ba81-5131b60f0580",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179a7dc9-a2ca-4fee-88ba-3a3cc8efa66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08341f0a-b002-4dcd-83ae-168dbe5cf2b1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcdb222-7906-47e2-a12d-785d90d26674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53326273-c2f1-433e-b962-8ad0b55040e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50edb23-92a7-465c-9643-92a752a04d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db3b2d5-3154-48bb-947d-168d9a322c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e481901-1701-4d01-bf99-52a26d9a4eeb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e386706-83f8-4079-b85b-89efc86bd0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e480dee-f0d3-46e4-a46f-32ab4528c61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fbafc9-0230-4657-bce6-f5d6a4c02b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477c8699-6039-40ea-ba29-eace34687b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193f32c9-f35c-4b5a-9a54-a700b10a3257",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fc3ba2-4889-4d29-864f-14b0badd2801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8899113-d48a-486d-b8e5-99521e863ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f113ce-11db-43e2-b8a7-e01753804b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dec02e6-bd00-4638-8065-c5c05f651464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e2540c-5e10-48bb-9a5c-42830851c211",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d505db3b-1891-4843-9b23-222676fa5578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978cdd61-34d8-4ed9-bf4c-299f493ccaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743198b-ae71-476f-8439-0c739ed4f593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7062dbf3-5ca0-4ed4-9775-7dc91996d18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1a7a82-e34d-49a2-a869-e227f911586e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad157f6-e1b8-4ff8-867a-cf727f9903b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff259514-9e2b-4bad-bff8-8d80b5020262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d9a0a0-b68f-43b7-a9d0-1e34c4190424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b068f32-3fce-4c7a-a1a7-2941c6613e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20cb21f-7ea9-4e15-a8c3-f29b1a948de9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a994a4-9f52-4d3e-98b3-aba6209392b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf50f5d-72d5-4b3d-9b83-1c66c8a866ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd199282-12d1-4ebe-9c06-792b2ef5b818",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6252966-9c82-4f0d-b5b5-8112f2e23c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24c97ac-d5d2-49dc-9957-f79219f6769b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dc7128-d3f7-4e6a-8b90-6e7542edabfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1032798d-2730-4101-9648-f220aa6d9632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87048ad3-922e-43ec-b4c2-b90333e035a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113150fd-8895-462b-a36e-8a4dc0abde4f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "527e1852-1f72-40c6-a93e-89e855c0e53e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3481b145-c28e-48c4-b590-2601362e3ef6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f6cb2e0-221c-4806-a141-b79c76b9a87f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "473c97a8-57ab-4b44-bf72-3b6478c4ea35"
                    }
                  }
                ]
              },
              {
                "id": "0ecee0d1-408e-446d-a63d-ed092f2e9cef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b4b5c7b-b129-46e5-b3fc-084bf7d66c02",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bffed0-5cd8-4a07-8910-9e2b70cf65fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "31d0cbc9-c8dc-4e44-8331-e407d073a1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6225da-7cd9-4c16-84f8-0e419ebdf8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "364c4f60-67eb-4e31-977d-bfd2287e39d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead70396-fb96-425e-89ba-eee41ea394fe",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4914d5ca-ba73-4b31-b560-4c20a0ef8c5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d06d209-29f5-42bd-b474-c99f99c17712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6fd446-242b-4d57-b7fc-2254bb2a2499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "271c2675-eefe-4b06-abbc-486c23399586"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "408e4e55-7698-4543-8dfc-8e0702d47e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3091bfc5-a8e1-4c7d-9173-149718513370"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b5fc18f-409d-4e80-943c-5289d534ce32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36572ac0-3374-4eeb-bfa3-2a49c6760a02"
                    }
                  }
                ]
              },
              {
                "id": "5ce6e707-e432-48bd-8cd2-95bb7b46f7d4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "29d30581-6185-435f-bdc6-bcf5520f5dc1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f850c61f-c130-45a7-9424-4375a6bb052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9a4b1e05-9a9c-4833-abac-836edd8899fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15b564e-efe3-4fec-a611-c53baeaf295b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1597f3e5-5f90-4e33-8dfd-ea5bfae25bdc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5ede9d6-6eaf-4842-ab20-6b6d75264c64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ff4e86c-672e-4fe9-a797-2a95f2e6b081",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87187a1d-d27c-4174-ad83-25182b9722cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1a1c63b-e1d5-49f5-9a5c-5e542c934d55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ee2f0a8-06f9-4e64-b8e7-0361e1575697",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f70e88b1-7a3e-482d-873b-27e99e381213"
                    }
                  }
                ]
              },
              {
                "id": "5b6e2a7c-61b3-4937-ac2a-a48622de8075",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e38ec45-c938-4282-af94-f4a45d6105d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b75cd16d-5ea0-487b-bb49-659d5bbc7435"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e3001d3-216c-434f-a484-47c997db9f21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "500c5f68-ba41-404b-be78-0740f90c79ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f35a441a-f89b-4e67-a371-2ec17a33cb10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ce72331-baf7-438d-b234-d1494e3dadf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f8cea09-8b5e-4835-b78b-2e45cfe83def",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ad5f9ad-04d2-442c-b6eb-d82647d01474"
            }
          }
        ]
      },
      {
        "id": "d75cd061-4e92-4fb4-a71d-44556b7a7ffe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d68e158e-6f4b-4ee8-a7c3-374a2f163ddc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ab7205-de2d-4396-82c1-e66d92529b66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca66f50-df09-4987-a706-f4b75c945f70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "efb35ecc-c9d2-44aa-b544-d2b0178afef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285420cd-f281-4b46-85fe-2abf77a4818d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64bc295-f3df-4c47-be02-92fc46b6aec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a22dfd2-e3a0-481f-b02a-5404f1d95731",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703ae66b-410f-4fe2-b44a-0f96d4b4d10c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "54fc4c7c-a341-4b75-9152-d03f1443ca45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a0c231-0a49-4d88-8a13-4b3cfb49d5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ad11c86-ac3f-4e4b-81e2-cdda26efcec3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "645aa122-441d-4493-8e41-f6c326f39677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ff17a42-afb6-48ee-8f28-b2d6c2225a2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f762e80c-9977-41c4-8ac9-19ecee5d1404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85d6a272-ba4c-4b93-ad17-452056edd767"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62053465-9992-4010-9b25-4f1ae6a30a56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e0f5afe7-a8d3-42d0-a89c-4573834e63e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69e80f3d-95f0-488f-8e75-53513359dfdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "891b74b5-4f6b-4ad1-88ad-38954218b9da"
            }
          }
        ]
      },
      {
        "id": "dae12c9d-a615-4cb5-ad06-4279749096f5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "516874de-5467-43ee-8c98-021128fcb462",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71d758f5-b5dd-4013-9f59-5adff882e20b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "856ac145-92d8-418b-ac82-a319a857a163",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c2daf5-5aee-43de-be21-3218f00d3105",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb6eadc-e814-4b80-b06f-afed42926adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4f03e8-c05d-4c0a-9d6c-de3b0076d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21e15279-26dc-4147-a1e6-da330940cdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80719973-fbec-4889-9ee9-84c7be5e63ac",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5a0430-3046-4180-be33-de905f2ac7c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f29dc7-6e55-4d23-9f33-722dd3409805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce72eb93-5ce0-4323-8a09-707cb960b15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a7701e8-fc85-4ab8-8956-212219fc2b10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4b46308-80a7-4cae-9af5-14ab470faade",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad80de9e-d9c6-49b1-becf-52e343d63142"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73ab5fb3-5766-4f6f-9348-019e12fd1e82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "845e77fb-72cc-4fa5-8921-48334c92ac2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc213a84-7fd3-4e92-a0a0-64389a5f1013",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89f6f7ae-10c2-4dcf-9b26-55ac1a9d0ad7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c45f558-0e13-42de-accc-9f771e9da199",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59217590-28c6-4a09-ac2c-01da06646bdc"
            }
          }
        ]
      },
      {
        "id": "43cc7eff-ac6f-41e0-b5f4-414e62ad3b7a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "25f49541-debd-4897-8528-6f013d7e670d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afb5eccd-858b-416d-a67a-efcc85777a91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6b14045-de70-49ac-a29a-1783fc3149a3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb60ed6b-c7e4-4314-a754-bc9180db585d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcefc1ca-450d-4c9c-a72e-8bdc3f7a7b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283a580b-467c-4bfb-a9e7-f86a8b24257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8db574d2-fb2f-47fd-9d02-7ba3268d73f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090d1e4c-9319-46fa-ad63-e5937e5c3cc8",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c932f3-f949-4af3-9847-984bd50658c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fb14e5-cb05-4207-a6d7-0790780dfa66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208e85f4-2cd2-49bc-ba61-bffefc55c8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bf820ea-f015-4bed-81c8-4001bb4c7428"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51f5cd4a-0d83-479f-8fbd-46f817949a99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9767ece-17dc-4c45-932c-f65b4791c29a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4f6bb18-dfa6-4fdc-b6e7-c48460d4aaf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab81cef-9312-4733-93aa-ea17dd9b7777"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3d319f1-6858-44b6-abab-5996cd80ee6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee59e755-a291-47fd-aca5-a38bccaf8b16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a79850fd-6033-44f3-a017-6cbea75fb679",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f466e386-4ebf-4aac-8c4d-d2dda882d68c"
            }
          }
        ]
      },
      {
        "id": "3eca9d77-5f62-4827-9348-a9e8bd71435d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ef54501-44a1-4461-a296-0fc84f1e3a4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c70804e7-e9a4-4c27-9b7d-47b373f367f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "60ded6d3-0e2e-4e08-9372-71ff6cd824e4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9d318dc-7806-44c4-8988-c6eccb419be8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e358be6-ff67-492b-a47a-4e27b608de71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 903.6615384615385,
      "responseMin": 11,
      "responseMax": 8626,
      "responseSd": 996.1021074772951,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684802269986,
      "completed": 1684802516620
    },
    "executions": [
      {
        "id": "c92b7903-51aa-4a1d-87f9-b481fc93d999",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "92d80239-a93c-4e31-9dfd-6f5556b42dfa",
          "httpRequestId": "0c7f0167-8bdd-4b8f-a0a0-e16eaa4f942a"
        },
        "item": {
          "id": "c92b7903-51aa-4a1d-87f9-b481fc93d999",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ecc37f2b-1c43-496d-b212-6f43e3a22d79",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "44cbc89a-0415-411f-b6c6-cb0323c6e40c",
        "cursor": {
          "ref": "732310ac-cc0e-4971-bcd0-8adb82cb5335",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a93b2870-6603-47ed-873b-3c888c579e3f"
        },
        "item": {
          "id": "44cbc89a-0415-411f-b6c6-cb0323c6e40c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b5330cec-bb3a-45c5-b235-13c1f505728c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "4cd2330e-93ec-45bc-ad6c-048503559cfd",
        "cursor": {
          "ref": "f7209bc8-1edd-4161-b115-724485020552",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eb44c66f-d4d2-4cf7-9663-90c086f533ba"
        },
        "item": {
          "id": "4cd2330e-93ec-45bc-ad6c-048503559cfd",
          "name": "did_json"
        },
        "response": {
          "id": "a2a28150-c7dc-423f-91a9-7d911932eab0",
          "status": "OK",
          "code": 200,
          "responseTime": 1478,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31156f8e-2c88-4b88-8c26-b5e264bb1677",
        "cursor": {
          "ref": "a225eae1-5d3b-4d7e-b76c-596fdec82a7c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "235b28cd-ee51-482d-aa3d-cda57b4fb021"
        },
        "item": {
          "id": "31156f8e-2c88-4b88-8c26-b5e264bb1677",
          "name": "did:invalid"
        },
        "response": {
          "id": "5671da77-cd85-4a93-8a17-f3c05ac44f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2153,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31156f8e-2c88-4b88-8c26-b5e264bb1677",
        "cursor": {
          "ref": "a225eae1-5d3b-4d7e-b76c-596fdec82a7c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "235b28cd-ee51-482d-aa3d-cda57b4fb021"
        },
        "item": {
          "id": "31156f8e-2c88-4b88-8c26-b5e264bb1677",
          "name": "did:invalid"
        },
        "response": {
          "id": "5671da77-cd85-4a93-8a17-f3c05ac44f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2153,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2891dacf-b2ae-4f73-b9a9-3e17dd2def7f",
        "cursor": {
          "ref": "26e0ebf0-aa32-4df0-93ad-c9aee05d5802",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "576c4727-d79c-4fde-b85c-80745e1ca52f"
        },
        "item": {
          "id": "2891dacf-b2ae-4f73-b9a9-3e17dd2def7f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e7da0b6c-9fee-4680-a69e-1728de0f449d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1442,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e47622-d3c8-419b-8452-66e131f203f4",
        "cursor": {
          "ref": "b27d4ad7-ac08-4c3e-b3ae-463086e9411c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "91690591-e378-4458-87e9-88fbf8c95fa2"
        },
        "item": {
          "id": "62e47622-d3c8-419b-8452-66e131f203f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8b0f9e0c-6dbf-439e-a18b-e8f37b39027b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1503,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddedde6f-2ecf-48d1-9158-13b9632bbb9e",
        "cursor": {
          "ref": "b7e78c85-d99f-4ede-b71f-758b3e60c269",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e11f3882-7477-4448-b510-58ba9232b82c"
        },
        "item": {
          "id": "ddedde6f-2ecf-48d1-9158-13b9632bbb9e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cd62aa01-2d4b-4b30-affe-23c6afed37c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff10efd-9ee4-40a1-8a89-9cff8b1350be",
        "cursor": {
          "ref": "fdc242e6-67fd-4b61-8674-96d7c4ae92bb",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b1ac27a-77de-4886-8ec5-90ade3a119ee"
        },
        "item": {
          "id": "1ff10efd-9ee4-40a1-8a89-9cff8b1350be",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4a7965c9-82dd-447c-9dc9-6bd44649e7cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1220,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff10efd-9ee4-40a1-8a89-9cff8b1350be",
        "cursor": {
          "ref": "fdc242e6-67fd-4b61-8674-96d7c4ae92bb",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b1ac27a-77de-4886-8ec5-90ade3a119ee"
        },
        "item": {
          "id": "1ff10efd-9ee4-40a1-8a89-9cff8b1350be",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4a7965c9-82dd-447c-9dc9-6bd44649e7cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1220,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935e04cf-b720-4464-9da3-cf761bf1253f",
        "cursor": {
          "ref": "17ae544c-55bd-4bc2-b430-10fe61b3c5ca",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "305b3f9a-9b56-46d3-a4a4-4432e93d98ed"
        },
        "item": {
          "id": "935e04cf-b720-4464-9da3-cf761bf1253f",
          "name": "identifiers"
        },
        "response": {
          "id": "ad3fbbd9-bffd-42b8-a4f7-5cbf4d217352",
          "status": "OK",
          "code": 200,
          "responseTime": 3407,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc726da3-b287-4960-8ca8-fab5fe2b745f",
        "cursor": {
          "ref": "5095fc3b-abba-4454-aab2-883269feb20f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "34f83ad0-9c5b-4ded-b762-452b0d68b6b1"
        },
        "item": {
          "id": "cc726da3-b287-4960-8ca8-fab5fe2b745f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fd828afc-8252-438b-88a0-33afc61bda37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1423,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc726da3-b287-4960-8ca8-fab5fe2b745f",
        "cursor": {
          "ref": "5095fc3b-abba-4454-aab2-883269feb20f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "34f83ad0-9c5b-4ded-b762-452b0d68b6b1"
        },
        "item": {
          "id": "cc726da3-b287-4960-8ca8-fab5fe2b745f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fd828afc-8252-438b-88a0-33afc61bda37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1423,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484e1d61-bc4f-4e6f-94b1-246c1b92103d",
        "cursor": {
          "ref": "a16341f4-0d19-4445-81d5-bedca25172e4",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5ad6d098-6163-48a2-a36e-58dc329fa07a"
        },
        "item": {
          "id": "484e1d61-bc4f-4e6f-94b1-246c1b92103d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d2e09bd3-ec87-4ee5-9ec3-ce9adb09a81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1345,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa30aef-4fd6-40df-8c34-84750ac3d7d4",
        "cursor": {
          "ref": "56b2ebb2-f939-4e09-96c6-b1183188a7d1",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "14fd1164-8a8e-462f-94ce-440a626cbb38"
        },
        "item": {
          "id": "0fa30aef-4fd6-40df-8c34-84750ac3d7d4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c645336-8860-479f-979d-a06cdc381e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1310,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4024df1b-3c11-42a0-af68-cec8db66882d",
        "cursor": {
          "ref": "53ac8b2e-9008-4a08-b52e-5a539f2f6823",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7e553f0a-ac55-416c-b761-f1862ea2e6ba"
        },
        "item": {
          "id": "4024df1b-3c11-42a0-af68-cec8db66882d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a15e9026-e0e9-4ef1-8d7b-386e80430b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1324,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ec8cd0-f1a1-4673-801f-52e63005eff1",
        "cursor": {
          "ref": "f4038e06-2239-4ec2-a9ca-bed40fb9d0dc",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0d369028-0da4-42a3-8dcb-be732be570fd"
        },
        "item": {
          "id": "03ec8cd0-f1a1-4673-801f-52e63005eff1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "41e9ee7c-7814-478b-816e-1e13aa2272fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1357,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bdbcb8-48ad-4625-8865-b3baa2e56928",
        "cursor": {
          "ref": "8bb464d9-ce8b-4c6d-8c39-e850069b2032",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12c3bae7-8382-4122-9b20-4398c8b09dd4"
        },
        "item": {
          "id": "97bdbcb8-48ad-4625-8865-b3baa2e56928",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e47940d9-5f3c-4783-bfd5-dad7cc27a7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1274,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e24aa97-06bb-4c62-b933-6d0163374585",
        "cursor": {
          "ref": "1ba55b32-810a-4144-9538-44a53b222e5c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "db28142e-61c3-4c4c-bd24-90c59979d2a6"
        },
        "item": {
          "id": "6e24aa97-06bb-4c62-b933-6d0163374585",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6cc1643d-38db-43f9-b0c6-b38f384420b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1397,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dc75e7-5a78-43bd-9064-6f684d914759",
        "cursor": {
          "ref": "56443863-404c-414a-a85b-664b911e07b8",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86917473-df87-4e0f-abc8-3e99bb5947e0"
        },
        "item": {
          "id": "28dc75e7-5a78-43bd-9064-6f684d914759",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a8b6f622-9644-48d6-aefb-230ad85baaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1413,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8b945-4f58-4dd2-8c5c-088a2e6c7bce",
        "cursor": {
          "ref": "98f15ee8-d0ad-4f21-b367-9ada8b0941ae",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "08f1e236-2a15-43b9-bce1-29ce3c826b8d"
        },
        "item": {
          "id": "a7e8b945-4f58-4dd2-8c5c-088a2e6c7bce",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dae82570-1335-4627-bb8d-1b5a42cbd1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1437,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b2db11-7a4c-4e4d-b233-e498a00f5e3c",
        "cursor": {
          "ref": "e97f5eb5-4648-4be2-9883-640dc01f490c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c842f2ea-ce27-428c-8e05-19554153fd56"
        },
        "item": {
          "id": "73b2db11-7a4c-4e4d-b233-e498a00f5e3c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "914931cf-92ab-4aca-baed-e421005eee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d59ea-7ba8-48e3-b6c0-17f4c25accb4",
        "cursor": {
          "ref": "df4671a2-b1a1-4f14-9980-5e2f415c2113",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "807ad55d-63fe-4d12-a19f-483e6a63252b"
        },
        "item": {
          "id": "2b9d59ea-7ba8-48e3-b6c0-17f4c25accb4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d620dccd-47a1-437a-bb43-f49888d99f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa927452-0f35-4843-ae3a-0f0a01ad67bf",
        "cursor": {
          "ref": "af25ea70-b30b-49a2-bbd4-33baf46570e9",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cc4c7123-5366-4621-a335-b27f65d0dcea"
        },
        "item": {
          "id": "aa927452-0f35-4843-ae3a-0f0a01ad67bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dcb4ef6a-47e6-4e95-afcb-776c24c89cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3657d7db-6128-4115-b1ac-e1989c2c0754",
        "cursor": {
          "ref": "f89bccf3-7f05-4b8c-a97d-2abfe954c48b",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8caec81f-786f-42d6-9966-0eba9817b6db"
        },
        "item": {
          "id": "3657d7db-6128-4115-b1ac-e1989c2c0754",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e565b09-16f0-46c3-b679-b9ac030807af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9058ad8e-5204-42c6-8105-9f3129b4353c",
        "cursor": {
          "ref": "3952d3ca-9380-4b1a-a869-b5cedddae438",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1d58e067-bce6-4962-a818-4d6238e4331a"
        },
        "item": {
          "id": "9058ad8e-5204-42c6-8105-9f3129b4353c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "78c50646-39bf-4686-aa0b-9c6d6d57b72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f1191e-669a-4252-a464-325a745e37be",
        "cursor": {
          "ref": "783914f2-7487-439b-a0f7-7b856d2f079f",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c913dbcb-4b33-41b7-99d3-3db7ffd4dc68"
        },
        "item": {
          "id": "61f1191e-669a-4252-a464-325a745e37be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "09e25041-2d2b-4b2b-a78b-3ebed2384ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e102cc-6ef3-4ba9-8870-397599b06690",
        "cursor": {
          "ref": "1c53421d-5605-4790-8061-82312e882d66",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "136139de-38f7-41a2-83a6-25759670a620"
        },
        "item": {
          "id": "f8e102cc-6ef3-4ba9-8870-397599b06690",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f0332da2-ac70-4505-91ff-6c382693cbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199c3b12-4c8d-4908-a2e6-a3ad8c00cb7f",
        "cursor": {
          "ref": "04f81e7d-2990-4e64-bf3b-81bf1f8f1c46",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "32c42e7b-bb18-4de0-b974-4a3b3c6cb54b"
        },
        "item": {
          "id": "199c3b12-4c8d-4908-a2e6-a3ad8c00cb7f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "75aaf255-cb6a-4d63-b02f-28b168cbde2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcecf87-f896-4769-9d5d-4e74e32b5234",
        "cursor": {
          "ref": "79fe9605-1add-49c9-b605-e4818016deed",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6a1d199e-49e5-4398-9ab1-0341aaefbfec"
        },
        "item": {
          "id": "ffcecf87-f896-4769-9d5d-4e74e32b5234",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "425a20c1-e377-44cb-ad28-865c16c9c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ed1809-2fa0-4a50-9e1e-950c87371946",
        "cursor": {
          "ref": "d08540e0-7f8b-4cb6-b973-41bbf105b1f3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4cfb9caa-8c07-456d-9144-e0b5e9f8e7f6"
        },
        "item": {
          "id": "a3ed1809-2fa0-4a50-9e1e-950c87371946",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bf1e540d-3da5-44a1-aa6c-6cfc7a990915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47440122-1c26-4ac5-ab94-87290d724540",
        "cursor": {
          "ref": "3233f198-a7b6-42a5-b1c1-0f7377b556a7",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7d6d206-f899-49c8-88f3-5b5c75354341"
        },
        "item": {
          "id": "47440122-1c26-4ac5-ab94-87290d724540",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd68a547-74ac-4e54-846b-967b6254bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee74ffb-b83b-40f3-8427-4a55b995a08e",
        "cursor": {
          "ref": "b7bad5e7-4ba8-4b9d-b540-3a1cf3f30222",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9b11dd7c-c3c8-4cf1-b3e1-58bcdcfb4e43"
        },
        "item": {
          "id": "5ee74ffb-b83b-40f3-8427-4a55b995a08e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8e5944a9-d483-4e2d-9295-b17d42b78904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeff352-9e54-4860-8f7c-0adc4ed11f88",
        "cursor": {
          "ref": "c3337b2c-88f9-4d89-8bba-ebf634570928",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "68134bda-b4a1-4ecb-bc00-f80f700d28a1"
        },
        "item": {
          "id": "feeff352-9e54-4860-8f7c-0adc4ed11f88",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "12f36c86-450c-43af-8076-beb870206267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67238519-26f6-4890-988e-705257da4560",
        "cursor": {
          "ref": "bf9107ef-a28c-4c84-be01-9090c082ec4b",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "77242aeb-5522-48f5-83bc-2eeeaee867fb"
        },
        "item": {
          "id": "67238519-26f6-4890-988e-705257da4560",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7349ef7b-924b-4f40-921e-d88432b9f636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db27a39d-0d7f-4e77-b7ed-5b9fc9c385ea",
        "cursor": {
          "ref": "e75330f0-5e97-434c-ac38-94b85f338061",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "58638bd1-e28a-4ebd-b028-50d2505de9b7"
        },
        "item": {
          "id": "db27a39d-0d7f-4e77-b7ed-5b9fc9c385ea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "15d27dc5-0034-4ad9-92fa-53adaa0fc218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5419e40a-e4b8-4f94-aab9-e19f75a4b95e",
        "cursor": {
          "ref": "8e068386-4ccd-45b5-b742-cb21f5586b24",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "23a169f5-d80c-4ba1-a961-ad1f7ee7e82a"
        },
        "item": {
          "id": "5419e40a-e4b8-4f94-aab9-e19f75a4b95e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7425fede-627f-4f01-9385-4d47a81d6b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4f7f95-282c-44a1-9caf-b750a0579d92",
        "cursor": {
          "ref": "d27a7376-0ba3-468a-b299-75f8f6521ff2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "81702153-9311-4f40-9f43-e761b85fa36f"
        },
        "item": {
          "id": "fd4f7f95-282c-44a1-9caf-b750a0579d92",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9a4b9a8f-7503-4365-9adb-a5637bae8d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a3835a-855a-469d-9e61-d02236ec3437",
        "cursor": {
          "ref": "4e14fdb4-bea0-4f48-8895-e506617da598",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7776003b-8035-41c4-b4b3-52a9782e62ac"
        },
        "item": {
          "id": "30a3835a-855a-469d-9e61-d02236ec3437",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5200091e-a15a-482c-b05e-e7dde441edc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88a3337-2608-41ef-873e-89447c1b0ac0",
        "cursor": {
          "ref": "62eccb13-8998-4c5f-83b4-335d8055b29c",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6886ea85-1343-436c-b78d-de23480e5301"
        },
        "item": {
          "id": "b88a3337-2608-41ef-873e-89447c1b0ac0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cda074d1-54c9-4528-bea1-bc0b1267e6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f831c0-45cf-4915-b42d-9758e4373feb",
        "cursor": {
          "ref": "9e47af6f-a20d-4b62-a680-65744ab04085",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ada8e221-1aa5-4449-9605-ebe3de046d9f"
        },
        "item": {
          "id": "03f831c0-45cf-4915-b42d-9758e4373feb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0d4768ab-0048-4ca6-99b5-5fd50dddfa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5880474-52b2-45ef-98de-505899c8c88c",
        "cursor": {
          "ref": "19d78a94-07ef-44c3-9e14-bdc00703e267",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6395c2e2-b2ce-495f-a47c-25e3b45bb8c3"
        },
        "item": {
          "id": "f5880474-52b2-45ef-98de-505899c8c88c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8db11888-7f59-483c-a8b3-0a3be32ccdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a399e-72d9-4edd-b5d4-1941a293e34e",
        "cursor": {
          "ref": "0d42d907-53c4-47df-bee9-ce3668213808",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9170311d-1e54-4f95-a72f-2ed4024ceba5"
        },
        "item": {
          "id": "632a399e-72d9-4edd-b5d4-1941a293e34e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "62174aea-433a-4a42-b1bb-fd3ab4604543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1355de-8181-4d15-9a49-d78f0e825732",
        "cursor": {
          "ref": "9312c695-8473-4b79-b108-e430b567112c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "217ee8d3-f2e6-4769-b584-dd42fc021cda"
        },
        "item": {
          "id": "8b1355de-8181-4d15-9a49-d78f0e825732",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b496d6ba-7e96-4b16-91fa-6a7e63b4bd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cf391b-a1a3-4e83-8944-a338309067b7",
        "cursor": {
          "ref": "29460816-525c-4f4c-8377-5e172e411e28",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1e8c41c6-4b06-47c1-a5ad-a101ce633c8d"
        },
        "item": {
          "id": "f1cf391b-a1a3-4e83-8944-a338309067b7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e064f5e9-0969-43c5-9659-ded1e45b0050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689716c1-cbc7-4a18-a8fa-5f3ff068330d",
        "cursor": {
          "ref": "2b463849-6b22-4bbe-9196-f3bb4c87c5da",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c6645564-b7ce-4399-ad3c-8833d9758bee"
        },
        "item": {
          "id": "689716c1-cbc7-4a18-a8fa-5f3ff068330d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c9c4c7c0-0f8f-4b5a-a195-eb0271408050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62241193-7d15-405d-a74c-e49f42025d50",
        "cursor": {
          "ref": "172545b9-37df-4912-8f48-20efacf10ed7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2bf52708-5dc8-4234-9b8a-3b9710b11502"
        },
        "item": {
          "id": "62241193-7d15-405d-a74c-e49f42025d50",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b9f3cec6-ca97-493b-bf1d-eb651dd23994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27b94e7-a6b8-4cd7-b06e-c167a29af66d",
        "cursor": {
          "ref": "0bee710e-bfe7-4eaa-ba17-b627839a015e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9e998d07-7510-488c-8803-f20f5e324b04"
        },
        "item": {
          "id": "d27b94e7-a6b8-4cd7-b06e-c167a29af66d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "887925b6-ef8d-482a-932d-5f2dc258c51a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1004,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6315ce55-4f95-40fd-a82d-fdc734ed9b1f",
        "cursor": {
          "ref": "610982e6-ea8c-42f2-91df-87372f9794bd",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce86d722-f1da-464d-b086-cdd19f956c23"
        },
        "item": {
          "id": "6315ce55-4f95-40fd-a82d-fdc734ed9b1f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36bbfa31-9757-4ac4-b196-74a5722f3b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4245993-831b-4afb-9b6b-1de459de6349",
        "cursor": {
          "ref": "700a7fb7-30d1-4e03-afba-59cfc7064010",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4c66300c-1218-4eb2-a40a-9f13c8d295cc"
        },
        "item": {
          "id": "a4245993-831b-4afb-9b6b-1de459de6349",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b52aa0a9-3b81-4a4b-9a15-a2fd93876ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd200896-c9d0-4e8c-a009-8e556396b365",
        "cursor": {
          "ref": "82e0b887-2fb2-4993-9f89-dd1d063bc041",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b247f96a-0803-4b37-a25d-1704f77eba5d"
        },
        "item": {
          "id": "bd200896-c9d0-4e8c-a009-8e556396b365",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "39773170-416d-445d-a783-00cdc31a4cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1516,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08aa276f-39f8-4ad5-abeb-d1a80694f17b",
        "cursor": {
          "ref": "82b59ffc-0465-4f54-84bd-3f78d5d714c5",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5e82a360-63a8-4fcf-b61a-d53e450b119b"
        },
        "item": {
          "id": "08aa276f-39f8-4ad5-abeb-d1a80694f17b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f1e93383-a8a5-49c1-bb42-181647de5925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c7b334-9dd7-498f-a532-ab23d490327f",
        "cursor": {
          "ref": "9ae65ef2-6fa3-4072-9908-49ecf8ffe1dc",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e096e938-eeec-4321-9e3e-882c35f8a4b3"
        },
        "item": {
          "id": "77c7b334-9dd7-498f-a532-ab23d490327f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e52b5255-caf5-4755-bca6-65e2de7b0f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb646c9b-db3e-4d22-a25c-a816222e4f3e",
        "cursor": {
          "ref": "ab40a7d4-e817-456f-90d9-f32f3813cbea",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c359c711-44d9-42ca-8967-118079f43495"
        },
        "item": {
          "id": "bb646c9b-db3e-4d22-a25c-a816222e4f3e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "238e57c8-77d7-4579-b316-b48e2c754230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18c9389-ef89-430c-b6e0-12f65bfad35b",
        "cursor": {
          "ref": "3475a89d-5b4f-4f6d-b827-a12544b50b65",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b9f04027-340e-4088-9c07-b0f6c538dd0f"
        },
        "item": {
          "id": "f18c9389-ef89-430c-b6e0-12f65bfad35b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "83202400-a09e-43aa-840b-22d43da7b884",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 978,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93f8269-a301-4504-8d48-9a5547a28b2b",
        "cursor": {
          "ref": "2c58f273-d1f3-49e9-8a76-b1c13c69d9ae",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "179f0106-9284-4d12-8e9f-0702d936faa0"
        },
        "item": {
          "id": "a93f8269-a301-4504-8d48-9a5547a28b2b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6ce46df2-d325-4dbf-94a3-13ece6ee8fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c935cc93-5d3a-4f21-8335-ba08b2f54b24",
        "cursor": {
          "ref": "e9f65c57-3d65-4183-abec-4359ae6d36bc",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "434c64fa-a330-41f5-b1de-8109439236bf"
        },
        "item": {
          "id": "c935cc93-5d3a-4f21-8335-ba08b2f54b24",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2fb6bb82-552b-44c5-a09a-f211f9c352b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040546b5-7352-4c78-89ff-1de5e32c5a67",
        "cursor": {
          "ref": "282a4a3c-80dc-434c-aa07-e6988aeed74f",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2f83137c-04fd-447f-8963-30fc397a7e16"
        },
        "item": {
          "id": "040546b5-7352-4c78-89ff-1de5e32c5a67",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "79e572ef-c8ab-44ad-b760-b6b51887e34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169da08b-e2d5-4dbc-b238-18002071ab58",
        "cursor": {
          "ref": "2f0f4fbb-89b9-44e6-b97e-8f5140dee740",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d3e201e5-bfe1-498a-b9c4-f81f182c7091"
        },
        "item": {
          "id": "169da08b-e2d5-4dbc-b238-18002071ab58",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "edc07897-ecd8-4841-8f44-7095186b70d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112b3009-b5b3-4720-b07a-926ab82251d8",
        "cursor": {
          "ref": "4f3f88f0-2ada-45ca-84f8-b82d76f40b68",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "04c8d55c-7c7b-489d-91ba-bb19ab81819f"
        },
        "item": {
          "id": "112b3009-b5b3-4720-b07a-926ab82251d8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9559622-2eaf-47b2-8855-ed8b2f3c07ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a570926-07fb-44f4-a6bb-8716a6cbd7dc",
        "cursor": {
          "ref": "d181c41e-32d2-4642-b6bb-c2c5e649b9fd",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a85608eb-3910-42e6-8d23-374d352ed4ac"
        },
        "item": {
          "id": "2a570926-07fb-44f4-a6bb-8716a6cbd7dc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1aa8c97f-6fbd-44f7-9e16-3c3ab45d0636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102cb808-7ebc-45ce-9297-3de96d5dfa02",
        "cursor": {
          "ref": "b878f4ba-afff-45b5-bf46-13817613880e",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7ec1a6c1-0328-435e-86c5-747390156c26"
        },
        "item": {
          "id": "102cb808-7ebc-45ce-9297-3de96d5dfa02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a72681b0-0d34-4093-bb3c-6f9aa6923e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8874a9-ae21-4e54-82a1-f777bf1410b2",
        "cursor": {
          "ref": "2b0b077a-c51c-48f5-be3b-fe7afc55cf73",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8da62074-4114-4006-86ec-a290c59dc41d"
        },
        "item": {
          "id": "1a8874a9-ae21-4e54-82a1-f777bf1410b2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "816fa7c5-135d-43db-af5b-27014ee37b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1079d397-08a0-4e44-8a2d-275c75da933d",
        "cursor": {
          "ref": "c11499dd-7770-4bc3-9cf9-7a734aefc314",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b28eb372-5af1-4ae4-adcf-6fcdc9fea642"
        },
        "item": {
          "id": "1079d397-08a0-4e44-8a2d-275c75da933d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4a5d2c61-6da9-42c7-ab8a-6180cd6ee930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e2c4a0-faa2-40ad-afb0-ad0ebb0cca46",
        "cursor": {
          "ref": "efceba48-533f-41c0-822c-ab56342ac90e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "735c40a8-0cde-4964-8aa5-f7717d732b7b"
        },
        "item": {
          "id": "e1e2c4a0-faa2-40ad-afb0-ad0ebb0cca46",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "02ef2d6f-51f9-4548-96ff-c375c96240ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5007506d-3445-4ccf-a0a4-9ed0152fcb28",
        "cursor": {
          "ref": "15f00f7e-8753-433a-a22b-20f77ca14237",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b5d2600f-5ed3-4c0e-b8eb-fab26c9dcc86"
        },
        "item": {
          "id": "5007506d-3445-4ccf-a0a4-9ed0152fcb28",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dd1f2fad-be1f-4e33-b714-1e8288ecb33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a17ed40-c1a9-4154-9eaa-2ad247da0655",
        "cursor": {
          "ref": "31781d85-f982-43f9-a084-27f77fa646eb",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "78a196ed-c0dc-4788-be3c-85a09d2d517d"
        },
        "item": {
          "id": "7a17ed40-c1a9-4154-9eaa-2ad247da0655",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f74b87a2-6a9a-4e00-bd34-8fdbead2f69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3962d841-6f5b-4e1e-8ee7-d2ee31fca8e1",
        "cursor": {
          "ref": "4fc52b21-8b55-4e12-9f28-75efcf97d85a",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d904a4f2-2bfd-41ec-904b-c7d37dfa0b17"
        },
        "item": {
          "id": "3962d841-6f5b-4e1e-8ee7-d2ee31fca8e1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "786a1481-a69b-4fc7-bf58-ea7c0c3d6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78c592e-f58f-4a8c-a9d9-d6903825c8fa",
        "cursor": {
          "ref": "6a06b197-0a1a-440d-b9e5-e62485869ec0",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6b6b76bf-f447-4e3c-a0c2-95663984eb93"
        },
        "item": {
          "id": "f78c592e-f58f-4a8c-a9d9-d6903825c8fa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "44505166-c65d-4e54-927f-c73a08e609ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1f8130-2b02-474d-a9be-c2b6ad8862d0",
        "cursor": {
          "ref": "d61481d0-c0a1-4d52-9917-7f929d3ce89f",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3d20c9ab-8960-4314-9dc9-f2ea0e4925ed"
        },
        "item": {
          "id": "cf1f8130-2b02-474d-a9be-c2b6ad8862d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "171409ee-cea8-468e-9b50-a03313056ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b18b1a-5b0c-4a37-8c37-e295adfaa598",
        "cursor": {
          "ref": "6ec9c588-4aed-4f4a-8c0e-64650ce9ea83",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4a7bc607-f2e7-4795-802a-af9e37476329"
        },
        "item": {
          "id": "64b18b1a-5b0c-4a37-8c37-e295adfaa598",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "90060fda-9cfe-45a1-ad6a-aefcc0b0848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a76c3a-e9b4-4937-a709-bac64a23cb10",
        "cursor": {
          "ref": "54e0bf80-cb16-45aa-869c-ac393c268e35",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "48880437-19c2-448c-8a9e-2852f08ede5b"
        },
        "item": {
          "id": "87a76c3a-e9b4-4937-a709-bac64a23cb10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f8c1386a-cfb3-4ba2-a7c3-428f13013e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe946bd1-9372-49ad-8385-3c6d65ae9d27",
        "cursor": {
          "ref": "26720baa-7122-4f3c-a61a-9d4f17e272c8",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "619a7f4d-de8d-4b81-bf89-3d00ea993036"
        },
        "item": {
          "id": "fe946bd1-9372-49ad-8385-3c6d65ae9d27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b0aa8a9c-bd2f-42ce-bc4c-63f9eef67ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc46c390-33fd-46e6-b179-b619c3c36c43",
        "cursor": {
          "ref": "c99552ce-c6eb-48ff-a646-1e46dcbc1160",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a59fe787-a414-4955-8041-6757d38f9888"
        },
        "item": {
          "id": "fc46c390-33fd-46e6-b179-b619c3c36c43",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c759a815-ad4e-4808-9f0d-46e18c9a3971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662f5c16-0a55-4be4-8aa2-0e51a9f7f182",
        "cursor": {
          "ref": "cefee037-a9e4-4dd1-8144-c73a4d4386b8",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "463d43b1-e2f5-4bbe-8cff-cc8f48dd5c14"
        },
        "item": {
          "id": "662f5c16-0a55-4be4-8aa2-0e51a9f7f182",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "81f117d5-11ee-4a20-a7ab-df985fb4da8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f3b56b-05e8-4322-9ed4-b7668e7f660b",
        "cursor": {
          "ref": "c55dd0b6-9be1-45a9-a144-59da0a01e3dc",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "351ae4d3-a50e-4a51-a6a7-141f292d1bf5"
        },
        "item": {
          "id": "c0f3b56b-05e8-4322-9ed4-b7668e7f660b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a1379fd-cdd8-4f0d-9b0e-203a7dab5c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c889674-79ef-4fc1-b6dd-aa7f2bdac060",
        "cursor": {
          "ref": "0df64098-9066-469b-9d58-fabf9a8274c4",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "11814622-70d7-428e-b05f-cc8d93c5df89"
        },
        "item": {
          "id": "1c889674-79ef-4fc1-b6dd-aa7f2bdac060",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b4bec4ff-c4b1-4d26-a791-292b6c4267ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b28617-c0ec-4002-bd97-4bd7be3e775b",
        "cursor": {
          "ref": "20d8ea00-7a4b-4bac-9cc5-1018029b8a99",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9f92fc6c-8f66-4db4-a2ce-cdf165c2a627"
        },
        "item": {
          "id": "66b28617-c0ec-4002-bd97-4bd7be3e775b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c1781bed-6873-4c8b-854e-122eaa0a0a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1883a63-2a8e-4b28-8211-be8a2f3532f4",
        "cursor": {
          "ref": "ec383778-bd23-474b-87de-5c4f6f971fe8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "422edc1a-c86f-477d-921d-c990d5e9fbc3"
        },
        "item": {
          "id": "d1883a63-2a8e-4b28-8211-be8a2f3532f4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6aa2076d-bcbf-48cf-b188-704260217b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad0d1ca-70fc-4155-aed2-b281d2a22fe5",
        "cursor": {
          "ref": "e1e6bba1-2f65-45d1-9f3c-646e9a26a03b",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "df0088c3-37da-46fc-9053-40ab766c89f7"
        },
        "item": {
          "id": "0ad0d1ca-70fc-4155-aed2-b281d2a22fe5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eafba42e-7ece-47f3-88db-beb957fda85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9400ac76-bd38-4ab4-a782-c5458993ab85",
        "cursor": {
          "ref": "690b4967-3135-4bc0-922c-a3a8eb87a49e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e00a032e-5a5d-442b-8959-d41d40e8904e"
        },
        "item": {
          "id": "9400ac76-bd38-4ab4-a782-c5458993ab85",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "77f8924a-c492-4415-bfee-30210fe07af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd88f2c-9ad7-4333-a7f5-6937850aa478",
        "cursor": {
          "ref": "54e41a1b-76c7-4f26-a078-e14a8d2a9693",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "089ae00e-69d4-4073-bb79-24f937a2b4b0"
        },
        "item": {
          "id": "2bd88f2c-9ad7-4333-a7f5-6937850aa478",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "12c453e7-353d-49db-977e-009afaafb3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd26cd74-ad52-4dd1-91a0-08879607cbea",
        "cursor": {
          "ref": "e4efcdcf-b5ea-4c2d-b075-af4a28a1c54e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4d4f3e1b-8ca1-481d-80d1-e6bad83fc601"
        },
        "item": {
          "id": "dd26cd74-ad52-4dd1-91a0-08879607cbea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6f246e85-cf3d-45be-9937-3c941101bb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b91233-6955-427b-83fe-9b4c9eb1dd6d",
        "cursor": {
          "ref": "51551eba-77db-407b-b613-bce359092452",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d68fdeaf-0f5a-46d9-9ffd-16bf31101357"
        },
        "item": {
          "id": "37b91233-6955-427b-83fe-9b4c9eb1dd6d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "54fb5307-9381-4642-9441-10bb22171952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d0fa5c-ce65-4ccf-87a8-511cdd9e38cb",
        "cursor": {
          "ref": "4881028f-5228-4fd2-8c5c-60bfb2cc0151",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eeea3935-f222-4fb2-b606-341e98d3efe8"
        },
        "item": {
          "id": "a4d0fa5c-ce65-4ccf-87a8-511cdd9e38cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d4deaa4d-5f3b-447b-a2fc-b579694f4441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a4c39-5479-4882-acb3-21088f0160ae",
        "cursor": {
          "ref": "3fee90dc-e729-472a-9018-807c66dcd2b1",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a595ea6e-e356-45e0-bb9b-5f4e02828ffd"
        },
        "item": {
          "id": "0f0a4c39-5479-4882-acb3-21088f0160ae",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6018654d-8d4d-4775-93d4-8c5f2dc2351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43536050-6959-4b11-a3da-d706d4fa6fa3",
        "cursor": {
          "ref": "4f9b8600-488d-46bb-8c9a-ac83a70a41ea",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9dcbb2a1-16f5-420b-80f0-2bc346a3ff21"
        },
        "item": {
          "id": "43536050-6959-4b11-a3da-d706d4fa6fa3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "59e40bfd-976a-41b1-bd9e-12fa755c0a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec90bf-dafe-495c-9be8-e2afc16867f4",
        "cursor": {
          "ref": "20d7268f-942b-4bcc-aaf4-c9946a623025",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b27f779-0ae1-461a-82ce-52c9e1f76e16"
        },
        "item": {
          "id": "76ec90bf-dafe-495c-9be8-e2afc16867f4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7d50d60e-adb8-430f-a75f-6632c23d2033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6316b4b2-0e7d-4e7b-a394-1ec661f76c40",
        "cursor": {
          "ref": "e495fab5-11e1-4e95-8e9f-790e018a3b96",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "96b4e4fa-c3c8-458f-8780-3b86a351aa58"
        },
        "item": {
          "id": "6316b4b2-0e7d-4e7b-a394-1ec661f76c40",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1562527b-14af-477f-9fb9-e7b11bf1f05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5cd21a-ca3a-4f7f-8be4-d9da1c8ebf1b",
        "cursor": {
          "ref": "4aee0723-0ef9-418c-a64b-0717c31e3f8b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "13821406-a6fe-432e-affe-e318ddc02596"
        },
        "item": {
          "id": "9a5cd21a-ca3a-4f7f-8be4-d9da1c8ebf1b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eda67352-5820-42b7-9d9e-559398d44048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1a8157-18da-4ef0-932c-f4b024c73733",
        "cursor": {
          "ref": "1a780f99-5d3f-41cc-aa0d-e0c426c3f204",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9ac58713-32df-448f-827f-3632e6c9741a"
        },
        "item": {
          "id": "eb1a8157-18da-4ef0-932c-f4b024c73733",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f51b459a-e071-4a22-8a61-85d3806ac7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c2c3c-5c3d-46bd-9f45-0e9a80e202e7",
        "cursor": {
          "ref": "7225dd5a-5ef5-4130-ae56-320df2131450",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d980bd1b-b1ff-43b0-a5d8-f43ef56a940c"
        },
        "item": {
          "id": "767c2c3c-5c3d-46bd-9f45-0e9a80e202e7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c1d8e830-8f24-4da8-a6fe-ad98901f8b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e75bb46-d347-4e80-ada3-976faa19e492",
        "cursor": {
          "ref": "a2ac8753-6a40-4759-bc48-e7272e43333e",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2808a3e4-e3c8-4d81-96a7-581f20a84338"
        },
        "item": {
          "id": "3e75bb46-d347-4e80-ada3-976faa19e492",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8d613283-d677-4b76-af1a-aa34bb467e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2e42f3-d201-4a43-b0ff-cc3852ee70f8",
        "cursor": {
          "ref": "1c465130-044c-4821-a1e5-0fd9858e86b6",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5fc223d5-a6c0-4037-89f5-92ea8a0d4d08"
        },
        "item": {
          "id": "ea2e42f3-d201-4a43-b0ff-cc3852ee70f8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "21c09331-5476-4596-91ba-5d3c0a2322d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ce1dc7-e199-4473-b473-54a5f1b6a4e3",
        "cursor": {
          "ref": "09289323-077b-40c5-abb4-c7c9cc23b3fa",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fa372015-d806-49bd-906b-4de2a915674b"
        },
        "item": {
          "id": "68ce1dc7-e199-4473-b473-54a5f1b6a4e3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8dcca672-9e79-4309-9404-97fcf283c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fa55e4-9026-41da-849b-d5f3fe4541a6",
        "cursor": {
          "ref": "93258861-216c-4339-9261-de5833fbcf99",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b1326e5a-5662-44c8-8af5-bae880bacf26"
        },
        "item": {
          "id": "61fa55e4-9026-41da-849b-d5f3fe4541a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ed724d63-44ac-4344-b1aa-8381ac916ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e46863f-dc39-4654-9f8c-50dd2addbc3a",
        "cursor": {
          "ref": "042b42a0-8c9f-46c9-8f6c-476d525a4314",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c992986c-0161-4834-b45f-e28cda047f8f"
        },
        "item": {
          "id": "7e46863f-dc39-4654-9f8c-50dd2addbc3a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a7ab6656-7b44-46bb-9358-9dd5b555e64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fb730e-42f1-425f-94a3-0cab3bd9b42a",
        "cursor": {
          "ref": "f37dcc6e-cadc-4eaa-bb26-4b3c5f47ae62",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7b06bf47-5879-42ba-8876-e5be7b944324"
        },
        "item": {
          "id": "f0fb730e-42f1-425f-94a3-0cab3bd9b42a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a4536dff-9951-423b-bc84-705701ae2c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eef52b-c61d-452f-8721-d7f7e860155a",
        "cursor": {
          "ref": "56c65cf6-55f3-48d4-a11b-a99f5529a953",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fbb3444e-24a7-4245-a879-ecc5acc3198c"
        },
        "item": {
          "id": "d1eef52b-c61d-452f-8721-d7f7e860155a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "64954309-924d-4635-a8f5-7912a7b65b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa336aa1-9d96-45f1-bd03-06a1ddd4b46c",
        "cursor": {
          "ref": "c73f8fca-bdc6-46c8-89b7-6b5ef0ff3137",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c85cf22d-e39b-4ffb-aa7b-9c3a61b3c102"
        },
        "item": {
          "id": "aa336aa1-9d96-45f1-bd03-06a1ddd4b46c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a59700e7-f2b5-4a3f-af52-cb51f2c71c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60fea6a-dab5-4833-a83a-4377fee496c4",
        "cursor": {
          "ref": "233233ee-fe27-4fc6-8197-0c82d5593b27",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "21e35f19-b09f-452c-bc54-b5693434b6c8"
        },
        "item": {
          "id": "a60fea6a-dab5-4833-a83a-4377fee496c4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9a906164-5320-4e8c-96a5-f3ca5dd8271c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ac3c6e-aa56-4702-818b-e1d7ee4d304d",
        "cursor": {
          "ref": "ac735aaa-65d9-492c-a16c-14009255f662",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "16d5719b-870d-4bcc-9729-6cd2ef9ba506"
        },
        "item": {
          "id": "d1ac3c6e-aa56-4702-818b-e1d7ee4d304d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6ed07252-03f8-4895-8d38-10ddf93a1d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8013b199-575c-47bd-9614-360646ff0ef9",
        "cursor": {
          "ref": "58efa9ce-02f8-42fc-badd-32a74153b2c1",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4dee7b1d-302e-4088-9350-60345aa49ad4"
        },
        "item": {
          "id": "8013b199-575c-47bd-9614-360646ff0ef9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5037f9b3-b399-4046-aa67-7d8f99df430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971df85a-e8cf-499c-ad23-37aae995e80f",
        "cursor": {
          "ref": "9fbd1560-32f9-4948-92e4-7874ac4e338d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aa907d1c-df1e-4dea-9dd9-7110daebb599"
        },
        "item": {
          "id": "971df85a-e8cf-499c-ad23-37aae995e80f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5de5fd40-8e88-4a25-9d1d-d2c8b7a499ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d8dedb-166b-48d2-bd5d-b539323e1b99",
        "cursor": {
          "ref": "b501f5ba-4390-4fbe-b761-35722531c755",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "77975ea6-8c0e-4074-a74e-eec39a1dab65"
        },
        "item": {
          "id": "d0d8dedb-166b-48d2-bd5d-b539323e1b99",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c2d54c00-454a-4aaa-b0af-f4ad5df2f90b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1117b6-b1d9-46a2-b39b-3dd18fafb066",
        "cursor": {
          "ref": "c82e30b9-f9d9-4ff4-92e4-afc665750614",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1b45f3ce-988c-45c7-95e1-da2eb660437c"
        },
        "item": {
          "id": "6e1117b6-b1d9-46a2-b39b-3dd18fafb066",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0783fc41-5681-44d8-99b0-c3b1018a86e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 818,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99277fed-7478-4f58-9220-fb3451f3cee8",
        "cursor": {
          "ref": "3cb08278-aebc-4439-a969-0fe0e9b47678",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "43574041-9e2e-46a3-b13e-f3af7b139b6e"
        },
        "item": {
          "id": "99277fed-7478-4f58-9220-fb3451f3cee8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "453fbd3c-5d76-4a56-bef0-42801a536beb",
          "status": "Created",
          "code": 201,
          "responseTime": 7135,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb36e604-2e77-4ca7-bcd3-2de5c5098fa6",
        "cursor": {
          "ref": "43f1cea8-2d76-4e1b-a29b-881baef513df",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "390ead36-8971-4c1e-b5a8-439ce695fda8"
        },
        "item": {
          "id": "cb36e604-2e77-4ca7-bcd3-2de5c5098fa6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d3e9bdc5-d528-450d-bf9d-94aa4aa4ff41",
          "status": "Created",
          "code": 201,
          "responseTime": 7292,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "37abce15-e665-4c16-8d3a-a04d5352ae86",
        "cursor": {
          "ref": "f92cb597-6704-4041-bbbe-5c790b1f0c8a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "81436391-f096-4e44-88d3-4c39b21d0f6a"
        },
        "item": {
          "id": "37abce15-e665-4c16-8d3a-a04d5352ae86",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "921b121d-1168-4c4b-b050-42028654717f",
          "status": "Created",
          "code": 201,
          "responseTime": 6451,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "920f6179-2c59-42ea-ac99-a05595cb1036",
        "cursor": {
          "ref": "24dd6cbc-291b-49b3-a6b8-4ab551d46fc6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "667780ce-1ffb-4884-a8da-faffc685f812"
        },
        "item": {
          "id": "920f6179-2c59-42ea-ac99-a05595cb1036",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1692ded0-c1dd-4299-bd6e-37b6a28f0965",
          "status": "Created",
          "code": 201,
          "responseTime": 6188,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6672b43a-c118-4432-a392-9ff0ee723a96",
        "cursor": {
          "ref": "c2bcd7df-6116-40ba-9442-98e4466899d7",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b8d1878d-f530-4a5f-96cf-077622f4afa4"
        },
        "item": {
          "id": "6672b43a-c118-4432-a392-9ff0ee723a96",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ef32289a-c441-4237-9f88-98c3c7fba81d",
          "status": "Created",
          "code": 201,
          "responseTime": 6376,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c0ba73-b5c0-420e-b56e-273bfc1bb51e",
        "cursor": {
          "ref": "646f524c-c3cc-4860-9a68-c2302ee59c5c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "748981f7-0094-4d8b-a782-2032abccda4f"
        },
        "item": {
          "id": "a1c0ba73-b5c0-420e-b56e-273bfc1bb51e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "21152a26-bf26-4dcb-b30b-9d0ca6e8caa3",
          "status": "Created",
          "code": 201,
          "responseTime": 8626,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042e2bfa-e1fd-413b-8d96-f38155424e36",
        "cursor": {
          "ref": "ef9b1f3d-78ed-4a51-9ef9-dc14305f21cc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea0ac47d-52a1-4625-9e02-f53fd185bd7a"
        },
        "item": {
          "id": "042e2bfa-e1fd-413b-8d96-f38155424e36",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e64cdf1b-2a7d-46c8-a319-d8532a371d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042e2bfa-e1fd-413b-8d96-f38155424e36",
        "cursor": {
          "ref": "ef9b1f3d-78ed-4a51-9ef9-dc14305f21cc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea0ac47d-52a1-4625-9e02-f53fd185bd7a"
        },
        "item": {
          "id": "042e2bfa-e1fd-413b-8d96-f38155424e36",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e64cdf1b-2a7d-46c8-a319-d8532a371d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ac55f8-5b9c-43e5-a419-44db29d6be96",
        "cursor": {
          "ref": "2f050808-d938-47fd-8b96-50b89d8f04de",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "90e8c35c-3ce6-457d-b763-8e3e17872451"
        },
        "item": {
          "id": "f7ac55f8-5b9c-43e5-a419-44db29d6be96",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0ff9c612-207a-4424-946f-240f2b5e349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302234b6-39c4-423c-b577-1b197fa0b162",
        "cursor": {
          "ref": "0acbbf50-5fc6-45bf-a613-2bafbdc27ef2",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8153701c-6f08-4ed9-aad2-5ec345513183"
        },
        "item": {
          "id": "302234b6-39c4-423c-b577-1b197fa0b162",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf7c7f4d-bec2-48f3-83a5-50aa7f02866d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b337bd04-0bd0-4b7b-aa46-a2584b732ce6",
        "cursor": {
          "ref": "8cc60e17-4400-4c85-96f4-b9f80d9ee2b2",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f2388351-2b1f-4ac8-b2a6-c61cfe989d7a"
        },
        "item": {
          "id": "b337bd04-0bd0-4b7b-aa46-a2584b732ce6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46c254b6-8833-4911-a5f6-52995dad3d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f531eba9-d86e-44f0-800a-d2e08c4a31f5",
        "cursor": {
          "ref": "9ba52eae-126a-4644-8366-483bb3daf7a3",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c77c3269-399b-4620-84c7-dd8e1323de55"
        },
        "item": {
          "id": "f531eba9-d86e-44f0-800a-d2e08c4a31f5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78691b81-1ad5-4f5b-9f59-33f0c8575419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820e6295-ac07-4ac5-a0cb-d2baae45eac5",
        "cursor": {
          "ref": "acdf5278-040e-4552-b529-df49c5151791",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf76f35c-8938-44e6-b809-12eb6835b6b5"
        },
        "item": {
          "id": "820e6295-ac07-4ac5-a0cb-d2baae45eac5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f65fcc45-be4b-47e7-a5de-4770e86ba050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54a1d0c-7f58-4810-b589-b99406843d20",
        "cursor": {
          "ref": "317842d8-2963-4a9d-92c0-6e47b7ebc1e2",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9498a0c0-fd90-437b-a540-71f35f8c47ec"
        },
        "item": {
          "id": "c54a1d0c-7f58-4810-b589-b99406843d20",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6804ecc1-d650-49d3-b939-f8691bdde86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d162ab53-5e31-4c0b-834b-55eea9f1c390",
        "cursor": {
          "ref": "455a6543-43b2-442e-adf1-19ec40f0630b",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4584424d-2abb-4b99-80cb-d772401a97ed"
        },
        "item": {
          "id": "d162ab53-5e31-4c0b-834b-55eea9f1c390",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c3e952e4-b079-44b5-a2d1-cc9579a37d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d03575f-b5eb-4b4e-9d54-dec55af4359f",
        "cursor": {
          "ref": "814cc5b3-5bf7-4987-845e-1ff72a147b8e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8c22c0c8-a8ca-46db-b99a-72bafa7fa491"
        },
        "item": {
          "id": "2d03575f-b5eb-4b4e-9d54-dec55af4359f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3cca885-82f3-4c3a-9725-eeca19bc5472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54a084-0b1b-4cc8-9df7-54238141896a",
        "cursor": {
          "ref": "45c80707-80e6-4316-925d-f71ba92183a5",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1ba9f90f-62ee-4069-9c7d-349bc212e777"
        },
        "item": {
          "id": "ca54a084-0b1b-4cc8-9df7-54238141896a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1faf7109-0db8-4b20-9f3e-a241670c5cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25407c74-5008-4827-8a74-1ae293e7f8dd",
        "cursor": {
          "ref": "1f9f6488-b18d-49a9-a944-3d6959b42d47",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "80fc76da-26b4-4acf-9b2d-d149875fba33"
        },
        "item": {
          "id": "25407c74-5008-4827-8a74-1ae293e7f8dd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "539430e3-dde1-4484-b2d7-b8db41f7ef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7437b3ac-7369-495e-884b-075094114605",
        "cursor": {
          "ref": "08b5f988-b5c6-42c3-80a0-79fd559eb038",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6dbf567f-6592-4ef3-8dff-11ed8239057b"
        },
        "item": {
          "id": "7437b3ac-7369-495e-884b-075094114605",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4b9b4d7b-5d62-47bb-b708-7484a319594b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16a9ec7-3e0e-4e9c-97fa-335ac06772b4",
        "cursor": {
          "ref": "c7392960-6431-4e5f-927c-a8ba47a9222a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dc72f3fa-4bd2-4775-b7bc-9019b3bb227d"
        },
        "item": {
          "id": "d16a9ec7-3e0e-4e9c-97fa-335ac06772b4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "26fb79f7-151d-4345-96ad-1f5828b7097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdee78f1-ccca-4e5e-825b-71f24e119f88",
        "cursor": {
          "ref": "51f866e3-1301-4d54-a00b-a823d6f62bee",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "705291e2-3c20-4ae7-b911-58df3408af3b"
        },
        "item": {
          "id": "fdee78f1-ccca-4e5e-825b-71f24e119f88",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8006704c-ea71-4ade-9c19-996cc81f86c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fe9158-fc70-421a-adf1-b5c0fc92f01a",
        "cursor": {
          "ref": "f583b14b-ec25-42af-a66c-ef610b246dd5",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44f38c41-dc13-460d-a11f-194412bfdd04"
        },
        "item": {
          "id": "f2fe9158-fc70-421a-adf1-b5c0fc92f01a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bdb354c6-b402-41e8-9a28-b0c0959fd5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bf9b51-20a1-4e91-8d8b-4498f92432d3",
        "cursor": {
          "ref": "416928d8-319f-48bd-93f8-6f943462ce28",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b06523e0-8969-4b1c-a5d8-ad36ae10e2e6"
        },
        "item": {
          "id": "d9bf9b51-20a1-4e91-8d8b-4498f92432d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5346a515-ec79-4a37-b6c4-58179d9189bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cfb7ef-870a-4583-a0c0-380994cbf821",
        "cursor": {
          "ref": "cd1188c1-4bf4-4369-b8d1-69209d5b8c1f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0adf8ca7-f2a0-475f-a7f9-ff2ffd635fbc"
        },
        "item": {
          "id": "30cfb7ef-870a-4583-a0c0-380994cbf821",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d356d87e-953a-485a-9b1a-a52aa178c8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1349ce-e930-47d4-b0f6-196ea9e9fc86",
        "cursor": {
          "ref": "c87105c5-ac5d-4dda-a132-760f65bdc27c",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6c9db809-46c1-40be-b81d-001df95b56a9"
        },
        "item": {
          "id": "0a1349ce-e930-47d4-b0f6-196ea9e9fc86",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b443b813-1b81-4ed4-a9cf-93528047b133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a6c72-c3a3-4bd9-aef6-590fb68a367b",
        "cursor": {
          "ref": "72ed6c4c-f6c9-4f01-9c71-ae1e4d6c644a",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6d863139-5ec3-468b-bf23-5e5a5747039a"
        },
        "item": {
          "id": "389a6c72-c3a3-4bd9-aef6-590fb68a367b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bab7a1ff-5542-422f-8569-c1fc23691452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26599f22-3ced-4655-b082-6f1901c2442d",
        "cursor": {
          "ref": "c367416f-6cf8-405d-95f7-96d1677a7805",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a4806af3-f501-466e-a2c7-bfbcfc9aa6b6"
        },
        "item": {
          "id": "26599f22-3ced-4655-b082-6f1901c2442d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4726fa83-0bc8-4f79-9dbc-b63a4efbac40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf5f4bc-5348-4e25-b27f-3ba877079a7e",
        "cursor": {
          "ref": "2a43893c-f124-4af4-9959-a3aeb85729e4",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0cb88550-22bb-40e7-bb7c-a6fda9c4e8d0"
        },
        "item": {
          "id": "ddf5f4bc-5348-4e25-b27f-3ba877079a7e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "26ad9546-7418-4878-b185-e60d06e88487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fa2daa-64c9-484b-9e2f-b6b63cfb6055",
        "cursor": {
          "ref": "84bf36fe-1b6f-4ac3-a7b0-b3e3cca4ffa6",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ce6f3ce1-4edf-4d50-8007-fe2886238fb0"
        },
        "item": {
          "id": "b5fa2daa-64c9-484b-9e2f-b6b63cfb6055",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "004b1a50-4a84-48ee-a64c-3bd886148e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fedfd3-c2b6-4da2-811f-1feb81eacee3",
        "cursor": {
          "ref": "f0e2c6f1-c64f-454e-9fa4-e5d91add2f27",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dc3122ba-a10b-44cb-ace3-762503f625d3"
        },
        "item": {
          "id": "07fedfd3-c2b6-4da2-811f-1feb81eacee3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af2c50da-a64a-4ff9-be7d-6026df3a73e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccedf185-1907-4a3f-8c3a-6eb1ea2dfa6a",
        "cursor": {
          "ref": "fc6aaaa6-061b-496d-a149-3e075bc53ee9",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fe479f64-8d92-4562-9613-5ef800d8bb70"
        },
        "item": {
          "id": "ccedf185-1907-4a3f-8c3a-6eb1ea2dfa6a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d4673600-2c25-4821-a6ff-64706d67c739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b8f0a7-7264-4a67-a182-0247791c945d",
        "cursor": {
          "ref": "d3ce1400-a55d-4dfb-879a-bf5119b3692b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "015681c4-5115-4c23-b9a7-8e05e1c95dd9"
        },
        "item": {
          "id": "b5b8f0a7-7264-4a67-a182-0247791c945d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5f0fd166-bc9f-41cf-a76d-779a7bdd834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9965c481-c484-403c-a81f-bbda00f28478",
        "cursor": {
          "ref": "cf9afc4c-5dda-414d-a0e2-f55e86e14d41",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "02a46ded-94f9-4114-b23e-14f2a8e597f4"
        },
        "item": {
          "id": "9965c481-c484-403c-a81f-bbda00f28478",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c4a9653a-e6dd-485d-840c-11a8ba44e6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648666bd-3d31-4c3b-8da9-ab194546524f",
        "cursor": {
          "ref": "91a07366-42b4-450e-8168-fd8ba8638f3a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "64735adc-32fa-4150-ad37-6d260e531df1"
        },
        "item": {
          "id": "648666bd-3d31-4c3b-8da9-ab194546524f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "45af2afe-29a2-4aab-a9f1-670eb307e952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a0a6c1-9f98-4f74-84f9-21ba68bd40bb",
        "cursor": {
          "ref": "68e46652-b83d-4bdb-bbc9-44964377a186",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "20b84eb5-6f2c-4a0c-951f-48ef4572ee56"
        },
        "item": {
          "id": "65a0a6c1-9f98-4f74-84f9-21ba68bd40bb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3d1928c0-a174-478e-bab0-b9315a75b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0170588c-f162-46e4-85c3-87b14e98b001",
        "cursor": {
          "ref": "01c065ff-0ed4-4099-917b-08af87a6eebf",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "33c48b0c-aefa-4009-a3c4-46ab01f65a51"
        },
        "item": {
          "id": "0170588c-f162-46e4-85c3-87b14e98b001",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a819fae0-7c6f-4463-a0e2-26061dc8829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03520fe2-72c8-417a-b8b0-033c764cfb08",
        "cursor": {
          "ref": "89eae0ba-2343-47ad-82cd-e8b6d5d98199",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f61bd390-674e-4418-8f5a-0a0ccead1988"
        },
        "item": {
          "id": "03520fe2-72c8-417a-b8b0-033c764cfb08",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c5889b18-d5de-4f5a-9f90-5bccfcea3691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07ad01c-9b13-4fb3-b5e8-0342f49baaad",
        "cursor": {
          "ref": "4e49f9d2-8e6e-4ed5-8dc2-e4727907f613",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e463d5ad-e3cb-4abb-ba23-433bb8888de3"
        },
        "item": {
          "id": "c07ad01c-9b13-4fb3-b5e8-0342f49baaad",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee548372-3a47-4e1d-864a-8348010914fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03744636-4d0d-4c06-a984-0db1eb050f13",
        "cursor": {
          "ref": "5d7f251b-c5be-4b4b-a18f-1aa82a13623a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bcba4666-0ee8-4ed2-8c2a-628cb19fdb57"
        },
        "item": {
          "id": "03744636-4d0d-4c06-a984-0db1eb050f13",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ff084c55-cfc2-4c94-b81d-b257c1d6856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f423e081-ab89-483c-b3d9-d1e098b84a70",
        "cursor": {
          "ref": "18e6e38d-f6e4-407d-843e-1d4b5a68e017",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c6aa2115-8495-4c4c-a40d-5bdfec131395"
        },
        "item": {
          "id": "f423e081-ab89-483c-b3d9-d1e098b84a70",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d45b1f09-bd62-49d4-bead-ad2a34052663",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759eac5a-397b-400e-8674-942221af2166",
        "cursor": {
          "ref": "9ce543b7-9cfb-48ca-be63-d049221bc205",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5f2b3b08-4cee-431e-8bc5-5be176ebc434"
        },
        "item": {
          "id": "759eac5a-397b-400e-8674-942221af2166",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8e812ac1-d7ef-4731-9103-c5ab0d4e7f40",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576a38f4-bb7a-4bec-830b-1af53e0af041",
        "cursor": {
          "ref": "08adc56e-50b0-4a42-b8b4-846739e5e28e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "379bc177-6d86-41ce-a7e0-b4fe2e8d12a4"
        },
        "item": {
          "id": "576a38f4-bb7a-4bec-830b-1af53e0af041",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e3eb7795-dc4e-4a09-b206-629fcd8b914f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576a38f4-bb7a-4bec-830b-1af53e0af041",
        "cursor": {
          "ref": "08adc56e-50b0-4a42-b8b4-846739e5e28e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "379bc177-6d86-41ce-a7e0-b4fe2e8d12a4"
        },
        "item": {
          "id": "576a38f4-bb7a-4bec-830b-1af53e0af041",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e3eb7795-dc4e-4a09-b206-629fcd8b914f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68244661-9a97-46bb-916f-0fe427ec09b9",
        "cursor": {
          "ref": "3596bebb-f6bb-41d5-a3d8-9a30480e005e",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6c7da58e-9e91-4a2b-bf1f-6402d706b3b6"
        },
        "item": {
          "id": "68244661-9a97-46bb-916f-0fe427ec09b9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34dc7f56-450c-4187-a27d-1794cdaf466f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5732ea3c-5ef6-4b3e-b5c3-1051c7f754d0",
        "cursor": {
          "ref": "58899f19-07a6-41ee-a407-5cfb8d2390cc",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6fe25303-b9c4-4365-ba5c-db1d330290f1"
        },
        "item": {
          "id": "5732ea3c-5ef6-4b3e-b5c3-1051c7f754d0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "28d02004-d8ff-4ea0-ab54-9becff7526ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c988987-f7b8-4456-a3a0-bb29edbc71d1",
        "cursor": {
          "ref": "1eef94a3-e795-4784-adff-17df366f0a83",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f04a64aa-83ed-46c8-a9a5-bc5808f0aad1"
        },
        "item": {
          "id": "9c988987-f7b8-4456-a3a0-bb29edbc71d1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c9299ce5-07a1-4026-9036-e7cd4d3919b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4a337b-de61-40de-bf19-1039e378baf6",
        "cursor": {
          "ref": "6e5a358d-c75d-43e4-93d3-7afb1372f06d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "daba3976-82cc-405c-b8d4-390adb938163"
        },
        "item": {
          "id": "9f4a337b-de61-40de-bf19-1039e378baf6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ac2a9fde-6868-4f90-a75a-e0ee6c3042e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab74018-c000-47b9-848c-9af0dcf3bf75",
        "cursor": {
          "ref": "5aeb8382-48e0-47e0-9775-362b58a441d8",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1b758f20-71af-4d5a-adb3-2f69b5611124"
        },
        "item": {
          "id": "3ab74018-c000-47b9-848c-9af0dcf3bf75",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66d3b560-566e-4793-a3db-e1416eed013c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eefa8c9-cae3-4a45-a234-ac68299b4069",
        "cursor": {
          "ref": "19d2f289-a8b8-4ab7-98e0-44edae1db5ca",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a3630968-1d1a-41f8-b712-4c38ecce0948"
        },
        "item": {
          "id": "6eefa8c9-cae3-4a45-a234-ac68299b4069",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "23c52630-bf92-4e63-9b6f-778e0f98dc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3340f34-7653-4f28-a240-ff4476368a3f",
        "cursor": {
          "ref": "34de33e1-b373-4312-a3e6-9722da2c6dbf",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "afd7316b-f50f-46fb-9d9e-1cd9b0786d80"
        },
        "item": {
          "id": "e3340f34-7653-4f28-a240-ff4476368a3f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "128e786a-15bd-4093-99f1-d02f6964f0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131ef3c0-73df-4134-a949-d835d31c1a64",
        "cursor": {
          "ref": "d86fa0e7-3fd0-4e94-b1f8-a2a137dd9718",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a1536718-4a66-4e25-8926-ea7d544b6afb"
        },
        "item": {
          "id": "131ef3c0-73df-4134-a949-d835d31c1a64",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b9c5bdcf-5278-4eb1-9567-16079db23564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18311fde-ec54-4d0b-b4d3-86c0f32c406f",
        "cursor": {
          "ref": "2e1b6575-1362-4ca4-a7dd-e3c7a4c1768a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "82b017e7-6e31-4879-b0c6-017c31ba5ed1"
        },
        "item": {
          "id": "18311fde-ec54-4d0b-b4d3-86c0f32c406f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8e986f6b-2b68-4c8a-992c-4cd7d49ece16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fd9f71-9e58-402e-973b-9b82e5766aeb",
        "cursor": {
          "ref": "f995663b-819c-4749-bdb3-e95a1a962b6b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4da273a9-9089-430c-a115-74e280c43f9b"
        },
        "item": {
          "id": "60fd9f71-9e58-402e-973b-9b82e5766aeb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "16f243ed-27c7-4dce-a70d-c120ea8f0c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a34c75-1b35-4230-8811-ba51deec98c8",
        "cursor": {
          "ref": "f1b77005-6e3b-478e-bc34-973c89f5d181",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "845f2287-b156-4d11-acf1-bd640d84747c"
        },
        "item": {
          "id": "66a34c75-1b35-4230-8811-ba51deec98c8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "be93b06d-4101-42aa-9e9f-38900e425810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43627920-ac4f-4c02-b03a-37b4618a6f8c",
        "cursor": {
          "ref": "40c8baab-c629-4880-a761-89e502809caf",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d11d9070-d5bd-4af9-85f4-6cd4bda7c738"
        },
        "item": {
          "id": "43627920-ac4f-4c02-b03a-37b4618a6f8c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "90a05186-ea97-4861-b9ce-df0965c2dca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5b7fff-35ed-4202-9204-676bd4e9669b",
        "cursor": {
          "ref": "3c6c1794-2f7c-476a-b272-98b216a50eb3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9650ddd9-3591-41f7-8be2-5b139c999233"
        },
        "item": {
          "id": "dc5b7fff-35ed-4202-9204-676bd4e9669b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d14d5858-49e6-449a-855a-fc045bfb0090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e73c0-5a1c-4806-808c-c587cb12d1c6",
        "cursor": {
          "ref": "e6c4f3bb-e6cf-4ccf-85b8-2794ce16901c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "45b11b49-be44-4126-a054-be2be275c588"
        },
        "item": {
          "id": "e77e73c0-5a1c-4806-808c-c587cb12d1c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "768326a5-ab5b-4e12-8b91-f2a4ae8343d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55702e5c-79c5-4cb9-a15d-e29105db8fad",
        "cursor": {
          "ref": "bc1edc28-a9e0-47c5-a97e-0cfeaf19747c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f73271c5-495d-481f-af93-97de71d48f25"
        },
        "item": {
          "id": "55702e5c-79c5-4cb9-a15d-e29105db8fad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bc2bced6-f097-4d72-ac55-9de035288354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a68bdf-41ff-487a-839b-3f452da0ca7e",
        "cursor": {
          "ref": "15ee1770-baf5-43b9-9794-49e3d830c3b7",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "80d63761-3799-4824-a286-61f31d2b1842"
        },
        "item": {
          "id": "c1a68bdf-41ff-487a-839b-3f452da0ca7e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e9a44570-d4f8-4859-a8d7-c31c1ab67ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012a00df-609d-497d-9562-e6122c434fb7",
        "cursor": {
          "ref": "d03266bb-57e0-4f31-ba4c-8a55e19cc855",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "59cda599-afdb-49e2-bac2-b2ab1e42f27d"
        },
        "item": {
          "id": "012a00df-609d-497d-9562-e6122c434fb7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "15fa7e40-beaf-4d72-aa4c-a29955d4a705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb34cf4-135e-4e41-88af-1e35064d1c80",
        "cursor": {
          "ref": "17627dc3-0af4-48d5-949f-e6756abf854b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "815d6082-68f7-4547-bcf5-1050d60944c8"
        },
        "item": {
          "id": "5bb34cf4-135e-4e41-88af-1e35064d1c80",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c33d2936-841d-4475-9ad9-11c6dbc97a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55448701-ce96-445d-98f5-7a63fed8463b",
        "cursor": {
          "ref": "d40c5297-1ac5-4b84-8418-60e53ece2204",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f382df4a-2f5c-4bb0-8b02-2d6d1e0b61f3"
        },
        "item": {
          "id": "55448701-ce96-445d-98f5-7a63fed8463b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9d897ab7-1047-4ce6-a921-5ea126067fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd6928-c971-4f1f-bf15-9a261b35db90",
        "cursor": {
          "ref": "16676a1d-c833-4656-b479-79112fc00630",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9606b3c3-3485-4edb-802d-d1f538978bd5"
        },
        "item": {
          "id": "d9cd6928-c971-4f1f-bf15-9a261b35db90",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cb903474-87d1-4131-ac45-b03c02b3b4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ece1265-0d4e-408c-8771-61f2403b7e49",
        "cursor": {
          "ref": "ef28859f-ae17-41b2-8c44-894c4cc8a614",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de531a94-cdfd-4153-9a2d-cb11a543ecb4"
        },
        "item": {
          "id": "9ece1265-0d4e-408c-8771-61f2403b7e49",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b8d0162a-d1e6-4804-9229-4223e2144e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1f44b1-7d1d-47b5-9476-ca5441106fb6",
        "cursor": {
          "ref": "c23aadbc-1133-4435-951b-0cddc1023e02",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f170bde1-ae9c-455b-b8e6-9b749f6dc14b"
        },
        "item": {
          "id": "be1f44b1-7d1d-47b5-9476-ca5441106fb6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b86c1eb-d6ba-4d2b-ac27-f9838918d841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9111df6-2ea4-44ab-855e-887b1f2ddfe4",
        "cursor": {
          "ref": "72f38c89-58fd-4e45-8a82-705390e903d5",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3b96dcc5-e239-47cf-934f-75d1ef98278c"
        },
        "item": {
          "id": "c9111df6-2ea4-44ab-855e-887b1f2ddfe4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "590ba147-3a27-4a8a-871e-7ad7e97abb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8653e001-1dfd-47fd-9beb-0604ea3873a5",
        "cursor": {
          "ref": "39a15b99-2b59-4830-8c54-16463e7eaaf7",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d7b26238-49ba-42c5-96ff-085058d7b50e"
        },
        "item": {
          "id": "8653e001-1dfd-47fd-9beb-0604ea3873a5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "724d1a3c-d86a-451a-8bf5-02dbde89fac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869862a4-a402-47cb-9538-5224a17a351c",
        "cursor": {
          "ref": "fd8650e2-b522-4ba2-9a57-63c311749051",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5f50dbbf-5eb2-44bc-b1a8-78c0aa5dd0f0"
        },
        "item": {
          "id": "869862a4-a402-47cb-9538-5224a17a351c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "95e8b02a-6d3a-44ff-b2bf-216e6fc06225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a836300-e3ec-4ed1-a4ae-a57e74a3637e",
        "cursor": {
          "ref": "9a860a4d-00b9-4458-9796-320dbdc7e78b",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8365214-0f4d-4adc-946f-b0a8d51096d5"
        },
        "item": {
          "id": "3a836300-e3ec-4ed1-a4ae-a57e74a3637e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "20e55d33-7c36-4bf6-92b6-1a993c5cab4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209f6410-960d-434b-a452-bb02dfeb2d5d",
        "cursor": {
          "ref": "c597cd8d-417f-456f-9dcd-a62fc1ec9f0d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7b089207-4d6c-4f04-b865-a308dee232a2"
        },
        "item": {
          "id": "209f6410-960d-434b-a452-bb02dfeb2d5d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aab9faec-b836-437d-b3b4-519445abe62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e984d05-a6ee-4494-9977-aaf6b5b1e045",
        "cursor": {
          "ref": "765e7fcb-b778-46ea-8108-a0beb6209d74",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2a7ba567-f747-4978-944f-394d3b03d155"
        },
        "item": {
          "id": "3e984d05-a6ee-4494-9977-aaf6b5b1e045",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dc1bc40e-dd72-43c5-bda9-2fed900c8966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9548ef-be72-4278-9232-d0b50070c844",
        "cursor": {
          "ref": "84685356-9802-45ce-8ac1-b9c63ee178b1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a575f053-7b56-4242-b94d-841cdfca5376"
        },
        "item": {
          "id": "8f9548ef-be72-4278-9232-d0b50070c844",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e0b51089-7ed5-4b17-93a2-9488ed1bdf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e538a8fb-fcae-4ae1-b126-c83b03bef405",
        "cursor": {
          "ref": "740f82cb-0992-4e5b-9b40-f15dc0b97fe1",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ae9f135-e987-422c-8bd8-f1ae8fb3505e"
        },
        "item": {
          "id": "e538a8fb-fcae-4ae1-b126-c83b03bef405",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2db96e81-0806-4bed-bc18-1346c96cb8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8bc4e4-8c1f-4792-a7b0-0457e3cda6c1",
        "cursor": {
          "ref": "c13ace15-01ca-4886-975d-1448f9cc8298",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a8d96bdb-b421-4cd6-8d34-1bb8e43a276a"
        },
        "item": {
          "id": "3c8bc4e4-8c1f-4792-a7b0-0457e3cda6c1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f7b4e99e-0dfd-4921-a848-d4a173f814aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb263a0-12e4-4a17-9d64-0e2f5a668bb4",
        "cursor": {
          "ref": "bc145923-d693-4d0f-9f45-17bfde1efa1c",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "123e00a3-58e0-4181-9d8d-2e5980b70676"
        },
        "item": {
          "id": "ecb263a0-12e4-4a17-9d64-0e2f5a668bb4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0cee9de4-ab13-40fa-a55a-d1ac3e890ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1a33c8-9916-4f53-b1a2-dae78528e3d7",
        "cursor": {
          "ref": "c7b0ab99-84ef-4641-aa4f-f614776c343c",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b3cf54f4-a7cc-4c19-8831-721611b05ed3"
        },
        "item": {
          "id": "5b1a33c8-9916-4f53-b1a2-dae78528e3d7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c6d72ae-28c7-4559-a6fb-9064a0802322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a744f2a6-a095-448b-b396-6e16529046b8",
        "cursor": {
          "ref": "861c3f07-93de-4396-96ba-a8a0c824a3d6",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ec2b1145-4677-47dc-b76f-8edfdc7d60f7"
        },
        "item": {
          "id": "a744f2a6-a095-448b-b396-6e16529046b8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "96fcbff6-c374-4123-af25-c3b636433b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2455af28-39e8-4fbd-bce9-d992cdfc1297",
        "cursor": {
          "ref": "55bed07b-4bf0-4255-ba63-49f6623d4c41",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6d102f44-83a9-4148-9629-13f2f8d98e9d"
        },
        "item": {
          "id": "2455af28-39e8-4fbd-bce9-d992cdfc1297",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "faaffca4-9f46-49ce-9f80-e81e9978ca2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30621720-7554-4336-b60e-38e2a0f8a1ce",
        "cursor": {
          "ref": "71233039-99e8-424b-ac53-5bc213ba2152",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f757b927-1c68-4afa-9bc0-d079cd642e20"
        },
        "item": {
          "id": "30621720-7554-4336-b60e-38e2a0f8a1ce",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54937d99-a1a2-4791-bbab-3ffc893ee7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aecc13f-d199-4498-b79f-088ff54905b4",
        "cursor": {
          "ref": "780cb164-20a3-42e1-9a21-65aa56e0db83",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7d36b8ac-6c1e-4bf3-ad7b-987799bd1ae0"
        },
        "item": {
          "id": "5aecc13f-d199-4498-b79f-088ff54905b4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3a2e284d-b3ff-44cb-8d6a-f5d376c5806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fed987-0488-4a46-a31c-ace7d8203273",
        "cursor": {
          "ref": "e82c6140-3133-4f1a-8e7a-6ebdd3caa9c6",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2bb4acb1-2816-4de6-b919-4d445511f027"
        },
        "item": {
          "id": "95fed987-0488-4a46-a31c-ace7d8203273",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1ec9c949-ab4c-4885-b913-b47b9aa26c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f909d6-8724-4443-b706-fb713e805f9a",
        "cursor": {
          "ref": "7e90a707-9ff5-4d4e-9f97-827e09cf790a",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "826d1367-08a2-4581-90f3-df4c6314c097"
        },
        "item": {
          "id": "a9f909d6-8724-4443-b706-fb713e805f9a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c0a2e799-a24a-4c32-bd26-1d45b3c19ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6476d335-1e5b-4049-821a-eceadf0cb66c",
        "cursor": {
          "ref": "80830410-5f17-46b1-91c7-cdf64a52555a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "de09e271-5782-4da5-ba5e-e718139036a2"
        },
        "item": {
          "id": "6476d335-1e5b-4049-821a-eceadf0cb66c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "197a9637-bb04-4a07-bac4-d132d4d78b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78376a7-7c61-4fab-8d1c-6fdf59e55cb4",
        "cursor": {
          "ref": "3102bf3c-ab3a-45c7-8ec4-4a4665f3a83b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4a7ca013-18d3-4907-b72b-33c528a592bd"
        },
        "item": {
          "id": "f78376a7-7c61-4fab-8d1c-6fdf59e55cb4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a45d3a13-a3d8-4d3a-9819-919ee223b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb6ffa1-8cef-47f1-9b83-6860d44776fb",
        "cursor": {
          "ref": "2689682d-513e-4e77-b854-ac86fe0971b5",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7a31136d-263b-4057-9a9e-9ba06d36ce77"
        },
        "item": {
          "id": "7bb6ffa1-8cef-47f1-9b83-6860d44776fb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "139222f4-913d-4cff-80d6-659ce6ab8093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05e2754-da83-4ac5-a59b-190363c0081c",
        "cursor": {
          "ref": "d6730c49-80c1-4689-a511-74e0f73f0785",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5a95e03a-81d6-4dc9-978e-800cb25dc395"
        },
        "item": {
          "id": "c05e2754-da83-4ac5-a59b-190363c0081c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1830d29f-ade6-446e-8551-6cf91d225fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929fe861-7c92-4367-b97f-4239efa3c6b8",
        "cursor": {
          "ref": "ab5c6f9b-6b0d-495f-aa62-4e0639724500",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "267de2ef-5120-45af-a289-eca7710cb3b2"
        },
        "item": {
          "id": "929fe861-7c92-4367-b97f-4239efa3c6b8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9fb29f54-ca4e-417d-b981-3bed60e0c8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26fd674-73c7-4b97-8522-a5ba4fc6ff97",
        "cursor": {
          "ref": "9f47b2f3-9e7a-4344-8d9b-f425a11fe9ef",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "652a9f08-c8e6-45bf-8cba-f2901a7db03f"
        },
        "item": {
          "id": "e26fd674-73c7-4b97-8522-a5ba4fc6ff97",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fcaf4faf-f36e-4f6f-abb5-9d697ec44fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169657ef-9d2c-43cd-933f-b0c72e3cd272",
        "cursor": {
          "ref": "de3c43ce-f645-49d9-b6e9-c97760f850a7",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5f2ffbe1-37b6-417b-b9ff-2d007a0020ec"
        },
        "item": {
          "id": "169657ef-9d2c-43cd-933f-b0c72e3cd272",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9517198-59f3-416e-a972-0916df356eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cda86f-7fb3-43d4-97ea-9237a7f67a62",
        "cursor": {
          "ref": "b5c67758-37df-467e-a8ce-b800a3f612dd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca7f457d-f37b-4df0-995a-46985ad2dee5"
        },
        "item": {
          "id": "42cda86f-7fb3-43d4-97ea-9237a7f67a62",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8a541347-28a3-4fe5-9c9c-526b1c952723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb7dc22-e0da-4635-b419-3d7c674c3e4a",
        "cursor": {
          "ref": "dc2df815-95bf-4a07-99d3-2473caea16b2",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "29df7ab7-eb2d-443d-b7fa-4f756527af98"
        },
        "item": {
          "id": "4eb7dc22-e0da-4635-b419-3d7c674c3e4a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "acabbdbc-64f9-4ce2-9b1c-44c8fd78695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65553019-4f06-4697-b6f9-5259be6ed82a",
        "cursor": {
          "ref": "84fa766d-ccff-4409-8801-145d285b09c0",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "92f16c8e-664b-4c36-8d94-f041d8c43e30"
        },
        "item": {
          "id": "65553019-4f06-4697-b6f9-5259be6ed82a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "03e5e2d6-b8ba-4739-9a5b-82c3b900b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10ba171-6f76-4eff-b2a6-b843467d936d",
        "cursor": {
          "ref": "b4a63f3a-ead7-4aea-80bb-6895d0e2bbc5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e74bfe33-f1f3-4941-8a01-476337955d11"
        },
        "item": {
          "id": "e10ba171-6f76-4eff-b2a6-b843467d936d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "408b92f8-ae66-4486-a7f7-2d518b1c422f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ff109d-61ba-4f39-a453-75294e4d9e0b",
        "cursor": {
          "ref": "99c58be6-e826-4103-83bb-5a39a22ebc2c",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "55f98887-d912-495c-b769-25478fc94078"
        },
        "item": {
          "id": "b9ff109d-61ba-4f39-a453-75294e4d9e0b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "26d57039-8b63-4df0-ba49-3822713c29a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eca826-3627-4c2a-a160-488f32c04cc6",
        "cursor": {
          "ref": "5baa66e7-1404-4b81-a260-d5ced3977b91",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c143c808-ebea-4bfa-9a58-757d3ee6efd4"
        },
        "item": {
          "id": "25eca826-3627-4c2a-a160-488f32c04cc6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8f9d4e17-395d-4381-aa4c-7bd44aa48cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b95a09-e329-4926-8b7d-7e53289c97c2",
        "cursor": {
          "ref": "a02ffe0e-e308-4530-9a09-ba87ceb657e7",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "337bf721-cf3e-4f35-825d-902ab04c7302"
        },
        "item": {
          "id": "c8b95a09-e329-4926-8b7d-7e53289c97c2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3dce5c2e-e40d-4e50-aa86-cae16dcbb0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7e2e42-14fa-4482-ad76-62362922ac5a",
        "cursor": {
          "ref": "1122a31b-25c5-4d52-a614-97954e893fa9",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "93d9e2cf-3680-403b-b4fd-c4a7418499aa"
        },
        "item": {
          "id": "5b7e2e42-14fa-4482-ad76-62362922ac5a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3b7aee00-acf3-44d3-adf6-912ffa76efb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6b845b-2615-464c-bf2f-d7ee53be2c91",
        "cursor": {
          "ref": "4b444235-b19f-4b74-9359-70f47a02d7ca",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "25e0658e-314e-4939-9cd5-f37f80684b50"
        },
        "item": {
          "id": "8b6b845b-2615-464c-bf2f-d7ee53be2c91",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b0b4cdf1-53b9-49ac-80c1-8e0408b831a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b314cc-ea82-45bb-8aae-d8343b1c4fad",
        "cursor": {
          "ref": "d478a1f0-f1ce-47eb-81fb-06aa5f6725ce",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e58a11f6-6f72-40ca-821c-653b708c153b"
        },
        "item": {
          "id": "f6b314cc-ea82-45bb-8aae-d8343b1c4fad",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b0396a6b-f655-40c5-a9d3-e1bd0e80e7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b5ad2-ead7-4f2e-9492-50589149c4e1",
        "cursor": {
          "ref": "ef67b5ee-ec6d-4b3d-aa09-cfb00ef09071",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e2a70be6-4e17-4dab-a5c6-f4fa2cc06a39"
        },
        "item": {
          "id": "284b5ad2-ead7-4f2e-9492-50589149c4e1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "69d9e2f2-829a-413e-9193-2e9c0c791d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b65432-ed2d-4f55-8493-f8fd7d1b17ed",
        "cursor": {
          "ref": "722ca3d7-bd86-4be4-8e85-87795d8d8d11",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d82c7722-c286-4f32-a38d-b10ba4654433"
        },
        "item": {
          "id": "13b65432-ed2d-4f55-8493-f8fd7d1b17ed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e9d55797-05ed-4b24-a814-1730483ae06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4326035f-d09e-4de5-85d5-0d85c210c146",
        "cursor": {
          "ref": "283f5897-1d5f-49d0-9f70-7281e3161d30",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ad78770e-8c6b-489c-8fab-b8f39ce9e9bc"
        },
        "item": {
          "id": "4326035f-d09e-4de5-85d5-0d85c210c146",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "83052841-e689-4eb6-95ab-fd65ec098ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c322be-ca3b-4c5e-8f3c-4494ef6b3981",
        "cursor": {
          "ref": "4286bd28-88b9-4a73-bde5-ecf86327df86",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7c9fc1e5-c7cd-4e21-9f2d-4d1e3574090e"
        },
        "item": {
          "id": "a7c322be-ca3b-4c5e-8f3c-4494ef6b3981",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5f3592e8-8645-4d77-bc12-7c51700a71a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f2da2-5ba1-4e92-afce-1a57ac4578ad",
        "cursor": {
          "ref": "7300b9f6-6cba-4739-8ed3-e888ee5cb5ec",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ceceed1b-8cdc-4ea4-a524-9bf0560d51b3"
        },
        "item": {
          "id": "632f2da2-5ba1-4e92-afce-1a57ac4578ad",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1e744688-0525-4e4a-9cb8-523d3761f899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97500a5b-19c9-449c-b662-4394fdb7cb0b",
        "cursor": {
          "ref": "0519b23d-66a8-40cd-8f92-622444186c7e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "45198c7e-eddf-4e2f-a05c-f51100466216"
        },
        "item": {
          "id": "97500a5b-19c9-449c-b662-4394fdb7cb0b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "579d4b4c-15cb-4b69-8103-8c1bec9d0ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066e351e-d113-4fe5-a0df-4777b4d3a6a7",
        "cursor": {
          "ref": "10a539b9-1d12-4033-91d7-0f5569100f1b",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d2143a11-8bc1-4dd7-a36e-e2a020a1376f"
        },
        "item": {
          "id": "066e351e-d113-4fe5-a0df-4777b4d3a6a7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3141f9b9-7be1-4ab3-8771-9f27463207c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712464d1-d96d-4653-8652-78ce6e857157",
        "cursor": {
          "ref": "bb71517d-1098-4bd2-b764-46bb309ffbb9",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1c1b18a3-3526-4863-bfbd-446cf5e38ce5"
        },
        "item": {
          "id": "712464d1-d96d-4653-8652-78ce6e857157",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8af2102e-03d7-4fa2-90a6-e5ca7ac7ac67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5920fa6b-c1c0-484f-b4d4-6b0b134a8f04",
        "cursor": {
          "ref": "a295668a-19d8-4f4b-bc3c-8e3f47727437",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5859eebd-b1ea-401f-9bf8-8f6eeed3625e"
        },
        "item": {
          "id": "5920fa6b-c1c0-484f-b4d4-6b0b134a8f04",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f445ffbf-6d33-4463-a8fa-8bf5dac5b78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fef7d-2439-4493-8032-f8b4a2ff74a5",
        "cursor": {
          "ref": "6295a1c0-9ac1-45af-b9b6-e31c8211317f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c9eec40b-c657-46a8-943f-45d57d17ec0d"
        },
        "item": {
          "id": "670fef7d-2439-4493-8032-f8b4a2ff74a5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "987d26ed-494e-4b28-b8ad-ac8ca68336e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677352f9-b178-4c71-995e-bb40182af386",
        "cursor": {
          "ref": "10abf3dd-e4a2-4239-833a-6c3945b05f98",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "de85e026-aa12-4ae6-afeb-a4bc55741f89"
        },
        "item": {
          "id": "677352f9-b178-4c71-995e-bb40182af386",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "65c3a8fc-cb2e-4ab3-bceb-5b71150b651c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2561436-ba43-4d6d-884b-b3e49bc06619",
        "cursor": {
          "ref": "fb62154c-5e08-4389-bb70-bf19d0ee5423",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a8829822-93ae-4852-b7e1-0e36912e377c"
        },
        "item": {
          "id": "f2561436-ba43-4d6d-884b-b3e49bc06619",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7958e947-00c4-4964-a19c-b0384f5208be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16bfa6f-4064-48d7-b3b5-3c1752378bfe",
        "cursor": {
          "ref": "08e79cdd-2bff-460b-ab15-3d19865e6002",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "78b1b4d9-3df4-470c-8948-f25d58afbf1e"
        },
        "item": {
          "id": "a16bfa6f-4064-48d7-b3b5-3c1752378bfe",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7111f9a2-4326-489b-9cfb-893d359602e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97e204f-eed7-4de4-bc54-7c17a94c0b49",
        "cursor": {
          "ref": "337c496e-69a1-4fdf-a8a3-38670e772c53",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "39c7c7de-37fa-41b1-ab7d-276fa3a20598"
        },
        "item": {
          "id": "e97e204f-eed7-4de4-bc54-7c17a94c0b49",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2e73c153-4280-4c77-9e40-de98fbd33b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46a806b-3946-4a94-9c91-8b82e8d17030",
        "cursor": {
          "ref": "6b5196e2-e743-49b5-b34f-ee1573fffd9c",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "89faddc2-278c-47f2-b736-213cf1363e42"
        },
        "item": {
          "id": "c46a806b-3946-4a94-9c91-8b82e8d17030",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a7c7c3ea-c853-4e9b-b35c-44e1da356d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8e3c61-8cbd-46dc-95a2-e92f435a8e72",
        "cursor": {
          "ref": "91be58dd-7b74-4d41-87c1-40e32b56d25d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7165fea4-0e09-4c7c-aac0-00ebe6793412"
        },
        "item": {
          "id": "3f8e3c61-8cbd-46dc-95a2-e92f435a8e72",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2b4f71b3-4081-4750-8dff-1c430b2e6fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb90b2a0-2e5b-4948-bb4e-95bcdc98f2b7",
        "cursor": {
          "ref": "f30a5030-6a69-46cb-8c54-3fd1c00bd553",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c0faa7d1-566e-4f54-b31e-5edf92ad9ca3"
        },
        "item": {
          "id": "cb90b2a0-2e5b-4948-bb4e-95bcdc98f2b7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "33b5eebd-80fd-4bd3-9c91-a3fa216fb635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcf975f-efde-4d9a-b615-656b07b2d74e",
        "cursor": {
          "ref": "5862fce6-ac8e-4964-89b7-4b1de5a1a0f4",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6f58ebce-d9a4-491d-ba4c-8de3ac45767e"
        },
        "item": {
          "id": "dbcf975f-efde-4d9a-b615-656b07b2d74e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c7c49d52-15eb-4862-b901-da0d0eebe91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f353c463-9ed6-4781-8084-9a6c3e362729",
        "cursor": {
          "ref": "1867d531-ab03-44ba-a199-7c2ab0714106",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "68e8d08f-bdd7-43c7-a3aa-4b0ed92e4d6f"
        },
        "item": {
          "id": "f353c463-9ed6-4781-8084-9a6c3e362729",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2df1baf6-2fab-4f5f-9ff7-78ebe3184d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fe5a0b-92a4-46d2-84f6-57fb7285a3db",
        "cursor": {
          "ref": "d8fddb4a-41fc-4115-813b-1aeaeaa2db89",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "095d3443-020f-45a2-aaac-8abf3b5e7214"
        },
        "item": {
          "id": "77fe5a0b-92a4-46d2-84f6-57fb7285a3db",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d4ee7fa-c174-427c-9099-df9871a80a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ece36a-3277-4873-ab89-51aa6caeb837",
        "cursor": {
          "ref": "768d71d1-95bc-4241-a109-c3c76472189f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab7a436a-f302-4c3e-aaf4-c286931db7f8"
        },
        "item": {
          "id": "76ece36a-3277-4873-ab89-51aa6caeb837",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d365c651-23bb-483d-a839-4fd9a3a66e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b41069-0b65-4fc3-a208-4b50133bb037",
        "cursor": {
          "ref": "90fdd398-072a-4831-982b-55449b4186e6",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4c6615a6-ce2f-4592-aedd-c5430f239347"
        },
        "item": {
          "id": "38b41069-0b65-4fc3-a208-4b50133bb037",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "60666ae8-3092-4347-a1fd-cbe52e3a83c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ec2c8c-8eed-47b6-9894-a59f95f32f60",
        "cursor": {
          "ref": "90724e09-cbdd-4b67-90aa-6700f4a5fd91",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5f16b262-6a79-4897-b51e-e7dd43b658c8"
        },
        "item": {
          "id": "f9ec2c8c-8eed-47b6-9894-a59f95f32f60",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cfbba723-eb8f-48a5-9b49-baf2f36c93f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b9990a-f102-462c-bca9-dd14c2073df2",
        "cursor": {
          "ref": "79d5956c-bd1a-4181-bf15-25b933714f6a",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe039098-3ecc-49fc-a59d-8158cb3108bd"
        },
        "item": {
          "id": "62b9990a-f102-462c-bca9-dd14c2073df2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "48ecd12a-17b6-48b3-be6d-9acc370c968d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0592c0f3-48be-403a-a59c-6a77d5b9a6ef",
        "cursor": {
          "ref": "4570d22a-806e-4916-977a-ed656322b774",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f417fa57-2875-4af2-b468-35eee5338129"
        },
        "item": {
          "id": "0592c0f3-48be-403a-a59c-6a77d5b9a6ef",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0e740575-0437-4fb7-b8f9-7987e9125876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bf85e9-2d25-4973-adab-7cf349634921",
        "cursor": {
          "ref": "6d28d0ee-0a4a-4aca-b616-970a687b1b55",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cab535fd-08d0-4561-9b1a-bcff8eb1e5ac"
        },
        "item": {
          "id": "16bf85e9-2d25-4973-adab-7cf349634921",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f4ed47b1-12b5-407a-ba2f-2e9643a64104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae2f260-a466-410b-8046-89c2b576ee80",
        "cursor": {
          "ref": "b3b68dd2-3db6-4b5d-89b2-9ef2e7b36643",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8ae353f0-8180-405a-af27-d296672754bb"
        },
        "item": {
          "id": "fae2f260-a466-410b-8046-89c2b576ee80",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4249b115-aab2-454d-9cfa-f8d6806cefb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ab38d7-e106-46ad-b68d-1d4563fc8689",
        "cursor": {
          "ref": "efe15fbb-e686-4568-b0b1-9c50634b477f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9beecb53-ea18-4a5b-8455-306b1aae7655"
        },
        "item": {
          "id": "34ab38d7-e106-46ad-b68d-1d4563fc8689",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "62a1da66-1223-4635-94e8-d18e276e2a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd0c2f0-c032-4954-aa52-4a5148006ea7",
        "cursor": {
          "ref": "ded38521-0d46-4dda-aa5d-117d378b3af1",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c40e126-5cb9-42ce-b9e0-9a9af073a71b"
        },
        "item": {
          "id": "5bd0c2f0-c032-4954-aa52-4a5148006ea7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5a02b74a-2f08-4f4f-95e1-70f48c92e8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de144a8e-62e6-4098-82ae-736c6edabb3f",
        "cursor": {
          "ref": "feeb991e-c279-4b83-ae0a-77d79e01b67f",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "31d39292-d7f9-4b51-8472-29321a4befb0"
        },
        "item": {
          "id": "de144a8e-62e6-4098-82ae-736c6edabb3f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c171592a-fe87-4fd9-b44e-dc70287d2d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab54a4f-bdde-4681-a314-8c74b2c3fbce",
        "cursor": {
          "ref": "13a436c0-b665-43a7-8181-3c87615564fc",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b0fa94d-c03a-481e-96fd-4b5934190981"
        },
        "item": {
          "id": "7ab54a4f-bdde-4681-a314-8c74b2c3fbce",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "320382c3-6140-498a-9511-4781dc042977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4978a2-a4cb-48ec-bd11-c58cece1fa32",
        "cursor": {
          "ref": "85fd3abb-3dd3-4b8d-a459-805e555dc6ea",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "50e225b9-6293-43dd-a6c1-f7c789dd1f71"
        },
        "item": {
          "id": "1c4978a2-a4cb-48ec-bd11-c58cece1fa32",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32326325-f871-481b-a2d0-a446d4f9e357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c288e23-31a0-457e-987a-f14a6ae4bd60",
        "cursor": {
          "ref": "0d5b50d3-4e5d-4dba-ba5b-96c4ce0e16b1",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b841d62f-f841-4655-aefb-deca5edbf69e"
        },
        "item": {
          "id": "6c288e23-31a0-457e-987a-f14a6ae4bd60",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "de864346-d647-4d2c-a744-16d632c70c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08341f0a-b002-4dcd-83ae-168dbe5cf2b1",
        "cursor": {
          "ref": "21d93e44-f060-4535-8a3a-a50c49d0cda6",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f07542b0-ae2b-4763-89af-cb0144f852b1"
        },
        "item": {
          "id": "08341f0a-b002-4dcd-83ae-168dbe5cf2b1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4e3f3e6d-7629-44bb-893e-fbbaf406ea55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e481901-1701-4d01-bf99-52a26d9a4eeb",
        "cursor": {
          "ref": "7b9032da-6eb5-4ae4-8597-3d608954dbcf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0600727e-1f64-4115-896d-e70450d16428"
        },
        "item": {
          "id": "2e481901-1701-4d01-bf99-52a26d9a4eeb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "af9d643a-198d-4c10-98d8-fea5b4a4018b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f32c9-f35c-4b5a-9a54-a700b10a3257",
        "cursor": {
          "ref": "68651420-59f3-40cd-8094-8976b8dcc761",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "47be3315-c092-40c5-949d-8d4148b3c1e2"
        },
        "item": {
          "id": "193f32c9-f35c-4b5a-9a54-a700b10a3257",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "200763af-b166-4b60-89aa-05ab1f7bf6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e2540c-5e10-48bb-9a5c-42830851c211",
        "cursor": {
          "ref": "3e361115-4043-4f3b-952c-8a2a41111786",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "42f6cc56-858a-4790-8567-a10789aa8c6e"
        },
        "item": {
          "id": "f5e2540c-5e10-48bb-9a5c-42830851c211",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "14fa1cfe-cac5-4941-850f-51aeef621d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1a7a82-e34d-49a2-a869-e227f911586e",
        "cursor": {
          "ref": "1d635876-1d78-4b25-9f77-ea972997d69e",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aee8472a-d5f7-4d83-99fe-f078bcbe3fb9"
        },
        "item": {
          "id": "1d1a7a82-e34d-49a2-a869-e227f911586e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "88592577-50e8-4a6e-9f27-e6b5710488b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20cb21f-7ea9-4e15-a8c3-f29b1a948de9",
        "cursor": {
          "ref": "19a808e4-fc9f-44e2-95a6-5c5a7f7b02e6",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aeab500e-8454-4784-96a4-d55e49beadff"
        },
        "item": {
          "id": "c20cb21f-7ea9-4e15-a8c3-f29b1a948de9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f6f25334-720b-4b1d-a2ce-db4806a28a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24c97ac-d5d2-49dc-9957-f79219f6769b",
        "cursor": {
          "ref": "0f3238a9-ac52-4824-8391-98a9006bc3a6",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b7310091-434c-4561-8226-5b9214df063c"
        },
        "item": {
          "id": "a24c97ac-d5d2-49dc-9957-f79219f6769b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cc34723b-6c57-4b94-8653-5ef7ce9d936d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4b5c7b-b129-46e5-b3fc-084bf7d66c02",
        "cursor": {
          "ref": "27f9b1cf-98fa-4a80-bddb-396d217885bf",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "28e1ce4f-7a88-43bd-95e9-fb63f0f7fbbf"
        },
        "item": {
          "id": "7b4b5c7b-b129-46e5-b3fc-084bf7d66c02",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1cd60269-363a-428f-9406-2c921d203bde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead70396-fb96-425e-89ba-eee41ea394fe",
        "cursor": {
          "ref": "67bae5d6-ed89-4b1d-a1ce-bc05dafc5c0c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "738784e2-b85f-4774-af34-f2293b0ebcd6"
        },
        "item": {
          "id": "ead70396-fb96-425e-89ba-eee41ea394fe",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c7996be4-1211-4763-ab45-1c9a34bed9db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d30581-6185-435f-bdc6-bcf5520f5dc1",
        "cursor": {
          "ref": "773d1c46-6ba4-4970-a2a0-3c8142345c1f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3224d612-39e8-4f58-8182-0b8db4ef3d91"
        },
        "item": {
          "id": "29d30581-6185-435f-bdc6-bcf5520f5dc1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7bbe0c18-8e65-4179-8c9d-31b529c4ce78",
          "status": "OK",
          "code": 200,
          "responseTime": 699,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff4e86c-672e-4fe9-a797-2a95f2e6b081",
        "cursor": {
          "ref": "5768c7e7-1153-4ecf-a830-357dafd1b5dc",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e1a352ec-f2e1-4feb-99f7-75692407c992"
        },
        "item": {
          "id": "0ff4e86c-672e-4fe9-a797-2a95f2e6b081",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9def406-b5c6-4f6e-b985-4b92f8927909",
          "status": "OK",
          "code": 200,
          "responseTime": 1972,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6e2a7c-61b3-4937-ac2a-a48622de8075",
        "cursor": {
          "ref": "19e91400-89b2-40b5-abc1-ad12c29d57f1",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "41da89aa-8466-400f-b3fe-4ad58ffb0a03"
        },
        "item": {
          "id": "5b6e2a7c-61b3-4937-ac2a-a48622de8075",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e391be86-5953-4dac-bc19-4c7b35b4c6ff",
          "status": "OK",
          "code": 200,
          "responseTime": 1581,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
        "cursor": {
          "ref": "86b3546e-a5bc-44f7-80c5-b283fd166770",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "166acb2c-5d4f-461c-abfe-47cf69d07b2d"
        },
        "item": {
          "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "329728f0-a205-416e-afc7-5268b33e48a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
        "cursor": {
          "ref": "86b3546e-a5bc-44f7-80c5-b283fd166770",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "166acb2c-5d4f-461c-abfe-47cf69d07b2d"
        },
        "item": {
          "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "329728f0-a205-416e-afc7-5268b33e48a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
        "cursor": {
          "ref": "86b3546e-a5bc-44f7-80c5-b283fd166770",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "166acb2c-5d4f-461c-abfe-47cf69d07b2d"
        },
        "item": {
          "id": "0e11ba06-1767-4f4a-8880-1f468c413043",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "329728f0-a205-416e-afc7-5268b33e48a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22dfd2-e3a0-481f-b02a-5404f1d95731",
        "cursor": {
          "ref": "122a347b-e79e-41af-8e37-056e57d6552d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2b094e6b-2567-45c6-9233-e8003ae0582c"
        },
        "item": {
          "id": "0a22dfd2-e3a0-481f-b02a-5404f1d95731",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3f08df72-f935-4c31-b8ca-9b953e82c626",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 624,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856ac145-92d8-418b-ac82-a319a857a163",
        "cursor": {
          "ref": "4439e944-7bd9-4515-89f3-ea53ab961f8c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "510d7902-eca3-48e4-a6c6-41856aad22c9"
        },
        "item": {
          "id": "856ac145-92d8-418b-ac82-a319a857a163",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "31f70699-10d2-48f1-9d5e-60e16cb3715e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856ac145-92d8-418b-ac82-a319a857a163",
        "cursor": {
          "ref": "4439e944-7bd9-4515-89f3-ea53ab961f8c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "510d7902-eca3-48e4-a6c6-41856aad22c9"
        },
        "item": {
          "id": "856ac145-92d8-418b-ac82-a319a857a163",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "31f70699-10d2-48f1-9d5e-60e16cb3715e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80719973-fbec-4889-9ee9-84c7be5e63ac",
        "cursor": {
          "ref": "1a86ae6d-eea1-4f7d-89d5-8bb36a69b71a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9e02fac4-c8eb-4aa8-87ce-9705cb72a8f0"
        },
        "item": {
          "id": "80719973-fbec-4889-9ee9-84c7be5e63ac",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c590fb16-cf76-498e-b881-ae7a638445a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 819,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b14045-de70-49ac-a29a-1783fc3149a3",
        "cursor": {
          "ref": "97bf0e52-5ddd-4209-8d6d-110cce2ab7da",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3acb5fb5-e617-4f5a-a06d-bc4a43800a75"
        },
        "item": {
          "id": "b6b14045-de70-49ac-a29a-1783fc3149a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ab31d98f-f71e-4bc7-aa9f-e630ba1540a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b14045-de70-49ac-a29a-1783fc3149a3",
        "cursor": {
          "ref": "97bf0e52-5ddd-4209-8d6d-110cce2ab7da",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3acb5fb5-e617-4f5a-a06d-bc4a43800a75"
        },
        "item": {
          "id": "b6b14045-de70-49ac-a29a-1783fc3149a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ab31d98f-f71e-4bc7-aa9f-e630ba1540a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090d1e4c-9319-46fa-ad63-e5937e5c3cc8",
        "cursor": {
          "ref": "99a83e56-675e-472f-b293-014301c4dd5c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0d2b89b5-d697-48c2-9c9c-665f4c02f75e"
        },
        "item": {
          "id": "090d1e4c-9319-46fa-ad63-e5937e5c3cc8",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "427f30bd-2ccd-4e67-a2d4-611de3fcb507",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 828,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}