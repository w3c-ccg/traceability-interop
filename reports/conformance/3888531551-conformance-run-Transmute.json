{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1582c77b-a179-4466-914c-386ba30d88f6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9a647b3a-8d9c-40ab-a41a-08ec1d461184",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2e26ecf-c8fb-49c9-8008-2706efe90711",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6875b4da-9ebb-4508-88f5-02ef489727f9"
                }
              }
            ]
          },
          {
            "id": "c739c78d-794f-47d2-bbd8-be216aba853c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82f36a41-c320-4727-8569-ce375fb84de8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f63608fc-8e30-44ee-b097-fd8194e6adde"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "695f3c49-8145-4c13-af28-7297d5a7b997",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "94cb097b-5dc0-4ada-900c-6628142d4b49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92f095d3-37ca-4814-bcdd-d55a3d7a608d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30734113-32e7-47ef-a9c5-3353ddf6b6e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aff15072-b3f2-4750-9429-7aaea8e5abcb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c71f0d75-1cde-4c36-a63f-a48c9fb613b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "406c8e69-d253-4901-8d60-becfa370ca1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "636a93b2-185e-42dc-9082-de3bb5737126",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfd3dbaf-fb79-40b3-98f4-92b703d6219a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17514944-e971-44a2-9da5-6b91855c8e14",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e5a8888c-3910-4295-b85d-92533cdf2dc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1b8b2fe-7130-4aab-84b2-2bdaadfe7d47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3046964a-b9c7-477b-a458-a48f94f9ecde"
            }
          }
        ]
      },
      {
        "id": "e438b938-06b2-4a1f-b744-c200e4a846ee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b79d4435-a30f-408e-a776-8e645abae8ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05684dcf-b3dd-47ba-af7b-5c8cf2be6886",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3542fc75-cdb1-4000-a794-8d8d14941ce9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e8d1d8-b0a7-4260-a93f-e38dee14b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f4901a6-7e7a-4c8c-8697-326460a9c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dce276-000b-46e6-ba91-f9c1c9837180",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf5af2-b20d-4daa-9cbc-c703b8326767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b86bde0-1064-40e7-a8a1-c7d8a4fa55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0663c1-f88b-45de-8c3d-2d63447d2930",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff91e68-8529-4929-b3dc-598dc69fa101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e00763bb-7bdf-4eae-b5f7-23089a314eae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb29f34b-0c3b-46ae-890e-ba0d269d9ca2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0875f92-d049-4549-a38d-0d2f3fe67ad5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e884c987-50ac-4f76-9ede-cc78c8127429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0f3ffa0-ee0c-4200-a5d8-6ac9e5a9393d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aab372-f801-4c80-bc0b-e016e06d8335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bbf150-0f34-4f0a-9bf2-f37d23469d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3470b94-c212-4701-856f-d4d2f93ee24a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c425459b-4f73-4568-94f2-19c631587c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3c27037-0a5e-4d82-a7c5-8801365c473b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc6314-1070-4476-a998-6f5136baee3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "575f0b98-0650-4186-8a85-05c998ccee19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "349fcc03-716f-4531-af5f-158c0d5832a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9323c79-5978-44db-9f71-e326adb09ca1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dff6a833-b9af-44a0-93bf-0864e79013b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4cf9f6c1-86e3-400f-bb3a-ed236a8283d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f3abf19-4889-4263-b2ec-a4365411a41e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9d52fff3-54cd-43e9-a36a-56a52ffa77e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef488a65-7ef2-42fc-8e7f-77ad4ff142e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "525bb521-edfb-4b0f-912e-78ee859e08ab"
            }
          }
        ]
      },
      {
        "id": "6b18ad12-f659-4848-9038-404dfe07ffaa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d7739ab-0f6b-4728-8de7-215f5ef2ab4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e24e236d-59cf-4f44-95c7-c55f937ad06e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d4adaae6-9919-47bc-9224-c47703698fb5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cd3356-09b4-4c8b-918b-c52b3684a518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b5dea3-30a5-48d4-86c6-dd5ba6caf784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73017043-eee7-4fbd-be12-4858d1360fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7fa4ac5-2a40-4c90-b341-21484047c38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bd8642-d4a1-4fb2-9aa6-e95325a241bf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de7535-cf1c-46be-9da6-6d1b6f5e34c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed3c281-3171-42ac-b1bf-982a0bdc681d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be5d52a-cb6b-4671-ac86-cc784063285c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a55a697-c6b7-455a-9747-240aa80d7207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df31ca16-1e2a-429d-918b-f329591c2476",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b173c75-76ea-40ca-90a8-e1ee4d0a0a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5660b0-bd36-4053-9d37-3c166482fe74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb45ba9-9cd1-4612-9e22-7b8c0d862aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "273ba887-bec0-4483-bf4f-9e11fe185a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca973945-9488-4a75-9358-7d966ca4bf02",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f1d661-df16-4380-8ca0-cbeacb605bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5f88d2-3de9-43d8-b21e-c8ed0d5f8137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810439e-7200-453b-bfc5-9409616fb0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f431718c-7537-4286-baf1-ddab48852518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054837ca-5c57-4d17-95ca-d14fa83b0633",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3978dd1d-f891-4e77-bfa2-9bc10ad5d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e01fd-4286-4797-94c0-be76ca11b6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2fdcdd-e743-44f2-b8d4-18f2b69af6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b03a7ec-d872-49eb-a274-51c05c4826a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4a0cbf-f606-4ff2-83d3-0dfcd06ca52a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c508f879-b534-40a1-a7d2-e947ab5b45b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5614b12-365d-472c-92c8-f49d0fc93abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017fde4f-d53b-408d-b839-f2483cffa2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "727ba717-3048-4a04-a028-0fdc0392fbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c74d4-dfe2-457a-8d73-474e88f456bd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c4fd42-0f60-4c7a-b287-85f01a9cdd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c494e2-fa7b-4bed-9aca-fb651a788f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c87071-4f2e-43c5-b2f1-774043b9848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "499167a8-e26b-4a2a-9e7c-70e8e08ee9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e334c-39cf-41b3-a4db-fd36cb9c827d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd3db65-f87a-4d67-9307-f3bc49bebc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bc5a35-6ca8-432a-a3a8-0de90e70e5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f961bfd-cd46-42fd-b98c-6a8a5c48d46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea2db2f0-e2c9-438a-9c50-fc57f77c2750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b0a9af-3d58-4738-be1b-c409f5f1d8fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd37bf3-684b-4e5a-8a51-397c3832cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0ce304-06c9-4436-9874-d45f71d09f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c6a4c-aa1e-4420-a7b6-182022c3d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9b0c34d-e04d-4235-8235-c7b6ba5c86d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48402df7-d58e-4b07-bb32-3492ed628689",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1438224a-97ba-4a6c-83b1-3f1dd0e6aed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f1bc7c-cc7d-4129-99b5-61726ee4f6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bbe831-7b7a-4292-80da-44ec94c5da63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07fe6441-39cf-4c45-acd9-a591b7e5f210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24499a6-133d-4038-9451-f242bcbcdf70",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753819dc-edbd-45bd-9402-730f991c913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2909f9a1-51e1-4eb5-ab07-93a55fd03652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987c021c-d96b-4ab5-a5ba-974d825eec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57e03819-97cc-4b3e-b81a-5cdf6e9f601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61bd015-6237-45c0-bde5-ca6d9286ec38",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c843ca0-7e56-4d05-9ebb-10c434b2a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fdd43b-e5b6-418e-a34a-a7045a41dcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c9da3-8b79-4ba9-9c19-26abbf7e6d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a195f2e-2c0b-464a-84ac-4a5d2b2845c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58f0617-08ee-4b3b-b803-1d38b270d474",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4e7fe1-0a2b-4a2b-8202-0b28168ec0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d48a75-7cac-463c-a2b8-86916938aa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daf19b3-004d-4b2b-98a0-daf5e2c3d7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b0c97e8-839c-4e4b-b460-e1046bfa2749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781331d5-703a-4890-9389-28a5d941c4de",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f70ab0b-a476-48a6-acfb-f122f14a5b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dee3104-29b0-412c-b03a-2460e3eb45e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e4499c-9e3b-4004-91ab-34776b11928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa80137-8737-4f10-8921-01038920b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358dfec6-c1b6-4930-bb98-ab1e60b46650",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ee57e2-fe20-4ecc-a9d8-23134d34f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0c219d-5782-44fa-ac83-a909b28be3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa49329-4881-4b43-9fca-35d686ad6570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01600835-ada2-4991-9788-a9acd74165ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d159b4-a942-4794-955d-defad2960d52",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511e2f20-28d6-49aa-9ccd-522dcdc92489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd14853-ac58-402a-adbd-c9123c75e44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f471b280-f144-4ed2-a419-399bff6df230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d125b318-6b97-4910-aa29-8a691c53b0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c56878-1905-42ef-8d08-67919d838516",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209cbf1e-9dcf-4d61-bbcb-cd9065eefb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fb1625-c8c2-4025-9d19-68e7f2b038e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce81d59a-a670-40ac-9e8e-d0c7426c93cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78329dd3-ce38-43ed-b740-627a000c1ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfad098-c647-4719-a988-372338f5ff22",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da32f08-34f9-4660-b099-0de339b2eecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5459366c-814e-44a4-aacb-bdedbe9c53af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c222944-6b15-4885-b61b-81d074170310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b6cd86-1b5b-4ad8-a962-977686b98fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f76be20-92fe-4309-bbff-20239888715d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93264c10-c2d3-4933-b3dc-9d03a5e02fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bfa428-198a-43a7-b8a1-7e03d3d7b71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5cfcb2-0556-45cc-aad6-b4fad6d98731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72542ead-d2ea-4b78-905c-ad06f591fffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f799a49b-142c-40e9-a857-961e4c991da9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5daea14-02cf-4e85-a366-352a0f884c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8854d034-e766-4773-8d20-111f8475c35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca820e7d-4655-498b-865c-789fc925db83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "326596da-7526-4fb6-9aa5-f57a53e20262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211988ac-f59b-406e-a8e2-1e288016cfc3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae7d8fe-78e1-457b-9788-9c11a001c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be07e9fe-c3a2-473c-8700-3ddf9b86fa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de324d9c-2f2f-415e-b5fe-d28c6150e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9820160e-85b5-49b2-bd59-32b547c56fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a1d508-deba-41e0-83af-e5636c8529bb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213b63d6-46b7-4862-bddc-349d7cc58020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be8e926-cad6-475e-8905-cd4d93c43dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9f7646-3d6a-418a-bec2-2a978023874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1aa2f7-39f7-4ed4-b65a-5f3ee47d8754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f7738f-258e-4bb8-a201-1610a6e09fa0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5db0a1-4a77-4682-b098-e7006d139afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8849e94a-ef2a-4ab0-b23d-9d9e0230272a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988bf37d-f04a-4dbb-9c76-5fc5c3b63752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4c873c-9edd-42f9-9b54-b59520498ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6be10ca-dd00-4beb-affd-40c55fa1327c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2d9632-7d4a-481c-89de-6b9eb6b1956f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00b2e76-364f-4af9-a4f9-478ed5e02c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9784ee9-ab5b-4ece-ae2d-3a90a6ad0a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b93f75-a010-4456-a5cf-02645c351e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b59247-5d1d-49f3-949a-36c335e08542",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cfe8ab-908f-4d17-b1bd-46179d73498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2753d4b-d247-404e-a4f7-68140062b4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6148c3-c2b6-4948-9321-04dd9c82d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9003a4ea-a649-49ea-a353-6a39ed0713b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aba288d-42f2-4553-a3f3-15842fcf01e1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a276ce46-bbe5-467b-a5cc-fd67f0fdbc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f1de86-79be-4279-9d77-7bb214c03143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb1ec54-42b4-4082-a5cb-ee53369896a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec1f0ef-b341-4090-a9f1-0034d35d605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1200a4-4015-4d1b-bcbe-33a2b9fdf598",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21177267-d6de-4beb-a8bc-6b9066e85867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222244d7-766e-4d7f-842c-0c4886baf854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8868a666-a65e-4b94-93ae-741c1660fb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "136f1570-c724-4b77-832b-7ed967b601bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5961ade9-ca13-4a35-9a31-45171815f50a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9deeb6-16b1-4965-85ac-1deed98e033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1176f228-1fde-4888-983f-915c97a9d83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660d6a07-fa33-4e67-a4bb-3b0badcbe16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e3a3dc-dd5e-4cb7-bf3d-61397b405521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3dca67-c136-444d-8912-6060e1c52798",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bc8593-34f1-408d-b1de-0ddc84466bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b57719c-b97b-407b-a896-e08e75f867c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c31126-4383-4780-b4f7-d897a3631d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9536109d-72a2-4d00-b2f9-43868f5a0e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed47eb5-10bc-4698-b5e0-769984c4776a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7822cf-5c5a-45ae-8923-852edd91f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2302366-5782-4b33-83b6-3c98884dfb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc902c4f-3161-4f8d-9174-cfdac38d99a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a51fff6-acc0-48c1-8bc9-b687e141a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8070c8fb-3ac9-4876-bd71-8e9fc80da713",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1ab573-0534-46dd-ba13-07f2aa49a902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb61a7d-fc6b-4a98-a200-ad62d98101e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758079e-8851-4a51-9562-9a6ea15501b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13389284-ec16-49c8-8673-aa4c71cddabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d853b9b-3481-418e-8b20-51f10f0c1183",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d78315-d7d9-4321-b71f-4f52d535e047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7bfb03-3126-4ccb-a3d6-f5da69f42441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7159dbd-bf61-4839-af47-fa253be38fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3dce01-6a49-47ac-989f-a1b910f12bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955fe809-b75c-48c5-b155-b52e9b1bf2e5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e31a582-da7f-4edb-9b79-40e28ea6a69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42072d5a-e130-4dba-8160-92eb3c22ce6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779a7ade-8355-4955-8ef2-48006d190498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dba161b-e4ac-48f1-b6c8-ec17b9e1db1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994a2da1-d3ea-41df-9109-8b76c1bb3410",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33848bff-90e1-4b0b-8734-0ab4f0181146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f03ed0-9316-4bff-8177-2bae68f6fdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865bf5bc-4b20-4cbf-ac89-273b351e6685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45bec3d-47f8-4b61-a400-5ef1eaf91f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f458fac-0cc0-4543-9606-238a0e27b335",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8519b7d4-9243-4f16-8fc5-caeca5fc82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718e420d-2ec8-4346-8175-222eeb3e1d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4503489d-d1ee-4dbf-82d0-26075d597bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca4b424-3bd4-4661-9bd6-d32d904db5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23be4b48-d8b5-4b37-8c4e-0bca02444b9c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cc42b8-b72b-4168-9ea1-d40de7fc25d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c96aab-355e-4027-9e92-86c1e82e1ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc861896-a671-4efc-b954-6a7c78b9a35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf20141b-f635-477c-b60c-9d8242cd26ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837782da-72d2-49a4-8f98-4d4481cd59b4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02e98a-01af-46db-b9ce-003d4fa6c6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbad955-2761-4b2a-8c4d-30616cd065d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bb0475-9f98-43df-8fb2-4256ded2256c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd66a37-aace-45d5-909b-446ac8995a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6fa011-b206-49cc-9220-76082599e51f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5417bc-338c-456f-a622-e5132c10954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7212693c-549d-4991-ad6d-99150a51a446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97054601-b9ae-4614-905c-b3f9bb0d1162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf90f85b-7fdf-49b4-9083-9c8a845df93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1874d8a2-18e9-4a4a-8e18-4960887d7695",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0906ca0-7134-43a8-92bd-d69539a3485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93d27d8-8cb7-4bdf-9491-bb266f48ad5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d018173-5dbf-4737-b439-28f5047f42ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d610c6-120b-4bf1-aa57-60b704ffc4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3f21d4-b0f0-4630-80ae-a17b68727bca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429e7cd3-d52d-458c-be76-3c31c10e7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe680fa-43ff-406b-8b85-f0d40bc8f587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09229f9f-1dab-4567-aed9-5506bcdd102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9710fe12-f79b-4f39-818d-9383aa721b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5184072c-6c2e-47b6-890f-bcb55410bb40",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b837a1bb-2c51-4bf3-bf56-647cb82bc37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c784d6d-302e-41ef-b1d9-2f6bf1c97716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a65c57-f3e6-45e6-9777-b1f80b0c609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a93b4dd3-6428-440f-b4e8-1462674ffe44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5963d880-b0c1-4286-b549-0e6130c6434a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce260f5c-025e-47f2-8834-bd89e9f7f0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d978ad-238e-4cc0-a0bc-8e233a2a7205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb90b27-724e-4524-9413-ec3735168c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98ff8cf-23b2-4b47-a734-68306b9bf46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e023b1d7-d4b8-46d5-85d1-4e2a68e12129",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6e40fa-9381-42d4-91c0-b756b3371bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce531525-44da-4c38-9ab2-843c10095974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b9ed79-eecf-4332-ad22-9648d453c11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "797a0cd0-541e-4af7-a95e-e9709e64a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf6b136-96ed-4d7b-b7a7-86fed2349b1a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c37f97-a568-46d6-81f2-afadeb8beba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2883835-cd14-4e03-9a3d-d66ecc18f332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d01049e-d97d-4437-93ba-abbe4078a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "acb4084c-c9a7-4f47-b761-b048bb738704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6634104e-7dc0-4fa8-9738-9230fce56e72",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d7024f-0353-40a6-9396-454242b82d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ca49ef-c176-4691-b387-e3a7d169b16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546c2325-bf3f-40ab-ad03-9c6ae65a614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "10622d19-c9eb-4c0b-bfc3-ff3d40ecdd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b0e962-a8fd-4065-aae5-4866d10b1823",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f970e569-0116-4811-be4c-b05f73f034d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465d1135-111a-4f59-87de-4aa53d084b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ebf7d8-0b80-4f80-a67f-88b40c3464bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23c373e-e86d-4376-aad6-5f2826d1c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e74f96-e586-4492-80d8-e8f1d6222254",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be10e318-5d02-423c-ad52-1da32208f7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e2690d-9d49-46b0-a0da-8fd5852cc454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966d478c-0d01-4c3d-9e18-6fe7655f6312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3259bb78-0969-4b05-a834-b3fbb5b6f7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8d97fb-c934-4e96-a34f-c57a30e984cd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b00e08-5c32-40db-ba18-566e40693568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f65ba4c-2f55-4178-9f20-d3c228f6c4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c139094f-b9a8-485b-b739-24c1e220ab72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1587d46b-bfd6-4148-b13d-5e1a90bfa32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6644b67f-03e5-4f15-92c6-38066638e9dc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f468d4a-cd18-4150-aedb-2a76386aba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e933bf52-85a8-49d5-81ea-465813ae47ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7f5302-ba88-4d1e-9079-8c6a1464a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14128f6d-3c8c-4ad2-be7a-573f65ad6567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4598e292-cbdf-4745-97bd-7cd1c30f4ed8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca60e1b3-3cc5-44ee-ab4e-48f1d5439bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be970e6-f0db-48d5-b68b-1a2c187d4e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db710a1-5050-4764-97ad-87d9e5b6f504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b863b93e-cf7b-49e2-b041-df0a38745a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ce481a-d667-40f6-bcc0-0e57854f1729",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535a4551-27c9-47c1-8ba2-f994bfd248ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe9aa42-a6be-47e4-b817-6d2ddf4f2157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677748d1-0852-4664-a9f3-1c1e437036e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d53a24d-7787-4a5a-93e6-14d180096fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6af39a7-c2b9-4598-8310-112150258e86",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b9365f-3a0e-4ba0-a541-20ff2af5e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2e14bc-dc6a-4b42-9ff8-ffa5555fd3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0635cf6-8142-40ab-8841-10ac7c9ce03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf75cb91-f793-4944-9f7c-9fbf6536ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3833c109-7107-45c8-8355-d74665ba877b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce0d48-ae21-4932-854e-0fa5b321e28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256fdcec-b92f-40a8-8ab3-e2a7f030a1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627495fe-1ede-49e3-a2d0-275bd99db318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aa00aa-2801-4b65-84e4-d9e5ad220ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facc7a7c-d26a-4bce-8af4-3c3040d88bd7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3b3c4-6798-4399-a6fa-44a44964a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d95813-5877-44cc-b987-532a4c9ddf4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e4816b-db96-4250-bb19-7ff8ba4a0c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eae9fa-c04f-40be-8c94-fe7bc3ff3325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6325aaa2-04d0-4f24-8e11-91aa63c2ee7b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4e30ab-dcac-42a7-b4f4-2cca9adb8e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e941ae7b-4363-44e9-ae0b-6c9481237280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7922c3-b8c5-4edc-be66-4b50714a03f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f16b7b1-c49d-4bd0-a8a1-d3bb8f6a2ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65411b2-53f6-4fd1-8be7-d4384eb6e232",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e6e02-cf0f-4fa2-8ab5-5a937a0c2380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a6e058-9ffb-4105-b188-6ea5e1c22adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b735d691-ca35-4ca8-ae96-2398ca4cef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "056798c5-3215-4536-bf4e-048945e5aeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f56cc70-ef1c-4b62-9054-4b26dfd4ccd2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025b08c6-d55c-4408-a348-690ee071ae48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a13ed0-5d50-4de6-b982-3620c8526900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d21188-ce7c-4ee4-a3a3-9535f32f40ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "075a163f-ecc2-46c6-9abb-f7fbbeea9f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8dfdff-37f4-4655-9c57-0c1032c48ee1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f1e037-37c4-4183-b965-f7ccbd5c5250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c754f105-b003-4959-ac15-bb48958e575c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b327e71d-428f-4ad7-9955-b5edf52dbd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a8d17e-33c6-42e3-ad51-00e7c6cda1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa589ae2-4601-4988-86d0-089655133a2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64217dc-648d-48dd-8fb8-143741bde2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366d4f62-d544-4ee8-ba51-c2a4cf6a2809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d36008e-7b67-4efc-99c0-17707300ad25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d07b7d-3354-4805-928d-50b8adc16c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06534f2b-dec9-4de6-a6d7-ef407218d246",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b5c8f1-063d-498f-a00b-4a847f157e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c3a2a4-3f19-4186-9df1-4654824b7181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12978e22-ed8f-40d6-bd40-a13648bbb189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7943770-67a6-4bd2-82b1-804339dbd83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f37a2bb-7cd4-4a18-8492-a1563f7b4d68",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a37909-7952-4958-83c3-88bdaaff1230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870b5643-e0ca-4e45-bc56-036445da9a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323d8272-aadb-4f2b-a770-de597683fcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c71ba9-56e6-4c3f-abfc-65a9b72ad3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308d26ff-431e-48cc-ae91-8d5c5efcdd76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b981727-6732-478e-9542-59c77a31f420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d54f271-b6c2-44fb-86ac-8ec222d158c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39609b57-a508-49bd-a3ee-d05cb1e7cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7eb163-9e62-4ee9-95bb-a02f44f44312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33a00d2-1698-4905-b3ab-f943b3e82104",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fae6a7a-c309-4e17-8bb0-f79319489a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f75f85e-e277-4a50-9915-164608b744e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df371d4c-6fa2-4427-82a4-57aee1214469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0984bf-e246-44c3-98d3-3043a0638ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9276fd-29ee-4b69-8462-ec43f1c57787",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d85109f-c35b-42e4-8be1-3f0857dbcb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faafc3f4-a479-4f32-a4d1-a5259fa0ee2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683c49ed-c020-496c-8c5c-dbbf377ebb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "333acafb-06c8-4fc1-a784-175623860a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c3f36b-27f3-493a-baae-8ca829157bc3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6863fd4-5eb1-40b2-b0dd-877404089a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5dcf49-680d-4959-9f96-2d43f95fc80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d40a94-b4cc-48f5-9c9b-b235ebac00b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1635a63c-23bd-4435-82d6-c1a35a41b405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf5a5ba-f586-4259-8996-e927acf61d16",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d35b5f3-6c9b-4b7f-93b7-e2e9734f80ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ae90a7-cc95-42a5-85c6-7dc2549032e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71219fbd-22b2-4f58-a844-f07bda2fd973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b296211-2be1-4e82-bedd-da27c2ed106e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28b0b5f-338c-421a-8d04-bd507d02f565",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb94425d-b649-43bf-b211-c88d07b3ed9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458f830e-59a9-41be-b704-5c8d6ccaeb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1529ac8e-a259-49fc-ab7c-06cc3c47c987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a550fcad-73be-4eaa-bc19-89c4178ccd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ce33ce-2584-427d-abdb-f57df1ed5cc3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569a3620-a115-4a78-b630-30e57131e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ee558c-89a9-4550-849d-275204c3d3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28183cf-c04e-4906-b4f4-0af73456123f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f38be0-db33-44de-9d49-25bf57cb4dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae388bc-5d85-4c7c-9da3-348158f2c3b0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41550cd8-b62b-429a-b8fa-906e0a13fb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c52bf8-2b43-4efd-b726-27b21afa0985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8c3e04-2535-4109-be9a-8a2719a05310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a140ce31-cdc2-4b17-bcb3-6177cedd30cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae8591-557e-406d-bbd4-1cb12e165516",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7196bea-1a0b-4976-a6e8-07281ac21a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631ab7bd-4dee-4ee3-818a-3d135711d477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b919eea0-86d5-4094-af94-830197312626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "671754b5-95f7-409a-955b-c6b73b6bdcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5682b17e-929d-4c63-9763-497cc4d6549e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db50ba6e-931c-4758-8dc3-9d446361fd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9108bc88-9285-4e02-b570-967a18eb5910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a814e4-3a7e-4d29-be47-c85374555a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b781f5aa-d25b-4ed5-b659-407adbcf033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae5c61e-9d11-4176-9a6e-6ce3894b5dc8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2451ae7-29c6-4a53-93f4-1630b07396ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b450ba-700f-44d7-9fd0-42f4c21e97e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86b6f01-ef61-4772-802e-2979e5060e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a412808d-74d6-4dec-aae1-064a328f144f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab9452-20fb-40e8-8610-1017bafb864b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685826f2-f7a2-4a81-bd87-2321f3025c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2233547a-f150-4de5-afbb-62c53ddbf434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b188b34-ae50-4c0c-b837-c9f8c719775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f02fe2e-6284-4973-9420-88ebcba1c53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6464541c-b8bb-449c-b4fc-ae8548adf4a3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d0ab5e-56ea-438d-8ab6-6ec5dcfb306e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f8dba4-e863-49ba-81ea-2e8bba7c0a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9f5a0d-4ed9-478a-8c62-7c28c0c3677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d26eda-cb4e-4d2b-8da7-2937e828ad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ef4e7e-704c-43ee-82a9-6ff2875fc694",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ae4ed8-f287-4bd7-a5bf-2ceedb5f2e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250d8dc6-d3e7-43b1-9789-c4d4b88fece2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b63eada-0777-4e25-b88a-220c172fd994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "158fd134-bf29-40a4-810e-6878fba0a83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f077816f-a57a-4773-8291-20f1a87c97cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb05878-c806-40da-922b-b9f734a916e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ed615e-aa93-400c-ac2f-bececa6adf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6c8a41-a7fd-44f4-87c5-3ed3f4f78a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e89c0527-5750-4552-ba9a-2546fb4568bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9339ae57-a90c-49df-9c20-b7223dd4794b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab41064-bd6a-40a6-8a92-953dd29d243c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e475aa-825a-42a4-805d-712a54384e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47760ba6-63c1-472b-a91e-1f46fc5b09ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "872fe54c-b36a-483a-ad87-c1dffb2127e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a038ea-3c97-410d-8511-4e234ebc1811",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33d70f0-0ba2-4007-82d9-2b030e65ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357ec310-ac0a-4a72-9f79-2704152cc954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d205bca-2966-48d9-a948-d9a5ed003492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71f2235-8375-44e0-baa2-4981f77e52c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef0d960-2a35-4bbc-be12-5f6aae3a30d4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b43d9-25f7-4afa-9e9c-656fac52ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3682e7b9-6d48-4851-8bfa-66e9af57fa28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af26506-5d2d-4ece-a42d-caf50d2f7056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f3a6f2-ac38-4de0-9d73-ff6f22ae27dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a833ae-49b6-4a22-ad23-841d245b8815",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79d48fc-9434-4dee-a787-af1f80465c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a936043-aa69-49b2-9a43-2bd0194e87e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10325292-456c-46f5-ada2-02fa3f45865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19ebf1ca-0622-42b6-9d64-3490fa3f2ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152c32a9-8ac2-47ec-98b1-353ef0a65795",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621f20ad-a71e-4477-a907-87ea77dce34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490033b9-5544-411a-9532-30d736531972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39102210-146c-4888-9d1e-5e02e779ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d526a3ac-09c0-4054-a838-2efabe8c846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83e051e-b521-4d1b-9bec-3ccea8f04dea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60325679-36ea-44fe-834c-0099ce4e4e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd1d249-a39e-4639-92d2-64d59f1e0157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd90a1d9-6aca-40d3-ae25-0427c3a9a825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c625a63c-267a-4cb4-8c0d-1986d74979ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65fe2e6-1a10-4abc-943c-e4eb30f4e67d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d3a2f9-b881-47ba-953c-4537cc0df21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ac9bd4-734d-4bf1-8399-b03bc5fe5b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b24421-6910-4f39-84e0-7ab2fefdec26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d03ed2-9902-47cd-99d7-9af693de7aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ed429c-c0a1-4249-9fca-00681cc8c50b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d3e5aa-4013-4cf3-a238-0c1270e1324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a1991b-d7b0-4bd0-98f9-63aec75ecd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62dd642-addc-4131-a2d0-9da8ddecf3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe0c7b3-8655-4ef8-8618-ba00074e11bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a953b97b-e44a-44f7-9dbe-d0cfe5d877f3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8220a2-c95f-43fc-9acc-a18fbed10f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd78bddd-791e-42b2-adff-801f5a7f8486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e119eee7-da6b-4962-849d-d435a4186ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce15ed9-6b2f-4ff0-a548-53e48a41a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eee64c5-5c09-44a3-bc00-0bb20d474902",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52de415-34e2-4d42-ad32-08ff6ca474eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f4ebcf-825d-43ec-9a3b-c0da4474a6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccd77bf-3f26-479a-b962-05ad963fea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2549a3cb-a89c-41bb-b588-dcb4bd880249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8732f9-e7a4-4d53-8b5e-7ad3af106345",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5272c-5882-4323-b263-28ecc5e03a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0b0d30-fc83-44aa-a0ce-d0058292a48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3da2da8-22e3-446a-bde9-0d24563b386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "443926f3-85ec-4588-b359-6af0bf251c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd696c2-ff08-4e0f-85cd-3cb5fd3d4290",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b52f4d5-be5b-477a-a416-13e812e01d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47845c2d-e895-4944-b62d-86d68771b8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc657a2-06e6-4623-9d2c-9258ba8e91b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9436111f-14fe-40ab-a94b-44983d86d694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c14c5f0-170c-4a2a-b459-0f8b0b5916f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a75f373-6fbb-4005-92bb-637bacfe92ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1546a35e-be8b-45ad-8558-43b0e0ca9349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b6b045-faaa-4e65-aab5-358368b74dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84cdce73-64d3-440f-821a-3bfa25220b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d5f16d-db93-4073-8542-47ed6fbd86d5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47679cc2-39a7-46be-b06f-26b27fc39927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1009695-535b-4def-a426-5c02ce9a0887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5e0f8b-c1eb-48ce-87ea-4c48e2e7ae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b821a15-fa98-477b-a3fe-b69251d108bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacc2997-0812-442d-8176-459c000ffaae",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da693ce1-ee7a-482e-b6d2-60663dd09501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43eecb8-9bec-41e8-a297-281ad6614ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5f44c2-6c76-4e44-8c8d-ebac6ec2565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a317b8ac-9671-4c83-aeea-1d75553c0455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5e7fab-c544-4af1-b713-8d7a767c7418",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30f0ed0-9ac8-43d9-9409-f2c5e158e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bf111f-3a7d-4071-9153-b12cb7999975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1675c1c6-e5a1-47bd-849f-01db0c62135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e3d27a-e6fa-4b9f-b621-34becbee3c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc1f743-f3c3-4426-a2c2-5bd77ac39156",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690eedb7-99c3-4fd2-b869-fa2a33c28662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479cc1ef-8b05-4df4-b2ca-3b1716fb5f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbc9c26-4fc2-4f09-b9ad-918d87c7765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22b8bb31-ac6e-4668-9627-2c08db3011f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21947a1-edd1-46fd-88ac-225bbc2a85a1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a921c80-39f7-419f-8868-b25728c87b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9cac2fed-1235-40c3-b0a6-25a49de7ed53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b338f89-e865-4144-a3eb-16577eba57a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffcebc0-e374-4a3a-9db5-a4e6c46ef31b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a4bdcb6-79bc-4acc-821d-b7e9bdd237d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb38af7d-ee1e-458f-9f1b-d3fc1755e2d8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a5cc9d-d6a9-43ad-beb5-139a8b65d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51938de1-29cf-49cd-997f-c8bbb0a525f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43debe70-90fc-4d7c-a2be-e2adad9ab964",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d3bb3dd3-f3ec-43da-b17c-4f66c24bdb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1dd7b6-2c4a-4080-a629-24216db5d2c5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e6bcb-4be7-4879-8099-71d86f66b578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdbdbfa3-520b-467f-bf62-7520ee8c6516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373fc9fc-fdd9-4850-9a13-56056b4d3dd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f1d34a0e-f964-4c45-be6f-9051ef60cafd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b57d55a4-d245-42e1-b87a-6b84bcc22708",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a932c3ef-d937-4504-884e-419e669d0bec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad911c70-0b79-40c8-be67-e6857b75d625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c880adec-4941-4429-ba1d-8e30bec9098b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4be5cdf-db53-42c4-a9c8-ada87d089737",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2912959d-40a8-4925-b132-04d32d8eea70"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2ffa7f8-b0b4-4c12-849b-5768649d53bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05cbbb3a-f747-454a-a978-ee4cbf21a375"
                }
              }
            ]
          },
          {
            "id": "3c4a2e4f-b827-446c-a9ab-ead403b53b23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf8a4de7-b58b-4b8f-9ffb-84f769ee66c9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e93f1bbe-1c79-44d9-bbe6-5530c1268e87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70485992-1d20-43c1-8bd6-b61876b7c808"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37120a11-45d3-4290-bfa4-e4b611904371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c517604-5eb8-4caa-865c-89532d01590f"
                    }
                  }
                ]
              },
              {
                "id": "8fe101ce-aa15-4ee2-ad34-647c59853180",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "969f6490-a4fe-4d5e-84ad-d2f20acc9a22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae01a304-1544-42da-9ff1-3d317fe6a43d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0c584a0-575e-4b43-a802-75fb25131636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3311ca4-d632-4802-985d-d3273987303a"
                    }
                  }
                ]
              },
              {
                "id": "7a99b575-e1bf-40c8-aff4-96dcb9a25cf1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8d1002-831f-4aaa-bc1a-5796024094c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55df303c-1ad3-4c09-a827-fa5976156425"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d95880a8-1d4b-449b-8ad0-c77f8d85a52c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0bcaa488-e31f-4d68-8767-4bc16433afcf"
                    }
                  }
                ]
              },
              {
                "id": "e16665f1-0c3c-4a98-a729-d881e0a90cb6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "581fc7dc-7ff1-4bf4-8f79-5b57912bdf22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77ad82da-52e6-4a32-a9c0-6771a37464af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "065c4b33-a76d-468c-b2a3-139716024015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fef2c2f1-5f1a-4a01-a3ad-c647675c21b2"
                    }
                  }
                ]
              },
              {
                "id": "55ab0368-4a4f-4d47-a80b-fad249efe6bc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88b1b1e3-0ca4-460f-aa1c-212799779bca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68383ec1-a238-42e8-965f-cb827b32637f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41500a8-7494-4f7a-a397-606053400253",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "937669d5-149a-41f0-964c-4db05a80ed94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8aef9ae-d22c-4643-9906-b5770267d725",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c2d3f5f-5003-494a-908c-035202772ff9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "886ace67-189d-42f7-aa5c-f79c59263594",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7201ae40-80bc-4527-ab13-d3ab8b676bc4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3004d9eb-044b-4862-9feb-abdb26414dfe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c8bafddf-af45-4cb3-b7ba-937e198d7f6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9ddd4c8-e2d9-45ec-a507-44596246994f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d2ce97b-4b7b-4ebd-846c-81815eadf670"
            }
          }
        ]
      },
      {
        "id": "47cd9090-7b8b-4583-85c9-0df809041338",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "68adb939-a3b1-4deb-9fee-f509fab01e0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3d680f0-70de-4788-98d9-bf1b3129588d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "acbd1979-a762-4040-a19a-ed26f4543506",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5baa30a-d1e5-43e7-9056-f3399da3362e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb449cd-548a-4cda-927d-cce7fb4817e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb24659-1f49-49e0-812b-f9f881df7494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da025e3-83b9-4278-b544-bc683c54ce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57eb6fb-821b-45de-b9c8-29b7677b33ba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085eca7c-3a42-4e4e-9f9f-3462e4708592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c044cf8e-baa7-4647-9ca4-700d81bdedb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35717bf-b721-46ee-994a-13acf3e273ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c014e7a0-7a90-436c-af02-34b705306613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8697a6-62ff-4fbf-8f3b-b37e91e6a64a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19f5dc8-c1b5-4303-b51d-767f90465580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7509ff0c-4d0c-43bc-b867-ff9446666ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3901efea-56ee-4345-bc6d-ca922db03c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e403d78f-b677-4054-b048-ee3c4921de3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c51dca-8d82-4197-a795-e8a562f169dd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da292d77-2073-40a4-9386-c923fe645d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ea559f-d71a-4153-8414-10d01a006ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266470d8-2544-4d5c-a54c-b4379fe0e79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "424b19c9-6d59-4c4a-9136-b63686f5ae55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5bb73e-b6d1-46cf-b8b9-19488021c7bb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2d5852-08c3-410b-9d3a-79a93b0f69e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b2e9c0-208f-4619-90d5-676c03b0b911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bae897-7170-4c99-a653-63d9f1c68eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9385f939-20ec-42c2-8c69-b3fb84993ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f92d36f-10e2-4ce1-b0d5-c3d988711f1a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a7e24-18d4-4286-95ce-ba7783f42858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a5b7f0-5ffb-462a-8f8c-8506d053c1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac84cb-5e95-430b-8644-0455c1f200c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67f4c01-b113-428b-8b07-d7dcc8e071fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28568764-0131-4523-a1df-9c8cff9d593a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485cb00-78e8-4e2a-9c05-6dac5fbc964e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735accc2-88fb-4e33-a535-7d0e7ebfd6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1275061c-a79d-4565-9410-dca370920d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "03690daa-d4d8-4e6a-aa2a-e7087c613e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db820855-8b2f-4a9f-9ef0-27b410a5babf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1300a-6fe4-4e89-9b3d-f210225fb562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0753eab1-a375-4ed5-b762-a86688ecf4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165dab16-6914-437c-a22b-d6feb8658893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad22c5b-8fb9-42d9-96b3-3bb9c9effb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505eec65-1e53-4ad2-b974-06321ecaffda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdaf17b-fa52-4267-9d14-f64f5ed3f35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defe0767-6b8c-4b99-87df-c843ea0f1fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3fbac3-7c0d-4209-be2e-277c5fd6b6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5573d7b2-0089-4b05-80f7-a5a4d4797336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc759fb6-cdaf-47f1-bcef-1633fffd3112",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32164576-b5e0-4ea4-bedb-14f2bda9c98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8d1308-6ba0-4866-b3b1-0c5447651954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06464a7a-39ed-4daa-bccc-42426c1813af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1d46cc-112b-4f66-a7ed-37895c34ba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5f48d7-1761-4602-b4e7-7ca11fd34b73",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2970aa-6090-4b39-8c73-dd63589e29aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df44650-45a0-4dce-a852-dc4c945106a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54fff2a-09ef-4d45-8b09-d4d6f24f7f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcb7d1e-0139-43ac-b2f6-41c401f6b804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d449cea-6a19-4029-ad80-deaea0900e56",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da2fd1-4159-4bec-9a98-bc11be70b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed45bda3-6c55-40a9-83e9-58edbbe26760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aef09e4-61db-4551-8b22-3cb5be1fa2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8d53ad-8759-4624-a047-543ce23f2a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef5b0c0-e787-442d-804c-d525659e8ba8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414fb2e9-39e6-48f4-9c26-5b55cee22890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b143d202-b3b7-4975-85cf-e23d522c515b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81105e3-e516-42b4-bac5-491c4417b16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4106e8f-5057-48d2-abf1-822698d19569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470bbafb-861e-4d14-8244-8a5ce955764b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed70d38-01c5-4423-a2da-16a9b648df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860e2a9c-8e1b-4643-a18e-5b1baf08d779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ce3de4-8111-4f07-a922-9335613cbdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e757bae2-3529-4ed7-889b-7ab5b6314584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229fb846-648e-4a67-9d88-584525fc903a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1a4cdb-275d-4022-a5e8-f26dcfef87d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d0254a-fe96-40d8-bb78-be0b73a0878e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a50b826-f5f5-4209-82ce-d48ba1928770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36037f3-14fa-4a69-9a99-a1606c6b97e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8a7b9c-f5ec-4222-a2a6-affec37114d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f87faea-ed9b-42e6-bfa6-842037a025f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ce0cce-ad33-4e1b-9d67-492c8614745d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8f4bca-7bdf-4b3a-9e40-c4bd90ab3985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddaf5bc-1466-4c26-b192-4acd93a1812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef68b11-0282-41e5-ac4a-cc06cd935916",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bf8e86-a3ec-4ff9-851d-ebb29f868dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95263bc3-3cb7-4d74-9c05-dc67403891e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca549b7f-3d70-4cf9-9028-f31c6f1e3c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfcb336-c68d-4da2-88e3-f5c90555e2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ce170-d9ab-445c-a6c3-348234f333c4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9399484a-ec3b-4a0e-bc0a-e6c44ab7b93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54921ba2-fdd2-4e17-aa8e-04e318509036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d97858-fc0f-440b-9f47-546e779d3bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d9858b-f60f-463f-9f65-43c582ecd6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d203b290-9afd-4aef-99b4-a16bce3e9c5f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656aba46-570a-4cb0-a975-921d0e4eb8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5520325d-47ca-4377-96cb-2e8fc2474a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fbcadc-847f-4392-a575-20b471911f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a28d9373-2ad7-4bd8-ab17-ee42d847b5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb9f64b-4a32-4616-8b40-2d1130c071a2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1718dc5a-ee09-468d-abef-a67ede3d1b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f7f65b-7be4-45eb-a8fb-c2e57bb67919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33efc521-fb47-439b-9ac3-97e9875dc7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "127b4dd1-5cb8-4109-bf94-ddbb120be635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002fba51-6a5c-4d13-91c4-e90a04a992dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2d6ada-4c7b-430e-91c8-6025e0951276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8036dc64-2577-4c61-a913-08acbebde67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741b01fc-f7eb-4275-a65b-73f094397fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bed973-c3e9-4be3-a5b3-033d2943d47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78fdcc4-2b50-4d77-aff3-572a5f7b2e9c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c12a9f1-6055-43a1-9051-c3be9767d407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98339b3a-8b7d-4c1a-8a56-8bb506d9aa5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ccd77-fa6b-491a-a7da-560f54b7b64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f64c15d-ae8d-4694-a441-5c498e77237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1776cadb-1c66-44f2-8213-44b74e8beef5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b71e21e-52fe-4d58-9bf8-1610d264ded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0e400c-357c-4595-80df-bcd463516c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8ec548-1b83-4a4e-8812-c68bbbaac51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69a9343-7dc9-43b8-b12d-e37e16e77702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4762e28-085c-4a95-b830-660b5789be0d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ec3bcd-9714-49af-afbc-789d078eefc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b240b0e-5ad3-4ce4-8977-7c325a751565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07036f1-47d2-494a-83e8-7b57f8b73620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b368a4d0-825f-43d6-ad28-4a1565ecba6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c570d9-1abe-42c9-9ec8-1ae3fc7101ac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e7cb4f-8a83-47d9-94e9-a89157b1f418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae34545e-1f20-4940-a004-35665594edf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e433be6e-97e9-4bc7-a7cd-8890c91ca99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b55dc8-d82e-4c18-b2c3-a256aed51752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d33225-de8f-45d6-9794-209191299a7c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369e0f80-2d86-4572-8273-896af2c1c491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc858ecb-ff78-4803-bb72-75b365f827a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e02862-9ef6-4377-a52d-4af4e41fc43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc48e32-dced-4c07-9406-95842a367d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8eec5f-9e79-47bb-81f5-f66f9106cb85",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12fb5c9-c134-4789-bc32-8cd46b467705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46d021a-4dc8-4500-819e-0bfaa1b36907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff4c365-db08-4931-9242-0709db245833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fed5e36-601f-457f-9ebd-b11aea058183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93567247-f383-4fc5-ac0d-e76ac98f20ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71898bf-2636-401e-a7b3-35d146cb3b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0da7239-9331-42ad-8188-de82f07f672b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f757a4ea-2511-4f90-b05b-6b4d241f8d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feffb9e5-a916-4b52-a17f-e2473f005ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cd21c2-c5ef-49ff-9980-50ebc5370654",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6373cc-f83d-475c-a3e1-c442b4d02551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b222ba-431c-44e7-8294-4acd4849cf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6ca094-d47a-439b-b59c-23564cd4a01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f774fe21-c844-4f18-9b93-2b9dc3a9215c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e8fd65-90f5-4ee1-82d6-582c7af39418",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba25c9e-d175-4172-9245-5ccd00a3a35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d2de72-4c05-481a-947a-f4eb7d0b346b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be313f02-96e7-495a-9e9e-eb4d73c651d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00003d9c-b37e-4914-880f-ce430d658f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656dcd1f-fa88-4a88-8b60-7aabca6be6a0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5406f1-d3c3-484b-9856-b5fe620ab9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1b3766-4bfd-4444-8aa8-fe2d0ba3fefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28da553-39bc-4dec-9387-b50bc321652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb13c525-f998-4da4-b90a-d08a3f9644ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409db9ff-5f08-4e53-aef3-455b04b12f3c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac9cf2-8808-43ee-85f7-385db2565d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3df483-62f3-4b46-9695-91fc6ea4ba83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca60492-8f67-4e6b-bd60-13e7d1ddacb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82420c27-6d10-4867-b1c1-ca3464590227"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc5bbbcc-dc91-4794-b375-ede22d766412",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abb9056d-ba60-4366-89e9-71dcfd6446e2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c144ae-590b-4e79-b93b-70334a0dcbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556ac386-4183-470b-bfdf-b95990ada8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef272e7-1a91-473d-a2f9-65104a1552b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7600030-f9fb-4d14-9090-9ade5eeeaa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc4d187-5fbf-4c33-bd1a-556335e5c17b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244f27be-43c8-4456-ab40-fe423bdcbd26",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c0cf318a-6b14-413d-b9ac-621cd47b7bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe49157-3ecf-4451-a0e4-10b836bec585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f551bec-b3dc-4671-b392-21a57a5bc005"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84b5e4dd-e81f-43b2-bb64-4304f1321e34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "983f8c5f-dbc0-4cf1-8ba6-8ce947077c92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a609c07-2fb4-441d-a1ba-764ac9f021ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71b8de22-3f2d-461c-b51a-f13b60c7df3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61a0a5b9-4d6c-4c01-8bb8-b97639c1642a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53d9240a-4ea3-4a05-97e5-9316c0a183d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e73e85-ebfd-4a09-94f7-b72f3f45e93d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc69ea80-f8b7-4cf8-ba1e-ca0fb4797726"
            }
          }
        ]
      },
      {
        "id": "1899b705-b7b2-409b-9ba9-458887b0d292",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "01e351bd-90da-4e49-a5d5-9f5ecb565f9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3982cc01-b464-40a4-8ea5-a61815f8365a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85e89049-7997-4a13-bf41-7d2f9ff8484d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93be0fca-e14a-4bf9-a8cb-27b94b5fa6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866061ed-09d5-415a-891b-325eb7919164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3c544c-19c9-40c3-91e5-22b8a003819d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51cf4ff-0b63-4239-89e3-4c2cd9825be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ae37f-3b97-4a95-aef4-7c678d564b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e192f1f-c5c4-4fe7-b61a-218276706f22",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5036dff4-080d-464c-9924-0660ea606553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c9a434-2cf7-4398-9c51-77ff79412b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07b898-11ef-4d5d-9ce6-e35c07362cd0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2126f0a3-9882-4e70-8b81-2f18481c477d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbff981a-45fd-4f66-8d9f-cb989a566d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e10f10d-293f-41dd-9382-56e67a53106e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3833c650-3e7e-4632-b179-aca675758683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490caeed-77ea-4219-bd59-ca01b1de39bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2529e23d-e8e6-460a-8705-6da5f4631d8c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43f047b-e457-45ea-bc05-1f81eaf9e753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36d43cf-49d5-4314-87c7-3def178f0843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037b26ba-c2e2-493b-88e9-6191952317a9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af6fe2d-70fc-48cb-bece-dcf533a7a98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af922bc3-b820-45d8-8968-bd0c89faaa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8eec1a-3c04-4b46-b3c5-c6af0f242875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0113b0a1-a034-477a-8cb8-a726efa4d500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0208d34-bc06-417c-8c53-d9f7d6cb0149",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c94441c-fc43-43ab-a5d4-16eea62316d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c967290-f308-41fb-a182-d6ca7f8482c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a2b5fb-8125-4ec5-8af5-3a734d737ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321be377-b3d7-47f2-ab75-6886bc380f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e72fa06-b725-4801-8597-916b7e176613",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beb5da7-5806-45e8-9be2-a02dd8b5af8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b92c7b5-8dc3-49c3-adda-9fb1a3db0ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf61458-e4af-43b6-ad53-34530a02252a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e189b57-cbc6-499e-8a98-658b219a893a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6008a79-efbf-4067-8032-8c55df61c2be",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0d7619-a64d-4f7c-91a8-f117912d903a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ddb6019-7bff-446b-a1cb-a81102e26c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dda8acc-9ad0-4784-9256-8fadb74f8643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3d6323-da14-4ad5-80b9-a372d5e3d740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025d7003-6f73-4960-8ae4-b1a8388ac3ce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3637689-e7e7-46e1-9d62-89541feea933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078253fc-ed4c-4cc1-96aa-89cf733d61c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ed1e8-769d-41a7-b4f1-e297cce3caf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5659867a-9fc8-4d3d-9b2c-8bc178ac2400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d63148-a596-4981-bffc-8388eec7445a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d206a1-238b-4ecc-8f4f-1d04b9717485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7ed123-1473-4eed-ae9b-aaed12806163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ff2151-d5de-491d-8d3f-7488f1f3573d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201e5f16-d66b-4556-b3c4-abf249d1c441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6474166-7db0-4295-b41c-5688cd206a37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15196212-0d37-456b-a621-528108eddf58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16fd6d6-a31d-4bcd-8d8b-a20a47f8cb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9516e62-9709-4a9b-b21d-0f3672af177d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8325d8-50fb-4e74-86e4-a73435015caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca059704-0ac1-45ba-869e-c66f7ec419d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c962e63-9f30-4d55-9438-413a14be5bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88406afc-2f93-4ce5-94e7-856b7860bf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d112271-346b-4a73-8a4d-7570807e6513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02e0e44-4dfa-4123-97e7-b4c1359a5171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f410d96-ef81-4de4-ada5-9fd0137ded5d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abbb978-aaf1-43bc-b71f-731227e6546f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c134d1d4-9509-4213-bbc7-bbb580df30e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a5913-d3e1-4716-b79b-db84666db18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e837bcb1-3b9d-4e21-8995-08391c51efca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd65eda-b738-47f3-a26b-4dd3a8bb7c42",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef328f38-e40f-41ba-86b0-37b57b1ebf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a39036c-2503-4927-b7d9-4d4baf78d95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7147f592-3635-4af3-9101-203dcaae2ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f62e32-033c-4982-90a8-0dacf7d5721a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928979c4-1718-43b4-9d3c-dc9ed4a99331",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb996bf1-f778-4db6-b7f7-1123a8b2d817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad39155-51f1-49c7-89d9-f7e01d1c0957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b467c0a-f609-4cbc-a90c-0ce940642f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25681dc2-4acc-403a-9323-c985ef67646a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb03fb-7693-41e1-9a25-31a8cac8f175",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58005320-4c09-4ef0-b56b-ea55817503d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d1048e-5b90-4da5-94d5-4a9f19af1e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f2caf-9b83-46aa-8a6b-433f75ba1047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a12261b-eeae-4c4a-ac81-a9f381314763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1d654-6274-484e-b690-a07fc2de2e5d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e19d571-e962-4c46-91aa-d5012aabeb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c44431-f033-4d8a-9012-fa4ff6e95e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a1ae2c-2157-44c6-a0a5-79ed5b76e2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abf9efc-bd74-42f0-a35e-2c364f69bb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d8e565-0992-4c8a-a582-a8a35fd51ef4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f3c06-97c9-43ff-b90e-ca521056efa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50fdad8-a661-47e4-a34d-440fbe2deafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c3aa5-7732-4834-a751-c1b8f9df2dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eac373d-9efa-414a-a246-377b39ab0d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c688cb-ea25-4327-a521-7a50645a5b4d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61147985-7ea6-4d3c-bb92-075bb50c2f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645b8bad-82e2-42a6-98ff-ea166b6ffa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07d1d91-1d51-4103-bbc0-8b7ff7a25174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f64b4e6-4a31-4317-8939-6fb5912757a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7dad73-ea28-475d-90c9-442ff772fce2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145cb61b-e47c-4e45-976d-cf3344f956b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bb6446-238a-406d-958f-a86cf5ca72da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a25c76-27ca-42f0-9897-b135e47e7e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc928e57-f1b1-47b3-851f-63a9c10da4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8285499-09d8-4a4b-aad7-e6e901edfa28",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2aad4f0-8112-45b4-9ba9-2c62f2ed0d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8636d71-9b1c-48a9-93b8-4da25fc523db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e3bad-8a6b-489d-9bce-8040fb0ca1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ddef47-f06a-41d1-b31d-e96a1b45026f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c425b2-a5f4-4eca-a10b-64608a3f98ad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75ec87f-122b-4a92-b20a-b511bf496b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8f1512-abf5-4bfb-9fcc-873158224cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99123f17-313f-43b5-8927-668b00906217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e8ba16-3415-49c9-91ba-c1033fb53680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355345f4-fbfd-4f22-82ad-ecf5a210fc5c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb778e3-05ed-492e-858c-edcd9ff1fe38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7c7bde-635a-4211-95c2-d5c4b4373268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bf06d0-b57d-4998-9ecc-2208f34b5fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f156f0-2d16-4af3-9518-fa658c199489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb064a5-547d-43d7-89fd-587cfe751a7f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ac2eca-4d75-429a-85ca-62bbf8c83e06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145e64b8-0538-4358-b130-e65e6ab2a046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83b4863-cde1-4962-89ed-318d107e343d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c1fc36-8099-453b-85be-1590d9d6e092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4979f3b-f675-420f-8df5-08638ba46625",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c3d995-09a8-46f0-8b66-45cf7c648831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c93439-af24-48ba-9f87-be62ed46513a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5d7baa-6fea-4eec-9854-3581a4febb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425ce164-ae95-41c0-bd5e-72e6668437eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd240636-6069-45b5-9a79-6ef6cb2c111b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704311f1-d2be-4953-b98d-8ba823556978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66908e37-a376-4bab-9cea-bd7d4c617a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf3e112-6092-4d96-af5e-8ded63776d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210665bc-8e20-45a7-a025-6e3b8821dfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8187e50-eb72-43b4-98e6-2b8a5003dc2c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5ef676-a968-414e-9d0b-f4a9a7738b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c35856-1e3f-4e55-8b66-b442f5b79c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4f8ffb-9859-424e-8495-994b3e530bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab4c698-0ae8-47cc-9641-25328a4c77bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f516e6b-c50f-47eb-a368-658034f9ddf7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a1412-eda5-465f-b262-6f56c99b0547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1f06bd-5c55-406b-b2af-604236cfb6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179b8cc1-4b27-4b84-96c3-77d5f4923bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed547f8-791c-4eb7-8762-97ce9fb0f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa6ab4-e85c-4930-a0c0-5c59cdd39ddc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285dc4c6-4593-4130-b0df-4f36aa555977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0118e8ce-95cb-4c95-9258-965a473c7bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9d47a1-48b9-4c4f-ade6-b2dc45ab5027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5c9648-becf-4210-a429-6bd63aa0c834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf34c09-f564-478c-b17f-6e20eb5aeb8a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c34094-49ed-402e-94fb-6db2f7005259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdc22ad-7268-47a6-ada8-7de57cb1c04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af86d625-18e5-4b34-ac44-55cfe637b2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694a17b4-97a0-4746-b36c-16361c93c210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80501e82-167a-42b6-a5eb-3175ae7d7e3b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f2c7b8-e979-4577-b1ce-e03b6b493bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04f3130-4662-4132-9571-c5bdf1d5a720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a3732b-2573-4ffa-9650-955c3680fe8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc7d62a-0f0b-4e92-8407-390b036ad174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e536f2-eed0-4df9-aa63-3f5cffbe4a08",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29afe045-78dc-4c45-8dc1-1f8f8aa743f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c111fee6-3bb2-4d83-af90-8b0ff5b06dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d97d50-88e3-49fd-986a-e8b39ea1b29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e5f0cd-67c3-4d09-a7be-d7e17b698600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8359fe-37d9-46f6-abbf-d638617f86b1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7824010f-e4b1-484b-8519-c7ff60779ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff2b634-9b44-4ec8-9d44-a6df018d4bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3478c67-73eb-43f5-b23a-4f009f35ed05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e419a2f3-861e-4dd2-99e9-89b49f602afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45ea259-be8b-44c8-8407-2f7ab6566455",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4906f7b8-af69-4fe2-9e6a-142ce0aa690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea3dc8c-47c7-4e71-a2fa-620dfa025832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1942796f-729a-4501-9be5-eae19c1a8162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d773bf9d-14b6-4b96-af10-0d643ffedd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa19fc8-eeaa-4649-8a8e-83793a2bafa1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d146a13e-a75d-4359-882d-27af00a94735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbabdf2-4002-41a9-b928-c916c1648194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c83761b-b6c4-48d1-a49d-95c1d74aa719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01907331-f4df-43a1-8fdf-51d9e8866dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d180b0d-726a-4c63-a121-72993cff3ee7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2fb03f-2226-4b7c-a10b-d2d0cb189604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1468c08b-6c1b-436c-9378-2d528e9972b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d257acd-c08b-462b-a478-6f31412b90a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31b95fa-f81b-457e-a8c7-8fee0f16366b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389d0542-09b6-4d51-8a8f-5a60edccff33",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbcf0da-4b25-4f13-acf0-2aebbae70b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319d749a-e715-4de2-b115-ed6b82b35840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7731af84-e87b-405f-9de4-295ff4cbd4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f826227d-63da-4d0c-9e62-7dfac3ea96f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249beec6-5890-40b9-8add-6806686a41b8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407aa8bd-2cf6-4c31-bb34-ec5939dcf37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2613d0b8-4fb8-4ae9-a49d-302155890de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e49f665-89a2-42ac-a595-fb57ae0024bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a39ee44-7981-4355-bfed-c84d79b7ae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2d5f70-dff4-4a6c-88e4-9491b8ecc2ef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f30f227-db64-4f99-988a-7ffaa7590467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cd757e-1ce1-407a-8cfd-015e559e785d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc172e7-91f7-4a14-9f62-522d22027524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbb24ab-823e-4ed7-9dc9-7c839e33fa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbb5f94-6bd7-4d49-a013-daf8dd9106e6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e286cd-2062-479c-b822-1f286641f9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07aedc03-ad41-435c-9fb6-57a70ce6eb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54db20de-6c61-4fa3-93b4-39831056fcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae377133-06d7-48ff-8650-b393d7817ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61563c0-caf5-40bc-99c5-7be3fe517dd8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b28757-1364-4447-a11d-3926d8e17af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588a048e-12c9-4472-9173-3062db996536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4897c774-b9c7-45d3-8e61-6eb4b1991932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8800a0-b6f0-428a-afb6-9f2dd20ff3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6312a1e-9aa6-4190-a6e7-d2c446a91d9c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6658e34-27ea-4ff5-a155-8356a59d5bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e462de-f3aa-4028-a2b2-1cc1f416c93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee31e515-1100-4f2a-b117-8934cb32496f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5ede41-c67b-40c7-8d96-61fc49abdbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d34abb8-a7ca-4937-a5c3-739844f2dce7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b0f64b-a7d6-4f6d-9211-2f8f9f75cdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60eb367-1e16-4c4d-9c11-c1201ba712e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3259303-6b3c-44a4-8a21-2364bdd70159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d80404-ad56-4e53-8cf0-6f402f9ee24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202dd54b-14d5-49cc-8012-b36220ee094d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b05aa8-8e44-4433-acd7-58bb2c2375b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6921da9-2bd1-4776-890f-26b4f8fb7844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973ca44c-3bea-4a72-a01a-841ef97d1974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18906341-7c7b-4c7d-ac7c-570ce4a89a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466f2d83-c4fb-4266-92b4-6651b9490d0a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e31d3bd-7de4-4014-8c07-e68f8e91bdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe73ce9-4600-44e5-93f1-441fcb895860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4158ecc-cb2e-44f6-b029-5e466d343927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96d9d0d-b697-4c8d-b239-1c100b2f3a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b373a8a-9a45-4101-87d2-b7ff319ef6e1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebfa0d0-1871-42ec-94db-43242235d14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b085ef64-89ec-4dd8-8316-81cdf365ac6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8696769-5517-4546-96be-6e9727d2e84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13daab7b-a0df-4a07-85f1-c579ec47d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e8f841-7281-4ec1-87a3-12d77a1dbc11",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe179d5-99e7-4b38-9286-509518f672af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a7fced-2e69-44c6-8f7f-eed26e348f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cc10b5-e6bc-468f-81ac-22ff36935700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c853889-530a-4594-a787-06a7e95768fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0829d118-b7ff-476c-8692-b9da5ac6b184",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53757e87-5de0-4581-a293-fab5587349ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6085e6da-1730-4c1f-a77b-14d128f678c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316e9812-1a24-428b-8169-6f847a070546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7af555b-65bf-4a27-aa64-e5e752261bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbb6879-4240-4677-bc68-73ba0b662365",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b87490-8e3f-49a3-9b3e-89cf260905cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abe8cc1-cf5a-4694-b294-5ca22e3e946e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974d1048-f272-4e2e-a514-6ea31ec9a150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb31abc0-b1d7-4e0d-95bc-f1b7c1e53e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d567454f-181a-4c73-8fce-341a6c7632fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6826ebaf-14e9-4a57-9bf1-ed59e41e4504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d99508b-c7d6-4fb7-adc3-d96fa54f5370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904762bb-a7a3-49fe-a190-9b2dd003672d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1bc4e4-c7f6-48b5-b80d-4744f9d1c6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89127b01-da62-4943-8ac4-f4321aa56183",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeee669-44c4-4417-9b36-bfb0bbdf5b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cfef61-849a-413a-91a4-63c726edba10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7af53b-0948-4a49-9726-adebf00d5cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d3cc44-9c47-4cf6-aa63-b191e7896e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d0109-acf3-4551-bd7b-5c6801046b97",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee20161c-a93a-4845-bd9b-7c944a3f0f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94f295d-8f44-4769-85bb-df1120f0cf82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39a1a96-9328-464a-8946-e0fedb2281c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3fc359-e619-4488-b710-0dd70cbb182b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22f4ae9-067c-419f-aa2b-fd8c1090d67b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720b4027-7ddc-4831-9eb8-9f209712a009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789098c2-a61e-4c2a-a49a-e46f45d1fba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f8927c-5e10-4b09-880b-d4b942e9d12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d736475a-7ef7-423b-88dd-65251ef62750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8e367e-8740-429a-be24-67cc2f2e04b5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d26f242-b79d-438a-8d7f-0e9642de171e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7668e01c-84fa-42de-9a89-86a7cee9cfb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44cfe96-1da5-42e5-bc6d-fc1d6891318f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adc9cb6-091d-44e9-b285-a053b0fa5955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279e44d8-1fd7-4b70-9a13-db914ffd82d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0357972-e2df-4e5d-a5c9-767cd0a17686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45be8d40-7ffb-4b51-83a9-3178f05efdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158a463c-784c-4aac-9767-67aa72b2049f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f434bd90-f8ca-49b4-a896-2f9a962c1bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba52513-dba9-40b7-8051-d6674d97e896",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e832dbf-40d2-4099-bfd7-191a9dbec65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236dc767-0ac1-40ff-a1e6-344e3d7effba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e79e4c7-3799-4859-b2ce-db6da1cfc981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8429462b-4050-4e33-984f-806ce9790f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389a7198-40cf-4a06-abf2-3d45001df407",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736bd076-e7c7-4f13-aee8-754bc637b10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4ae70c-c412-42a8-a4f5-f4f6b974c388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6131a7a1-fc56-490e-899d-bb439097042f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f855c3cc-d925-4e46-bf5c-bd939064ade8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788153a5-30b5-4d1c-a834-97e0102aa736",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edccc974-2bc1-466d-882a-803c28c24ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280fe16f-2aac-437b-ae07-fc7f58e3077e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b7753-0cf5-4b6e-8d9d-4947befa01c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2185451-cce5-4ea7-9862-2f26898bf7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56654067-3745-4709-9d81-26948f043fc5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47086992-46be-44dd-abe5-ed97a2cfdcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456324f5-4e22-4748-9438-e1213263042c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4f45de-7773-428d-af01-2105755b4145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958532b6-f2e4-4fef-a772-5edcf7978d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31f0699-03ee-49e1-85fd-4ca6b1958b3a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5b1a30-e324-4924-8c33-30a14da1e5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6668bb14-aed6-4143-9358-86fe0c906572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef1e62a-1a4a-4fdd-9aaf-75eb2412b8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9546146d-39a8-4f5d-bf19-fa33733267da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560c61ea-b761-437c-85f4-080e9ae6eac4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3e24f9-c9e6-4f9d-ab11-25d0fe9c0cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be96ea37-04fb-4a45-9713-2947c76bb350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551b882-381c-44e0-9ed2-c7963263cccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef03cb2-6724-431c-9836-a8d84283ed67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3921ac48-465f-4e32-a0d0-93fc0a97124a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f224531-cb43-4a0b-8687-954b7335a059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b631cf-c652-404f-9716-07474eef5955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f805f33d-fe99-49f3-8673-32bf282da704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda5b4f4-807e-47ff-8562-fec30d1f0f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292189c-0cc5-4ace-9a44-324b0170ab10",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0886f764-8ca2-42cb-840e-6f57c0f13cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab9f739-cf4c-436b-b195-05e4598707e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554bfcee-3876-4e5a-8052-dfa5c9b7a076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549539f8-a019-47d3-8144-bcbbece2cdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2360c93e-25eb-4b44-8845-74df1e6c6d5c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5315fd-d7f7-4ce9-8ee0-883972dca6f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bd324f-8399-4028-9bcb-ba17fcd6277d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59244035-9716-41fc-a052-81f1d81b8710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaa38f2-cd63-4532-85e6-7bd7e1ad2f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf6a4ca-95a7-429c-bb3d-d5558a36f8a1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a3bf67-c436-4f15-b45e-1e5a808d07c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9917e44-845e-4248-9790-0b65e0de520c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cc64f0-bb4f-41f8-bc1d-09fcef392612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dc3fb2-a215-47f7-9580-953ca3778e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557c7dde-5d04-4fba-8c5f-91f986e59117",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7a4f61-530e-43ba-8170-ea75b77adc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e25e05e-13e9-4377-b1ca-5afadbeaf219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8fc381-4912-435c-85e5-8565fba944c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59a5737-5d51-47fb-92eb-30b1086ae30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda9547d-1b92-4c7a-a417-11a1ec7467a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604eaf39-2434-4f86-bc07-76170f5d615c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd86fc27-0b1c-4372-ad17-d05bd9bb7930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1891c5d9-4bad-4cdb-a672-874654f8d08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5b1922-49fc-42cf-8b03-9a9513017828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2efa87c-f22b-4ea3-9a4d-0f4079dc8604",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45459351-fade-4dee-9177-b1a7111bdf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f93840a-984e-445d-b218-625645477c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b482b08b-13f7-4877-ba5f-4346b03227be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5946456-3883-4fc8-9a5d-88bf77f89432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fece8b5-9cc6-426a-bee2-a4a57770444d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd90faa4-899f-42ef-ac0a-ab23cbc452d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "093c487d-6376-4252-90a3-a2d78c68c1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79f28b6-056a-4ce0-96c4-9a063c4bf492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c6c6e3-e08b-4ee3-8b2f-ae4496162775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60cd137-6a4c-413d-9fbe-7f6791a0de11",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7d9f70-b9a8-4810-8967-fc6f2fb59b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33f2c9c-28cd-4f80-b2c0-ebe1a74937bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ebe20b-960a-47b2-b552-36bbf46348b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5eb5f5-567b-4a92-ac41-4365bcc622aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b166f1-7356-40ad-8d62-43ae38c8b885",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce80b08f-feff-44f6-8f35-f35919439e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "579d6f24-5a11-49e2-9470-67d678fc7ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ff088f-a245-40cc-82b0-a4e89b54417e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd827bd3-1d60-4d7b-8d86-35a90985c6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21f3f35-9ea8-427a-9837-29e42bf29198",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042dd274-a5c7-4304-946e-80ca7eb8b6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bbeabcc-a4a6-4116-8067-f183450f08c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5753f6f2-7be9-4812-9490-15eb9e68fec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c3392d-0064-4422-9457-63d2035d3e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcffbc5d-38dd-42d1-a079-e022fcbd2f9f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9851a7b-24f7-4769-8438-47749aba7639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a15cd1d-9b7a-483a-bd0a-db4bf111aed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f43d4f-f9f0-494a-8215-3c7663b44ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8a5a60-fe8f-4222-90a9-af17cf1f9208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e533e94-dfba-49a1-b429-597a74c687e0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7af0335-011d-4cc7-8603-1acd49535f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64f3499-1455-4b4c-8f40-32f67ab4a259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ddbb2-4be2-47f7-93fc-c78894ae363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce61913c-91e0-4b1f-8ee1-74f1f3eb77b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13936233-5d41-4f1c-9493-f408cce6ac5f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698d9f31-2f16-41d8-992f-50ae20a39895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a33569c-b22b-4a2b-8af9-a1f74a30fed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a80d1-3098-4b99-86ae-931596198925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55fa1f7-e3c4-4fc2-82fb-66145e55e8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8936e01-defc-4ae1-8b7f-0a9a12d0f1a8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3f3637-1c50-42f7-84e0-12289b39bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9699bac4-b0ec-47e0-9789-fce0f6442847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3482c4-cab4-4a3f-a895-18f81d8dc560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dc1da9-8177-490f-a179-da6b8227e140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020dbbb3-5e07-42a7-bd58-76b3014015cf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc86877e-e4fb-4f3d-9d1c-6ad56a313f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7f6c63-ad5b-4dc9-a7fd-3e1df51352f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6de0ef-e1a4-41d2-82c0-48ca362c851c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168af9b4-b1f0-491d-9cbf-5458bf6a6662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8627c85-8181-4691-92be-7a8550f9b3ef",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f5639e-6550-4059-8ede-a310e834e98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e27e4b3-42a8-4248-9314-1ec163034c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4f4445-a85e-48c0-a152-2664be9167c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aa24dd-b13f-4ccb-934d-33075f40c7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff209989-fc1e-47dd-9007-99de92fccda4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261f16a0-bb13-4b3a-a030-1aa28d8ee6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9eb1be4-c01b-45a5-bb69-9c53c7ff12e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd157c2-e259-4339-9305-d63bdbc068bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e29750-99df-44ff-a403-afc7ee020ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a216b49e-9d1c-4136-8d55-4b4c02751398",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dab731-8d60-4375-99ab-b37ac6faf989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a57dd3-80ca-4206-b049-56bd4ca72387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbf3abd-5072-4e26-b5cd-2cfd862fef7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd58a1b-4d15-4486-8695-2d759a025e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24b8e61-2f0c-4bb3-9454-93b61693412e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f86765-3a7b-412a-9012-1f65f07821e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e55ee3-e35f-468f-b5f3-b221969e856c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e31317f-d21e-4821-9ab4-954fbacbcc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f5bd86-4c6b-4cb1-b70f-5e5399a27b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c410f2a-978c-4350-9c5b-b6cb41379a1e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbde0f8-6f5a-4087-897c-4ef2f44e9681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0ff9ed-e23d-4d56-8116-8582180a758e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1000dee-fe8d-4f82-8b79-3f1c94168286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b143ae-5f69-4dab-a6b3-b65c259282a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f25403-98b3-475c-b0d9-cd29f44bd96f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a4113e-60d2-4bcf-aade-837b267c4536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f29ca3-8b74-4dd9-8649-404cdc9d4bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5b2216-9e5c-478d-be2e-faa51573c8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d04e51-b5fe-4dae-9472-364461b5d8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc5ba0f-e582-4252-8b39-1906edfa4654",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fdcaac-6640-456c-ae17-4016938b46fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbae9fd-d95e-4e4e-a4f0-1b8220a9e01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f49976-2edb-4568-a8c6-b60c476840c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12d0d19-8c5d-473b-b4ce-bf85b232d81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7078eead-c661-47b9-bc05-592487e30dbb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761d0d1d-701f-4c4a-819c-7fe6d5e73a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e57f08f-7a46-4e24-9ac2-d1516deb1f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0af1e0-4b68-4108-85e9-96974e22e197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c97313-574b-4cf4-85a2-badb2e8ec922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5352c4c-aaf9-4ae2-81e3-51a548ef3a99",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a903b6f-76e3-4fbf-9654-2cea4e9f77ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7855a3-39d8-4e37-b573-3bc98b9f6f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f858a1-4170-4570-a67d-25f1cea984d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac19388b-9d27-41e9-98bf-770bcfc18319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd106ce8-b927-473d-865b-269ff9201afb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855525ff-aa7d-4535-9f7c-f65febb3a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77af7b28-ca1c-4cd0-981d-f7be3d9b46d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46351e0-1dc0-4cec-b59e-cad56d78c2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d786e96-00cf-49f2-8a7d-789092d4768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c89da11-5fd4-4ad9-bb0a-2ef6278c271e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a02397f-68e6-4cb4-aaaa-bd77cd28dcea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ac62e9-6208-4c84-a91c-703ad5ab5c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322f15fe-b6e6-4330-982d-596afb8ae9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b980bd-f8e7-4db3-95ec-87b7c4d1b820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9700e409-db5b-484a-9d77-eaa44afb5b5b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3abb94-7a4f-47fe-9c92-c380309a6d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6359136c-332a-49b6-99b7-6b542cebf447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d5d679-f37e-4fa2-a54c-a2096dd98d1e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3ec79c-3e6a-4989-9774-2ba630076693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b6b951-df64-499d-b712-7547f1ce8a63",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88c1e75-f9dc-490d-8fa6-99e69bbb38ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3bf5cb7-adc2-4644-a1b2-cb9e6012ab37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2cbc20-2a89-4bea-a7aa-a348c2a3ae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5198b2-528c-414d-ab70-04fbe9adc6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b768f7a-2508-4c3b-95d8-7fd502948fec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57341f4-4570-48a6-90b9-895728989a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a48168-5e28-4c4d-b132-97935af13df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff58fb5f-6c8d-45c4-94de-3bb0ff803e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01e12d5-d77f-4f8a-ab5c-a181fad58e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84b7b9f-2a7a-4626-828e-549b6dcc320a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842eb042-039a-4994-ab47-52caca2a72ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e470fb2-2fc3-4e1e-a8b0-0f9f72797f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc74c28-2c5f-4199-b289-a7b336e02be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff706cf2-a825-4c52-8712-1fce86858a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683eebeb-44fe-413c-8075-7fb51577a8ac",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d081efb1-ad89-4735-b4a7-a6b4ab0f8186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6adfc0db-e262-415f-8ee6-53c07e26d449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042a20d1-964b-41a8-82a6-869374c376bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf9360a-138d-4637-9572-04ae002fd1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47c547d-563f-4d03-a359-2cffba47473c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ec46bf-7005-4757-b98b-dda0a76cd876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae88b905-987a-4feb-ad7e-65f20f401b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae176ed-7479-4324-be66-d5243ae74228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a6b8ea-6db4-4168-a5cb-4e534df8e1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb042286-08f9-40a2-b9bc-ed3d11e47a99",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0987ea03-aca6-4413-8441-1db566ef18ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ee6794-3c51-446f-863e-238054c89077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5225c27-4dc3-4492-b88a-af6842ec0c14",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6bd5eb-7ed0-4ac9-8777-c8f7c1105f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5942711b-8af9-4d6c-862f-8f41058b41db",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5a25f6-a63d-4108-b5d9-a9da35628a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba151cd-15a3-4a0f-bf12-213a91cfe6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02910d69-5cf5-4f42-8eb5-9efbc8ed965d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005c0f0a-c20f-4f0c-8047-5b865fb4d0c5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2ca929d-885e-43ba-91b8-52b7bcc9f3d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da19eb4a-0619-4c65-a4d7-bd5f696a3b85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da53cd08-7501-4b5a-b3d7-45ac5cacb9fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2f19a45-6237-4c7b-a35e-726942e27a83"
                    }
                  }
                ]
              },
              {
                "id": "6319d19b-0f4d-436a-ba7f-331924787fb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eae095bc-3768-48af-9519-5bd88d7f137c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff9377d-752f-477c-8630-029f6360bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e7e31951-35bc-4a70-92bf-5f79f6a5d3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76636c07-5d1a-4555-830b-83751599ca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2187890d-173a-4b9b-8f32-09a1a422bf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de7ed5-09f8-42ec-8bf6-dbfa87859e38",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655928c3-9fa2-433f-be41-5f424afbb640",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9f8a84c-adf1-4037-8bb7-1e8006906695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44addef-4485-45d4-9009-60d236fc5020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2225028-951e-4159-be37-d1673b37eac7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4348e9a-cbe8-4091-a514-a2a4b56349f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d87f37b-b0f3-4b09-b387-56842bfe0a6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e87dd2cf-b24d-4b24-8766-f2b6082504d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d96f7819-1e5d-4dda-bede-2c67edbc430d"
                    }
                  }
                ]
              },
              {
                "id": "d7c5438f-25ac-4c0a-9d56-dc73c7d9607d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "779d8bf4-5e82-4c86-8be6-e3a983901cb3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc933f3-0d50-4632-a1bf-247c3e66d9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9a86ae1c-fc14-4a0c-a497-4e3d369048ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fdbb07-ba9a-4dc3-a4de-70d2d8fb66eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c532132-694c-4db7-8a87-fbe353096a02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c7f80b8-6b84-4c44-acbf-0cb6e3d191a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a18e9d1-232e-4df3-b7ce-3a7a550bb397",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dbf1a3b-9472-4b2c-8326-b34c962639c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "29f9bf5a-1baa-49e1-8014-3465e8765465"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cd564dd-0818-40e0-b085-3f581486d99e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "553554e4-29a7-4445-b7a8-3dca6426b318"
                    }
                  }
                ]
              },
              {
                "id": "364b26d6-b526-480f-aecd-22d6457d1680",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc4a85a-4207-41ad-85ad-2255bdbc2d8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "073ad1ae-1036-4e6d-ae54-99c459a8aff1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ed69512-8990-4eb6-8428-b3cfa0ce2956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d80da3aa-d5ca-4e39-bb29-ee6d397c37c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "253207e7-5cf9-4063-9147-89ccf40ef012",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c6d90aa9-6299-4901-8618-9279bd9b7daf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3670764d-d816-4760-9e4b-33063e04e578",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62c2929a-b868-4270-8e77-1aca1e6bd8c4"
            }
          }
        ]
      },
      {
        "id": "de5bdcdb-d770-4c60-b448-ca6caf1bf5f2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6a524e87-b10c-4e7f-8b55-072af228eaf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a274808b-0265-4cc7-8269-840d0caa1f77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356cc8aa-8319-4eb7-bf1e-d8ebabc3bf6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58ffa9cd-9205-4096-94c6-13ae89cea84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d6e87e-16ce-4e8f-99b4-e436c50ba2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8423fe1a-374c-409a-b536-07eb7e75027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cdc0a2-bc16-4b4b-b34c-d462eb483246",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38578387-2442-4449-a1d0-051d0958bb45",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e9db2736-06bc-42a1-b66d-5d2c859e7bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a662008a-68d7-4310-a38d-c0e4f1ca1188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47256199-73c8-4838-94f1-2a8623acf619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "621a2791-3980-46c3-8e35-ed8616294e56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cc82ae5-a8ff-4fd3-8834-54ec1bfde65a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ada01bdb-12a2-4189-93a9-63f3e3100969",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78f2c67e-31c4-43fd-b992-c47017fc0717"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b35f552-c60f-40f7-81c7-71afe1feb96a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "36cbe9fd-bfd3-4084-99da-299c2074b04d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc0b196f-203a-49cb-9a2f-3ec276ad0517",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ed4ac08-7d33-4bd0-8d18-0f1faa775db6"
            }
          }
        ]
      },
      {
        "id": "c7fb4fe8-3ddb-4579-affb-dde5c8978ab4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f45f4fc0-8101-4d61-ba25-ddbbcfa88d7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc02cebe-ed5b-4a2f-9612-068145374e5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f3d07cf-356a-440d-aa04-9aa1af2f6e43",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c75e30e-d6dc-47c7-817c-24c4fe7413a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "41b17f72-b0bb-49e3-954e-c3bc08d24504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb53fe6f-2dad-42c1-87d4-1a0d7eeecd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97cff1d7-6669-4ee9-b1a2-8ee80a70f4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d2f7c9-5ec8-473a-900d-b99ef7ff5334",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c160641c-8978-48c6-952a-163853bd1b4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f1e5dcb9-96e8-4219-aff9-fb93e63aad25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e4265e-e63e-494d-adcb-78e6b75f8c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a78fb73-1f44-473c-b76e-24d00f17678a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd7174ab-3eb6-4592-af30-663e08ebb3e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79d3210a-aef0-46f1-8639-0c3468590819"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13e4f3fb-8b55-478c-9e52-91c91e2298a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e9ef9f3-aa47-479a-adfe-b6c1ced7e7de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c75c5eb3-4f8d-4052-a423-5c771330beb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a16c372b-ec1c-405f-9801-1148fa988e15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "328e14b7-83d6-4ac8-903a-147fbe8e3b9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2e0c90c-6256-4be0-85f3-971262066126"
            }
          }
        ]
      },
      {
        "id": "77181f74-07b2-405b-b22d-f69320b86af8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1dcc0318-73a4-41df-937b-938930ae10b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec5876cd-2149-4136-b94d-fec82921e6ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8105d4c8-8fd3-4294-bc98-352d1cd1f4ae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13800a17-d85a-4e5a-bde5-3492b5bbe167",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "66516358-4445-4cf4-9fff-e83397f2c1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c557c1f9-3e2a-4b0b-943e-b34ddfae5ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5b7c5e4-909f-4cd1-8504-e8c72bd0a6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8049f3d3-4128-4b7c-b70b-b063ac82c715",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b490be9-decd-4fad-a905-fa992e3fd802",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62b3d5e3-fa99-4d70-89cf-c7e606120a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb7ddde-1314-4d59-aeb1-09342c696f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2d689df-ef2a-4406-982a-cbce25f11b80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc530622-457d-442f-9b89-1a7717d4b3cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fb72ce9-bfe2-443a-b675-0efc01a2e20d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de64e8b0-badb-4c69-9063-16dec44bb0ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcf1d666-203b-49ec-9901-d1bb08779f42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09437f54-2f43-4356-a8a2-310ad8105d10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "868c7e6d-6060-4ea3-9bd2-54d914d4d108"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51cc6a62-8bcd-41bc-a350-fee3563d226e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9a0a12b-cd72-427e-85f7-874fd643fdda"
            }
          }
        ]
      },
      {
        "id": "9f10a43b-b0bc-4b95-a743-641431ff5713",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5166f9fd-d679-46a1-9987-0bbea8febecc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a72bc933-b758-4085-bc54-bbff2d09ad72",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "90fe9b86-8baa-4f47-bef2-e5203f08d003",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ea84565-8d6f-4f03-8ecc-5b89e11233a6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8720cffd-3ab4-4f43-8028-266cc6b1bfa7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 602.7519083969463,
      "responseMin": 6,
      "responseMax": 6017,
      "responseSd": 670.1017664369007,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673397551728,
      "completed": 1673397720463
    },
    "executions": [
      {
        "id": "9a647b3a-8d9c-40ab-a41a-08ec1d461184",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79f471e0-1a16-446f-9f09-7cc20c1fce09",
          "httpRequestId": "f16e297d-97f9-4ba5-8561-158c7dd73f4a"
        },
        "item": {
          "id": "9a647b3a-8d9c-40ab-a41a-08ec1d461184",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "83e4f161-54a7-42ae-9691-40a47fd7755d",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "c739c78d-794f-47d2-bbd8-be216aba853c",
        "cursor": {
          "ref": "0d9b4e1a-ce8d-47ce-82af-6dc6555c9ab1",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "94b55b9d-8b80-4217-98e4-60d3f339e066"
        },
        "item": {
          "id": "c739c78d-794f-47d2-bbd8-be216aba853c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ae7e1ff6-ef4a-4586-94b0-a8068909d969",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "92f095d3-37ca-4814-bcdd-d55a3d7a608d",
        "cursor": {
          "ref": "e87fbdef-1877-475e-b4dc-eddb9f46174f",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9376dec1-ed37-422b-a5d4-6bb569814773"
        },
        "item": {
          "id": "92f095d3-37ca-4814-bcdd-d55a3d7a608d",
          "name": "did_json"
        },
        "response": {
          "id": "f8e090bd-8a88-4693-8603-47e544fcd0d4",
          "status": "OK",
          "code": 200,
          "responseTime": 664,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542fc75-cdb1-4000-a794-8d8d14941ce9",
        "cursor": {
          "ref": "28be230b-d70f-43a9-af29-681658aed492",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91364546-a366-4fe0-be8a-331c7b404c4c"
        },
        "item": {
          "id": "3542fc75-cdb1-4000-a794-8d8d14941ce9",
          "name": "did:invalid"
        },
        "response": {
          "id": "d95f32b7-20ec-421c-b950-bd940fc3bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542fc75-cdb1-4000-a794-8d8d14941ce9",
        "cursor": {
          "ref": "28be230b-d70f-43a9-af29-681658aed492",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91364546-a366-4fe0-be8a-331c7b404c4c"
        },
        "item": {
          "id": "3542fc75-cdb1-4000-a794-8d8d14941ce9",
          "name": "did:invalid"
        },
        "response": {
          "id": "d95f32b7-20ec-421c-b950-bd940fc3bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dce276-000b-46e6-ba91-f9c1c9837180",
        "cursor": {
          "ref": "8b43c641-7094-4b11-8b83-bd3c29a97005",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6329efdf-8c00-4571-af3d-b1deea528578"
        },
        "item": {
          "id": "79dce276-000b-46e6-ba91-f9c1c9837180",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "53a548f9-f379-4896-bf4a-d38c07019005",
          "status": "Not Found",
          "code": 404,
          "responseTime": 624,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0663c1-f88b-45de-8c3d-2d63447d2930",
        "cursor": {
          "ref": "6fb28a06-f8f0-42b2-af57-20ae34c13191",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fcdded45-0cd1-4878-9ac0-e2c9532b715c"
        },
        "item": {
          "id": "6f0663c1-f88b-45de-8c3d-2d63447d2930",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d6cac4a2-c579-4c33-8557-42a73384c1d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 518,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0875f92-d049-4549-a38d-0d2f3fe67ad5",
        "cursor": {
          "ref": "ecdafc2f-c660-4fc9-a9cc-81bf28db422e",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "37478803-c2e3-4349-a745-e0d3dd03691b"
        },
        "item": {
          "id": "f0875f92-d049-4549-a38d-0d2f3fe67ad5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "be53b3e6-702c-4f4b-8309-2bdec7aee9be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3470b94-c212-4701-856f-d4d2f93ee24a",
        "cursor": {
          "ref": "95bba614-6fcd-4972-9fe7-e86af5b8f375",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ba094db-8921-4e85-9ecd-048bc4538bec"
        },
        "item": {
          "id": "a3470b94-c212-4701-856f-d4d2f93ee24a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bc8ab81c-8c7f-437f-a7c2-f610c24724fc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 505,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3470b94-c212-4701-856f-d4d2f93ee24a",
        "cursor": {
          "ref": "95bba614-6fcd-4972-9fe7-e86af5b8f375",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ba094db-8921-4e85-9ecd-048bc4538bec"
        },
        "item": {
          "id": "a3470b94-c212-4701-856f-d4d2f93ee24a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bc8ab81c-8c7f-437f-a7c2-f610c24724fc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 505,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9323c79-5978-44db-9f71-e326adb09ca1",
        "cursor": {
          "ref": "bc825a34-91e0-49fe-9334-a7d731662cfa",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fc4a8a76-c16f-4b83-8de9-adf6a64257c8"
        },
        "item": {
          "id": "f9323c79-5978-44db-9f71-e326adb09ca1",
          "name": "identifiers"
        },
        "response": {
          "id": "9f9ef950-c959-4f38-81ef-d51754ad2f1e",
          "status": "OK",
          "code": 200,
          "responseTime": 799,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4adaae6-9919-47bc-9224-c47703698fb5",
        "cursor": {
          "ref": "ab0301b8-958a-49da-9285-4b76d50ce19e",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b801fbe5-c644-40e3-8557-5c7884f6777e"
        },
        "item": {
          "id": "d4adaae6-9919-47bc-9224-c47703698fb5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "872cec9b-3399-473c-b3c4-1128e99385a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4adaae6-9919-47bc-9224-c47703698fb5",
        "cursor": {
          "ref": "ab0301b8-958a-49da-9285-4b76d50ce19e",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b801fbe5-c644-40e3-8557-5c7884f6777e"
        },
        "item": {
          "id": "d4adaae6-9919-47bc-9224-c47703698fb5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "872cec9b-3399-473c-b3c4-1128e99385a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bd8642-d4a1-4fb2-9aa6-e95325a241bf",
        "cursor": {
          "ref": "ebbc73d6-0614-4d30-b1fd-ff1c858182c5",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9e398d9c-c0dc-41b4-9b36-f5d941c5b264"
        },
        "item": {
          "id": "c1bd8642-d4a1-4fb2-9aa6-e95325a241bf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "33a2fdd8-6934-4f09-8c5e-1eb6609fa234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df31ca16-1e2a-429d-918b-f329591c2476",
        "cursor": {
          "ref": "554ee1b6-ebda-4f34-a9d7-dc43e01ec9b1",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2476c94a-95e5-4c5e-aff6-f02abded830f"
        },
        "item": {
          "id": "df31ca16-1e2a-429d-918b-f329591c2476",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "461da658-a18c-4962-b658-0a01d1e5ff3e",
          "status": "Created",
          "code": 201,
          "responseTime": 2533,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "ca973945-9488-4a75-9358-7d966ca4bf02",
        "cursor": {
          "ref": "54db8151-9b1e-4fb3-89c2-c4e169f315bc",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "157d0fbb-9fdb-492e-876a-870f664c362f"
        },
        "item": {
          "id": "ca973945-9488-4a75-9358-7d966ca4bf02",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "89f6df3b-7a97-4fd6-bc8f-ca307a8775b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054837ca-5c57-4d17-95ca-d14fa83b0633",
        "cursor": {
          "ref": "93eb0fe6-b736-4807-ba0b-d61a0bcb3a2a",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e583bd19-c193-407d-b583-6a02ccd0bc4c"
        },
        "item": {
          "id": "054837ca-5c57-4d17-95ca-d14fa83b0633",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7fbf31c-76d8-4175-a163-972640b0224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4a0cbf-f606-4ff2-83d3-0dfcd06ca52a",
        "cursor": {
          "ref": "66a9aa19-a7a3-46d7-ad3d-c8463af183e7",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a41e97e3-3a2e-49e8-be67-5cb97afb20a4"
        },
        "item": {
          "id": "fb4a0cbf-f606-4ff2-83d3-0dfcd06ca52a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9fde49c2-bcfe-4742-ad74-53e847602873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c74d4-dfe2-457a-8d73-474e88f456bd",
        "cursor": {
          "ref": "f38ef518-ab0d-43b8-a9be-9d44c4be8734",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec193a8b-9ad7-421e-a75a-dae26473a2cd"
        },
        "item": {
          "id": "af1c74d4-dfe2-457a-8d73-474e88f456bd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0f35f16c-1834-45a7-99bb-e50f19f034d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e334c-39cf-41b3-a4db-fd36cb9c827d",
        "cursor": {
          "ref": "09caab52-e21e-40ef-89a7-95ca258443ac",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a48c5088-27a9-495e-812b-152012ecb16b"
        },
        "item": {
          "id": "078e334c-39cf-41b3-a4db-fd36cb9c827d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "905f8e24-bbf8-4ffd-ac05-dac15aea0155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b0a9af-3d58-4738-be1b-c409f5f1d8fe",
        "cursor": {
          "ref": "0a10d250-7759-4b6a-845d-28781bd03c26",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3a19ab8a-1341-44cc-9967-31968fd23ccc"
        },
        "item": {
          "id": "f7b0a9af-3d58-4738-be1b-c409f5f1d8fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eae58515-8878-407e-9614-05ecdfc6fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48402df7-d58e-4b07-bb32-3492ed628689",
        "cursor": {
          "ref": "185cf657-ea82-413b-8161-d7e15cc7d7bc",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f0e22e81-b3ec-453d-a748-7fa6b5ad8ee1"
        },
        "item": {
          "id": "48402df7-d58e-4b07-bb32-3492ed628689",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cdda21bd-c66a-4563-86fc-fc3b99240b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24499a6-133d-4038-9451-f242bcbcdf70",
        "cursor": {
          "ref": "b93be788-9858-49c8-9a4c-969d5723f75b",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "075e7a75-527d-446f-812e-7df97235bd51"
        },
        "item": {
          "id": "a24499a6-133d-4038-9451-f242bcbcdf70",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90b01e07-565a-4e05-bf98-eca5b0fb3d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61bd015-6237-45c0-bde5-ca6d9286ec38",
        "cursor": {
          "ref": "2a2bd1f8-2579-4c32-bc2a-1366a1a778dc",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "64da7519-1cee-4f16-895f-61e00ebe975a"
        },
        "item": {
          "id": "d61bd015-6237-45c0-bde5-ca6d9286ec38",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0195cff8-ef4f-449f-ae6b-9475c4151c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58f0617-08ee-4b3b-b803-1d38b270d474",
        "cursor": {
          "ref": "358ba6d8-519c-4cdd-b4ec-28ee0897d063",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7709cd47-9d17-42ea-962d-3e5dd10d7dd5"
        },
        "item": {
          "id": "c58f0617-08ee-4b3b-b803-1d38b270d474",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2c2cf394-e7aa-40f8-acc2-24eb725d1822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781331d5-703a-4890-9389-28a5d941c4de",
        "cursor": {
          "ref": "736d871b-3424-4d50-a2b3-400477ef486b",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ff22535b-ce88-4f3d-b578-9df81859db02"
        },
        "item": {
          "id": "781331d5-703a-4890-9389-28a5d941c4de",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "60ab5e63-2ad8-4f70-93c4-7bf4b7cbc360",
          "status": "Created",
          "code": 201,
          "responseTime": 6017,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "358dfec6-c1b6-4930-bb98-ab1e60b46650",
        "cursor": {
          "ref": "7e51e2e4-b2b2-42b1-8339-e0dfcddecae5",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3a3b8b4b-4356-49a9-af57-343908ed7e2a"
        },
        "item": {
          "id": "358dfec6-c1b6-4930-bb98-ab1e60b46650",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "833d4d88-59aa-4b83-83ed-ed65b961d67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d159b4-a942-4794-955d-defad2960d52",
        "cursor": {
          "ref": "f7161ac8-e3e0-4fc0-849e-12b22a988163",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0de220c0-5c33-4fe6-8d88-0baaf6778dd6"
        },
        "item": {
          "id": "30d159b4-a942-4794-955d-defad2960d52",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "61f5aec1-8f64-4653-95f3-e84c278cf450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c56878-1905-42ef-8d08-67919d838516",
        "cursor": {
          "ref": "0273cca3-d3d7-4616-b28f-f853ca8981e1",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e5b12cf6-e66e-4bba-b53c-811b61ff75e1"
        },
        "item": {
          "id": "07c56878-1905-42ef-8d08-67919d838516",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7bdb6be8-98b3-436f-a32c-838b1ee124b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfad098-c647-4719-a988-372338f5ff22",
        "cursor": {
          "ref": "eb8e94d2-5e1c-4308-b16c-8caab702bb53",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea35addf-3b2a-494d-b7d1-118c28e6c894"
        },
        "item": {
          "id": "ebfad098-c647-4719-a988-372338f5ff22",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f624d6c1-6140-4aa3-b5b5-77aec35b61ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f76be20-92fe-4309-bbff-20239888715d",
        "cursor": {
          "ref": "c171913b-be14-43cf-942f-02fcda4f9a12",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f4837c3-a5bc-4bd7-9a2e-44a5e671b4f7"
        },
        "item": {
          "id": "4f76be20-92fe-4309-bbff-20239888715d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5e859245-e655-4d28-9da0-729b155e2923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f799a49b-142c-40e9-a857-961e4c991da9",
        "cursor": {
          "ref": "7a3d7e34-be63-4ebc-a979-6d8e6e1f424c",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "64f3481b-e84f-4440-8164-ca253d653ac3"
        },
        "item": {
          "id": "f799a49b-142c-40e9-a857-961e4c991da9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "079da7a8-4555-450d-8755-cf5e3376571f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211988ac-f59b-406e-a8e2-1e288016cfc3",
        "cursor": {
          "ref": "d56575ae-7291-4639-bc7f-00ed19d9d881",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0d69776e-82c7-4b09-938e-14217efa8bfa"
        },
        "item": {
          "id": "211988ac-f59b-406e-a8e2-1e288016cfc3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7dab7808-cc43-4a9c-b70c-c55517e100d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a1d508-deba-41e0-83af-e5636c8529bb",
        "cursor": {
          "ref": "991b52dc-d554-4c66-9f98-99a21df03726",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ac94a0a4-8224-40bc-8705-89c069f1cdaf"
        },
        "item": {
          "id": "59a1d508-deba-41e0-83af-e5636c8529bb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1b39d53e-e9ab-4afd-8f95-16730f480c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f7738f-258e-4bb8-a201-1610a6e09fa0",
        "cursor": {
          "ref": "47142958-3aed-4028-8cdb-245400710a64",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ae4e1467-f186-4316-bbaf-d575586d4255"
        },
        "item": {
          "id": "47f7738f-258e-4bb8-a201-1610a6e09fa0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "62910518-b636-43c9-bb84-30aad2780444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6be10ca-dd00-4beb-affd-40c55fa1327c",
        "cursor": {
          "ref": "78780a6c-28aa-4b91-ba99-3a2f9b77548a",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae1ed4e1-dde6-4e54-ab97-67efebf0376e"
        },
        "item": {
          "id": "e6be10ca-dd00-4beb-affd-40c55fa1327c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2a6ed2e1-d864-402e-8acf-b2a290fe06e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b59247-5d1d-49f3-949a-36c335e08542",
        "cursor": {
          "ref": "285e0901-a3a3-49c1-8d32-43bbe78f8cf7",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1dcfb69-8dd9-4492-910a-0f09b9c2f577"
        },
        "item": {
          "id": "49b59247-5d1d-49f3-949a-36c335e08542",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0fdea18e-72e9-4dcb-86b2-3b666e0b30d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aba288d-42f2-4553-a3f3-15842fcf01e1",
        "cursor": {
          "ref": "49f3b263-853e-4a24-a53e-d7b3aaff1a9e",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7dd3666b-9b37-4d2c-936b-35697da087ee"
        },
        "item": {
          "id": "9aba288d-42f2-4553-a3f3-15842fcf01e1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "262b18b0-7812-4001-a5f4-e386538df5fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2513,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "fb1200a4-4015-4d1b-bcbe-33a2b9fdf598",
        "cursor": {
          "ref": "2593b179-128b-45de-bcae-29efd773e8e5",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "44fb58f6-a538-4780-8404-07b70ac04f8b"
        },
        "item": {
          "id": "fb1200a4-4015-4d1b-bcbe-33a2b9fdf598",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b5ead422-5711-4f16-b8cd-88dafea8141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5961ade9-ca13-4a35-9a31-45171815f50a",
        "cursor": {
          "ref": "f01048ee-bf4c-4e5b-89dd-2510e80d3024",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cbfd8f8c-861a-4a7d-b8a9-9dc621918197"
        },
        "item": {
          "id": "5961ade9-ca13-4a35-9a31-45171815f50a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "71a4ce80-e288-4ba0-b725-adb803e5f523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3dca67-c136-444d-8912-6060e1c52798",
        "cursor": {
          "ref": "d5691902-8118-4746-8c2e-2eb55c99bb96",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78dcc00a-353f-4591-bfe1-ee6ae9c25852"
        },
        "item": {
          "id": "5e3dca67-c136-444d-8912-6060e1c52798",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "790759c6-2298-4786-b9cf-6d221c849714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed47eb5-10bc-4698-b5e0-769984c4776a",
        "cursor": {
          "ref": "c1aed702-f27c-4727-9351-51894029bb2d",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0deca3a8-b346-45ef-927a-4f1923968fb3"
        },
        "item": {
          "id": "9ed47eb5-10bc-4698-b5e0-769984c4776a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad418a76-8663-456b-a9fb-d92f68c1c083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8070c8fb-3ac9-4876-bd71-8e9fc80da713",
        "cursor": {
          "ref": "454e743e-5022-495a-ac00-cd2600f96a05",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bdbe6250-2643-43ad-ae38-eafeea7faf7a"
        },
        "item": {
          "id": "8070c8fb-3ac9-4876-bd71-8e9fc80da713",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2748305f-13d9-44c7-bd21-e1fd67ac8e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d853b9b-3481-418e-8b20-51f10f0c1183",
        "cursor": {
          "ref": "989d4d32-4954-4bb1-bda7-0943bbb89393",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5b86977-d7af-4874-9737-b9ee926881e7"
        },
        "item": {
          "id": "8d853b9b-3481-418e-8b20-51f10f0c1183",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10782239-cc8b-4f27-ab92-250c36f3729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955fe809-b75c-48c5-b155-b52e9b1bf2e5",
        "cursor": {
          "ref": "26b0ac7a-3912-41c4-8259-78874c9e4cb3",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "981189f2-6129-439d-9b33-e0e566559162"
        },
        "item": {
          "id": "955fe809-b75c-48c5-b155-b52e9b1bf2e5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d7b91f18-a3f0-4db6-abd1-c6425a5e1535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a2da1-d3ea-41df-9109-8b76c1bb3410",
        "cursor": {
          "ref": "6a355a05-aea7-42c0-a0d6-8b2508a2160a",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "75dd0195-3f4c-4a2e-b5c7-2ae441571979"
        },
        "item": {
          "id": "994a2da1-d3ea-41df-9109-8b76c1bb3410",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b1b04970-1d8e-4324-b96b-287d802378e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f458fac-0cc0-4543-9606-238a0e27b335",
        "cursor": {
          "ref": "0b992d63-813f-412f-9a60-d66c8a96759c",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c43ce036-ee21-432d-a948-9680ecb3a9a0"
        },
        "item": {
          "id": "6f458fac-0cc0-4543-9606-238a0e27b335",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "41b73890-3738-4de3-a379-438489166339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be4b48-d8b5-4b37-8c4e-0bca02444b9c",
        "cursor": {
          "ref": "e1cf7f0d-6a49-4e69-a739-7312b4485783",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "706026a1-3c63-4428-8a20-90940e4ad018"
        },
        "item": {
          "id": "23be4b48-d8b5-4b37-8c4e-0bca02444b9c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "feac4732-7907-4b09-80d5-af253f7cc214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837782da-72d2-49a4-8f98-4d4481cd59b4",
        "cursor": {
          "ref": "d6b78ec1-878a-4968-aec5-eca960fe3f5a",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9557d9d1-2cf9-49e8-84f6-43269f71b34c"
        },
        "item": {
          "id": "837782da-72d2-49a4-8f98-4d4481cd59b4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "25064d19-de74-43fa-a100-30685eb400d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6fa011-b206-49cc-9220-76082599e51f",
        "cursor": {
          "ref": "14466316-1fc8-470e-8109-88c1292adbda",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "acb65b97-8f8e-47b8-9ac4-09e301c59cb1"
        },
        "item": {
          "id": "fe6fa011-b206-49cc-9220-76082599e51f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "60b32a1f-e541-45ff-af61-1e9efc3fff3a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 598,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1874d8a2-18e9-4a4a-8e18-4960887d7695",
        "cursor": {
          "ref": "89d00892-1d87-4789-9360-3ad5894e0042",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9f714a53-09da-4150-bbad-609dd6cd3e76"
        },
        "item": {
          "id": "1874d8a2-18e9-4a4a-8e18-4960887d7695",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "244665df-8195-44ff-b8c5-de9630f8499f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 523,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "de3f21d4-b0f0-4630-80ae-a17b68727bca",
        "cursor": {
          "ref": "32754ae6-4498-449e-85ae-63ab1c4c579d",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "68b7ff97-e987-4542-a139-4578f6e9865f"
        },
        "item": {
          "id": "de3f21d4-b0f0-4630-80ae-a17b68727bca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "707a63e2-4ddd-4d0c-ab81-cfe7cb87c46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5184072c-6c2e-47b6-890f-bcb55410bb40",
        "cursor": {
          "ref": "166877f3-f366-49ef-a344-1279823ad936",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2b27e2fb-a8ec-4063-8210-a61ed2cb5582"
        },
        "item": {
          "id": "5184072c-6c2e-47b6-890f-bcb55410bb40",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f9e63eed-e8c6-46c2-a3c5-84fd00e0f12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5963d880-b0c1-4286-b549-0e6130c6434a",
        "cursor": {
          "ref": "07d6b537-c78d-4ced-b668-d540fdd3a60a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1ce792ca-ed87-413e-a7fa-5b9d6641e8ee"
        },
        "item": {
          "id": "5963d880-b0c1-4286-b549-0e6130c6434a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3ffa806c-2c47-448e-b422-878f60d25fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e023b1d7-d4b8-46d5-85d1-4e2a68e12129",
        "cursor": {
          "ref": "dc73bd19-5962-4a1a-b280-e2edc6e5078c",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1ae130ca-e871-445f-93b6-ba10b3290ac8"
        },
        "item": {
          "id": "e023b1d7-d4b8-46d5-85d1-4e2a68e12129",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2f10dc00-2066-44fa-82a1-9f477d580bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf6b136-96ed-4d7b-b7a7-86fed2349b1a",
        "cursor": {
          "ref": "2efeef5e-ba16-45cb-a2a2-7e1fafd21d24",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a760a8b7-046f-4feb-8d44-7127ae68b5a7"
        },
        "item": {
          "id": "2cf6b136-96ed-4d7b-b7a7-86fed2349b1a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "11db9c8c-edf5-441f-b325-efbb60c83ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6634104e-7dc0-4fa8-9738-9230fce56e72",
        "cursor": {
          "ref": "77567670-b6b9-4aef-9bde-4bee45fc63f1",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b44957a-60ce-48f9-8c1a-f5d6619b7eeb"
        },
        "item": {
          "id": "6634104e-7dc0-4fa8-9738-9230fce56e72",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d9c2bb5a-47db-44c3-ad06-efa7d2c972da",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 581,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b0e962-a8fd-4065-aae5-4866d10b1823",
        "cursor": {
          "ref": "4d12c42e-d954-4c6c-b132-9489ab51c27d",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d65d2fe2-054c-439d-88cc-b5a0ab7113e3"
        },
        "item": {
          "id": "a5b0e962-a8fd-4065-aae5-4866d10b1823",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d924560b-5d02-41e5-aab3-529407821f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e74f96-e586-4492-80d8-e8f1d6222254",
        "cursor": {
          "ref": "a691e8fe-d976-46c4-a550-1d42affcc314",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3f68e9ca-878d-487b-bfef-8fd41f61f293"
        },
        "item": {
          "id": "86e74f96-e586-4492-80d8-e8f1d6222254",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "57b74e2e-57da-4383-9960-2afe0cfdbbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8d97fb-c934-4e96-a34f-c57a30e984cd",
        "cursor": {
          "ref": "623a7842-a85b-4646-900a-e7bad509bb49",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "342498eb-bce9-4cc6-9293-79e10ee12c16"
        },
        "item": {
          "id": "1b8d97fb-c934-4e96-a34f-c57a30e984cd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e86b5b2d-5de2-4fb8-b098-7cf1c82087f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6644b67f-03e5-4f15-92c6-38066638e9dc",
        "cursor": {
          "ref": "d5e72e51-e83b-420b-b663-175fdf0162b5",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fea94e84-b5a0-4ab8-bcf5-35081165e6a4"
        },
        "item": {
          "id": "6644b67f-03e5-4f15-92c6-38066638e9dc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e3a87a83-afd1-4c0a-b9b0-e7a2d25a4131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4598e292-cbdf-4745-97bd-7cd1c30f4ed8",
        "cursor": {
          "ref": "b3a9be16-aeae-487e-875a-23a453b89ea2",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7b64bac8-df60-4b3e-b642-cb3477dedbf0"
        },
        "item": {
          "id": "4598e292-cbdf-4745-97bd-7cd1c30f4ed8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "45da7000-67ca-4bd4-bfe5-8ea1337611fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ce481a-d667-40f6-bcc0-0e57854f1729",
        "cursor": {
          "ref": "369405e2-7536-4c62-ad7d-9c5245ae2f88",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "02911aab-590a-4e03-a270-a2e39629c8f5"
        },
        "item": {
          "id": "40ce481a-d667-40f6-bcc0-0e57854f1729",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6d1253b9-132e-4e5d-87fc-7c63bb0b3a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6af39a7-c2b9-4598-8310-112150258e86",
        "cursor": {
          "ref": "6b9f53f4-a7fe-42c2-8183-9a389d190111",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e7fca67c-495d-40a5-9c7e-a252d90ba30d"
        },
        "item": {
          "id": "f6af39a7-c2b9-4598-8310-112150258e86",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2a5c3f4b-d19d-4a9f-b52a-d625eccc47ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3833c109-7107-45c8-8355-d74665ba877b",
        "cursor": {
          "ref": "2dbaf681-369b-4b73-b284-6c02c708ee4e",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5004eadb-7522-4760-bf66-993d1511e1b8"
        },
        "item": {
          "id": "3833c109-7107-45c8-8355-d74665ba877b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0bad862f-4c63-45f9-99d4-22e23dbb7eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facc7a7c-d26a-4bce-8af4-3c3040d88bd7",
        "cursor": {
          "ref": "6ab89d37-db99-4dde-ba48-d2302bbfbb72",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cfb4f028-5f28-404f-9493-9ed696fffed8"
        },
        "item": {
          "id": "facc7a7c-d26a-4bce-8af4-3c3040d88bd7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fbc8eb23-a382-4d24-993a-b8c34d176313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6325aaa2-04d0-4f24-8e11-91aa63c2ee7b",
        "cursor": {
          "ref": "a88ec9f2-3fa8-46b4-afdf-d793972b0424",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2753f3e0-424f-4a10-be59-572a6222620c"
        },
        "item": {
          "id": "6325aaa2-04d0-4f24-8e11-91aa63c2ee7b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f138eb38-cd71-4dac-bbe1-527c0a271965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65411b2-53f6-4fd1-8be7-d4384eb6e232",
        "cursor": {
          "ref": "ae742c05-499b-4df6-9d3d-c209bd3a4e57",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "953e71e7-cadd-431c-9928-d6c49553b3ea"
        },
        "item": {
          "id": "f65411b2-53f6-4fd1-8be7-d4384eb6e232",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "810d6d3b-5d00-42f3-a41e-e2e7e4da9b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f56cc70-ef1c-4b62-9054-4b26dfd4ccd2",
        "cursor": {
          "ref": "ad37a473-0fe9-4bca-a3aa-f7868d8a76c0",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "67401da3-5256-43b8-94cd-3e943a554aa6"
        },
        "item": {
          "id": "4f56cc70-ef1c-4b62-9054-4b26dfd4ccd2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7dfbac1d-a2d2-43ee-ba96-edc536e0a88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8dfdff-37f4-4655-9c57-0c1032c48ee1",
        "cursor": {
          "ref": "476d7f84-f39c-47ef-86e3-e174cbf60743",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "91321813-e456-4091-9530-008c0e6676c0"
        },
        "item": {
          "id": "2c8dfdff-37f4-4655-9c57-0c1032c48ee1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9d070ec-4205-402f-9ab3-3b0f0f3f62e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa589ae2-4601-4988-86d0-089655133a2c",
        "cursor": {
          "ref": "6117d0b1-bda2-49f0-90f7-82de4dd765c9",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4cfb2193-c03f-4b9d-8a56-22329cf40c03"
        },
        "item": {
          "id": "aa589ae2-4601-4988-86d0-089655133a2c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5c51d858-6e6c-4c16-92a6-20c12d944da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06534f2b-dec9-4de6-a6d7-ef407218d246",
        "cursor": {
          "ref": "c340ff25-a4dc-432c-8917-4d52bd4f1d6d",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3d829811-9ed3-41d2-a779-847a7728d65b"
        },
        "item": {
          "id": "06534f2b-dec9-4de6-a6d7-ef407218d246",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f84c955e-5ef3-4899-a4a0-6edf3d50e86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f37a2bb-7cd4-4a18-8492-a1563f7b4d68",
        "cursor": {
          "ref": "a208edb9-85c9-4332-9461-9a7889190c3e",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dd72975f-ef70-4c65-a50d-3b5d536da340"
        },
        "item": {
          "id": "7f37a2bb-7cd4-4a18-8492-a1563f7b4d68",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5d23968b-18b9-4aee-b8a5-13a6b82e4d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308d26ff-431e-48cc-ae91-8d5c5efcdd76",
        "cursor": {
          "ref": "35b3fda9-6768-4f39-8ccb-9baa7da3001f",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "58f64414-8fdb-45f2-a8f5-7db139d03bed"
        },
        "item": {
          "id": "308d26ff-431e-48cc-ae91-8d5c5efcdd76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bea54340-9110-4d9d-973a-a8797254d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a00d2-1698-4905-b3ab-f943b3e82104",
        "cursor": {
          "ref": "e5a35dcc-7640-44a3-8e28-edfc5152f3f8",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3149bd3f-8122-4bbd-833d-bc0a946733d5"
        },
        "item": {
          "id": "a33a00d2-1698-4905-b3ab-f943b3e82104",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8f4b980f-22ec-4d0d-8e49-9ae2fac488cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9276fd-29ee-4b69-8462-ec43f1c57787",
        "cursor": {
          "ref": "5d7a2531-627c-4a53-add2-945e4d6adabd",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aa00e992-657d-452e-bb74-1fcf1a9d70f7"
        },
        "item": {
          "id": "6a9276fd-29ee-4b69-8462-ec43f1c57787",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c9ab2b2d-4b21-4d76-9f2f-61e21c6331b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1242,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c3f36b-27f3-493a-baae-8ca829157bc3",
        "cursor": {
          "ref": "759c9ec1-88c5-48e7-89b6-b26d5e18bd48",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9f2c2af2-1aad-43e2-bbb8-5bc9d4dbea3f"
        },
        "item": {
          "id": "53c3f36b-27f3-493a-baae-8ca829157bc3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9e3a2913-7ade-4803-bc5f-acbd24e208e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1484,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf5a5ba-f586-4259-8996-e927acf61d16",
        "cursor": {
          "ref": "04078274-336a-4499-8779-97dd3350537f",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b5555a94-8f97-405f-8df6-94b0b92600a5"
        },
        "item": {
          "id": "ecf5a5ba-f586-4259-8996-e927acf61d16",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e1ef6711-4026-431f-ac09-9892c7ebc717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1466,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28b0b5f-338c-421a-8d04-bd507d02f565",
        "cursor": {
          "ref": "28716b4d-4895-4058-b71e-ffa95cc5907f",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "810159c8-8a69-454d-8c63-1d61a0728dc6"
        },
        "item": {
          "id": "b28b0b5f-338c-421a-8d04-bd507d02f565",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "826299ad-4c94-492d-9fd5-6e451f7df120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ce33ce-2584-427d-abdb-f57df1ed5cc3",
        "cursor": {
          "ref": "430881e9-d902-4c1c-b230-3543ebe23f81",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "19babca5-73ee-419f-b41f-b550bcbbd26b"
        },
        "item": {
          "id": "19ce33ce-2584-427d-abdb-f57df1ed5cc3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f6a170d5-c37e-496f-8caa-21bd0bf07ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae388bc-5d85-4c7c-9da3-348158f2c3b0",
        "cursor": {
          "ref": "a43b8859-5a24-4678-9d68-6106bb457bbd",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "83367b46-092f-4a8c-91f1-c14ff7d90e4b"
        },
        "item": {
          "id": "aae388bc-5d85-4c7c-9da3-348158f2c3b0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "706e5028-ef76-49ae-b716-2dd90204ff81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae8591-557e-406d-bbd4-1cb12e165516",
        "cursor": {
          "ref": "ef756e96-7173-469b-bc79-0ceb74796f8b",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aad5edf0-5c67-4c4f-bdff-6e46af469159"
        },
        "item": {
          "id": "e6ae8591-557e-406d-bbd4-1cb12e165516",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1502f69-661a-4e4b-8b34-db4e85234827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5682b17e-929d-4c63-9763-497cc4d6549e",
        "cursor": {
          "ref": "1e53791b-51f7-4a41-a6c6-f427981817fc",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "84426ff2-c74e-4881-9ec5-9dfbdbddcb7d"
        },
        "item": {
          "id": "5682b17e-929d-4c63-9763-497cc4d6549e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cae6a06d-6ecd-46e8-bb9e-9876b864c4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae5c61e-9d11-4176-9a6e-6ce3894b5dc8",
        "cursor": {
          "ref": "f3190957-9e5f-4ac3-9f78-ccd0d49c0244",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "974ef434-d8d0-4113-b9bd-12ebea6bca7d"
        },
        "item": {
          "id": "9ae5c61e-9d11-4176-9a6e-6ce3894b5dc8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2aedbef0-d513-4c1f-9dae-fc63e2c7cc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab9452-20fb-40e8-8610-1017bafb864b",
        "cursor": {
          "ref": "ec6ee4ad-940b-42ac-8797-d385d5e1ad1e",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ba74645f-4781-4b09-891b-47ef717d7dba"
        },
        "item": {
          "id": "13ab9452-20fb-40e8-8610-1017bafb864b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4f090492-78e6-4066-80f0-c7291ef72136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6464541c-b8bb-449c-b4fc-ae8548adf4a3",
        "cursor": {
          "ref": "2c0e7c52-9015-452f-a8da-3ddca1dfbb0a",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "012c5e27-87b4-4ab8-971d-7305d38fac7b"
        },
        "item": {
          "id": "6464541c-b8bb-449c-b4fc-ae8548adf4a3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "72cac767-ad37-45b6-89c1-72434ff3b65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ef4e7e-704c-43ee-82a9-6ff2875fc694",
        "cursor": {
          "ref": "9d315b8e-30a8-4316-8185-45988021f02b",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f1ced9a1-d4eb-4393-9eb4-f8b963ff4924"
        },
        "item": {
          "id": "b8ef4e7e-704c-43ee-82a9-6ff2875fc694",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d371d7b4-c00c-4dfc-82d8-7286191e2e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f077816f-a57a-4773-8291-20f1a87c97cf",
        "cursor": {
          "ref": "45b4ba05-066f-4c73-8bec-7d4faf44fdbc",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "50db6843-a4da-4f61-a30b-8011de862c0f"
        },
        "item": {
          "id": "f077816f-a57a-4773-8291-20f1a87c97cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6b148ffc-ff0c-4120-b098-0a359077dfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9339ae57-a90c-49df-9c20-b7223dd4794b",
        "cursor": {
          "ref": "75dffdf5-239f-4f3e-b8fc-1c0923d740fb",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "523fe226-1bbb-4d1a-a0b6-e94ce74c5be0"
        },
        "item": {
          "id": "9339ae57-a90c-49df-9c20-b7223dd4794b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6b7895c5-51b5-44af-a570-d72e4b287ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a038ea-3c97-410d-8511-4e234ebc1811",
        "cursor": {
          "ref": "0180e50f-806a-4adf-8103-4b435515415d",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4f110ea1-4425-4b4b-b9ad-3fbffd6ecaed"
        },
        "item": {
          "id": "08a038ea-3c97-410d-8511-4e234ebc1811",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d12039b8-e4b7-445e-a2b6-2c70f778325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef0d960-2a35-4bbc-be12-5f6aae3a30d4",
        "cursor": {
          "ref": "5419be0b-9387-4a0f-90f7-6cd1f2523c21",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8848fc07-d8dc-4ae8-8b04-caa55af94f21"
        },
        "item": {
          "id": "3ef0d960-2a35-4bbc-be12-5f6aae3a30d4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "722d62a0-0142-4211-a468-4646dad19ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a833ae-49b6-4a22-ad23-841d245b8815",
        "cursor": {
          "ref": "f58d5ae8-05b1-4342-af41-16016b92d1be",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2999f6a4-aec5-4df3-8570-274f3f8ac578"
        },
        "item": {
          "id": "52a833ae-49b6-4a22-ad23-841d245b8815",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5088048d-eb03-433b-a267-cbc787d59b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152c32a9-8ac2-47ec-98b1-353ef0a65795",
        "cursor": {
          "ref": "d06939d2-a1fa-445d-94ce-9a6cc986b445",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e12957c5-d857-4487-aadb-d8907808d11e"
        },
        "item": {
          "id": "152c32a9-8ac2-47ec-98b1-353ef0a65795",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e388d5a-497d-4a5b-9b1e-e224e368e9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83e051e-b521-4d1b-9bec-3ccea8f04dea",
        "cursor": {
          "ref": "bd4e511a-d453-4b3d-b459-7b0a8c537ec8",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d7877727-d89d-4d84-946a-85b334c135df"
        },
        "item": {
          "id": "e83e051e-b521-4d1b-9bec-3ccea8f04dea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "38b203ad-448b-4b2b-8a92-88822c944753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65fe2e6-1a10-4abc-943c-e4eb30f4e67d",
        "cursor": {
          "ref": "8d73ef5d-75ae-4ca9-a2bd-d318d54c102c",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "471503e9-2c2b-46a3-99a7-b050da20d1d9"
        },
        "item": {
          "id": "e65fe2e6-1a10-4abc-943c-e4eb30f4e67d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "11b090c1-6e18-4af8-9e17-f26e7314200e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ed429c-c0a1-4249-9fca-00681cc8c50b",
        "cursor": {
          "ref": "46e54d1f-d090-4ce7-b377-2e87401a4b3d",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c6a3b26b-192e-4696-95f8-33f245ebc884"
        },
        "item": {
          "id": "86ed429c-c0a1-4249-9fca-00681cc8c50b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fb6503e2-8b12-4c17-9ff7-b848b76256ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a953b97b-e44a-44f7-9dbe-d0cfe5d877f3",
        "cursor": {
          "ref": "86eb1d5b-059b-4300-be39-f9490c15d99a",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "01d60f10-a142-4261-824f-a152eeb2cd83"
        },
        "item": {
          "id": "a953b97b-e44a-44f7-9dbe-d0cfe5d877f3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4968a36e-dbd5-4c62-9cec-bd963a1c2f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eee64c5-5c09-44a3-bc00-0bb20d474902",
        "cursor": {
          "ref": "dec13b4a-16f2-4813-9025-c5eca8e1ee66",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5601c090-4020-4807-94c0-f698331c3593"
        },
        "item": {
          "id": "1eee64c5-5c09-44a3-bc00-0bb20d474902",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c63a3a82-5332-41c0-92b0-142d2a630815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8732f9-e7a4-4d53-8b5e-7ad3af106345",
        "cursor": {
          "ref": "d1a21ad1-b132-44f5-8866-e2b5a3180548",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "36f893ee-7014-4c5f-afc9-1fb7cdbd15d0"
        },
        "item": {
          "id": "1e8732f9-e7a4-4d53-8b5e-7ad3af106345",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5632e5e2-13be-4cbe-b888-fe9b5ceb896e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd696c2-ff08-4e0f-85cd-3cb5fd3d4290",
        "cursor": {
          "ref": "73efbe96-4d4c-482b-9515-c7bb6a5d365d",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5ac28ec7-6412-447b-8212-cc64b499dafd"
        },
        "item": {
          "id": "8fd696c2-ff08-4e0f-85cd-3cb5fd3d4290",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6c8b5164-dc30-482d-a72e-40f76d47c50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c14c5f0-170c-4a2a-b459-0f8b0b5916f0",
        "cursor": {
          "ref": "7cb06db5-68a5-41f8-b72c-3987ec819cd3",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "df850336-47cf-4f19-9f55-2c42fad8cc85"
        },
        "item": {
          "id": "5c14c5f0-170c-4a2a-b459-0f8b0b5916f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "389207b8-fbd6-4492-8211-0096974a6363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d5f16d-db93-4073-8542-47ed6fbd86d5",
        "cursor": {
          "ref": "4e24d23c-1a67-4160-bfd5-ce0e5880ece0",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "21d74e3d-90c8-4d4c-a694-a6911e92fe2d"
        },
        "item": {
          "id": "d2d5f16d-db93-4073-8542-47ed6fbd86d5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ffee9505-81e0-49ec-a3c1-1e2ec53ca41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacc2997-0812-442d-8176-459c000ffaae",
        "cursor": {
          "ref": "828a5992-aaab-4d9e-b95c-f3b1e1aa5777",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e0eb25e6-29f2-4d01-a6be-255433b53367"
        },
        "item": {
          "id": "dacc2997-0812-442d-8176-459c000ffaae",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b0e9af49-4eb8-4356-b7b7-5ad1af91e0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5e7fab-c544-4af1-b713-8d7a767c7418",
        "cursor": {
          "ref": "b70d51bb-acd3-4f70-a7bf-c99a53f58b8b",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d7c82b4d-07d6-40bf-ad0c-482210a110f8"
        },
        "item": {
          "id": "4d5e7fab-c544-4af1-b713-8d7a767c7418",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "96aefb71-1708-422b-9225-e3590049bd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc1f743-f3c3-4426-a2c2-5bd77ac39156",
        "cursor": {
          "ref": "c7d8c793-3594-41f2-b83b-9eba541fa54b",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "28ed3b83-51aa-4145-9662-6c27d40dcbd3"
        },
        "item": {
          "id": "fbc1f743-f3c3-4426-a2c2-5bd77ac39156",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cfb8c449-8960-4d2e-a3d8-32809425c326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21947a1-edd1-46fd-88ac-225bbc2a85a1",
        "cursor": {
          "ref": "fd848248-7c45-420b-9352-61e81616de84",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "efb9b276-7940-4971-9470-1010c1a7c3aa"
        },
        "item": {
          "id": "a21947a1-edd1-46fd-88ac-225bbc2a85a1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "57638c39-4097-4f20-b3b9-c58c49939b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb38af7d-ee1e-458f-9f1b-d3fc1755e2d8",
        "cursor": {
          "ref": "798bae0e-8faf-4aa5-899d-47e07c56505a",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cc9e6e9a-7112-42ce-8fde-48527e1e2f55"
        },
        "item": {
          "id": "fb38af7d-ee1e-458f-9f1b-d3fc1755e2d8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "42328c4a-d19e-4372-8308-4d0d3dc625de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1dd7b6-2c4a-4080-a629-24216db5d2c5",
        "cursor": {
          "ref": "5ed4c329-8531-4b11-88b8-76dd019fc635",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8465603a-7a0a-49bf-8d09-f3cd52ae0b98"
        },
        "item": {
          "id": "9b1dd7b6-2c4a-4080-a629-24216db5d2c5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "af31926b-c8dc-4bf5-8017-d1830b3fcafa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8a4de7-b58b-4b8f-9ffb-84f769ee66c9",
        "cursor": {
          "ref": "d223fbab-c497-418b-aaee-dd7953dc66f4",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "84573f54-42c3-4af0-84fd-d76ca7d6af44"
        },
        "item": {
          "id": "bf8a4de7-b58b-4b8f-9ffb-84f769ee66c9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "71a7acc0-f84e-4447-92c6-610db9562752",
          "status": "Created",
          "code": 201,
          "responseTime": 4108,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "8fe101ce-aa15-4ee2-ad34-647c59853180",
        "cursor": {
          "ref": "0eb45f46-cfe3-4014-88cb-4f5ffe798f5f",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e73f3547-2160-4a4b-b9a9-d3e53a729d17"
        },
        "item": {
          "id": "8fe101ce-aa15-4ee2-ad34-647c59853180",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "78cfda9b-ce02-4564-aa1c-c7deb437697f",
          "status": "Created",
          "code": 201,
          "responseTime": 3910,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "7a99b575-e1bf-40c8-aff4-96dcb9a25cf1",
        "cursor": {
          "ref": "6232f36f-d858-4051-81ba-7789d1487164",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "30b5ae74-7d51-4723-bd6e-fe98bd83e5ce"
        },
        "item": {
          "id": "7a99b575-e1bf-40c8-aff4-96dcb9a25cf1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1ebd8c6a-cc57-47d3-b7ff-452de7f6adef",
          "status": "Created",
          "code": 201,
          "responseTime": 3995,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "e16665f1-0c3c-4a98-a729-d881e0a90cb6",
        "cursor": {
          "ref": "34290983-426c-4e73-b277-c6b034c0b1f8",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "feaf78e8-1f2d-4fc8-9c2a-0146ac845071"
        },
        "item": {
          "id": "e16665f1-0c3c-4a98-a729-d881e0a90cb6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c7820536-2436-4546-8aa2-412d7dd2bf11",
          "status": "Created",
          "code": 201,
          "responseTime": 3743,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "55ab0368-4a4f-4d47-a80b-fad249efe6bc",
        "cursor": {
          "ref": "9ef2952a-78b5-4c20-9cd7-2db56a1cfebe",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80d9011c-d4eb-4360-aa3a-7eb7809aec00"
        },
        "item": {
          "id": "55ab0368-4a4f-4d47-a80b-fad249efe6bc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "529a4521-e01e-4cd5-9259-f4608c53de75",
          "status": "Created",
          "code": 201,
          "responseTime": 4797,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "acbd1979-a762-4040-a19a-ed26f4543506",
        "cursor": {
          "ref": "345877b2-bf3f-4a7b-b4ef-0531a3679b91",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "45f3dede-d8df-475d-aa54-4def42fa7fd6"
        },
        "item": {
          "id": "acbd1979-a762-4040-a19a-ed26f4543506",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "595d3b16-9ffe-450f-9c93-11ca7a3497f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd1979-a762-4040-a19a-ed26f4543506",
        "cursor": {
          "ref": "345877b2-bf3f-4a7b-b4ef-0531a3679b91",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "45f3dede-d8df-475d-aa54-4def42fa7fd6"
        },
        "item": {
          "id": "acbd1979-a762-4040-a19a-ed26f4543506",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "595d3b16-9ffe-450f-9c93-11ca7a3497f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57eb6fb-821b-45de-b9c8-29b7677b33ba",
        "cursor": {
          "ref": "a6929862-5db2-4026-8670-04b936bc9ec8",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53fac8af-025c-4df8-8bc9-704a15d459d6"
        },
        "item": {
          "id": "d57eb6fb-821b-45de-b9c8-29b7677b33ba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d197c6f5-49fc-4d98-a793-57ca2976b19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8697a6-62ff-4fbf-8f3b-b37e91e6a64a",
        "cursor": {
          "ref": "49151999-e59c-477b-b6d5-e7c0ab3c349d",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "629796df-af89-4b3a-88d5-c8b312fdbf93"
        },
        "item": {
          "id": "1e8697a6-62ff-4fbf-8f3b-b37e91e6a64a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7995f3b-017e-48b3-bb29-6f68126acf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c51dca-8d82-4197-a795-e8a562f169dd",
        "cursor": {
          "ref": "f82f9791-449c-4f32-a0fd-31c8e9a680b3",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8c2bafc9-b17d-4529-b29f-47e3e9cc9657"
        },
        "item": {
          "id": "46c51dca-8d82-4197-a795-e8a562f169dd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8864bd57-ba0d-40c2-86c8-0671573b3ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5bb73e-b6d1-46cf-b8b9-19488021c7bb",
        "cursor": {
          "ref": "360907f5-2755-4c77-8b93-a20be70f2d9b",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "140085f4-2cdf-4914-9bd4-8600c2f67891"
        },
        "item": {
          "id": "2e5bb73e-b6d1-46cf-b8b9-19488021c7bb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36843366-db66-42c3-9986-4e32c03321f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f92d36f-10e2-4ce1-b0d5-c3d988711f1a",
        "cursor": {
          "ref": "2f655cb1-512c-450f-95e7-033da98d71a1",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "832b1762-26c7-4f0c-baa7-6438bd897db1"
        },
        "item": {
          "id": "2f92d36f-10e2-4ce1-b0d5-c3d988711f1a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b55ff6c-3646-4052-832a-11e1f40864b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28568764-0131-4523-a1df-9c8cff9d593a",
        "cursor": {
          "ref": "24fc8c16-924c-46ce-917c-088630915c19",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "355953fd-bda0-4aa9-8a7b-7ec0405e3306"
        },
        "item": {
          "id": "28568764-0131-4523-a1df-9c8cff9d593a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b6afb3c2-e973-44c4-9dc3-5f861db6f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db820855-8b2f-4a9f-9ef0-27b410a5babf",
        "cursor": {
          "ref": "d5a7227e-b0dd-4f9e-978f-54ae8188fe69",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7e7e5618-7f43-4459-9ca2-c2f526065858"
        },
        "item": {
          "id": "db820855-8b2f-4a9f-9ef0-27b410a5babf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0f6289a-a685-4e39-baf0-81e08f46b759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505eec65-1e53-4ad2-b974-06321ecaffda",
        "cursor": {
          "ref": "c457a7c8-950b-4290-a49c-777eb7c60557",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "caace678-db69-4090-98c5-5ff0a54b7b7a"
        },
        "item": {
          "id": "505eec65-1e53-4ad2-b974-06321ecaffda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "19be9532-ccd8-4a08-9362-61a3e1a3b26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc759fb6-cdaf-47f1-bcef-1633fffd3112",
        "cursor": {
          "ref": "7fc1b6f8-eb80-4bcb-8b32-d9538834f61c",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1e5eeee1-8748-4249-a804-70a6efff6db1"
        },
        "item": {
          "id": "fc759fb6-cdaf-47f1-bcef-1633fffd3112",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "79d6924d-4538-41d4-8bc9-7e1edf8916d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5f48d7-1761-4602-b4e7-7ca11fd34b73",
        "cursor": {
          "ref": "30a7a422-c474-437e-a0bc-c324bcd6e699",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "01d0c748-c38c-4746-91e2-986d829e8350"
        },
        "item": {
          "id": "7a5f48d7-1761-4602-b4e7-7ca11fd34b73",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2b39875b-6fb7-4791-8ab8-27c14a011c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d449cea-6a19-4029-ad80-deaea0900e56",
        "cursor": {
          "ref": "76d2776e-1568-462f-9aec-2fb394e54c32",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5919085-0ab3-422e-a9ad-3f19a15e1104"
        },
        "item": {
          "id": "5d449cea-6a19-4029-ad80-deaea0900e56",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "69fd4c2e-356c-4c39-9962-67971ab4defb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef5b0c0-e787-442d-804c-d525659e8ba8",
        "cursor": {
          "ref": "f8ac2b64-4f93-4c9a-8b75-7d250ef37184",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "094bfff4-eb61-4971-8e68-c606b17e1959"
        },
        "item": {
          "id": "9ef5b0c0-e787-442d-804c-d525659e8ba8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12d27f69-3f8e-4d52-a7b7-55980721b56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470bbafb-861e-4d14-8244-8a5ce955764b",
        "cursor": {
          "ref": "71a6fdc3-826c-44f2-a043-ea1d32d3efe5",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "33ea076c-77cd-4f78-90eb-a4ce28516dc3"
        },
        "item": {
          "id": "470bbafb-861e-4d14-8244-8a5ce955764b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e1bdff3a-9319-432a-9a2a-eb740677dd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229fb846-648e-4a67-9d88-584525fc903a",
        "cursor": {
          "ref": "c6aeef1e-4a91-487c-8977-f3cdc398a8c7",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b446afa6-b98c-4df9-b00f-b7a61a5709c0"
        },
        "item": {
          "id": "229fb846-648e-4a67-9d88-584525fc903a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "08b41385-1d25-4ed2-99b5-e4128339da0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8a7b9c-f5ec-4222-a2a6-affec37114d8",
        "cursor": {
          "ref": "ad99d40b-df52-46e1-bde7-16b83b139aae",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9d50eb2-69eb-4cc7-9fb6-e2a6eb0a3905"
        },
        "item": {
          "id": "ad8a7b9c-f5ec-4222-a2a6-affec37114d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "68f3ecfb-3daf-4829-b5b9-c150e1eb6371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef68b11-0282-41e5-ac4a-cc06cd935916",
        "cursor": {
          "ref": "a4c5548c-4ce2-4317-b427-f6e95a900944",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ab44e700-48a1-4127-9b88-f8f613fa7455"
        },
        "item": {
          "id": "1ef68b11-0282-41e5-ac4a-cc06cd935916",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a8fa2c7-b1a9-4e82-9a18-1fb56e98085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ce170-d9ab-445c-a6c3-348234f333c4",
        "cursor": {
          "ref": "dc41bc2a-e25c-4891-9a5f-0461f0195717",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cc6c5a50-996c-4910-a0bb-b91877f03c8e"
        },
        "item": {
          "id": "f25ce170-d9ab-445c-a6c3-348234f333c4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8e95e451-dbf8-4f9f-9fb2-74cf524f16a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d203b290-9afd-4aef-99b4-a16bce3e9c5f",
        "cursor": {
          "ref": "9273ce96-a6e7-4b5a-9291-f04e784a988b",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0f3e49fa-6ab4-4ce8-9992-9fb92c1f1dc2"
        },
        "item": {
          "id": "d203b290-9afd-4aef-99b4-a16bce3e9c5f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "57938a70-a29d-495d-9dab-e3c40fac3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb9f64b-4a32-4616-8b40-2d1130c071a2",
        "cursor": {
          "ref": "a93c5c55-8ade-4505-96f5-05ca553a7fb9",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "67b1ee89-e26e-494c-bb4f-3cfb7dde76af"
        },
        "item": {
          "id": "4fb9f64b-4a32-4616-8b40-2d1130c071a2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4b9a6942-dd99-47f9-90e8-dcd9c2f48fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002fba51-6a5c-4d13-91c4-e90a04a992dd",
        "cursor": {
          "ref": "98dedad2-7f22-4cdc-9eb3-515f964a7da6",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "de179914-d0ab-43e2-8504-0c40f97ff2f0"
        },
        "item": {
          "id": "002fba51-6a5c-4d13-91c4-e90a04a992dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0df11545-ee95-4406-9196-81e6b9f098c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78fdcc4-2b50-4d77-aff3-572a5f7b2e9c",
        "cursor": {
          "ref": "d0b06f36-13e4-49b4-9f7f-c89e8163195d",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "220b18b3-1952-4b64-9f7b-06ddb0d08d2d"
        },
        "item": {
          "id": "d78fdcc4-2b50-4d77-aff3-572a5f7b2e9c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad04fb4b-9e4a-4448-80c8-41daaea74cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1776cadb-1c66-44f2-8213-44b74e8beef5",
        "cursor": {
          "ref": "76400586-6962-4f03-b926-f46741d4f595",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b7e2c36-2583-4033-8271-2fc5f700135e"
        },
        "item": {
          "id": "1776cadb-1c66-44f2-8213-44b74e8beef5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0c309150-0785-47cc-a342-ec170c266e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4762e28-085c-4a95-b830-660b5789be0d",
        "cursor": {
          "ref": "d5766b4a-55ce-41c3-a106-658df37a3835",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "96b5de4c-6461-4d02-b79d-c1f089913692"
        },
        "item": {
          "id": "e4762e28-085c-4a95-b830-660b5789be0d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0cbe3e84-d9c4-4479-8c8d-9c353f3f1803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c570d9-1abe-42c9-9ec8-1ae3fc7101ac",
        "cursor": {
          "ref": "8a0ac810-c69f-4e8e-8e0b-4e779173985e",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8487adfd-47d8-44a6-806d-8a2f42b27af4"
        },
        "item": {
          "id": "24c570d9-1abe-42c9-9ec8-1ae3fc7101ac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c892dfb3-3b7d-40ab-a955-304ec39c3be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d33225-de8f-45d6-9794-209191299a7c",
        "cursor": {
          "ref": "dc60bf52-7156-4528-b21f-a9c2fab463b3",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "690e52d6-bccb-4eea-b201-150b98adaee2"
        },
        "item": {
          "id": "24d33225-de8f-45d6-9794-209191299a7c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2f79fd97-0cbd-4c5f-9333-621acfc5473a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8eec5f-9e79-47bb-81f5-f66f9106cb85",
        "cursor": {
          "ref": "313ebb5e-fc85-4d4c-a3e7-5453c9e13dd8",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5aa37748-1009-4da3-814a-f95c25b5b317"
        },
        "item": {
          "id": "9c8eec5f-9e79-47bb-81f5-f66f9106cb85",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "58bde399-4cfe-415e-bf81-97f4f28437fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93567247-f383-4fc5-ac0d-e76ac98f20ef",
        "cursor": {
          "ref": "a175af94-7cdc-4f7f-9cca-490aabdd6b71",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3c64215e-3f65-418b-b52d-1965372015a7"
        },
        "item": {
          "id": "93567247-f383-4fc5-ac0d-e76ac98f20ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0bdad12a-cee1-42a0-befb-07cea0042dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cd21c2-c5ef-49ff-9980-50ebc5370654",
        "cursor": {
          "ref": "9b6fc046-9b0a-412d-888f-26a75d69fa0d",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "003b7cc8-4bed-4aaf-b193-859fd92a98ff"
        },
        "item": {
          "id": "a5cd21c2-c5ef-49ff-9980-50ebc5370654",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "21e70f5c-44cb-49bb-9835-49c1f25914ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e8fd65-90f5-4ee1-82d6-582c7af39418",
        "cursor": {
          "ref": "8010ccc8-7ae8-4e6d-878d-0fddc5fc0d7b",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ca50c686-1b54-4722-88e1-3013c7da3b96"
        },
        "item": {
          "id": "00e8fd65-90f5-4ee1-82d6-582c7af39418",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f3c8909c-b496-4912-9b39-9e811302713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656dcd1f-fa88-4a88-8b60-7aabca6be6a0",
        "cursor": {
          "ref": "e8443381-9f80-4adf-bca7-bd3211bcdb8c",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c49dfc7c-4146-4fe7-9896-f0aa4c955f43"
        },
        "item": {
          "id": "656dcd1f-fa88-4a88-8b60-7aabca6be6a0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f644fa1-3004-40df-9787-eac97ec7ae9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409db9ff-5f08-4e53-aef3-455b04b12f3c",
        "cursor": {
          "ref": "2b090201-d994-4a33-af74-f3d6dba6e68c",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d4dee4c-b524-4e1f-b025-59977665ec16"
        },
        "item": {
          "id": "409db9ff-5f08-4e53-aef3-455b04b12f3c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ae2f7e56-2a17-426e-bb64-5ff862d8fc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb9056d-ba60-4366-89e9-71dcfd6446e2",
        "cursor": {
          "ref": "ae8c1021-e159-4961-8a5b-aec5c377d20e",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "14145d90-5428-4fcd-aa9c-54df40b3ee6c"
        },
        "item": {
          "id": "abb9056d-ba60-4366-89e9-71dcfd6446e2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "75cfb3ac-cfc1-42d9-9471-ff8fec4a9eab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc4d187-5fbf-4c33-bd1a-556335e5c17b",
        "cursor": {
          "ref": "d7158421-27b1-4fd1-b789-a249681a1daf",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "56caddf7-e9e9-4357-8958-4a0a12ac8863"
        },
        "item": {
          "id": "4bc4d187-5fbf-4c33-bd1a-556335e5c17b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "27f01521-f042-46ac-bfe0-8b2f9693c4ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 539,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e89049-7997-4a13-bf41-7d2f9ff8484d",
        "cursor": {
          "ref": "5c893898-17b4-48cf-b6bc-6735d816cf37",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b070ee8b-65a9-4081-aac5-db12696abead"
        },
        "item": {
          "id": "85e89049-7997-4a13-bf41-7d2f9ff8484d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4d9f086b-2acd-45dd-b2bb-4c9bc80ced24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e89049-7997-4a13-bf41-7d2f9ff8484d",
        "cursor": {
          "ref": "5c893898-17b4-48cf-b6bc-6735d816cf37",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b070ee8b-65a9-4081-aac5-db12696abead"
        },
        "item": {
          "id": "85e89049-7997-4a13-bf41-7d2f9ff8484d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4d9f086b-2acd-45dd-b2bb-4c9bc80ced24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3c544c-19c9-40c3-91e5-22b8a003819d",
        "cursor": {
          "ref": "7ba046a2-6c27-4d2c-b396-7d9d70233a5f",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bcecf57d-e097-48ff-8165-2dba8064a7f9"
        },
        "item": {
          "id": "fd3c544c-19c9-40c3-91e5-22b8a003819d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8c2686e9-7a45-468c-a265-79224ca90df8",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "4e192f1f-c5c4-4fe7-b61a-218276706f22",
        "cursor": {
          "ref": "fcdbbd79-8b31-4646-8ed5-90f6041f7bd6",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ef4558b-ad23-4d11-9a12-f638cb4de8bd"
        },
        "item": {
          "id": "4e192f1f-c5c4-4fe7-b61a-218276706f22",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "540d615b-51ff-45f2-bfdc-4c46227dad3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07b898-11ef-4d5d-9ce6-e35c07362cd0",
        "cursor": {
          "ref": "af3ccedd-f54a-4db5-bb05-361d5cd4c40e",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cc421bdd-684d-4d16-ba14-5cc2dbc8a8ef"
        },
        "item": {
          "id": "1b07b898-11ef-4d5d-9ce6-e35c07362cd0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3261a0ac-f47c-4eec-82aa-0e030f6d2eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e10f10d-293f-41dd-9382-56e67a53106e",
        "cursor": {
          "ref": "8188f2fb-56e3-472b-bec9-e82b2dce9615",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2ebc3bc8-4ad0-4f59-a8d8-405814862b5e"
        },
        "item": {
          "id": "7e10f10d-293f-41dd-9382-56e67a53106e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "35af18f1-36fe-425d-a245-6e89fdab2dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529e23d-e8e6-460a-8705-6da5f4631d8c",
        "cursor": {
          "ref": "6aaf1c31-f539-44d9-aa83-486ac1e67e8d",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5c44a3ff-c5fd-4035-9826-de296df29ed7"
        },
        "item": {
          "id": "2529e23d-e8e6-460a-8705-6da5f4631d8c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "283bc9f1-0e84-4aea-bf94-e533178b7e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b26ba-c2e2-493b-88e9-6191952317a9",
        "cursor": {
          "ref": "dcce3b40-be81-4a20-ab98-c5f4386bf521",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5ad97706-00c8-4888-b9da-a80b81607d59"
        },
        "item": {
          "id": "037b26ba-c2e2-493b-88e9-6191952317a9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0b48efd9-498f-48dd-bb9a-0a6e770494a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0208d34-bc06-417c-8c53-d9f7d6cb0149",
        "cursor": {
          "ref": "83214692-2c6e-4973-a4aa-e7bee8fa0020",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0bbdc3c3-f33f-4bfa-88e5-fee985d2b7bb"
        },
        "item": {
          "id": "d0208d34-bc06-417c-8c53-d9f7d6cb0149",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2fbc2c77-8f73-48d1-9139-5eb97f0fbbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e72fa06-b725-4801-8597-916b7e176613",
        "cursor": {
          "ref": "68d1705a-1e6a-44f2-b4a3-3857cf2bc2d7",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9c9cc67b-fa16-481c-b43d-101da0dbe000"
        },
        "item": {
          "id": "1e72fa06-b725-4801-8597-916b7e176613",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e8bb5615-3e19-4602-acf3-c42817d3fe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6008a79-efbf-4067-8032-8c55df61c2be",
        "cursor": {
          "ref": "b0651a9a-6eff-4a6e-94e7-22c41cdf115c",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "17521588-4239-4aa2-8dde-7d3ae937dbbe"
        },
        "item": {
          "id": "e6008a79-efbf-4067-8032-8c55df61c2be",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fc22b714-74ff-4825-b260-6aa6f5c3317d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025d7003-6f73-4960-8ae4-b1a8388ac3ce",
        "cursor": {
          "ref": "5ddb1038-ef37-40d6-9a38-34bb82748b99",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fab92907-7111-4ad3-9cdb-6d9b67bfe008"
        },
        "item": {
          "id": "025d7003-6f73-4960-8ae4-b1a8388ac3ce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9f76ca60-a158-4177-b79b-c018da3cc109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d63148-a596-4981-bffc-8388eec7445a",
        "cursor": {
          "ref": "68164a4d-d4e3-4c65-8131-6161ad053d55",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "456005e1-cb19-47a0-b5ff-5f959cbadc9b"
        },
        "item": {
          "id": "56d63148-a596-4981-bffc-8388eec7445a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bee841c2-bbbc-4f5c-a56f-e131f1454126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6474166-7db0-4295-b41c-5688cd206a37",
        "cursor": {
          "ref": "26f3fe2f-a119-4f50-811b-df646a7a515e",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1645e529-8147-40b5-b9b9-654580b8868d"
        },
        "item": {
          "id": "b6474166-7db0-4295-b41c-5688cd206a37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3918f78a-c6d6-476c-9c21-4e3492082870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca059704-0ac1-45ba-869e-c66f7ec419d6",
        "cursor": {
          "ref": "5617f16b-32ed-452f-b9ae-af43d98cfe32",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fb8ec895-d715-433d-be54-22e3b3dc5c51"
        },
        "item": {
          "id": "ca059704-0ac1-45ba-869e-c66f7ec419d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "071f12ff-38dc-4a10-82d4-303a41f640ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f410d96-ef81-4de4-ada5-9fd0137ded5d",
        "cursor": {
          "ref": "bb9baf16-c524-405b-8b1d-a7ebc459170f",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58fd9ffe-c26e-4f6b-9445-dba999d5c4b1"
        },
        "item": {
          "id": "2f410d96-ef81-4de4-ada5-9fd0137ded5d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e3287eee-9a36-42f8-bdef-787f24916c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd65eda-b738-47f3-a26b-4dd3a8bb7c42",
        "cursor": {
          "ref": "4fb8df2d-516a-42a9-b386-a60c829e1e1f",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2217f832-4d15-49c4-9088-431ef3f32f07"
        },
        "item": {
          "id": "2fd65eda-b738-47f3-a26b-4dd3a8bb7c42",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cada5e56-999c-4480-bc74-2deab956a871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928979c4-1718-43b4-9d3c-dc9ed4a99331",
        "cursor": {
          "ref": "f77a5921-6674-4429-862f-add8e317e836",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "631c82fb-d026-4939-884b-31ee8ab3adb0"
        },
        "item": {
          "id": "928979c4-1718-43b4-9d3c-dc9ed4a99331",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8a444ea2-b923-40d5-b29c-5142d5c27bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb03fb-7693-41e1-9a25-31a8cac8f175",
        "cursor": {
          "ref": "77f1e94c-abda-4e4c-8d56-4335fae0326f",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2340646a-2762-4197-9063-034d2b1387d5"
        },
        "item": {
          "id": "5ceb03fb-7693-41e1-9a25-31a8cac8f175",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "9bbaa190-1cb5-4bc1-bdfd-38aeb8eeeba1",
          "status": "OK",
          "code": 200,
          "responseTime": 1849,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "08f1d654-6274-484e-b690-a07fc2de2e5d",
        "cursor": {
          "ref": "95590f03-3db5-46cf-943d-baf878479916",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "05135008-4a0d-4ac0-af08-68ceaeac6004"
        },
        "item": {
          "id": "08f1d654-6274-484e-b690-a07fc2de2e5d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "957d13c4-6301-4d3c-a08a-52089902ee27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d8e565-0992-4c8a-a582-a8a35fd51ef4",
        "cursor": {
          "ref": "b339359b-86af-4f30-b32e-90853ffa806f",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7ada862a-94ce-4392-aded-6de6681fa341"
        },
        "item": {
          "id": "74d8e565-0992-4c8a-a582-a8a35fd51ef4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "eaa85dfb-2549-4a92-9a7f-ccaa8ef4c09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c688cb-ea25-4327-a521-7a50645a5b4d",
        "cursor": {
          "ref": "fb28e9f7-1348-42c8-a623-42353934613f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "36783004-9336-43cd-b2ca-864e90d990cc"
        },
        "item": {
          "id": "55c688cb-ea25-4327-a521-7a50645a5b4d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04c926e8-fba4-42e9-b7e8-a45dc4f749c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7dad73-ea28-475d-90c9-442ff772fce2",
        "cursor": {
          "ref": "d848c268-949e-4c4e-b81c-064a7615cedb",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "185ea7cb-3828-41c5-805a-ff6e7dff7253"
        },
        "item": {
          "id": "ae7dad73-ea28-475d-90c9-442ff772fce2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7eaa874f-a134-47c2-90bb-3c56c5659ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8285499-09d8-4a4b-aad7-e6e901edfa28",
        "cursor": {
          "ref": "d4475a0e-cc57-4b2b-8670-fbee0f030468",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "898d6a5f-5848-44ee-b6e8-c6e7823c3502"
        },
        "item": {
          "id": "f8285499-09d8-4a4b-aad7-e6e901edfa28",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "52bf8cf5-ca83-478f-a25a-6f07dc22b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c425b2-a5f4-4eca-a10b-64608a3f98ad",
        "cursor": {
          "ref": "9aa9bfd3-2a4a-43e1-82a9-d11e02e3d504",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fca793b5-7875-43d1-8387-3d6eba6ce0f1"
        },
        "item": {
          "id": "33c425b2-a5f4-4eca-a10b-64608a3f98ad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "773ce38e-126b-4247-a502-b0d3c613666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355345f4-fbfd-4f22-82ad-ecf5a210fc5c",
        "cursor": {
          "ref": "2d9ff7ae-cc34-43cb-a4fb-52378fc8b4d4",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "434c0f60-3848-4f2e-b580-ca1ea29adf9a"
        },
        "item": {
          "id": "355345f4-fbfd-4f22-82ad-ecf5a210fc5c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1539bc65-6b14-47af-97cd-fd1e72f34276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb064a5-547d-43d7-89fd-587cfe751a7f",
        "cursor": {
          "ref": "6e3b85a5-3bcb-4390-96d4-6315a826914e",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f3dbc1a4-f19f-4f30-9856-3ba1c63470a5"
        },
        "item": {
          "id": "0eb064a5-547d-43d7-89fd-587cfe751a7f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4e7aa818-6a64-4b66-942a-4833d42319b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4979f3b-f675-420f-8df5-08638ba46625",
        "cursor": {
          "ref": "7d517564-f149-42b0-ab06-0267b44114c5",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba80ffe8-7005-4541-84c9-4dfedfbf8a90"
        },
        "item": {
          "id": "f4979f3b-f675-420f-8df5-08638ba46625",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "282bd4e6-460b-4346-9037-6c033aa86416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd240636-6069-45b5-9a79-6ef6cb2c111b",
        "cursor": {
          "ref": "bd0c250e-a0c1-4841-8e6d-5ede88ed6da9",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f97b94e-2b30-4064-93cf-08c7c6ad8a82"
        },
        "item": {
          "id": "cd240636-6069-45b5-9a79-6ef6cb2c111b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d75c8c6-6bc7-4c24-a8b6-22a14219c960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8187e50-eb72-43b4-98e6-2b8a5003dc2c",
        "cursor": {
          "ref": "a85dc445-ad0c-48f1-89ac-0fd18a82906c",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1cd1889-9067-4406-94db-d55328283c5a"
        },
        "item": {
          "id": "c8187e50-eb72-43b4-98e6-2b8a5003dc2c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ff5f090-010d-41d2-8da5-106f350179e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f516e6b-c50f-47eb-a368-658034f9ddf7",
        "cursor": {
          "ref": "270d3151-46c2-4ac1-9684-d5b50eb4406b",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cb56936c-0874-4952-962b-7fa012d9d10d"
        },
        "item": {
          "id": "7f516e6b-c50f-47eb-a368-658034f9ddf7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "956e653e-a6a6-4cf4-80b6-ddc10f29c59d",
          "status": "OK",
          "code": 200,
          "responseTime": 307,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "bbfa6ab4-e85c-4930-a0c0-5c59cdd39ddc",
        "cursor": {
          "ref": "8844084f-7832-4c0c-ae8e-291081f6fb5c",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "057f4b5d-fd8a-4185-be9f-6ddcb8b08448"
        },
        "item": {
          "id": "bbfa6ab4-e85c-4930-a0c0-5c59cdd39ddc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9be7f346-d6fd-47ab-becc-1e98a011ffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf34c09-f564-478c-b17f-6e20eb5aeb8a",
        "cursor": {
          "ref": "61f2aff4-6591-4319-a0fb-d72490fc883b",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "23c8bf21-71df-4c6d-b8b4-0340dd12a897"
        },
        "item": {
          "id": "6cf34c09-f564-478c-b17f-6e20eb5aeb8a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b03e812-4b6e-421e-a5ab-0d678b654dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80501e82-167a-42b6-a5eb-3175ae7d7e3b",
        "cursor": {
          "ref": "19ed31a9-46db-4536-b087-1d832e6f537f",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3627b984-b99a-4a16-b430-c4d9449c7148"
        },
        "item": {
          "id": "80501e82-167a-42b6-a5eb-3175ae7d7e3b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a16baef9-581f-41d9-ad0b-9d5bc72b906a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e536f2-eed0-4df9-aa63-3f5cffbe4a08",
        "cursor": {
          "ref": "1a93240a-b61a-4834-8fb4-528cba1d3815",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9fe35616-5f99-473b-9587-d9cc1065b06e"
        },
        "item": {
          "id": "25e536f2-eed0-4df9-aa63-3f5cffbe4a08",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4326a005-addf-4c2d-8ed6-dadd820586f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8359fe-37d9-46f6-abbf-d638617f86b1",
        "cursor": {
          "ref": "1bca7b02-89fc-4df5-9579-6c5807e39e2c",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8aa16816-56e0-4f62-9d48-8c24e5f82b8b"
        },
        "item": {
          "id": "ce8359fe-37d9-46f6-abbf-d638617f86b1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "37f0b999-23e6-406f-9fc4-f13d4b82e768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45ea259-be8b-44c8-8407-2f7ab6566455",
        "cursor": {
          "ref": "179358f5-beb4-418a-924a-671669b2c5d7",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ebecff5b-4422-4d87-be93-612a36f93523"
        },
        "item": {
          "id": "d45ea259-be8b-44c8-8407-2f7ab6566455",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "49f649db-8002-4f65-baf3-0b7eb9b07ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa19fc8-eeaa-4649-8a8e-83793a2bafa1",
        "cursor": {
          "ref": "7cbde997-64da-489b-a0d5-3fc2adda2702",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8f98fcf-8c8d-43b9-9241-15f27c82283c"
        },
        "item": {
          "id": "6fa19fc8-eeaa-4649-8a8e-83793a2bafa1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e2469d74-d7ec-4b37-8196-7323058c772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d180b0d-726a-4c63-a121-72993cff3ee7",
        "cursor": {
          "ref": "7ea042a2-f4e6-478a-bf59-f15f4db08aec",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0ab48d70-52f2-415d-8b60-f546fe5a4163"
        },
        "item": {
          "id": "5d180b0d-726a-4c63-a121-72993cff3ee7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6ba9caf0-8f3f-4b98-9c0e-60149f02cdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389d0542-09b6-4d51-8a8f-5a60edccff33",
        "cursor": {
          "ref": "ecdf9de0-0a0c-4dfc-ac85-4735d5f54a8f",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d7f79b86-3a97-4ed0-8c0d-f1c1fdfbf7e6"
        },
        "item": {
          "id": "389d0542-09b6-4d51-8a8f-5a60edccff33",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8b3f4861-9948-4d35-86ea-ffb0a5e3770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249beec6-5890-40b9-8add-6806686a41b8",
        "cursor": {
          "ref": "723fb5b7-0f8c-47f1-89cb-b40560ff500b",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4cf2df87-6fbc-417c-b770-0c26dad462c7"
        },
        "item": {
          "id": "249beec6-5890-40b9-8add-6806686a41b8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7d5de4b3-bde3-46cd-a214-a1d46565b16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2d5f70-dff4-4a6c-88e4-9491b8ecc2ef",
        "cursor": {
          "ref": "72cdab78-932e-465d-848b-2a5ac34d3c6f",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "33d225e5-2f33-4146-92c4-2b0fc84ac8c4"
        },
        "item": {
          "id": "0b2d5f70-dff4-4a6c-88e4-9491b8ecc2ef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5303caff-b98b-4892-aedd-355cc5db47da",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "9fbb5f94-6bd7-4d49-a013-daf8dd9106e6",
        "cursor": {
          "ref": "92117dc1-2a67-4412-ae80-118e813fa914",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f928b73-a97f-4ba9-962a-c43f61c8f02a"
        },
        "item": {
          "id": "9fbb5f94-6bd7-4d49-a013-daf8dd9106e6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "606eef48-f067-4f22-a26e-f46917d42a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61563c0-caf5-40bc-99c5-7be3fe517dd8",
        "cursor": {
          "ref": "3e6ccd65-d679-4cd1-af54-8986e0e6b55e",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bdba50f9-8956-430c-9586-d5f108d8d610"
        },
        "item": {
          "id": "e61563c0-caf5-40bc-99c5-7be3fe517dd8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "13cfeec1-a0e4-45e7-a269-c44883d709b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6312a1e-9aa6-4190-a6e7-d2c446a91d9c",
        "cursor": {
          "ref": "0ac6e388-e6e7-4317-84f2-4c4ab90eea32",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "81c232f5-fb0e-4e05-b22e-f86b056be9fb"
        },
        "item": {
          "id": "b6312a1e-9aa6-4190-a6e7-d2c446a91d9c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9154fb11-1525-44aa-a1f0-da255e97ef31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d34abb8-a7ca-4937-a5c3-739844f2dce7",
        "cursor": {
          "ref": "ce7225b5-1e79-4ced-9ba6-eb60f4c69cbe",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b79462d1-afc2-4a71-871b-f247132f737a"
        },
        "item": {
          "id": "7d34abb8-a7ca-4937-a5c3-739844f2dce7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b6c27bfe-5f6e-43a2-8b5e-fde2552e838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202dd54b-14d5-49cc-8012-b36220ee094d",
        "cursor": {
          "ref": "5225679e-cfa9-4dad-8b68-f06ec9f52051",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1b7eea2b-1144-455b-b1b5-b76f0edd719d"
        },
        "item": {
          "id": "202dd54b-14d5-49cc-8012-b36220ee094d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "50e57cfb-af9f-4023-9a2d-86aa549cd288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466f2d83-c4fb-4266-92b4-6651b9490d0a",
        "cursor": {
          "ref": "73807233-a81c-4d1c-a8c3-ecd1077bf0d6",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "db250405-36b2-4f2e-ae92-078d52a421dd"
        },
        "item": {
          "id": "466f2d83-c4fb-4266-92b4-6651b9490d0a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4d4de98d-5223-40f1-9c4f-70e7f48c0e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b373a8a-9a45-4101-87d2-b7ff319ef6e1",
        "cursor": {
          "ref": "dff7fb49-fc63-42f7-a8fb-1887445ac534",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0ae073c2-31ee-477e-8d96-79576e94fbd1"
        },
        "item": {
          "id": "5b373a8a-9a45-4101-87d2-b7ff319ef6e1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0a46efd7-a042-4836-98a8-baefd1efc655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e8f841-7281-4ec1-87a3-12d77a1dbc11",
        "cursor": {
          "ref": "46b118f9-8174-4095-adae-6fb4cc404a1b",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "29c9b744-f15f-4a79-9bd6-975f015550a7"
        },
        "item": {
          "id": "a1e8f841-7281-4ec1-87a3-12d77a1dbc11",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c721983-8409-452e-8fb1-dde22df8d9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0829d118-b7ff-476c-8692-b9da5ac6b184",
        "cursor": {
          "ref": "2dbc62fc-31be-41df-8152-e471366b8fd7",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3b5addcb-bf15-4415-9e0f-a6f1ac9db3de"
        },
        "item": {
          "id": "0829d118-b7ff-476c-8692-b9da5ac6b184",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "43d2852f-df72-4826-b1fc-56aeb8bd7686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbb6879-4240-4677-bc68-73ba0b662365",
        "cursor": {
          "ref": "e4f90d2f-4e05-4ad3-8e13-9156dd1b7ab3",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c0e218a6-9416-4401-bcc3-4c13a6a10879"
        },
        "item": {
          "id": "0fbb6879-4240-4677-bc68-73ba0b662365",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "163a61f6-49e5-4c62-91f9-5cdc133168e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d567454f-181a-4c73-8fce-341a6c7632fe",
        "cursor": {
          "ref": "5e40471c-0aec-475d-83e5-969553d5e1ca",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a4823498-4a7e-4b84-9cd7-392ea078a61c"
        },
        "item": {
          "id": "d567454f-181a-4c73-8fce-341a6c7632fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "09764744-1736-4e85-9f62-fcb7e34ac15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89127b01-da62-4943-8ac4-f4321aa56183",
        "cursor": {
          "ref": "dd9748cf-07c3-4ec1-917e-e7f394945f23",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "edc9859c-fc40-4ac4-8d3d-06686884d609"
        },
        "item": {
          "id": "89127b01-da62-4943-8ac4-f4321aa56183",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aa8ce15f-a8e7-46d6-bd76-c8e536b6d1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d0109-acf3-4551-bd7b-5c6801046b97",
        "cursor": {
          "ref": "ae88c958-d398-437b-a6d0-97343bd2d8fb",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75dc5a3e-2724-433c-8195-9acabfe07989"
        },
        "item": {
          "id": "fe3d0109-acf3-4551-bd7b-5c6801046b97",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c2b3e494-d8dd-49c9-861b-cd79fae417cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22f4ae9-067c-419f-aa2b-fd8c1090d67b",
        "cursor": {
          "ref": "e23f35c2-b1cd-439e-b158-ad9a60b5b64f",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "735111b6-475b-49e1-97bc-7d34f1878e8b"
        },
        "item": {
          "id": "c22f4ae9-067c-419f-aa2b-fd8c1090d67b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dc4a262d-3eff-4c37-8879-971437707174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8e367e-8740-429a-be24-67cc2f2e04b5",
        "cursor": {
          "ref": "eb69eeb8-ff7c-4125-9752-7159a965f78d",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "42f57ad5-9808-4bd9-a816-47b4f79ae970"
        },
        "item": {
          "id": "fe8e367e-8740-429a-be24-67cc2f2e04b5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68d99e9e-32c3-43b5-be7c-f94a709ae8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279e44d8-1fd7-4b70-9a13-db914ffd82d7",
        "cursor": {
          "ref": "a02e3e68-5521-4af2-838f-a0f6f60cd520",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5bf3846d-2bf7-4a75-a1ed-db9e24d37c17"
        },
        "item": {
          "id": "279e44d8-1fd7-4b70-9a13-db914ffd82d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "77ba2b74-7555-4f39-9322-a1666bbd34e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba52513-dba9-40b7-8051-d6674d97e896",
        "cursor": {
          "ref": "9adb7acf-364a-4349-9a45-a6501a23b2bd",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "19a37c39-12b6-4ed0-ac09-6830a2a95923"
        },
        "item": {
          "id": "dba52513-dba9-40b7-8051-d6674d97e896",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e34433a5-5696-4940-a0f4-a106a54e0903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a7198-40cf-4a06-abf2-3d45001df407",
        "cursor": {
          "ref": "0f3491c1-9c66-41d0-bcaa-969c5c63e323",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "89ee431a-f714-4e1a-9ce4-eec71f9a572f"
        },
        "item": {
          "id": "389a7198-40cf-4a06-abf2-3d45001df407",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9172bb36-6ac9-4bbf-8de7-c7c7b134b507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788153a5-30b5-4d1c-a834-97e0102aa736",
        "cursor": {
          "ref": "b7c0e4d3-1e98-4a40-ae6b-14b11b2e8a29",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b664de37-059e-40d6-806c-29c978d0afc7"
        },
        "item": {
          "id": "788153a5-30b5-4d1c-a834-97e0102aa736",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5457d8cc-487d-4304-993e-d3a7663bcd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56654067-3745-4709-9d81-26948f043fc5",
        "cursor": {
          "ref": "26040232-a337-4246-9808-050df26df62a",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca50d2a4-2350-498c-99db-826c9c34c99f"
        },
        "item": {
          "id": "56654067-3745-4709-9d81-26948f043fc5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "48d5234a-b8e3-46ca-b6ea-f6a5891db89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31f0699-03ee-49e1-85fd-4ca6b1958b3a",
        "cursor": {
          "ref": "761e6f9d-e5c4-4e75-990b-a3e75d012deb",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7dbf080a-c140-4ce0-b835-2bb0779aa1bc"
        },
        "item": {
          "id": "b31f0699-03ee-49e1-85fd-4ca6b1958b3a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "779c118f-4fbd-4bdd-9bcc-c885e1c1af97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560c61ea-b761-437c-85f4-080e9ae6eac4",
        "cursor": {
          "ref": "0e48e4a1-8c66-46b8-8a51-918a90bdb07b",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9619c00b-6cd9-4b64-a618-fa5b1a7bb90b"
        },
        "item": {
          "id": "560c61ea-b761-437c-85f4-080e9ae6eac4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "af32831a-8430-4464-b692-1460d5129984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3921ac48-465f-4e32-a0d0-93fc0a97124a",
        "cursor": {
          "ref": "321c9472-9c79-463a-baa1-729e3c6eaa91",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf5c84af-a9f4-4a5e-b1bc-733d40ebda7f"
        },
        "item": {
          "id": "3921ac48-465f-4e32-a0d0-93fc0a97124a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8352325b-5cd9-4496-9a5c-73883653f19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292189c-0cc5-4ace-9a44-324b0170ab10",
        "cursor": {
          "ref": "78130d25-c6cf-439c-b987-b0f0e7998b9d",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72acf17e-f05d-4cb2-a30c-722474f29a2f"
        },
        "item": {
          "id": "7292189c-0cc5-4ace-9a44-324b0170ab10",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "670525f9-2851-4d1a-8a70-4856a989028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2360c93e-25eb-4b44-8845-74df1e6c6d5c",
        "cursor": {
          "ref": "eb4a0dd7-d6c9-42f0-87cd-a8a2a864b878",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e6de2bb-f206-449c-b153-2f823a4db615"
        },
        "item": {
          "id": "2360c93e-25eb-4b44-8845-74df1e6c6d5c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f8aba84b-be1f-4e37-94e4-99c648cf4750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf6a4ca-95a7-429c-bb3d-d5558a36f8a1",
        "cursor": {
          "ref": "cc50d41d-aeae-4767-8a06-efaec09be326",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "75b5ea1a-9a78-43f0-b83c-2e4dbd801331"
        },
        "item": {
          "id": "dcf6a4ca-95a7-429c-bb3d-d5558a36f8a1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49e71761-453a-465b-a471-1dbc203f3c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557c7dde-5d04-4fba-8c5f-91f986e59117",
        "cursor": {
          "ref": "265d5ddf-469e-44c2-8953-3c070013ec81",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fd8afcb9-f11e-4cf3-a4d3-b2705a4f1727"
        },
        "item": {
          "id": "557c7dde-5d04-4fba-8c5f-91f986e59117",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06c88d5a-85ae-43f1-b646-951043e2fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda9547d-1b92-4c7a-a417-11a1ec7467a6",
        "cursor": {
          "ref": "3522f829-7d82-4075-946c-b33d19e7c75d",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6e62e6b5-6921-4cea-adad-08dd4f9b5cc1"
        },
        "item": {
          "id": "fda9547d-1b92-4c7a-a417-11a1ec7467a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c6368fa7-c83d-4a06-8e1b-5fbca256a4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2efa87c-f22b-4ea3-9a4d-0f4079dc8604",
        "cursor": {
          "ref": "33ea4fe3-32a8-4990-8b02-5edc9cfdd8a1",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f0916cf5-3e79-4763-95bb-81f75bbf4d48"
        },
        "item": {
          "id": "d2efa87c-f22b-4ea3-9a4d-0f4079dc8604",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "900106d6-0ecd-4799-8ba1-30a4fc8dbccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fece8b5-9cc6-426a-bee2-a4a57770444d",
        "cursor": {
          "ref": "439a9fde-4955-4b93-a8c3-aab84dca6bce",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "113b7833-47e0-4b91-a6f4-914b56a7e46c"
        },
        "item": {
          "id": "6fece8b5-9cc6-426a-bee2-a4a57770444d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1cbd22f4-7baa-44fb-b632-10ff24148bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60cd137-6a4c-413d-9fbe-7f6791a0de11",
        "cursor": {
          "ref": "0c20b2d5-8f9f-4af8-85a3-411f065aea9d",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9c33d604-151a-4960-8303-81fdb0e50596"
        },
        "item": {
          "id": "c60cd137-6a4c-413d-9fbe-7f6791a0de11",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dcb6e0ec-caf6-453e-856d-d7e94378a194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b166f1-7356-40ad-8d62-43ae38c8b885",
        "cursor": {
          "ref": "a8e95140-7035-4f55-aff0-f929e79252e6",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6a1e2a63-c76e-40c0-9bbd-0328b5708677"
        },
        "item": {
          "id": "15b166f1-7356-40ad-8d62-43ae38c8b885",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "81653b3f-ef67-4050-a258-c77581243dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21f3f35-9ea8-427a-9837-29e42bf29198",
        "cursor": {
          "ref": "0cbdc000-f7c8-4159-bd6e-c44959bb2031",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "209a4bbc-1e0e-494e-b786-3319c3d509fe"
        },
        "item": {
          "id": "b21f3f35-9ea8-427a-9837-29e42bf29198",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9f479d88-75c7-4f1a-a4c5-f31eb29d020b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcffbc5d-38dd-42d1-a079-e022fcbd2f9f",
        "cursor": {
          "ref": "47d65f86-53f1-4a60-897d-c5056989ecf9",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "54d6d54b-a5bc-45eb-b9d5-21234023ccc6"
        },
        "item": {
          "id": "bcffbc5d-38dd-42d1-a079-e022fcbd2f9f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34f6551c-9395-460b-8a8c-95065b541a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e533e94-dfba-49a1-b429-597a74c687e0",
        "cursor": {
          "ref": "f2978ef3-2220-443a-8885-24a3961046c1",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70fbcc61-b53a-4b4e-9983-702a38aa7483"
        },
        "item": {
          "id": "3e533e94-dfba-49a1-b429-597a74c687e0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2c6cb960-adff-4619-871c-b5a47e206f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13936233-5d41-4f1c-9493-f408cce6ac5f",
        "cursor": {
          "ref": "faa5cd04-016c-4585-9e2a-ba8a1349c068",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "14863d33-2084-4fb6-bf69-5d11e1ddb06d"
        },
        "item": {
          "id": "13936233-5d41-4f1c-9493-f408cce6ac5f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "120e9542-2f7c-44e4-afd8-21c138673c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8936e01-defc-4ae1-8b7f-0a9a12d0f1a8",
        "cursor": {
          "ref": "2269ac34-c993-4b7d-bc14-84fe16037035",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "69769ba5-5cd9-44d4-bc8f-75d1334f8235"
        },
        "item": {
          "id": "e8936e01-defc-4ae1-8b7f-0a9a12d0f1a8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5288ab74-4e4c-4377-9f55-87c5a92d94e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020dbbb3-5e07-42a7-bd58-76b3014015cf",
        "cursor": {
          "ref": "48978614-e853-4b90-b861-118dd90f5d44",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "46a5fc2c-7908-4ea4-bce5-ffbeb46e3d68"
        },
        "item": {
          "id": "020dbbb3-5e07-42a7-bd58-76b3014015cf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d5b7c597-c926-4fb3-af9f-d44cfd2a0625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8627c85-8181-4691-92be-7a8550f9b3ef",
        "cursor": {
          "ref": "66b11e1d-24ee-438c-b32d-41436423fdf8",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "19fb0076-61ba-4f09-8b21-c2d66d4ff962"
        },
        "item": {
          "id": "a8627c85-8181-4691-92be-7a8550f9b3ef",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4d401b06-c51f-4ae5-8432-d7272d2b8c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff209989-fc1e-47dd-9007-99de92fccda4",
        "cursor": {
          "ref": "c5a3131d-4825-4314-9f02-717a48a6a43c",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "789ffe1c-91fa-4dc0-b235-4ef7727c6ab8"
        },
        "item": {
          "id": "ff209989-fc1e-47dd-9007-99de92fccda4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b63f806a-ef45-43cc-b2c2-cb36f64acfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a216b49e-9d1c-4136-8d55-4b4c02751398",
        "cursor": {
          "ref": "0988de89-77e9-4cfd-a18e-68bca5633727",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e07596f2-bc11-4051-bdcd-68c810b6ec55"
        },
        "item": {
          "id": "a216b49e-9d1c-4136-8d55-4b4c02751398",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d71666b3-2a0e-4af8-bfe3-65ff40252c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24b8e61-2f0c-4bb3-9454-93b61693412e",
        "cursor": {
          "ref": "68cc3dde-7c7f-4587-a554-0a9e023ed119",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2d4b550f-8bcd-40a0-b3eb-b10cdd0329b9"
        },
        "item": {
          "id": "e24b8e61-2f0c-4bb3-9454-93b61693412e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "af3abb5c-74a0-4fca-838c-5e0206d462a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c410f2a-978c-4350-9c5b-b6cb41379a1e",
        "cursor": {
          "ref": "cd8ed120-2614-491e-8f42-0706eedf672c",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4c8450ca-77f6-4266-9626-00e6a5f549cc"
        },
        "item": {
          "id": "7c410f2a-978c-4350-9c5b-b6cb41379a1e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8c746609-60db-46dd-a3ca-ebdfeb04d9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f25403-98b3-475c-b0d9-cd29f44bd96f",
        "cursor": {
          "ref": "06bbe87c-1af7-400c-aa5e-c426f72c1e98",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "debdf3df-5798-4e00-88f8-6e1aa2a2a33c"
        },
        "item": {
          "id": "10f25403-98b3-475c-b0d9-cd29f44bd96f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6155057e-ac80-456e-abb9-6c9593f3ed05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc5ba0f-e582-4252-8b39-1906edfa4654",
        "cursor": {
          "ref": "d3fda839-3279-41ea-90e7-37d5fedb78c4",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "690a0081-af90-4264-8d54-929e3d7d81d4"
        },
        "item": {
          "id": "1cc5ba0f-e582-4252-8b39-1906edfa4654",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c89a8b97-f898-45df-8999-922dddc75fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7078eead-c661-47b9-bc05-592487e30dbb",
        "cursor": {
          "ref": "e1bba515-29f6-427e-b447-8e313835aa88",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8c91d271-6398-423e-88af-d4e6e848a78b"
        },
        "item": {
          "id": "7078eead-c661-47b9-bc05-592487e30dbb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "de838754-5494-4d78-9b47-ff683070538c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5352c4c-aaf9-4ae2-81e3-51a548ef3a99",
        "cursor": {
          "ref": "0d5da9dd-3acf-47f6-b0d9-d82ebdb20c88",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1c36ada4-e499-4702-9332-28d85dcce480"
        },
        "item": {
          "id": "d5352c4c-aaf9-4ae2-81e3-51a548ef3a99",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b687ae22-163c-441b-9c2f-4b7be27d8814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd106ce8-b927-473d-865b-269ff9201afb",
        "cursor": {
          "ref": "d575478e-b0c2-4d43-a5c7-146259b525de",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1923de14-4bae-4cc4-acf9-32d52030e090"
        },
        "item": {
          "id": "dd106ce8-b927-473d-865b-269ff9201afb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f0be47e2-8e02-460d-927c-21da10e9d62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c89da11-5fd4-4ad9-bb0a-2ef6278c271e",
        "cursor": {
          "ref": "309966d6-ab1a-4226-84f8-ac6177f1b75e",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "39ec6689-2787-4c4f-be3d-733708a6ca01"
        },
        "item": {
          "id": "0c89da11-5fd4-4ad9-bb0a-2ef6278c271e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "270b1d5d-2040-41cb-a8c0-e5b9f89cb0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9700e409-db5b-484a-9d77-eaa44afb5b5b",
        "cursor": {
          "ref": "d55806d1-46c9-4a66-b677-29a0e6be8cd2",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f67d189a-6f7d-4996-aa1d-5b7116fd8bf6"
        },
        "item": {
          "id": "9700e409-db5b-484a-9d77-eaa44afb5b5b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c0f57968-5ac2-4292-8fa7-1e9b1eb05905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b6b951-df64-499d-b712-7547f1ce8a63",
        "cursor": {
          "ref": "0817a9e3-4287-4ec3-89fc-97455d2c5d9d",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "50be4dbc-3f16-4e02-984d-fdd5e491f339"
        },
        "item": {
          "id": "b1b6b951-df64-499d-b712-7547f1ce8a63",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b5aa0e17-6846-486b-bb0a-e2c762503bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b768f7a-2508-4c3b-95d8-7fd502948fec",
        "cursor": {
          "ref": "98e86218-fdfa-41d0-8f23-ec5ec345a59f",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f7fde659-43bc-40aa-a712-392f787e23a1"
        },
        "item": {
          "id": "3b768f7a-2508-4c3b-95d8-7fd502948fec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6f29c24c-5c8b-45bf-9573-20334312b115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84b7b9f-2a7a-4626-828e-549b6dcc320a",
        "cursor": {
          "ref": "c19c362e-286c-4970-8bb1-f17da9290fd0",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cff4d57f-08d2-4fad-bb2e-58d1885b3588"
        },
        "item": {
          "id": "f84b7b9f-2a7a-4626-828e-549b6dcc320a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ddcd745-e842-4c03-80d9-9c8415bc03db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683eebeb-44fe-413c-8075-7fb51577a8ac",
        "cursor": {
          "ref": "e502c9ec-bb23-412f-a369-bff808ffed80",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e41d9f67-9d27-49ab-92fe-b4ea0c1856d4"
        },
        "item": {
          "id": "683eebeb-44fe-413c-8075-7fb51577a8ac",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46afbf6b-fc8e-4045-b92c-1665c7dedba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47c547d-563f-4d03-a359-2cffba47473c",
        "cursor": {
          "ref": "6a3c287f-d7a3-41c8-8409-86956fce0270",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "894cce27-556f-44bc-a737-a99ee32bf79a"
        },
        "item": {
          "id": "c47c547d-563f-4d03-a359-2cffba47473c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7b14c9ce-4f9d-4693-b35c-b29eefdd771e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb042286-08f9-40a2-b9bc-ed3d11e47a99",
        "cursor": {
          "ref": "0c220758-c39d-4d6a-9aa3-83f1d60f4787",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cae09a39-3d14-4ef2-be9a-92791e0030d0"
        },
        "item": {
          "id": "cb042286-08f9-40a2-b9bc-ed3d11e47a99",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "be1b8435-e13f-4137-9fb2-9d50455e0249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5942711b-8af9-4d6c-862f-8f41058b41db",
        "cursor": {
          "ref": "c57ddc00-0ede-472e-9c3d-99c884cc7a4b",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0817744c-0b84-4b79-b59b-3171f614b15a"
        },
        "item": {
          "id": "5942711b-8af9-4d6c-862f-8f41058b41db",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7508b3bf-3239-4e42-a9f7-575a92795a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae095bc-3768-48af-9519-5bd88d7f137c",
        "cursor": {
          "ref": "b38b25c0-8292-47dc-9188-875e761ae109",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8fd39fb4-9b7f-41ad-9af9-357691e0e423"
        },
        "item": {
          "id": "eae095bc-3768-48af-9519-5bd88d7f137c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e8ad7b8b-15b2-4a60-af9b-1d00ff7a5841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de7ed5-09f8-42ec-8bf6-dbfa87859e38",
        "cursor": {
          "ref": "e0747f08-4cc8-436e-87df-261e72200d2c",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fdc77724-050c-4f18-91fe-54926d7c8869"
        },
        "item": {
          "id": "e3de7ed5-09f8-42ec-8bf6-dbfa87859e38",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "30797105-e27b-4674-bbd1-4c5241d5574f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 302,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d8bf4-5e82-4c86-8be6-e3a983901cb3",
        "cursor": {
          "ref": "643e8583-aa39-4039-ab88-77fb94755f93",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ea173bd4-f29e-4626-852b-c49bf4a952b8"
        },
        "item": {
          "id": "779d8bf4-5e82-4c86-8be6-e3a983901cb3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "91c1b71f-02b0-4072-8b43-5e549d1f62c8",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a18e9d1-232e-4df3-b7ce-3a7a550bb397",
        "cursor": {
          "ref": "95550057-b82d-460a-ba67-c5b57f806b24",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5854bd5-7542-4f99-936d-bd31178e5cef"
        },
        "item": {
          "id": "2a18e9d1-232e-4df3-b7ce-3a7a550bb397",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f4f1bee-d9d5-4368-881a-e1dae4717141",
          "status": "OK",
          "code": 200,
          "responseTime": 1858,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b26d6-b526-480f-aecd-22d6457d1680",
        "cursor": {
          "ref": "bed2e5d9-9a1e-40f5-a073-2d85f2e71aaa",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ccabc377-0290-492c-a429-e54d6ab9ca9e"
        },
        "item": {
          "id": "364b26d6-b526-480f-aecd-22d6457d1680",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c1940ffb-3f79-40cc-b79f-eadcb08cf4b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1695,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
        "cursor": {
          "ref": "bf7cc501-753b-4e9d-a328-a0aaac0819a5",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "204cd905-be10-46b6-a5c2-dbb334a3ee14"
        },
        "item": {
          "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06f3aac1-3140-4691-b8eb-5c895f2c3acd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
        "cursor": {
          "ref": "bf7cc501-753b-4e9d-a328-a0aaac0819a5",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "204cd905-be10-46b6-a5c2-dbb334a3ee14"
        },
        "item": {
          "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06f3aac1-3140-4691-b8eb-5c895f2c3acd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
        "cursor": {
          "ref": "bf7cc501-753b-4e9d-a328-a0aaac0819a5",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "204cd905-be10-46b6-a5c2-dbb334a3ee14"
        },
        "item": {
          "id": "2aa2413e-ec62-42d0-b625-13d12dcf859d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06f3aac1-3140-4691-b8eb-5c895f2c3acd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cdc0a2-bc16-4b4b-b34c-d462eb483246",
        "cursor": {
          "ref": "3b35c5b8-3f7b-405e-9ebf-5835090574ba",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5de15f0f-6422-4527-8af6-bec7835cc596"
        },
        "item": {
          "id": "11cdc0a2-bc16-4b4b-b34c-d462eb483246",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2e429cda-11da-48a9-84e0-676d57d484a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 300,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d07cf-356a-440d-aa04-9aa1af2f6e43",
        "cursor": {
          "ref": "cd84bc07-43c7-4d1b-8ee1-72a046bacadd",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6dcaec7b-5098-4551-8552-320b59aa0bd9"
        },
        "item": {
          "id": "2f3d07cf-356a-440d-aa04-9aa1af2f6e43",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2ec3a392-7386-4713-91e5-ccaab502bfaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d07cf-356a-440d-aa04-9aa1af2f6e43",
        "cursor": {
          "ref": "cd84bc07-43c7-4d1b-8ee1-72a046bacadd",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6dcaec7b-5098-4551-8552-320b59aa0bd9"
        },
        "item": {
          "id": "2f3d07cf-356a-440d-aa04-9aa1af2f6e43",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2ec3a392-7386-4713-91e5-ccaab502bfaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d2f7c9-5ec8-473a-900d-b99ef7ff5334",
        "cursor": {
          "ref": "0c2dfbd5-4290-4a8f-982f-b35e4ce12055",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e879c6aa-7ae8-439f-9f5d-b1f0b927f9ed"
        },
        "item": {
          "id": "62d2f7c9-5ec8-473a-900d-b99ef7ff5334",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "549286f8-ce71-46ac-813f-769d75ed42ed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8105d4c8-8fd3-4294-bc98-352d1cd1f4ae",
        "cursor": {
          "ref": "3dca44e7-0ace-4f5c-9b26-20ea36e9a9bd",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "38d1e721-afef-4c98-9822-ba5777e0ff93"
        },
        "item": {
          "id": "8105d4c8-8fd3-4294-bc98-352d1cd1f4ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d272c67-c037-405c-a6f7-dc904b774215",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8105d4c8-8fd3-4294-bc98-352d1cd1f4ae",
        "cursor": {
          "ref": "3dca44e7-0ace-4f5c-9b26-20ea36e9a9bd",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "38d1e721-afef-4c98-9822-ba5777e0ff93"
        },
        "item": {
          "id": "8105d4c8-8fd3-4294-bc98-352d1cd1f4ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d272c67-c037-405c-a6f7-dc904b774215",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8049f3d3-4128-4b7c-b70b-b063ac82c715",
        "cursor": {
          "ref": "dceb6d60-3c54-4d66-8655-c6bcb927f08d",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "258ce592-defc-4dac-afa7-30653de38111"
        },
        "item": {
          "id": "8049f3d3-4128-4b7c-b70b-b063ac82c715",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c5b9834c-b083-4d1a-8def-17874123098b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}